<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- 
  The s3bucket.discovery.node.config.xml grid configuration file 
  defines Amazon S3 Node Discovery. 
  See https://apacheignite-mix.readme.io/docs/amazon-aws#amazon-s3-based-discovery.

  When specifying -e "CONFIG_URI=${JOBCASE_CONFIG}/s3bucket.discovery.node.config.xml" 
  in the docker run command
  it will use s3bucket.discovery.node.config.xml as grid configuration file.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
       
    <import resource="common.node.config.xml"/>
       
    <!--
        Alter configuration below as needed.
    -->
    <bean parent="grid.cfg">
        <!-- Explicitly configure TCP discovery SPI to provide list of initial nodes. -->
        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="localPort" value="#{systemEnvironment['IGNITE_DISCOVERY_PORT']}"/>
                <property name="localPortRange" value="1"/>
                <property name="ipFinder">
                    <!-- S3 bucket approach for discovery of cluster nodes -->
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.s3.TcpDiscoveryS3IpFinder">
                        <property name="bucketName" value="#{systemEnvironment['IGNITE_DISCOVERY_S3_BUCKETNAME']}"/>
                        <!-- Ideally we would use awsCredentialsProvider here, and use the CredentialsProviderChain below
                             but Ignite comes with an old AWS library that does not include the latter -->
                        <property name="awsCredentials" ref="aws.creds"/>
                        <property name="clientConfiguration">
                            <bean class="com.amazonaws.ClientConfiguration">
                                 <!-- the default is 3, and in test we had issues where this was not enough to reliably start an instance
                                     The S3 SLA talks about error rate per 5 minute period.  Circumstantial evidence points to 20s/try timeout  -->
                                <property name="maxErrorRetry" value="20"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>              
    </bean>
    
    <!-- The S3 buckets used allow access to Ignite nodes themselves, so we don't need additional credentials.
         This will use anonymous credentials if no credentials are found -->
    <bean id="aws.creds" class="com.amazonaws.auth.AnonymousAWSCredentials"/>    
    
</beans>