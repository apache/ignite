{
  "general": [
    {
      "label": "General",
      "group": "general",
      "tip": [
        "IGFS properties"
      ],
      "fields": [
        {
          "label": "Name",
          "id": "igfsName",
          "type": "text",
          "model": "name",
          "required": true,
          "placeholder": "Input name"
        },
        {
          "label": "Clusters",
          "id": "clusters",
          "type": "dropdown-multiple",
          "model": "clusters",
          "placeholder": "Choose clusters",
          "placeholderEmpty": "No clusters configured",
          "items": "clusters",
          "tip": [
            "Associate clusters with the current IGFS"
          ],
          "addLink": {
            "ref": "/configuration/clusters?new"
          }
        },
        {
          "label": "IGFS mode",
          "id": "defaultMode",
          "type": "dropdown",
          "model": "defaultMode",
          "placeholder": "DUAL_ASYNC",
          "items": "igfsModes",
          "tip": [
            "Mode to specify how IGFS interacts with Hadoop file system"
          ]
        },
        {
          "label": "Group size",
          "id": "affinnityGroupSize",
          "type": "number",
          "model": "affinnityGroupSize",
          "placeholder": "512",
          "min": 1,
          "tip": [
            "Size of the group in blocks",
            "Required for construction of affinity mapper in IGFS data cache"
          ]
        }
      ]
    }
  ],
  "advanced": [
    {
      "label": "IPC",
      "group": "ipc",
      "tip": [
        "IGFS Inter-process communication properties"
      ],
      "fields": [
        {
          "label": "Enabled",
          "type": "check",
          "model": "ipcEndpointEnabled",
          "tip": [
            "IPC endpoint enabled flag"
          ]
        },
        {
          "label": "Type",
          "type": "dropdown",
          "path": "ipcEndpointConfiguration",
          "model": "type",
          "placeholder": "TCP",
          "items": "ipcTypes",
          "disabled": "!backupItem.ipcEndpointEnabled",
          "tip": [
            "IPC endpoint configuration"
          ]
        },
        {
          "label": "Host",
          "type": "text",
          "path": "ipcEndpointConfiguration",
          "model": "host",
          "placeholder": "127.0.0.1",
          "disabled": "!backupItem.ipcEndpointEnabled",
          "tip": [
            "Host"
          ]
        },
        {
          "label": "Port",
          "type": "number",
          "path": "ipcEndpointConfiguration",
          "model": "port",
          "placeholder": 10500,
          "max": 65535,
          "disabled": "!backupItem.ipcEndpointEnabled",
          "tip": [
            "Port"
          ]
        },
        {
          "label": "Memory size",
          "type": "number",
          "path": "ipcEndpointConfiguration",
          "model": "memorySize",
          "placeholder": 262144,
          "disabled": "!backupItem.ipcEndpointEnabled",
          "tip": [
            "Shared memory size in bytes allocated for endpoint communication"
          ]
        },
        {
          "label": "Token directory",
          "type": "text",
          "path": "ipcEndpointConfiguration",
          "model": "tokenDirectoryPath",
          "placeholder": "ipc/shmem",
          "disabled": "!backupItem.ipcEndpointEnabled",
          "tip": [
            "Directory where shared memory tokens are stored"
          ]
        }
      ]
    },
    {
      "label": "Fragmentizer",
      "group": "fragmentizer",
      "tip": [
        "Fragmentizer settings"
      ],
      "fields": [
        {
          "label": "Enabled",
          "id": "fragmentizerEnabled",
          "type": "check",
          "model": "fragmentizerEnabled",
          "placeholder": 0,
          "tip": [
            "Fragmentizer enabled flag"
          ]
        },
        {
          "label": "Concurrent files",
          "id": "fragmentizerConcurrentFiles",
          "type": "number",
          "model": "fragmentizerConcurrentFiles",
          "placeholder": 0,
          "disabled": "!backupItem.fragmentizerEnabled",
          "tip": [
            "Number of files to process concurrently by fragmentizer"
          ]
        },
        {
          "label": "Throttling block length",
          "id": "fragmentizerThrottlingBlockLength",
          "type": "number",
          "model": "fragmentizerThrottlingBlockLength",
          "placeholder": 16777216,
          "disabled": "!backupItem.fragmentizerEnabled",
          "tip": [
            "Length of file chunk to transmit before throttling is delayed"
          ]
        },
        {
          "label": "Throttling delay",
          "id": "fragmentizerThrottlingDelay",
          "type": "number",
          "model": "fragmentizerThrottlingDelay",
          "placeholder": 200,
          "disabled": "!backupItem.fragmentizerEnabled",
          "tip": [
            "Delay in milliseconds for which fragmentizer is paused"
          ]
        }
      ]
    },
    {
      "label": "Dual mode",
      "group": "dualMode",
      "tip": [
        "Dual mode settings"
      ],
      "fields": [
        {
          "label": "Maximum pending puts size",
          "id": "dualModeMaxPendingPutsSize",
          "type": "number",
          "model": "dualModeMaxPendingPutsSize",
          "placeholder": 0,
          "tip": [
            "Maximum amount of pending data read from the secondary file system and waiting to be written to data cache",
            "0 or negative value stands for unlimited size"
          ]
        },
        {
          "label": "Put executor service",
          "id": "dualModePutExecutorService",
          "type": "text",
          "model": "dualModePutExecutorService",
          "placeholder": "Enter fully qualified class name",
          "tip": [
            "DUAL mode put operation executor service"
          ]
        },
        {
          "label": "Put executor service shutdown",
          "id": "dualModePutExecutorServiceShutdown",
          "type": "check",
          "model": "dualModePutExecutorServiceShutdown",
          "tip": [
            "DUAL mode put operation executor service shutdown flag"
          ]
        }
      ]
    },
    {
      "label": "Secondary file system",
      "group": "secondaryFileSystem",
      "tip": [
        "Secondary file system",
        "Secondary file system is provided for pass-through, write-through, and read-through purposes"
      ],
      "fields": [
        {
          "label": "Enabled",
          "id": "secondaryFileSystemEnabled",
          "type": "check",
          "model": "secondaryFileSystemEnabled",
          "placeholder": 0,
          "tip": [
            "Secondary file system enabled flag"
          ]
        },
        {
          "label": "URI",
          "id": "hadoopURI",
          "type": "text",
          "model": "uri",
          "disabled": "!backupItem.secondaryFileSystemEnabled",
          "path": "secondaryFileSystem",
          "placeholder": "hdfs://[namenodehost]:[port]/[path]",
          "tip": [
            "URI of file system"
          ]
        },
        {
          "label": "Config path",
          "id": "cfgPath",
          "type": "text",
          "model": "cfgPath",
          "disabled": "!backupItem.secondaryFileSystemEnabled",
          "path": "secondaryFileSystem",
          "placeholder": "Path to additional config",
          "tip": [
            "Additional path to Hadoop configuration"
          ]
        },
        {
          "label": "User name",
          "id": "userName",
          "type": "text",
          "model": "userName",
          "disabled": "!backupItem.secondaryFileSystemEnabled",
          "path": "secondaryFileSystem",
          "placeholder": "User name",
          "tip": [
            "User name"
          ]
        }
      ]
    },
    {
      "label": "Miscellaneous",
      "group": "misc",
      "tip": [],
      "fields": [
        {
          "label": "Block size",
          "id": "blockSize",
          "type": "number",
          "model": "blockSize",
          "placeholder": 65536,
          "tip": [
            "File's data block size (bytes)"
          ]
        },
        {
          "label": "Stream buffer size",
          "id": "streamBufferSize",
          "type": "number",
          "model": "streamBufferSize",
          "placeholder": 65536,
          "tip": [
            "Read/write buffers size for IGFS stream operations"
          ]
        },
        {
          "label": "Maximum space size",
          "id": "maxSpaceSize",
          "type": "number",
          "model": "maxSpaceSize",
          "placeholder": 0,
          "tip": [
            "Maximum space available for data cache to store file system entries"
          ]
        },
        {
          "label": "Maximum task range length",
          "id": "maximumTaskRangeLength",
          "type": "number",
          "model": "maximumTaskRangeLength",
          "placeholder": 0,
          "tip": [
            "Maximum default range size of a file being split during IGFS task execution"
          ]
        },
        {
          "label": "Management port",
          "id": "managementPort",
          "type": "number",
          "model": "managementPort",
          "placeholder": 11400,
          "max": 65535,
          "tip": [
            "Port number for management endpoint"
          ]
        },
        {
          "label": "Per node batch size",
          "id": "perNodeBatchSize",
          "type": "number",
          "model": "perNodeBatchSize",
          "placeholder": 100,
          "tip": [
            "Number of file blocks collected on local node before sending batch to remote node"
          ]
        },
        {
          "label": "Per node parallel batch count",
          "id": "perNodeParallelBatchCount",
          "type": "number",
          "model": "perNodeParallelBatchCount",
          "placeholder": 8,
          "tip": [
            "Number of file block batches that can be concurrently sent to remote node"
          ]
        },
        {
          "label": "Prefetch blocks",
          "id": "prefetchBlocks",
          "type": "number",
          "model": "prefetchBlocks",
          "placeholder": 0,
          "tip": [
            "Number of pre-fetched blocks if specific file's chunk is requested"
          ]
        },
        {
          "label": "Sequential reads before prefetch",
          "id": "sequentialReadsBeforePrefetch",
          "type": "number",
          "model": "sequentialReadsBeforePrefetch",
          "placeholder": 0,
          "tip": [
            "Amount of sequential block reads before prefetch is triggered"
          ]
        },
        {
          "label": "Trash purge timeout",
          "id": "trashPurgeTimeout",
          "type": "number",
          "model": "trashPurgeTimeout",
          "placeholder": 1000,
          "tip": [
            "Maximum timeout awaiting for trash purging in case data cache oversize is detected"
          ]
        },
        {
          "label": "Path modes",
          "id": "pathModes",
          "ui": "table-pair",
          "type": "pathModes",
          "model": "pathModes",
          "keyName": "path",
          "valueName": "mode",
          "focusId": "PathMode",
          "addTip": "Add path mode",
          "removeTip": "Remove path",
          "tip": [
            "Map of path prefixes to IGFS modes used for them"
          ]
        }
      ]
    }
  ]
}
