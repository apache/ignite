//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include /app/helpers/jade/mixins

-var form = 'swap'
-var model = 'backupItem'
-var swapModel = model + '.swapSpaceSpi'
-var fileSwapModel = swapModel + '.FileSwapSpaceSpi'

.panel.panel-default(ng-form=form novalidate)
    .panel-heading(bs-collapse-toggle ng-click=`ui.loadPanel('${form}')`)
        ignite-form-panel-chevron
        label Swap
        ignite-form-field-tooltip.tipLabel
            | Settings for overflow data to disk if it cannot fit in memory#[br]
            | #[a(href="https://apacheignite.readme.io/docs/off-heap-memory#swap-space" target="_blank") More info]
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id=`${form}`)
        .panel-body(ng-if=`ui.isPanelLoaded('${form}')`)
            .col-sm-6
                .settings-row
                    +dropdown('Swap space SPI:', `${swapModel}.kind`, '"swapSpaceSpi"', 'true', 'Choose swap SPI',
                        '[\
                            {value: "FileSwapSpaceSpi", label: "File-based swap"},\
                            {value: undefined, label: "Not set"}\
                        ]',
                        'Provides a mechanism in grid for storing data on disk<br/>\
                        Ignite cache uses swap space to overflow data to disk if it cannot fit in memory\
                        <ul>\
                            <li>File-based swap - File-based swap space SPI implementation which holds keys in memory</li>\
                            <li>Not set - File-based swap space SPI with default configuration when it needed</li>\
                        </ul>')
                    a.customize(
                        ng-if=`${swapModel}.kind`
                        ng-click=`${swapModel}.expanded = !${swapModel}.expanded`
                    ) {{ #{swapModel}.expanded ? 'Hide settings' : 'Show settings'}}
                .settings-row
                    .panel-details(ng-show=`${swapModel}.expanded && ${swapModel}.kind`)
                        .details-row
                            +text('Base directory:', `${fileSwapModel}.baseDirectory`, '"baseDirectory"', 'false', 'swapspace',
                                'Base directory where to write files')
                        .details-row
                            +number('Read stripe size:', `${fileSwapModel}.readStripesNumber`, '"readStripesNumber"', 'true', 'availableProcessors', '0',
                                'Read stripe size defines number of file channels to be used concurrently')
                        .details-row
                            +number-min-max-step('Maximum sparsity:', `${fileSwapModel}.maximumSparsity`, '"maximumSparsity"', 'true', '0.5', '0', '0.999', '0.05',
                                'This property defines maximum acceptable wasted file space to whole file size ratio<br/>\
                                When this ratio becomes higher than specified number compacting thread starts working')
                        .details-row
                            +number('Max write queue size:', `${fileSwapModel}.maxWriteQueueSize`, '"maxWriteQueueSize"', 'true', '1024 * 1024', '0',
                                'Max write queue size in bytes<br/>\
                                If there are more values are waiting for being written to disk then specified size, SPI will block on store operation')
                        .details-row
                            +number('Write buffer size:', `${fileSwapModel}.writeBufferSize`, '"writeBufferSize"', 'true', '64 * 1024', '0',
                                'Write buffer size in bytes<br/>\
                                Write to disk occurs only when this buffer is full')
            .col-sm-6
                +preview-xml-java(model, 'clusterSwap')
