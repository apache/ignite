//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include /app/helpers/jade/mixins

-var form = 'serviceConfiguration'
-var model = 'backupItem.serviceConfigurations'

.panel.panel-default(ng-form=form novalidate)
    .panel-heading(bs-collapse-toggle ng-click=`ui.loadPanel('${form}')`)
        ignite-form-panel-chevron
        label Service configuration
        ignite-form-field-tooltip.tipLabel
            | Service Grid allows for deployments of arbitrary user-defined services on the cluster#[br]
            | #[a(href="https://apacheignite.readme.io/docs/fault-tolerance" target="_blank") More info]
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id=`${form}`)
        .panel-body(ng-if=`ui.isPanelLoaded('${form}')`)
            .col-sm-6
                .settings-row(ng-init='serviceConfigurationsTbl={type: "serviceConfigurations", model: "serviceConfigurations", focusId: "kind", ui: "failover-table"}')
                    +ignite-form-group()
                        ignite-form-field-label
                            | Service configurations
                        ignite-form-group-tooltip
                            | Service configurations
                        ignite-form-group-add(ng-click='tableNewItem(serviceConfigurationsTbl)')
                            | Add service configuration
                        .group-content-empty(ng-if=`!(${model} && ${model}.length > 0)`)
                            | Not defined
                        .group-content(ng-show=`${model} && ${model}.length > 0` ng-repeat=`model in ${model} track by $index`)
                            -var nodeFilter = 'model.nodeFilter';
                            -var nodeFilterKind = nodeFilter + '.kind';
                            -var igfsFilter = nodeFilterKind + ' === "IGFS"'
                            -var customFilter = nodeFilterKind + ' === "Custom"'

                            hr(ng-if='$index != 0')
                            .settings-row
                                +text-enabled-autofocus('Name:', 'model.name', '"ServiceName" + $index', 'true', 'true', 'Input service name', 'Service name')
                                    +table-remove-button(model, 'Remove service configuration')
                            .settings-row
                                +java-class('Service class', 'model.service', '"serviceService" + $index', 'true', 'true', 'Service implementation class name')
                            .settings-row
                                +number('Max per node count:', 'model.maxPerNodeCount', '"ServiceMaxPerNodeCount" + $index', 'true', 'Unlimited', '0',
                                    'Maximum number of deployed service instances on each node.<br/>' +
                                    'Zero for unlimited')
                            .settings-row
                                +number('Total count:', 'model.totalCount', '"ServiceTotalCount" + $index', 'true', 'Unlimited', '0',
                                    'Total number of deployed service instances in the cluster.<br/>' +
                                    'Zero for unlimited')
                            //-
                                .settings-row
                                    +dropdown('Node filter:', nodeFilterKind, '"nodeFilter" + $index', 'true', 'Not set',
                                    '[\
                                        {value: "IGFS", label: "IGFS nodes"},\
                                        {value: "Custom", label: "Custom"},\
                                        {value: undefined, label: "Not set"}\
                                    ]',
                                    'Node filter variant'
                                    )
                                .panel-details(ng-show=igfsFilter)
                                    .settings-row
                                        +dropdown-required-empty('IGFS:', nodeFilter + '.IGFS.igfs', '"igfsNodeFilter"', 'true', igfsFilter,
                                            'Choose IGFS', 'No IGFS configured', 'igfss', 'Select IGFS to filter nodes')
                                .panel-details(ng-show=customFilter)
                                    .settings-row
                                        +java-class('Class name:', nodeFilter + '.Custom.className', '"customNodeFilter"',
                                            'true', customFilter, 'Class name of custom node filter implementation', customFilter)
                            .settings-row
                                +dropdown-required-empty('Cache:', 'model.cache', '"ServiceCache" + $index', 'true', 'false',
                                    'Choose cache', 'No caches configured for current cluster', 'clusterCachesEmpty', 'Cache name used for key-to-node affinity calculation').settings-row
                            .settings-row
                                +text('Affinity key:', 'model.affinityKey', '"ServiceAffinityKey" + $index', 'false', 'Input affinity key',
                                    'Affinity key used for key-to-node affinity calculation')
            .col-sm-6
                +preview-xml-java('backupItem', 'clusterServiceConfiguration', 'caches')
