//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include ../../../../../app/helpers/jade/mixins.jade

-var form = 'rebalance'
-var model = 'backupItem'

.panel.panel-default(ng-form=form novalidate ng-hide='#{model}.cacheMode === "LOCAL"')
    .panel-heading(bs-collapse-toggle='' ng-click='ui.loadPanel("#{form}")')
        ignite-form-panel-chevron
        label Rebalance
        ignite-form-field-tooltip.tipLabel
            | Cache rebalance settings
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id=form)
        .panel-body(ng-if='ui.isPanelLoaded("#{form}")')
            .col-sm-6
                .settings-row
                    +dropdown('Mode:', model + '.rebalanceMode', '"rebalanceMode"', 'true', 'ASYNC',
                        '[\
                            {value: "SYNC", label: "SYNC"},\
                            {value: "ASYNC", label: "ASYNC"},\
                            {value: "NONE", label: "NONE"}\
                        ]',
                        'Rebalance modes\
                        <ul>\
                            <li>Synchronous - in this mode distributed caches will not start until all necessary data is loaded from other available grid nodes</li>\
                            <li>Asynchronous - in this mode distributed caches will start immediately and will load all necessary data from other available grid nodes in the background</li>\
                            <li>None - in this mode no rebalancing will take place which means that caches will be either loaded on demand from persistent store whenever data is accessed, or will be populated explicitly</li>\
                        </ul>')
                    .settings-row
                        +number('Batch size:', model + '.rebalanceBatchSize', '"rebalanceBatchSize"', 'true', '512 * 1024', '1',
                            'Size (in bytes) to be loaded within a single rebalance message<br/>\
                            Rebalancing algorithm will split total data set on every node into multiple batches prior to sending data')
                    .settings-row
                        +number('Batches prefetch count:', model + '.rebalanceBatchesPrefetchCount', '"rebalanceBatchesPrefetchCount"', 'true', '2', '1',
                            'Number of batches generated by supply node at rebalancing start')
                    .settings-row
                        +number('Order:', model + '.rebalanceOrder', '"rebalanceOrder"', 'true', '0', Number.MIN_SAFE_INTEGER,
                            'If cache rebalance order is positive, rebalancing for this cache will be started only when rebalancing for all caches with smaller rebalance order (except caches with rebalance order 0) will be completed')
                    .settings-row
                        +number('Delay:', model + '.rebalanceDelay', '"rebalanceDelay"', 'true', '0', '0',
                            'Delay in milliseconds upon a node joining or leaving topology (or crash) after which rebalancing should be started automatically')
                    .settings-row
                        +number('Timeout:', model + '.rebalanceTimeout', '"rebalanceTimeout"', 'true', '10000', '0',
                            'Rebalance timeout in milliseconds')
                    .settings-row
                        +number('Throttle:', model + '.rebalanceThrottle', '"rebalanceThrottle"', 'true', '0', '0',
                            'Time in milliseconds to wait between rebalance messages to avoid overloading of CPU or network')
            .col-sm-6
                +preview-xml-java(model, 'cacheRebalance')
