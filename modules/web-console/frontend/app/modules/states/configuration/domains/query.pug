//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include /app/helpers/jade/mixins

-var form = 'query'
-var model = 'backupItem'
-var queryKeyFields = `${model}.queryKeyFields`
-var queryFields = `${model}.fields`
-var queryAliases = `${model}.aliases`
-var queryIndexes = `${model}.indexes`

panel-collapsible(ng-form=form opened=`!!${model}.queryMetadata`)
    panel-title#query-title Domain model for SQL query
    panel-description
        | Domain model properties for fields queries. 
        a.link-success(href='https://apacheignite.readme.io/docs/cache-queries' target='_blank') More info
    panel-content.pca-form-row
        .pca-form-column-6.pc-form-grid-row
            .content-not-available(
                ng-if=`${model}.queryMetadata === 'Annotations'`
                style='margin-top: 10px'
            )
                label Not available for annotated types

            .pc-form-grid-col-60(ng-if-start=`${model}.queryMetadata === 'Configuration'`)
                +text('Table name:', `${model}.tableName`, '"tableName"', 'false', 'Enter table name')

            .pc-form-grid-col-30(ng-if-start='$ctrl.available("2.0.0")')
                +text('Key field name:', `${model}.keyFieldName`, '"keyFieldName"', 'false', 'Enter key field name',
                    'Key name.<br/>' +
                    'Can be used in field list to denote the key as a whole')
            .pc-form-grid-col-30(ng-if-end)
                +text('Value field name:', `${model}.valueFieldName`, '"valueFieldName"', 'false', 'Enter value field name',
                    'Value name.<br/>' +
                    'Can be used in field list to denote the entire value')

            .pc-form-grid-col-60
                mixin domains-query-fields
                    .ignite-form-field
                        +ignite-form-field__label('Fields:', '"fields"')
                            +tooltip(`Collection of name-to-type mappings to be queried, in addition to indexed fields`)
                        .ignite-form-field__control
                            -let items = queryFields
                            list-editable(
                                ng-model=items
                                name='queryFields'
                                ng-change=`$ctrl.onQueryFieldsChange(${model})`
                            )
                                list-editable-item-view
                                    | {{ $item.name}} / {{ $item.className}}

                                list-editable-item-edit
                                    - form = '$parent.form'
                                    .pc-form-grid-row
                                        .pc-form-grid-col-30(divider='/')
                                            +ignite-form-field-text('Field name:', '$item.name', '"name"', false, true, 'Enter field name')(
                                                data-ignite-unique=items
                                                data-ignite-unique-property='name'
                                                ignite-auto-focus
                                            )
                                                +unique-feedback('"name"', 'Property with such name already exists!')
                                        .pc-form-grid-col-30
                                            +java-class-typeahead('Field full class name:', `$item.className`, '"className"', '$ctrl.queryFieldTypes', true, true, 'Enter field full class name')(
                                                ng-model-options='{allowInvalid: true}'
                                                extra-valid-java-identifiers='$ctrl.queryFieldTypes'
                                            )

                                list-editable-no-items
                                    list-editable-add-item-button(
                                        add-item=`$editLast((${items} = ${items} || []).push({}))`
                                        label-single='field to query'
                                        label-multiple='fields'
                                    )

                +domains-query-fields

            .pc-form-grid-col-60
                +sane-ignite-form-field-dropdown({
                    label: 'Key fields:',
                    model: queryKeyFields,
                    name: '"queryKeyFields"',
                    multiple: true,
                    placeholder: 'Select key fields',
                    placeholderEmpty: 'Configure available fields',
                    options: `$ctrl.fields('cur', ${queryKeyFields})`,
                    tip: 'Query fields that belongs to the key.<br/>\
                     Used to build / modify keys and values during SQL DML operations when no key - value classes are present on cluster nodes.'
                })
            .pc-form-grid-col-60
                mixin domains-query-aliases
                    .ignite-form-field
                        +ignite-form-field__label('Aliases:', '"aliases"')
                            +tooltip(`Mapping from full property name in dot notation to an alias that will be used as SQL column name<br />
                                For example: "parent.name" as "parentName"`)
                        .ignite-form-field__control
                            -let items = queryAliases

                            list-editable(ng-model=items name='queryAliases')
                                list-editable-item-view
                                    | {{ $item.field }} &rarr; {{ $item.alias }}

                                list-editable-item-edit
                                    - form = '$parent.form'
                                    .pc-form-grid-row
                                        .pc-form-grid-col-30(divider='/')
                                            +ignite-form-field-text('Field name', '$item.field', '"field"', false, true, 'Enter field name')(
                                                data-ignite-unique=items
                                                data-ignite-unique-property='field'
                                                ignite-auto-focus
                                            )
                                                +unique-feedback('"field"', 'Such field already exists!')
                                        .pc-form-grid-col-30
                                            +ignite-form-field-text('Field alias', '$item.alias', '"alias"', false, true, 'Enter field alias')

                                list-editable-no-items
                                    list-editable-add-item-button(
                                        add-item=`$editLast((${items} = ${items} || []).push({}))`
                                        label-single='alias to query'
                                        label-multiple='aliases'
                                    )

                +domains-query-aliases

            .pc-form-grid-col-60(ng-if-end)
                .ignite-form-field
                    +ignite-form-field__label('Indexes:', '"indexes"')
                    .ignite-form-field__control
                        list-editable(
                            ng-model=queryIndexes
                            ng-model-options='{allowInvalid: true}'
                            name='queryIndexes'
                            ui-validate=`{
                                complete: '$ctrl.Models.queryIndexes.complete($value)',
                                fieldsExist: '$ctrl.Models.queryIndexes.fieldsExist($value, ${queryFields})',
                                indexFieldsHaveUniqueNames: '$ctrl.Models.queryIndexes.indexFieldsHaveUniqueNames($value)'
                            }`
                            ui-validate-watch=`"[${queryIndexes}, ${queryFields}]"`
                            ui-validate-watch-object-equality='true'
                        )
                            list-editable-item-view(item-name='queryIndex')
                                div {{ queryIndex.name }} [{{ queryIndex.indexType }}]
                                div(ng-repeat='field in queryIndex.fields track by field._id')
                                    span {{ field.name }}
                                    span(ng-if='queryIndex.indexType == "SORTED"')
                                        |  / {{ field.direction ? 'ASC' : 'DESC'}}

                            list-editable-item-edit(item-name='queryIndex')
                                .pc-form-grid-row
                                    .pc-form-grid-col-30(divider='/')
                                        +sane-ignite-form-field-text({
                                            label: 'Index name:',
                                            model: 'queryIndex.name',
                                            name: '"name"',
                                            required: true,
                                            placeholder: 'Enter index name'
                                        })(
                                            ignite-unique=queryIndexes
                                            ignite-unique-property='name'
                                            ignite-form-field-input-autofocus='true'
                                        )
                                            +unique-feedback(_, 'Such index already exists!')
                                    .pc-form-grid-col-30
                                        +sane-ignite-form-field-dropdown({
                                            label: 'Index type:',
                                            model: `queryIndex.indexType`,
                                            name: '"indexType"',
                                            required: true,
                                            placeholder: 'Select index type',
                                            options: '::$ctrl.Models.indexType.values'
                                        })
                                    .pc-form-grid-col-60
                                        .ignite-form-field
                                            +ignite-form-field__label('Index fields:', '"indexFields"', true)
                                            .ignite-form-field__control
                                                list-editable(
                                                    ng-model='queryIndex.fields'
                                                    ng-model-options='{allowInvalid: true}'
                                                    name='indexFields'
                                                    ng-required='true'
                                                )
                                                    list-editable-item-view(item-name='indexField')
                                                        | {{ indexField.name }} 
                                                        span(ng-if='queryIndex.indexType === "SORTED"')
                                                            |  / {{ indexField.direction ? "ASC" : "DESC" }}

                                                    list-editable-item-edit(item-name='indexField')
                                                        .pc-form-grid-row
                                                            .pc-form-grid-col-60
                                                                +sane-ignite-form-field-dropdown({
                                                                    label: 'Index field:',
                                                                    model: 'indexField.name',
                                                                    name: '"indexName"',
                                                                    placeholder: `{{ ${queryFields}.length > 0 ? 'Choose index field' : 'No fields configured' }}`,
                                                                    options: queryFields
                                                                })(
                                                                    bs-options=`queryField.name as queryField.name for queryField in ${queryFields}`
                                                                    ng-disabled=`${queryFields}.length === 0`
                                                                    ng-model-options='{allowInvalid: true}'
                                                                    ignite-unique='queryIndex.fields'
                                                                    ignite-unique-property='name'
                                                                    ignite-auto-focus
                                                                )
                                                                    +unique-feedback(_, 'Such field already exists!')
                                                            .pc-form-grid-col-60(
                                                                ng-if='queryIndex.indexType === "SORTED"'
                                                            )
                                                                +sane-ignite-form-field-dropdown({
                                                                    label: 'Sort direction:',
                                                                    model: 'indexField.direction',
                                                                    name: '"indexDirection"',
                                                                    required: true,
                                                                    options: '::$ctrl.Models.indexSortDirection.values'
                                                                })
                                                    list-editable-no-items
                                                        list-editable-add-item-button(
                                                            add-item=`$edit($ctrl.Models.addIndexField(queryIndex.fields))`
                                                            label-single='field to index'
                                                            label-multiple='fields in index'
                                                        )
                                            .ignite-form-field__errors(
                                                ng-messages=`$form.indexFields.$error`
                                                ng-show=`$form.indexFields.$invalid`
                                            )
                                                +form-field-feedback(_, 'required', 'Index fields should be configured')

                            list-editable-no-items
                                list-editable-add-item-button(
                                    add-item=`$edit($ctrl.Models.addIndex(${model}))`
                                    label-single='index'
                                    label-multiple='fields'
                                )
                    .ignite-form-field__errors(
                        ng-messages=`query.queryIndexes.$error`
                        ng-show=`query.queryIndexes.$invalid`
                    )
                        +form-field-feedback(_, 'complete', 'Some indexes are incomplete')
                        +form-field-feedback(_, 'fieldsExist', 'Some indexes use unknown fields')
                        +form-field-feedback(_, 'indexFieldsHaveUniqueNames', 'Each query index field name should be unique')

        .pca-form-column-6
            +preview-xml-java(model, 'domainModelQuery')
