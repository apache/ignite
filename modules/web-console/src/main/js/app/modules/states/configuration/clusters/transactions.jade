//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include ../../../../../app/helpers/jade/mixins.jade

-var form = 'transactions'
-var model = 'backupItem.transactionConfiguration'

form.panel.panel-default(name=form novalidate)
    .panel-heading(bs-collapse-toggle ng-click='ui.loadPanel("#{form}")')
        ignite-form-panel-chevron
        label Transactions
        ignite-form-field-tooltip.tipLabel
            | Settings for transactions
        ignite-form-revert
    .panel-collapse(role='tabpanel' bs-collapse-target id=form)
        .panel-body(ng-if='ui.isPanelLoaded("#{form}")')
            .col-sm-6
                .settings-row
                    +dropdown('Concurrency:', model + '.defaultTxConcurrency', 'defaultTxConcurrency', 'true', 'PESSIMISTIC',
                        '[\
                            {value: "OPTIMISTIC", label: "OPTIMISTIC"},\
                            {value: "PESSIMISTIC", label: "PESSIMISTIC"}\
                        ]',
                        'Cache transaction concurrency to use when one is not explicitly specified')
                .settings-row
                    +dropdown('Isolation:', model + '.defaultTxIsolation', 'defaultTxIsolation', 'true', 'REPEATABLE_READ',
                        '[\
                            {value: "READ_COMMITTED", label: "READ_COMMITTED"},\
                            {value: "REPEATABLE_READ", label: "REPEATABLE_READ"},\
                            {value: "SERIALIZABLE", label: "SERIALIZABLE"}\
                        ]',
                        'Default transaction isolation')
                .settings-row
                    +number('Default timeout:', model + '.defaultTxTimeout', 'defaultTxTimeout', 'true', '0', '0', 'Default transaction timeout')
                .settings-row
                    +number('Pessimistic log cleanup delay:', model + '.pessimisticTxLogLinger', 'pessimisticTxLogLinger', 'true', '10000', '0',
                        'Delay, in milliseconds, after which pessimistic recovery entries will be cleaned up for failed node')
                .settings-row
                    +number('Pessimistic log size:', model + '.pessimisticTxLogSize', 'pessimisticTxLogSize', 'true', '0', '0',
                        'Size of pessimistic transactions log stored on node in order to recover transaction commit if originating node has left grid before it has sent all messages to transaction nodes')
                .settings-row
                    +java-class('Manager factory:', model + '.txManagerFactory', 'txManagerFactory', 'true', 'false',
                        'Class name of transaction manager factory for integration with JEE app servers')
            .col-sm-6
                +preview-xml-java(model, 'clusterTransactions')
