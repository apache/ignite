//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include ../../../../../../../app/helpers/jade/mixins.jade

-var model = 'backupItem.discovery.ZooKeeper'

div
    .details-row
        +java-class('Curator:', model + '.curator', 'curator', 'true', 'false',
            'The Curator framework in use<br/>\
            By default generates curator of org.apache.curator. framework.imps.CuratorFrameworkImpl\
            class with configured connect string, retry policy, and default session and connection timeouts')
    .details-row
        +text('Connect string:', model + '.zkConnectionString', 'zkConnectionString', 'true', 'host:port[chroot][,host:port[chroot]]',
            'When "IGNITE_ZK_CONNECTION_STRING" system property is not configured this property will be used')
    .details-row
        +dropdown('Retry policy:', model + '.retryPolicy.kind', 'retryPolicy', 'true', 'Default',
            '[\
                {value: "ExponentialBackoff", label: "Exponential backoff"},\
                {value: "BoundedExponentialBackoff", label: "Bounded exponential backoff"},\
                {value: "UntilElapsed", label: "Until elapsed"},\
                {value: "NTimes", label: "Max number of times"},\
                {value: "OneTime", label: "Only once"},\
                {value: "Forever", label: "Always allow retry"},\
                {value: "Custom", label: "Custom"},\
                {value: undefined, label: "Default"}\
            ]',
            'Available retry policies:\
            <ul>\
                <li>Exponential backoff - retries a set number of times with increasing sleep time between retries</li>\
                <li>Bounded exponential backoff - retries a set number of times with an increasing (up to a maximum bound) sleep time between retries</li>\
                <li>Until elapsed - retries until a given amount of time elapses</li>\
                <li>Max number of times - retries a max number of times</li>\
                <li>Only once - retries only once</li>\
                <li>Always allow retry - retries infinitely</li>\
                <li>Custom - custom retry policy implementation</li>\
                <li>Default - exponential backoff retry policy with configured base sleep time equal to 1000ms and max retry count equal to 10</li>\
            </ul>')
    .details-row(ng-if='#{model}.retryPolicy.kind')
        .panel-details
            div(ng-switch='#{model}.retryPolicy.kind')
                ignite-configuration-clusters-general-discovery-zookeeper-exponential(ng-switch-when='ExponentialBackoff')
                ignite-configuration-clusters-general-discovery-zookeeper-bounded-exponential(ng-switch-when='BoundedExponentialBackoff')
                ignite-configuration-clusters-general-discovery-zookeeper-until-elapsed(ng-switch-when='UntilElapsed')
                ignite-configuration-clusters-general-discovery-zookeeper-n-times(ng-switch-when='NTimes')
                ignite-configuration-clusters-general-discovery-zookeeper-one-time(ng-switch-when='OneTime')
                ignite-configuration-clusters-general-discovery-zookeeper-forever(ng-switch-when='Forever')
                ignite-configuration-clusters-general-discovery-zookeeper-custom(ng-switch-when='Custom')
    .details-row
        +text('Base path:', model + '.basePath', 'basePath', 'false', '/services', 'Base path for service registration')
    .details-row
        +text('Service name:', model + '.serviceName', 'serviceName', 'false', 'ignite',
            'Service name to use, as defined by Curator&#39;s ServiceDiscovery recipe<br/>\
            In physical ZooKeeper terms, it represents the node under basePath, under which services will be registered')
    .details-row
        +checkbox('Allow duplicate registrations', model + '.allowDuplicateRegistrations', 'allowDuplicateRegistrations',
            'Whether to register each node only once, or if duplicate registrations are allowed<br/>\
            Nodes will attempt to register themselves, plus those they know about<br/>\
            By default, duplicate registrations are not allowed, but you might want to set this property to <b>true</b> if you have multiple network interfaces or if you are facing troubles')
