/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ignite.schema.test.model;

import java.io.*;

/**
 * Tst definition.
 *
 * Code generated by Apache Ignite Schema Import utility: 01/27/2015.
 */
public class Tst implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for pk. */
    private int pk;

    /** Value for boolcol. */
    private boolean boolcol;

    /** Value for bytecol. */
    private byte bytecol;

    /** Value for shortcol. */
    private short shortcol;

    /** Value for intcol. */
    private int intcol;

    /** Value for longcol. */
    private long longcol;

    /** Value for floatcol. */
    private float floatcol;

    /** Value for doublecol. */
    private double doublecol;

    /** Value for doublecol2. */
    private double doublecol2;

    /** Value for bigdecimalcol. */
    private java.math.BigDecimal bigdecimalcol;

    /** Value for strcol. */
    private String strcol;

    /** Value for datecol. */
    private java.sql.Date datecol;

    /** Value for timecol. */
    private java.sql.Time timecol;

    /** Value for tscol. */
    private java.sql.Timestamp tscol;

    /** Value for arrcol. */
    private Object arrcol;

    /** Value for fieldWithAlias. */
    private String fieldWithAlias;

    /**
     * Empty constructor.
     */
    public Tst() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public Tst(
        int pk,
        boolean boolcol,
        byte bytecol,
        short shortcol,
        int intcol,
        long longcol,
        float floatcol,
        double doublecol,
        double doublecol2,
        java.math.BigDecimal bigdecimalcol,
        String strcol,
        java.sql.Date datecol,
        java.sql.Time timecol,
        java.sql.Timestamp tscol,
        Object arrcol,
        String fieldWithAlias
    ) {
        this.pk = pk;
        this.boolcol = boolcol;
        this.bytecol = bytecol;
        this.shortcol = shortcol;
        this.intcol = intcol;
        this.longcol = longcol;
        this.floatcol = floatcol;
        this.doublecol = doublecol;
        this.doublecol2 = doublecol2;
        this.bigdecimalcol = bigdecimalcol;
        this.strcol = strcol;
        this.datecol = datecol;
        this.timecol = timecol;
        this.tscol = tscol;
        this.arrcol = arrcol;
        this.fieldWithAlias = fieldWithAlias;
    }

    /**
     * Gets pk.
     *
     * @return Value for pk.
     */
    public int getPk() {
        return pk;
    }

    /**
     * Sets pk.
     *
     * @param pk New value for pk.
     */
    public void setPk(int pk) {
        this.pk = pk;
    }

    /**
     * Gets boolcol.
     *
     * @return Value for boolcol.
     */
    public boolean getBoolcol() {
        return boolcol;
    }

    /**
     * Sets boolcol.
     *
     * @param boolcol New value for boolcol.
     */
    public void setBoolcol(boolean boolcol) {
        this.boolcol = boolcol;
    }

    /**
     * Gets bytecol.
     *
     * @return Value for bytecol.
     */
    public byte getBytecol() {
        return bytecol;
    }

    /**
     * Sets bytecol.
     *
     * @param bytecol New value for bytecol.
     */
    public void setBytecol(byte bytecol) {
        this.bytecol = bytecol;
    }

    /**
     * Gets shortcol.
     *
     * @return Value for shortcol.
     */
    public short getShortcol() {
        return shortcol;
    }

    /**
     * Sets shortcol.
     *
     * @param shortcol New value for shortcol.
     */
    public void setShortcol(short shortcol) {
        this.shortcol = shortcol;
    }

    /**
     * Gets intcol.
     *
     * @return Value for intcol.
     */
    public int getIntcol() {
        return intcol;
    }

    /**
     * Sets intcol.
     *
     * @param intcol New value for intcol.
     */
    public void setIntcol(int intcol) {
        this.intcol = intcol;
    }

    /**
     * Gets longcol.
     *
     * @return Value for longcol.
     */
    public long getLongcol() {
        return longcol;
    }

    /**
     * Sets longcol.
     *
     * @param longcol New value for longcol.
     */
    public void setLongcol(long longcol) {
        this.longcol = longcol;
    }

    /**
     * Gets floatcol.
     *
     * @return Value for floatcol.
     */
    public float getFloatcol() {
        return floatcol;
    }

    /**
     * Sets floatcol.
     *
     * @param floatcol New value for floatcol.
     */
    public void setFloatcol(float floatcol) {
        this.floatcol = floatcol;
    }

    /**
     * Gets doublecol.
     *
     * @return Value for doublecol.
     */
    public double getDoublecol() {
        return doublecol;
    }

    /**
     * Sets doublecol.
     *
     * @param doublecol New value for doublecol.
     */
    public void setDoublecol(double doublecol) {
        this.doublecol = doublecol;
    }

    /**
     * Gets doublecol2.
     *
     * @return Value for doublecol2.
     */
    public double getDoublecol2() {
        return doublecol2;
    }

    /**
     * Sets doublecol2.
     *
     * @param doublecol2 New value for doublecol2.
     */
    public void setDoublecol2(double doublecol2) {
        this.doublecol2 = doublecol2;
    }

    /**
     * Gets bigdecimalcol.
     *
     * @return Value for bigdecimalcol.
     */
    public java.math.BigDecimal getBigdecimalcol() {
        return bigdecimalcol;
    }

    /**
     * Sets bigdecimalcol.
     *
     * @param bigdecimalcol New value for bigdecimalcol.
     */
    public void setBigdecimalcol(java.math.BigDecimal bigdecimalcol) {
        this.bigdecimalcol = bigdecimalcol;
    }

    /**
     * Gets strcol.
     *
     * @return Value for strcol.
     */
    public String getStrcol() {
        return strcol;
    }

    /**
     * Sets strcol.
     *
     * @param strcol New value for strcol.
     */
    public void setStrcol(String strcol) {
        this.strcol = strcol;
    }

    /**
     * Gets datecol.
     *
     * @return Value for datecol.
     */
    public java.sql.Date getDatecol() {
        return datecol;
    }

    /**
     * Sets datecol.
     *
     * @param datecol New value for datecol.
     */
    public void setDatecol(java.sql.Date datecol) {
        this.datecol = datecol;
    }

    /**
     * Gets timecol.
     *
     * @return Value for timecol.
     */
    public java.sql.Time getTimecol() {
        return timecol;
    }

    /**
     * Sets timecol.
     *
     * @param timecol New value for timecol.
     */
    public void setTimecol(java.sql.Time timecol) {
        this.timecol = timecol;
    }

    /**
     * Gets tscol.
     *
     * @return Value for tscol.
     */
    public java.sql.Timestamp getTscol() {
        return tscol;
    }

    /**
     * Sets tscol.
     *
     * @param tscol New value for tscol.
     */
    public void setTscol(java.sql.Timestamp tscol) {
        this.tscol = tscol;
    }

    /**
     * Gets arrcol.
     *
     * @return Value for arrcol.
     */
    public Object getArrcol() {
        return arrcol;
    }

    /**
     * Sets arrcol.
     *
     * @param arrcol New value for arrcol.
     */
    public void setArrcol(Object arrcol) {
        this.arrcol = arrcol;
    }

    /**
     * Gets fieldWithAlias.
     *
     * @return Value for fieldWithAlias.
     */
    public String getFieldWithAlias() {
        return fieldWithAlias;
    }

    /**
     * Sets fieldWithAlias.
     *
     * @param fieldWithAlias New value for fieldWithAlias.
     */
    public void setFieldWithAlias(String fieldWithAlias) {
        this.fieldWithAlias = fieldWithAlias;
    }

    /** {@inheritDoc} */
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof Tst))
            return false;

        Tst that = (Tst)o;

        if (pk != that.pk)
            return false;

        if (boolcol != that.boolcol)
            return false;

        if (bytecol != that.bytecol)
            return false;

        if (shortcol != that.shortcol)
            return false;

        if (intcol != that.intcol)
            return false;

        if (longcol != that.longcol)
            return false;

        if (Float.compare(floatcol, that.floatcol) != 0)
            return false;

        if (Double.compare(doublecol, that.doublecol) != 0)
            return false;

        if (Double.compare(doublecol2, that.doublecol2) != 0)
            return false;

        if (bigdecimalcol != null ? !bigdecimalcol.equals(that.bigdecimalcol) : that.bigdecimalcol != null)
            return false;

        if (strcol != null ? !strcol.equals(that.strcol) : that.strcol != null)
            return false;

        if (datecol != null ? !datecol.equals(that.datecol) : that.datecol != null)
            return false;

        if (timecol != null ? !timecol.equals(that.timecol) : that.timecol != null)
            return false;

        if (tscol != null ? !tscol.equals(that.tscol) : that.tscol != null)
            return false;

        if (arrcol != null ? !arrcol.equals(that.arrcol) : that.arrcol != null)
            return false;

        if (fieldWithAlias != null ? !fieldWithAlias.equals(that.fieldWithAlias) : that.fieldWithAlias != null)
            return false;

        return true;
    }

    /** {@inheritDoc} */
    @Override public int hashCode() {
        int res = pk;

        res = 31 * res + (boolcol ? 1 : 0);

        res = 31 * res + (int)bytecol;

        res = 31 * res + (int)shortcol;

        res = 31 * res + intcol;

        res = 31 * res + (int)(longcol ^ (longcol >>> 32));

        res = 31 * res + (floatcol != +0.0f ? Float.floatToIntBits(floatcol) : 0);

        long ig_hash_temp = Double.doubleToLongBits(doublecol);

        res = 31 * res + (int)(ig_hash_temp ^ (ig_hash_temp >>> 32));

        ig_hash_temp = Double.doubleToLongBits(doublecol2);

        res = 31 * res + (int)(ig_hash_temp ^ (ig_hash_temp >>> 32));

        res = 31 * res + (bigdecimalcol != null ? bigdecimalcol.hashCode() : 0);

        res = 31 * res + (strcol != null ? strcol.hashCode() : 0);

        res = 31 * res + (datecol != null ? datecol.hashCode() : 0);

        res = 31 * res + (timecol != null ? timecol.hashCode() : 0);

        res = 31 * res + (tscol != null ? tscol.hashCode() : 0);

        res = 31 * res + (arrcol != null ? arrcol.hashCode() : 0);

        res = 31 * res + (fieldWithAlias != null ? fieldWithAlias.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} */
    @Override public String toString() {
        return "Tst [pk=" + pk +
            ", boolcol=" + boolcol +
            ", bytecol=" + bytecol +
            ", shortcol=" + shortcol +
            ", intcol=" + intcol +
            ", longcol=" + longcol +
            ", floatcol=" + floatcol +
            ", doublecol=" + doublecol +
            ", doublecol2=" + doublecol2 +
            ", bigdecimalcol=" + bigdecimalcol +
            ", strcol=" + strcol +
            ", datecol=" + datecol +
            ", timecol=" + timecol +
            ", tscol=" + tscol +
            ", arrcol=" + arrcol +
            ", fieldWithAlias=" + fieldWithAlias +
            "]";
    }
}
