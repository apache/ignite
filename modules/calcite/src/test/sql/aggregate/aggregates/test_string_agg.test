# name: test/sql/aggregate/aggregates/test_string_agg.test
# description: Test STRING_AGG operator
# group: [aggregates]

# test incorrect usage of STRING_AGG function

statement error
SELECT STRING_AGG()

statement error
SELECT STRING_AGG(1, 2, 3)

statement error
SELECT STRING_AGG(STRING_AGG('a', ','))

# test string aggregation on scalar values
query T
SELECT STRING_AGG('a', ',')
----
a

# test string aggregation on scalar values
query TTTT
SELECT STRING_AGG('a', ','), STRING_AGG(NULL, ','), STRING_AGG('a', NULL), STRING_AGG(NULL, NULL)
----
a
NULL
a
NULL

# test string aggregation on a set of values
statement ok
CREATE TABLE strings(g INTEGER, x VARCHAR, y VARCHAR);

statement ok
INSERT INTO strings VALUES (1,'a','/'), (1,'b','-'), (2,'i','/'), (2,NULL,'-'), (2,'j','+'), (3,'p','/'), (4,'x','/'), (4,'y','-'), (4,'z','+')

query TT
SELECT STRING_AGG(x, ',' ORDER BY x ASC), STRING_AGG(x, y ORDER BY x ASC) FROM strings
----
a,b,i,j,p,x,y,z
a-b/i+j/p/x-y+z

query ITT
SELECT g, STRING_AGG(x, ',' ORDER BY x ASC), STRING_AGG(x, y ORDER BY x ASC) FROM strings GROUP BY g ORDER BY g
----
1
a,b
a-b
2
i,j
i+j
3
p
p
4
x,y,z
x-y+z

# test agg on empty set
query TT
SELECT STRING_AGG(x, ','), STRING_AGG(x, y) FROM strings WHERE g > 100
----
NULL
NULL

# numerics are auto cast to strings
query T
SELECT STRING_AGG(1, 2)
----
1

# group_concat is an alias for string_agg
query T
SELECT GROUP_CONCAT('a', ',')
----
a

query T
SELECT GROUP_CONCAT('a')
----
a

query TT
SELECT g, GROUP_CONCAT(x ORDER BY x) FROM strings GROUP BY g ORDER BY g
----
1	a,b
2	i,j
3	p
4	x,y,z

# listagg is an alias for string_agg
query T
SELECT LISTAGG('a', ',')
----
a

query T
SELECT LISTAGG('a')
----
a

query TT
SELECT g, LISTAGG(x) WITHIN GROUP (ORDER BY x) FROM strings GROUP BY g ORDER BY g
----
1	a,b
2	i,j
3	p
4	x,y,z


# Tests ordering, distincts, etc.
statement ok
CREATE TABLE IF NOT EXISTS trades (id INTEGER,amount INTEGER, xkey VARCHAR(255), name VARCHAR(255),ts TIMESTAMP, PRIMARY KEY(id));

statement ok
INSERT INTO trades(id, amount, xkey, name, ts) VALUES (1, 150,  'key-1', 'name1', '2021-12-01 12:00:00'), (2, 300,  'key-2', 'name2', '2021-11-01 14:00:00');

statement ok
INSERT INTO trades(id, amount, xkey, name, ts) VALUES (3, 10,   'key-1', 'name1', '2021-10-01 15:00:00'), (4, 900,  'key-3', 'name1', '2021-08-01 16:00:00');

statement ok
INSERT INTO trades(id, amount, xkey, name, ts) VALUES (5, 1000, 'key-4', 'name3', '2021-09-01 17:00:00'), (6, 200,  'key-2', 'name11','2021-12-01 18:00:00');

statement ok
INSERT INTO trades(id, amount, xkey, name, ts) VALUES (7, 10,   'key-4', 'name4', '2021-11-01 19:00:00');

# Simple ordering
query TTTTTTTT
SELECT xkey, COUNT(*), COUNT(DISTINCT name), SUM(amount), STRING_AGG(name ORDER BY name), STRING_AGG(name ORDER BY name DESC), STRING_AGG(DISTINCT name ORDER BY name), STRING_AGG(DISTINCT name ORDER BY name DESC) FROM trades GROUP BY xkey ORDER BY xkey
----
key-1	2	1	160	name1,name1	name1,name1	name1	name1
key-2	2	2	500	name11,name2	name2,name11	name11,name2	name2,name11
key-3	1	1	900	name1	name1	name1	name1
key-4	2	2	1010	name3,name4	name4,name3	name3,name4	name4,name3

# Collation ordering
query TTTTTTTT
SELECT xkey, COUNT(*), COUNT(DISTINCT name), SUM(amount), STRING_AGG(name ORDER BY amount), STRING_AGG(name ORDER BY amount DESC), STRING_AGG(name ORDER BY ts), STRING_AGG(name ORDER BY ts DESC) FROM trades GROUP BY xkey ORDER BY xkey
----
key-1	2	1	160	name1,name1	name1,name1	name1,name1	name1,name1
key-2	2	2	500	name11,name2	name2,name11	name2,name11	name11,name2
key-3	1	1	900	name1	name1	name1	name1
key-4	2	2	1010	name4,name3	name3,name4	name3,name4	name4,name3

# Distinct collation ordering
query TTTTTTTT
SELECT xkey, COUNT(*), COUNT(DISTINCT name), SUM(amount), STRING_AGG(DISTINCT name ORDER BY amount), STRING_AGG(DISTINCT name ORDER BY amount DESC), STRING_AGG(DISTINCT name ORDER BY ts), STRING_AGG(DISTINCT name ORDER BY ts DESC)  FROM trades GROUP BY xkey ORDER BY xkey
----
key-1	2	1	160	name1	name1	name1	name1
key-2	2	2	500	name11,name2	name2,name11	name2,name11	name11,name2
key-3	1	1	900	name1	name1	name1	name1
key-4	2	2	1010	name4,name3	name3,name4	name3,name4	name4,name3
