# name: test/sql/aggregate/aggregates/test_string_agg.test
# description: Test STRING_AGG operator
# group: [aggregates]

# test incorrect usage of STRING_AGG function

statement error
SELECT STRING_AGG()

statement error
SELECT STRING_AGG(1, 2, 3)

statement error
SELECT STRING_AGG(STRING_AGG('aa',','))

# test string aggregation on scalar values
query T
SELECT STRING_AGG('aa',',')
----
aa

# test string aggregation on scalar values
query TTTT
SELECT STRING_AGG('aa',','), STRING_AGG(NULL,','), STRING_AGG('aa',NULL), STRING_AGG(NULL,NULL)
----
aa
NULL
NULL
NULL

# test string aggregation on aa set of values
statement ok
CREATE TABLE strings(g INTEGER, x VARCHAR, y VARCHAR);

statement ok
INSERT INTO strings VALUES (1,'aa','/'), (1,'bb','-'), (2,'ii','/'), (2,NULL,'-'), (2,'jj','+'), (3,'p','/'), (4,'x','/'), (4,'y','-'), (4,'z','+')

query TT
SELECT STRING_AGG(x,','), STRING_AGG(x,y) FROM strings
----
aa,bb,ii,jj,p,x,y,z
aa-bb/ii+jj/p/x-y+z

query ITT
SELECT g, STRING_AGG(x,','), STRING_AGG(x,y) FROM strings GROUP BY g ORDER BY g
----
1
aa,bb
aa-bb
2
ii,jj
ii+jj
3
p
p
4
x,y,z
x-y+z

# test agg on empty set
query TT
SELECT STRING_AGG(x,','), STRING_AGG(x,y) FROM strings WHERE g > 100
----
NULL
NULL

# numerics are auto cast to strings
query T
SELECT STRING_AGG(1, 2)
----
1

# group concat is an alias for string_agg
query T
SELECT GROUP_CONCAT('aa', ',')
----
aa

query T
SELECT GROUP_CONCAT('aa')
----
aa

query TT
SELECT g, GROUP_CONCAT(x) FROM strings GROUP BY g ORDER BY g
----
1	aa,bb
2	ii,jj
3	p
4	x,y,z
