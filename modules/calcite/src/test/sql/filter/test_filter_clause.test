# name: test/sql/filter/test_filter_clause.test
# description: Test aggregation with filter clause
# group: [filter]

statement ok
PRAGMA enable_verification

statement ok
create temporary table t as select range ii, mod(range,10) jj,mod(range,10)*10000000 kk from range(1000);


query II
SELECT
  COUNT(*) AS unfiltered,
  COUNT(*) FILTER (WHERE ii < 5) AS filtered
FROM t;
----
1000	5

query II
SELECT
  COUNT(*) AS unfiltered,
  COUNT(*) FILTER (WHERE ii > 5 and ii < 10) AS filtered
FROM t;
----
1000	4

query II
SELECT
  SUM(ii) AS unfiltered,
  SUM(ii) FILTER (WHERE ii < 5) AS filtered
FROM t;
----
499500	10

query II
SELECT
  SUM(ii) AS unfiltered,
  SUM(ii) FILTER (WHERE ii between 5 and 10) AS filtered
FROM t;
----
499500	45

query II
SELECT
  SUM(ii) AS unfiltered,
  SUM(jj) FILTER (WHERE jj < 2) AS filtered
FROM t;
----
499500	100


query I
SELECT
  SUM(jj) FILTER (WHERE ii < 10)
FROM t;
----
45

query I
SELECT
  SUM(jj) FILTER (WHERE ii < (select 10))
FROM t;
----
45

query I
SELECT
  SUM(ii) FILTER (WHERE ii < (select ii from t as t2 where t.ii = t2.ii))
FROM t;
----
NULL

# use it inside subquery
query I
SELECT
 (select sum(t2.ii) FILTER (where t2.ii < 10)  from t as t2)
FROM t
limit 5;
----
45
45
45
45
45

# multiple filters
query II
SELECT
 SUM(jj) FILTER (WHERE ii < 10),
  SUM(ii) FILTER (WHERE ii < 5)
FROM t;
----
45	10

query II
 SELECT
  sum(ii) AS unfiltered,
  sum(ii) FILTER (WHERE ii < 5) AS filtered
FROM t
group by jj;
----
49500	0
49600	1
49700	2
49800	3
49900	4
50000	NULL
50100	NULL
50200	NULL
50300	NULL
50400	NULL



query III
 SELECT
  COUNT(*) AS unfiltered,
  COUNT(*) FILTER (WHERE ii > 5 and ii < 10) AS filtered,
  jj
FROM t
group by jj;
----
100	0	0
100	0	1
100	0	2
100	0	3
100	0	4
100	0	5
100	1	6
100	1	7
100	1	8
100	1	9



query II
SELECT
  SUM(ii) AS unfiltered,
  SUM(ii) FILTER (WHERE ii between 5 and 10) AS filtered
FROM t
group by jj;
----
49500	10
49600	NULL
49700	NULL
49800	NULL
49900	NULL
50000	5
50100	6
50200	7
50300	8
50400	9




query III
SELECT
  SUM(ii) AS unfiltered,
  SUM(jj) FILTER (WHERE jj = 1) AS filtered,
  jj
FROM t
group by jj;
----
49500	NULL	0
49600	100	    1
49700	NULL	2
49800	NULL	3
49900	NULL	4
50000	NULL	5
50100	NULL	6
50200	NULL	7
50300	NULL	8
50400	NULL	9


query I
SELECT
  SUM(jj) FILTER (WHERE ii < 10)
FROM t
group by jj;
----
0
1
2
3
4
5
6
7
8
9

query I
SELECT
  SUM(jj) FILTER (WHERE ii < (select 10))
FROM t
group by jj;
----
0
1
2
3
4
5
6
7
8
9

query I
SELECT
  SUM(ii) FILTER (WHERE ii < (select ii from t as t2 where t.ii = t2.ii))
FROM t
group by jj;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

# use it inside subquery
query I
 SELECT
 (select sum(t2.ii) FILTER (where t2.ii < 10)  from t as t2)
FROM t
group by jj
limit 5;
----
45
45
45
45
45

# multiple filters
query II
SELECT
 SUM(jj) FILTER (WHERE ii < 10),
  SUM(ii) FILTER (WHERE ii < 5)
FROM t
group by jj;
----
0	0
1	1
2	2
3	3
4	4
5	NULL
6	NULL
7	NULL
8	NULL
9	NULL


query II
 SELECT
  sum(ii) AS unfiltered,
  sum(ii) FILTER (WHERE ii < 5) AS filtered
FROM t
group by kk;
----
49500	0
49600	1
49700	2
49800	3
49900	4
50000	NULL
50100	NULL
50200	NULL
50300	NULL
50400	NULL



query II
 SELECT
  COUNT(*) AS unfiltered,
  COUNT(*) FILTER (WHERE ii > 5 and ii < 10) AS filtered
FROM t
group by kk;
----
100	0
100	0
100	0
100	0
100	0
100	0
100	1
100	1
100	1
100	1



query II
SELECT
  SUM(ii) AS unfiltered,
  SUM(ii) FILTER (WHERE ii between 5 and 10) AS filtered
FROM t
group by kk;
----
49500	10
49600	NULL
49700	NULL
49800	NULL
49900	NULL
50000	5
50100	6
50200	7
50300	8
50400	9




query III
SELECT
  SUM(ii) AS unfiltered,
  SUM(jj) FILTER (WHERE jj = 1) AS filtered,
  kk
FROM t
group by kk;
----
49500	NULL	0
49600	100	10000000
49700	NULL	20000000
49800	NULL	30000000
49900	NULL	40000000
50000	NULL	50000000
50100	NULL	60000000
50200	NULL	70000000
50300	NULL	80000000
50400	NULL	90000000


query I
SELECT
  SUM(jj) FILTER (WHERE ii < 10)
FROM t
group by kk;
----
0
1
2
3
4
5
6
7
8
9

query I
SELECT
  SUM(jj) FILTER (WHERE ii < (select 10))
FROM t
group by kk;
----
0
1
2
3
4
5
6
7
8
9

query I
SELECT
  SUM(ii) FILTER (WHERE ii < (select ii from t as t2 where t.ii = t2.ii))
FROM t
group by kk;
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

# use it inside subquery
query I
 SELECT
 (select sum(t2.ii) FILTER (where t2.ii < 10)  from t as t2)
FROM t
group by kk
limit 5;
----
45
45
45
45
45

# multiple filters
query II
SELECT
 SUM(jj) FILTER (WHERE ii < 10),
  SUM(ii) FILTER (WHERE ii < 5)
FROM t
group by kk;
----
0	0
1	1
2	2
3	3
4	4
5	NULL
6	NULL
7	NULL
8	NULL
9	NULL


# use correlated expression inside the filter itself
query I
    SELECT
 (select sum(t2.ii) FILTER (where t.ii = t2.ii)  from t as t2)
FROM t
where ii < 5
----
0
1
2
3
4

#Query with many different filter clauses (e.g. 5 aggregates, 5 different filters)
statement ok
create temporary table t_2 as select range aa, length(range) bb, mod(range,100) cc, 5 d, 10000 e from range(1000);

query IIIII
select count (aa) filter (where aa>10 and aa < 15), count (bb) filter (where bb between 1 and 3),
    count (cc) filter ( where cc < 10), count (d) filter (where d =5), count(e) filter (where e < 10)
    from t_2;
----
4	1000	100	1000	0

query IIIII
select count (aa) filter (where aa>10 and aa < 15), count (bb) filter (where bb between 1 and 3),
    count (cc) filter ( where cc < 10), count (d) filter (where d =5), count(e) filter (where e < 10)
    from t_2
    group by bb;
----
0	10	10	10	0
4	90	0	90	0
0	900	90	900	0


#Filter with some more complex aggregates: COVAR_POP (multiple input columns), STRING_AGG (strings) and ARRAY_AGG (lists)
query II
select COVAR_POP(aa,bb) filter (where aa < 100), COVAR_POP(aa,bb) filter (where bb <5) from t_2;
----
4.5	49.95

query II
select COVAR_POP(aa,cc) filter (where aa < 100), COVAR_POP(aa,cc) filter (where cc <50)
from t_2
group by bb;
----
8.250000	8.250000
674.916667	133.250000
NULL	208.250000

statement ok
CREATE TABLE films(film_id INTEGER, title VARCHAR)

statement ok
CREATE TABLE actors(actor_id INTEGER, first_name VARCHAR, last_name VARCHAR)

statement ok
CREATE TABLE film_actor(film_id INTEGER, actor_id INTEGER)

statement ok
INSERT INTO films VALUES (1, 'The Martian'), (2, 'Saving Private Ryan'), (3, 'Team America');

statement ok
INSERT INTO actors VALUES (1, 'Matt', 'Damon'), (2, 'Jessica', 'Chastain'), (3, 'Tom', 'Hanks'), (4, 'Edward', 'Burns'),
						  (5, 'Kim', 'Jong Un'), (6, 'Alec', 'Baldwin');

statement ok
INSERT INTO film_actor VALUES (1, 1), (2, 1), (3, 1), (1, 2), (2, 3), (2, 4), (3, 5), (3, 6);

query II
SELECT
	title,
	ARRAY_AGG (first_name || ' ' || last_name) filter (where first_name = 'Matt') actors
FROM films
JOIN film_actor USING (film_id)
JOIN actors USING (actor_id)
GROUP BY
	title
ORDER BY
	title;
----
Saving Private Ryan	[Matt Damon]
Team America	[Matt Damon]
The Martian	[Matt Damon]


query II
SELECT
	title,
	STRING_AGG (first_name || ' ' || last_name) filter (where first_name = 'Matt') actors
FROM films
JOIN film_actor USING (film_id)
JOIN actors USING (actor_id)
GROUP BY
	title
ORDER BY
	title;
----
Saving Private Ryan	Matt Damon
Team America	Matt Damon
The Martian	Matt Damon


#DISTINCT aggregates
statement ok
CREATE TABLE integers(ii INTEGER)

statement ok
insert into integers values (1),(1),(2),(2),(3),(4),(8);

query I
select  sum(distinct ii) filter (where ii >1 and ii < 5) from integers;
----
9