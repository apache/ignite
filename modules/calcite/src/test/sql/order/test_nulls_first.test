# name: test/sql/order/test_nulls_first.test
# description: Test NULLS FIRST/NULLS LAST
# group: [order]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(ii INTEGER)

statement ok
INSERT INTO integers VALUES (1), (NULL)

# default is NULLS FIRST
query I
SELECT * FROM integers ORDER BY ii
----
NULL
1

query I
SELECT * FROM integers ORDER BY ii NULLS FIRST
----
NULL
1

query I
SELECT * FROM integers ORDER BY ii NULLS LAST
----
1
NULL

query II
SELECT 10 AS jj, ii FROM integers ORDER BY jj, ii NULLS LAST
----
10	1
10	NULL

# multiple columns with aa mix
statement ok
CREATE TABLE test(ii INTEGER, jj INTEGER)

statement ok
INSERT INTO test VALUES (1, 1), (NULL, 1), (1, NULL)

query II
SELECT * FROM test ORDER BY ii NULLS FIRST, jj NULLS LAST
----
NULL	1
1	1
1	NULL

query II
SELECT * FROM test ORDER BY ii NULLS FIRST, jj NULLS FIRST
----
NULL	1
1	NULL
1	1

query II
SELECT * FROM test ORDER BY ii NULLS LAST, jj NULLS FIRST
----
1	NULL
1	1
NULL	1

# now in window functions
query III
SELECT ii, jj, row_number() OVER (PARTITION BY ii ORDER BY jj NULLS FIRST) FROM test ORDER BY ii NULLS FIRST, jj NULLS FIRST;
----
NULL	1	1
1	NULL	1
1	1	2

query III
SELECT ii, jj, row_number() OVER (PARTITION BY ii ORDER BY jj NULLS LAST) FROM test ORDER BY ii NULLS FIRST, jj NULLS FIRST;
----
NULL	1	1
1	NULL	2
1	1	1

# TOP N
query II
SELECT * FROM test ORDER BY ii NULLS FIRST, jj NULLS LAST LIMIT 2
----
NULL	1
1	1

query II
SELECT * FROM test ORDER BY ii NULLS LAST, jj NULLS LAST LIMIT 2
----
1	1
1	NULL

# Test NULLS FIRST/NULLS LAST PRAGMA
# default is NULLS FIRST
query I
SELECT * FROM integers ORDER BY ii
----
NULL
1

# changed default now
statement ok
PRAGMA default_null_order='NULLS LAST'

query I
SELECT * FROM integers ORDER BY ii
----
1
NULL

statement ok
PRAGMA default_null_order='NULLS FIRST'

statement error
PRAGMA default_null_order())

statement error
PRAGMA default_null_order=UNKNOWN)

statement error
PRAGMA default_null_order=3)

