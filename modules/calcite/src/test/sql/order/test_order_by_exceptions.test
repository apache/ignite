# name: test/sql/order/test_order_by_exceptions.test
# description: Test ORDER BY exceptions
# group: [order]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE test (aa INTEGER, bb INTEGER);

statement ok
INSERT INTO test VALUES (11, 22), (12, 21), (13, 22);

# ORDER BY index out of range
statement error
SELECT aa FROM test ORDER BY 2

# ORDER BY constant works, but does nothing
# CONTROVERSIAL: works in SQLite but not in Postgres
query I
SELECT aa FROM test ORDER BY 'hello', aa
----
11
12
13

# ambiguous reference in union alias
statement error
SELECT aa AS kk, bb FROM test UNION SELECT aa, bb AS kk FROM test ORDER BY kk

# but works if not ambiguous
query II
SELECT aa AS kk, bb FROM test UNION SELECT aa AS kk, bb FROM test ORDER BY kk
----
11	22
12	21
13	22

# ambiguous reference in union parameter
statement error
SELECT aa % 2, bb FROM test UNION SELECT bb, aa % 2 AS kk ORDER BY aa % 2

# but works if not ambiguous
query II
SELECT aa % 2, bb FROM test UNION SELECT aa % 2 AS kk, bb FROM test ORDER BY aa % 2
----
0	21
1	22

# out of range order also happens for unions
statement error
SELECT aa % 2, bb FROM test UNION SELECT aa % 2 AS kk, bb FROM test ORDER BY 3

statement error
SELECT aa % 2, bb FROM test UNION SELECT aa % 2 AS kk, bb FROM test ORDER BY -1

# and union itself fails if amount of entries is wrong
statement error
SELECT aa % 2, bb FROM test UNION SELECT aa % 2 AS kk FROM test ORDER BY -1

