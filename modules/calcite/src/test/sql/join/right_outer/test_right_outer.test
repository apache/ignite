# name: test/sql/join/right_outer/test_right_outer.test
# description: Test RIGHT OUTER JOIN
# group: [right_outer]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(ii INTEGER, jj INTEGER)

statement ok
INSERT INTO integers VALUES (1, 2), (2, 3), (3, 4)

statement ok
CREATE TABLE integers2(kk INTEGER, l INTEGER)

statement ok
INSERT INTO integers2 VALUES (1, 10), (2, 20)

# all these tests are equivalent to the tests in test_left_outer.test
# but with the tables reversed and using aa right outer join instead

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON integers.ii=integers2.kk ORDER BY ii
----
1	2	1	10
2	3	2	20
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON integers.ii=integers2.kk  WHERE kk IS NOT NULL ORDER BY ii
----
1	2	1	10
2	3	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON integers.ii=integers2.kk AND integers2.kk IS NOT NULL ORDER BY ii
----
1	2	1	10
2	3	2	20
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii=1 ORDER BY ii, kk;
----
1	2	1	10
1	2	2	20
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON 1=1 ORDER BY ii, kk;
----
1	2	1	10
1	2	2	20
2	3	1	10
2	3	2	20
3	4	1	10
3	4	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON 1=2 ORDER BY ii;
----
1	2	NULL	NULL
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON NULL<>NULL ORDER BY ii;
----
1	2	NULL	NULL
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii=1 ORDER BY ii, kk;
----
1	2	1	10
1	2	2	20
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON l=20 ORDER BY ii, kk;
----
1	2	2	20
2	3	2	20
3	4	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON l>0 ORDER BY ii, kk;
----
1	2	1	10
1	2	2	20
2	3	1	10
2	3	2	20
3	4	1	10
3	4	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii=1 OR l=20 ORDER BY ii, kk;
----
1	2	1	10
1	2	2	20
2	3	2	20
3	4	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii=4 OR l=17 ORDER BY ii;
----
1	2	NULL	NULL
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii+l=21 ORDER BY ii;
----
1	2	2	20
2	3	NULL	NULL
3	4	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON ii+l>12 ORDER BY ii, kk;
----
1	2	2	20
2	3	2	20
3	4	1	10
3	4	2	20

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON integers.ii<integers2.kk WHERE integers.ii <= 2 ORDER BY ii
----
1	2	2	20
2	3	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM integers2 RIGHT OUTER JOIN integers ON integers.ii<integers2.kk AND integers.ii<integers2.l WHERE integers.ii <= 2 ORDER BY ii
----
1	2	2	20
2	3	NULL	NULL

query IIII
SELECT integers.*, integers2.* FROM (SELECT * FROM integers2 WHERE kk=100) integers2 RIGHT OUTER JOIN integers ON integers.ii<integers2.kk ORDER BY ii
----
1	2	NULL	NULL
2	3	NULL	NULL
3	4	NULL	NULL

query II
select t1.*, t2.* from (values (2), (3)) t2(ii) right join (values(1), (2)) t1(ii) on t1.ii=t2.ii AND t1.ii+t2.ii=4 ORDER BY 1, 2;
----
1	NULL
2	2
