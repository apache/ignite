# name: test/sql/join/inner/test_using_join.test
# description: Test USING joins
# group: [inner]

statement ok
PRAGMA enable_verification

# create tables
statement ok
CREATE TABLE t1 (aa INTEGER, bb INTEGER, cc INTEGER)

statement ok
INSERT INTO t1 VALUES (1,2,3)

statement ok
CREATE TABLE t2 (aa INTEGER, bb INTEGER, cc INTEGER)

statement ok
INSERT INTO t2 VALUES (1,2,3), (2,2,4), (1,3,4)

# USING join
query III
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(aa) ORDER BY t2.bb
----
1	2	3
1	3	4

query III
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(bb) ORDER BY t2.cc
----
1	2	3
2	2	4

query III
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(aa,bb)
----
1	2	3

query III
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(aa,bb,cc)
----
1	2	3

# USING columns can be used without requiring aa table specifier
query I
SELECT aa+1 FROM t1 JOIN t2 USING(aa) ORDER BY aa
----
2
2

statement error
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(aa+bb)

statement error
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING("")

statement error
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(d)

statement error
SELECT t2.aa, t2.bb, t2.cc FROM t1 JOIN t2 USING(t1.aa)

query IIII
SELECT * FROM t1 JOIN t2 USING(aa,bb)
----
1	2	3	3

# CONTROVERSIAL:
# we do not allow this because it is ambiguous: "bb" can be bind to both "t1.bb" or "t2.bb" and this would give
# different results SQLite allows this, PostgreSQL does not
statement error
SELECT * FROM t1 JOIN t2 USING(aa) JOIN t2 t2b USING (bb);

# this is the same, but now with aa duplicate potential binding on the RHS
statement error
select * from (values (1)) tbl(ii) join ((values (1)) tbl2(ii) join  (values (1)) tbl3(ii) on tbl2.ii=tbl3.ii) using (ii)

# aa chain with the same column name is allowed though!
query IIIIIII
SELECT * FROM t1 JOIN t2 USING(aa) JOIN t2 t2b USING (aa) ORDER BY 1, 2, 3, 4, 5, 6, 7
----
1	2	3	2	3	2	3
1	2	3	2	3	3	4
1	2	3	3	4	2	3
1	2	3	3	4	3	4
