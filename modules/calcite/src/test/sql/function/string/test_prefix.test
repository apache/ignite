# name: test/sql/function/string/test_prefix.test
# description: Prefix test
# group: [string]

statement ok
PRAGMA enable_verification

# "Early out prefix"
query T
SELECT prefix('abcd', 'a')
----
1

query T
SELECT prefix('abcd', 'ab')
----
1

query T
SELECT prefix('abcd', 'abc')
----
1

query T
SELECT prefix('abcd', 'abcd')
----
1

query T
SELECT prefix('abcd', 'b')
----
0

# "Inlined string"
query T
SELECT prefix('abcdefgh', 'a')
----
1

query T
SELECT prefix('abcdefgh', 'ab')
----
1

query T
SELECT prefix('abcdefgh', 'abc')
----
1

query T
SELECT prefix('abcdefgh', 'abcd')
----
1

query T
SELECT prefix('abcdefgh', 'abcde')
----
1

query T
SELECT prefix('abcdefgh', 'b')
----
0

# Longer (non-inlined) strings
query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'a')
----
1

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'ab')
----
1

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abc')
----
1

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcd')
----
1

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcde')
----
1

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'b')
----
0

query T
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcdefghijklmnopqrstuvwx')
----
1

# "Empty string and prefix"
query T
SELECT prefix('', 'aaa')
----
0

query T
SELECT prefix('aaa', '')
----
1

# "Issue #572 alloc exception on empty table"
statement ok
CREATE TABLE t0(c0 VARCHAR)

query T
SELECT * FROM t0 WHERE PREFIX(t0.c0, '')
----

# "Prefix test with UTF8"
query T
SELECT prefix('Ã¡tomo', 'Ã¡')
----
1

query T
SELECT prefix('Ã¡tomo', 'Ã¡')
----
1

query T
SELECT prefix('Ã¡tomo', 'a')
----
0

query T
SELECT prefix('olÃ¡ mundo', 'olÃ¡')
----
1

query T
SELECT prefix('olÃ¡ mundo', 'olÃ¡')
----
1

query T
SELECT prefix('olÃ¡ mundo', 'ola')
----
0

query T
SELECT prefix('Ã±eft', 'Ã±')
----
1

query T
SELECT prefix('Ã±eft', 'Ã±')
----
1

query T
SELECT prefix('Ã±eft', 'Ã±eft')
----
1

query T
SELECT prefix('Ã±eft', 'neft')
----
0

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã±')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã±')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two n')
----
0

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦†')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦† end')
----
1

query T
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦† end')
----
1

# test empty prefix removal
statement ok
INSERT INTO t0 VALUES ('a'), ('b'), ('d')

query I
SELECT COUNT(*) FROM t0 WHERE prefix(t0.c0, '');
----
3

query II
SELECT c0, prefix(t0.c0, '') FROM t0 WHERE c0 <> 'b' ORDER BY t0.c0;
----
a	1
d	1


# now with a NULL value
statement ok
INSERT INTO t0 VALUES (NULL)

query I
SELECT COUNT(*) FROM t0 WHERE prefix(t0.c0, '');
----
3

query II
SELECT c0, prefix(t0.c0, '') FROM t0 WHERE c0 IS NULL OR c0 <> 'b' ORDER BY t0.c0;
----
NULL	NULL
a	1
d	1
