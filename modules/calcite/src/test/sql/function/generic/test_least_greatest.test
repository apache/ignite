# name: test/sql/function/generic/test_least_greatest.test
# description: Test LEAST/GREATEST
# group: [generic]

statement ok
PRAGMA enable_verification

# scalar usage
query I
SELECT LEAST(1)
----
1

query I
SELECT LEAST(1, 3)
----
1

query I
SELECT LEAST(1, 3, 0)
----
0

query I
SELECT LEAST(1, 3, 0, 2, 7, 8, 10, 11, -100, 30)
----
-100

query I
SELECT LEAST(1, 3, 0, 2, 7, 8, 10, 11, -100, 30, NULL)
----
NULL

query I
SELECT LEAST(NULL, 3, 0, 2, 7, 8, 10, 11, -100, 30, 1)
----
NULL

# double
query R
SELECT LEAST(1.0, 10.0)
----
1.000000

# strings
query T
SELECT LEAST('hello', 'world')
----
hello

query T
SELECT LEAST('hello', 'world', 'blabla', 'tree')
----
blabla

query T
SELECT LEAST('hello', 'world', 'blabla', 'tree')
----
blabla

# dates
query T
SELECT LEAST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01')
----
1991-01-01

query T
SELECT LEAST(DATE '1992-01-01', DATE '1994-02-02', DATE '1991-01-01', NULL)
----
NULL

# test mix of types
query T
SELECT LEAST(DATE '1992-01-01', 'hello', 123)
----
123

# tables
statement ok
CREATE TABLE t1(ii INTEGER, jj INTEGER)

statement ok
INSERT INTO t1 VALUES (1, NULL), (2, 1), (3, 7)

query II
SELECT LEAST(ii, jj), GREATEST(ii, jj) FROM t1 ORDER BY ii
----
NULL	NULL
1	2
3	7

query II
SELECT LEAST(ii, ii + 1, jj), GREATEST(ii, ii - 1, jj) FROM t1 ORDER BY ii
----
NULL	NULL
1	2
3	7

query II
SELECT LEAST(ii, 800, ii + 1, 1000, jj), GREATEST(ii, -1000, ii - 1, -700, jj, -800) FROM t1 ORDER BY ii
----
NULL	NULL
1	2
3	7

query II
SELECT LEAST(ii, 800, ii + 1, 1000, jj, NULL), GREATEST(ii, -1000, ii - 1, -700, jj, -800) FROM t1 ORDER BY ii
----
NULL	NULL
NULL	2
NULL	7

# selection vectors
query II
SELECT LEAST(ii, jj), GREATEST(ii, jj) FROM t1 WHERE jj IS NOT NULL ORDER BY ii
----
1	2
3	7

# row ids
query II
SELECT LEAST(rowid + 10, ii, jj), GREATEST(ii, rowid + 4, jj) FROM t1 WHERE jj IS NOT NULL ORDER BY ii
----
1	5
3	7

# generated strings
query T
SELECT LEAST(REPEAT(ii::VARCHAR, 20), jj::VARCHAR) FROM t1
----
NULL
1
33333333333333333333

