# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: SonarBuild

on: pull_request

permissions:
  contents: read

concurrency:
  group: sonar-pr-workflow-${{ github.event.pull_request.head.repo.full_name }}-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.repository == 'apache/ignite'
    name: Build artifacts for Sonar Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          persist-credentials: false

      - name: Set up JDK11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Install Libnuma
        run: sudo apt-get update && sudo apt-get install libnuma-dev

      - name: Build with Maven
        run: |
          ./mvnw install -P all-java,lgpl,examples,skip-docs -DskipTests -B -V

      - name: Prepare compiled classes artifact
        shell: bash
        run: find -iname "*target" -type d -exec tar -rf target.tar {} \+

      - name: Upload compiled classes artifact
        uses: actions/upload-artifact@v4
        id: target-artifact-upload-step
        with:
          name: target-artifact
          path: |
            target.tar
          if-no-files-found: error
          retention-days: 1

      - name: Prepare pull request artifact
        shell: bash
        run: |
          echo ${{ github.event.pull_request.number }} >> pr-event.txt
          echo ${{ github.event.pull_request.head.ref }} >> pr-event.txt
          echo ${{ github.event.pull_request.base.ref }} >> pr-event.txt
          echo ${{ github.event.pull_request.head.sha }} >> pr-event.txt
          echo ${{ steps.target-artifact-upload-step.outputs.artifact-id }} >> pr-event.txt

      - name: Upload pull request event artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-event-artifact
          path: |
            pr-event.txt
          if-no-files-found: error
          retention-days: 1
