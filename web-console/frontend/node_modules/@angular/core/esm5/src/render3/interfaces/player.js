/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvcmVuZGVyMy9pbnRlcmZhY2VzL3BsYXllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8qKlxuICogQSBzaGFyZWQgaW50ZXJmYWNlIHdoaWNoIGNvbnRhaW5zIGFuIGFuaW1hdGlvbiBwbGF5ZXJcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQbGF5ZXIge1xuICBwYXJlbnQ/OiBQbGF5ZXJ8bnVsbDtcbiAgc3RhdGU6IFBsYXlTdGF0ZTtcbiAgcGxheSgpOiB2b2lkO1xuICBwYXVzZSgpOiB2b2lkO1xuICBmaW5pc2goKTogdm9pZDtcbiAgZGVzdHJveSgpOiB2b2lkO1xuICBhZGRFdmVudExpc3RlbmVyKHN0YXRlOiBQbGF5U3RhdGV8c3RyaW5nLCBjYjogKGRhdGE/OiBhbnkpID0+IGFueSk6IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBlbnVtIEJpbmRpbmdUeXBlIHtcbiAgVW5zZXQgPSAwLFxuICBDbGFzcyA9IDEsXG4gIFN0eWxlID0gMixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCaW5kaW5nU3RvcmUgeyBzZXRWYWx1ZShwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkOyB9XG5cbi8qKlxuICogRGVmaW5lcyB0aGUgc2hhcGUgd2hpY2ggcHJvZHVjZXMgdGhlIFBsYXllci5cbiAqXG4gKiBVc2VkIHRvIHByb2R1Y2UgYSBwbGF5ZXIgdGhhdCB3aWxsIGJlIHBsYWNlZCBvbiBhbiBlbGVtZW50IHRoYXQgY29udGFpbnNcbiAqIHN0eWxpbmcgYmluZGluZ3MgdGhhdCBtYWtlIHVzZSBvZiB0aGUgcGxheWVyLiBUaGlzIGZ1bmN0aW9uIGlzIGRlc2lnbmVkXG4gKiB0byBiZSB1c2VkIHdpdGggYFBsYXllckZhY3RvcnlgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFBsYXllckZhY3RvcnlCdWlsZEZuIHtcbiAgKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCB0eXBlOiBCaW5kaW5nVHlwZSwgdmFsdWVzOiB7W2tleTogc3RyaW5nXTogYW55fSwgaXNGaXJzdFJlbmRlcjogYm9vbGVhbixcbiAgIGN1cnJlbnRQbGF5ZXI6IFBsYXllcnxudWxsKTogUGxheWVyfG51bGw7XG59XG5cbi8qKlxuICogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byBidWlsZCBhIHBsYXllciBmcm9tIGEgc3R5bGluZyB0ZW1wbGF0ZSBiaW5kaW5nXG4gKiAoYFtzdHlsZV1gIGFuZCBgW2NsYXNzXWApLlxuICpcbiAqIFRoZSBgZm5gIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIG9uY2UgYW55IHN0eWxpbmctcmVsYXRlZCBjaGFuZ2VzIGFyZVxuICogZXZhbHVhdGVkIG9uIGFuIGVsZW1lbnQgYW5kIGlzIGV4cGVjdGVkIHRvIHJldHVybiBhIHBsYXllciB0aGF0IHdpbGxcbiAqIGJlIHRoZW4gcnVuIG9uIHRoZSBlbGVtZW50LlxuICpcbiAqIGBbc3R5bGVdYCwgYFtzdHlsZS5wcm9wXWAsIGBbY2xhc3NdYCBhbmQgYFtjbGFzcy5uYW1lXWAgdGVtcGxhdGUgYmluZGluZ3NcbiAqIGFsbCBhY2NlcHQgYSBgUGxheWVyRmFjdG9yeWAgYXMgaW5wdXQgYW5kIHRoaXMgcGxheWVyIGZhY3Rvcmllcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQbGF5ZXJGYWN0b3J5IHsgJ19fYnJhbmRfXyc6ICdCcmFuZCBmb3IgUGxheWVyRmFjdG9yeSB0aGF0IG5vdGhpbmcgd2lsbCBtYXRjaCc7IH1cblxuZXhwb3J0IGludGVyZmFjZSBQbGF5ZXJCdWlsZGVyIGV4dGVuZHMgQmluZGluZ1N0b3JlIHtcbiAgYnVpbGRQbGF5ZXIoY3VycmVudFBsYXllcjogUGxheWVyfG51bGwsIGlzRmlyc3RSZW5kZXI6IGJvb2xlYW4pOiBQbGF5ZXJ8dW5kZWZpbmVkfG51bGw7XG59XG5cbi8qKlxuICogVGhlIHN0YXRlIG9mIGEgZ2l2ZW4gcGxheWVyXG4gKlxuICogRG8gbm90IGNoYW5nZSB0aGUgaW5jcmVhc2luZyBuYXR1cmUgb2YgdGhlIG51bWJlcnMgc2luY2UgdGhlIHBsYXllclxuICogY29kZSBtYXkgY29tcGFyZSBzdGF0ZSBieSBjaGVja2luZyBpZiBhIG51bWJlciBpcyBoaWdoZXIgb3IgbG93ZXIgdGhhblxuICogYSBjZXJ0YWluIG51bWVyaWMgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBlbnVtIFBsYXlTdGF0ZSB7UGVuZGluZyA9IDAsIFJ1bm5pbmcgPSAxLCBQYXVzZWQgPSAyLCBGaW5pc2hlZCA9IDEwMCwgRGVzdHJveWVkID0gMjAwfVxuXG4vKipcbiAqIFRoZSBjb250ZXh0IHRoYXQgc3RvcmVzIGFsbCB0aGUgYWN0aXZlIHBsYXllcnMgYW5kIHF1ZXVlZCBwbGF5ZXIgZmFjdG9yaWVzIHByZXNlbnQgb24gYW4gZWxlbWVudC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQbGF5ZXJDb250ZXh0IGV4dGVuZHMgQXJyYXk8bnVsbHxudW1iZXJ8UGxheWVyfFBsYXllckJ1aWxkZXI+IHtcbiAgW1BsYXllckluZGV4Lk5vbkJ1aWxkZXJQbGF5ZXJzU3RhcnRdOiBudW1iZXI7XG4gIFtQbGF5ZXJJbmRleC5DbGFzc01hcFBsYXllckJ1aWxkZXJQb3NpdGlvbl06IFBsYXllckJ1aWxkZXJ8bnVsbDtcbiAgW1BsYXllckluZGV4LkNsYXNzTWFwUGxheWVyUG9zaXRpb25dOiBQbGF5ZXJ8bnVsbDtcbiAgW1BsYXllckluZGV4LlN0eWxlTWFwUGxheWVyQnVpbGRlclBvc2l0aW9uXTogUGxheWVyQnVpbGRlcnxudWxsO1xuICBbUGxheWVySW5kZXguU3R5bGVNYXBQbGF5ZXJQb3NpdGlvbl06IFBsYXllcnxudWxsO1xufVxuXG4vKipcbiAqIERlc2lnbmVkIHRvIGJlIHVzZWQgYXMgYW4gaW5qZWN0aW9uIHNlcnZpY2UgdG8gY2FwdHVyZSBhbGwgYW5pbWF0aW9uIHBsYXllcnMuXG4gKlxuICogV2hlbiBwcmVzZW50IGFsbCBhbmltYXRpb24gcGxheWVycyB3aWxsIGJlIHBhc3NlZCBpbnRvIHRoZSBmbHVzaCBtZXRob2QgYmVsb3cuXG4gKiBUaGlzIGZlYXR1cmUgaXMgZGVzaWduZWQgdG8gc2VydmljZSBhcHBsaWNhdGlvbi13aWRlIGFuaW1hdGlvbiB0ZXN0aW5nLCBsaXZlXG4gKiBkZWJ1Z2dpbmcgYXMgd2VsbCBhcyBjdXN0b20gYW5pbWF0aW9uIGNob3Jlb2dyYXBoaW5nIHRvb2xzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFBsYXllckhhbmRsZXIge1xuICAvKipcbiAgICogRGVzaWduZWQgdG8ga2ljayBvZmYgdGhlIHBsYXllciBhdCB0aGUgZW5kIG9mIGNoYW5nZSBkZXRlY3Rpb25cbiAgICovXG4gIGZsdXNoUGxheWVycygpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBAcGFyYW0gcGxheWVyIFRoZSBwbGF5ZXIgdGhhdCBoYXMgYmVlbiBzY2hlZHVsZWQgdG8gcnVuIHdpdGhpbiB0aGUgYXBwbGljYXRpb24uXG4gICAqIEBwYXJhbSBjb250ZXh0IFRoZSBjb250ZXh0IGFzIHRvIHdoZXJlIHRoZSBwbGF5ZXIgd2FzIGJvdW5kIHRvXG4gICAqL1xuICBxdWV1ZVBsYXllcihwbGF5ZXI6IFBsYXllciwgY29udGV4dDogQ29tcG9uZW50SW5zdGFuY2V8RGlyZWN0aXZlSW5zdGFuY2V8SFRNTEVsZW1lbnQpOiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgZW51bSBQbGF5ZXJJbmRleCB7XG4gIC8vIFRoZSBwb3NpdGlvbiB3aGVyZSB0aGUgaW5kZXggdGhhdCByZXZlYWxzIHdoZXJlIHBsYXllcnMgc3RhcnQgaW4gdGhlIFBsYXllckNvbnRleHRcbiAgTm9uQnVpbGRlclBsYXllcnNTdGFydCA9IDAsXG4gIC8vIFRoZSBwb3NpdGlvbiB3aGVyZSB0aGUgcGxheWVyIGJ1aWxkZXIgbGl2ZXMgKHdoaWNoIGhhbmRsZXMge2tleTp2YWx1ZX0gbWFwIGV4cHJlc3Npb24pIGZvclxuICAvLyBjbGFzc2VzXG4gIENsYXNzTWFwUGxheWVyQnVpbGRlclBvc2l0aW9uID0gMSxcbiAgLy8gVGhlIHBvc2l0aW9uIHdoZXJlIHRoZSBsYXN0IHBsYXllciBhc3NpZ25lZCB0byB0aGUgY2xhc3MgcGxheWVyIGJ1aWxkZXIgaXMgc3RvcmVkXG4gIENsYXNzTWFwUGxheWVyUG9zaXRpb24gPSAyLFxuICAvLyBUaGUgcG9zaXRpb24gd2hlcmUgdGhlIHBsYXllciBidWlsZGVyIGxpdmVzICh3aGljaCBoYW5kbGVzIHtrZXk6dmFsdWV9IG1hcCBleHByZXNzaW9uKSBmb3JcbiAgLy8gc3R5bGVzXG4gIFN0eWxlTWFwUGxheWVyQnVpbGRlclBvc2l0aW9uID0gMyxcbiAgLy8gVGhlIHBvc2l0aW9uIHdoZXJlIHRoZSBsYXN0IHBsYXllciBhc3NpZ25lZCB0byB0aGUgc3R5bGUgcGxheWVyIGJ1aWxkZXIgaXMgc3RvcmVkXG4gIFN0eWxlTWFwUGxheWVyUG9zaXRpb24gPSA0LFxuICAvLyBUaGUgcG9zaXRpb24gd2hlcmUgYW55IHBsYXllciBidWlsZGVycyBzdGFydCBpbiB0aGUgUGxheWVyQ29udGV4dFxuICBQbGF5ZXJCdWlsZGVyc1N0YXJ0UG9zaXRpb24gPSAxLFxuICAvLyBUaGUgcG9zaXRpb24gd2hlcmUgbm9uIG1hcC1iYXNlZCBwbGF5ZXIgYnVpbGRlcnMgc3RhcnQgaW4gdGhlIFBsYXllckNvbnRleHRcbiAgU2luZ2xlUGxheWVyQnVpbGRlcnNTdGFydFBvc2l0aW9uID0gNSxcbiAgLy8gRm9yIGVhY2ggcGxheWVyIGJ1aWxkZXIgdGhlcmUgaXMgYSBwbGF5ZXIgaW4gdGhlIHBsYXllciBjb250ZXh0ICh0aGVyZWZvcmUgc2l6ZSA9IDIpXG4gIFBsYXllckFuZFBsYXllckJ1aWxkZXJzVHVwbGVTaXplID0gMixcbiAgLy8gVGhlIHBsYXllciBleGlzdHMgbmV4dCB0byB0aGUgcGxheWVyIGJ1aWxkZXIgaW4gdGhlIGxpc3RcbiAgUGxheWVyT2Zmc2V0UG9zaXRpb24gPSAxLFxufVxuXG5leHBvcnQgZGVjbGFyZSB0eXBlIENvbXBvbmVudEluc3RhbmNlID0ge307XG5leHBvcnQgZGVjbGFyZSB0eXBlIERpcmVjdGl2ZUluc3RhbmNlID0ge307XG4iXX0=