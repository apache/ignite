{"version":3,"file":"compiler.umd.js","sources":["../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../packages/compiler/src/ml_parser/tags.ts","../../../../../packages/compiler/src/ml_parser/html_tags.ts","../../../../../packages/compiler/src/selector.ts","../../../../../packages/compiler/src/core.ts","../../../../../packages/compiler/src/output/output_ast.ts","../../../../../packages/compiler/src/util.ts","../../../../../packages/compiler/src/constant_pool.ts","../../../../../packages/compiler/src/identifiers.ts","../../../../../packages/compiler/src/aot/static_symbol.ts","../../../../../packages/compiler/src/compile_metadata.ts","../../../../../packages/compiler/src/render3/r3_identifiers.ts","../../../../../packages/compiler/src/chars.ts","../../../../../packages/compiler/src/parse_util.ts","../../../../../packages/compiler/src/render3/r3_ast.ts","../../../../../packages/compiler/src/i18n/i18n_ast.ts","../../../../../packages/compiler/src/i18n/digest.ts","../../../../../packages/compiler/src/i18n/serializers/serializer.ts","../../../../../packages/compiler/src/i18n/serializers/xml_helper.ts","../../../../../packages/compiler/src/i18n/serializers/xmb.ts","../../../../../packages/compiler/src/output/map_util.ts","../../../../../packages/compiler/src/render3/view/i18n/util.ts","../../../../../packages/compiler/src/render3/view/util.ts","../../../../../packages/compiler/src/render3/r3_factory.ts","../../../../../packages/compiler/src/render3/util.ts","../../../../../packages/compiler/src/injectable_compiler_2.ts","../../../../../packages/compiler/src/assertions.ts","../../../../../packages/compiler/src/ml_parser/interpolation_config.ts","../../../../../packages/compiler/src/output/source_map.ts","../../../../../packages/compiler/src/output/abstract_emitter.ts","../../../../../packages/compiler/src/output/abstract_js_emitter.ts","../../../../../packages/compiler/src/output/output_jit.ts","../../../../../packages/compiler/src/render3/r3_jit.ts","../../../../../packages/compiler/src/render3/r3_module_compiler.ts","../../../../../packages/compiler/src/render3/r3_pipe_compiler.ts","../../../../../packages/compiler/src/expression_parser/ast.ts","../../../../../packages/compiler/src/compiler_util/expression_converter.ts","../../../../../packages/compiler/src/shadow_css.ts","../../../../../packages/compiler/src/style_compiler.ts","../../../../../packages/compiler/src/ast_path.ts","../../../../../packages/compiler/src/ml_parser/ast.ts","../../../../../packages/compiler/src/ml_parser/lexer.ts","../../../../../packages/compiler/src/ml_parser/parser.ts","../../../../../packages/compiler/src/ml_parser/html_parser.ts","../../../../../packages/compiler/src/ml_parser/html_whitespaces.ts","../../../../../packages/compiler/src/ml_parser/icu_ast_expander.ts","../../../../../packages/compiler/src/template_parser/template_ast.ts","../../../../../packages/compiler/src/provider_analyzer.ts","../../../../../packages/compiler/src/style_url_resolver.ts","../../../../../packages/compiler/src/template_parser/binding_parser.ts","../../../../../packages/compiler/src/template_parser/template_preparser.ts","../../../../../packages/compiler/src/template_parser/template_parser.ts","../../../../../packages/compiler/src/render3/view/style_parser.ts","../../../../../packages/compiler/src/render3/view/styling_builder.ts","../../../../../packages/compiler/src/expression_parser/lexer.ts","../../../../../packages/compiler/src/expression_parser/parser.ts","../../../../../packages/compiler/src/schema/dom_security_schema.ts","../../../../../packages/compiler/src/schema/element_schema_registry.ts","../../../../../packages/compiler/src/schema/dom_element_schema_registry.ts","../../../../../packages/compiler/src/render3/r3_template_transform.ts","../../../../../packages/compiler/src/render3/view/i18n/context.ts","../../../../../packages/compiler/src/i18n/serializers/placeholder.ts","../../../../../packages/compiler/src/i18n/i18n_parser.ts","../../../../../packages/compiler/src/render3/view/i18n/meta.ts","../../../../../packages/compiler/src/render3/view/i18n/serializer.ts","../../../../../packages/compiler/src/render3/view/template.ts","../../../../../packages/compiler/src/render3/view/compiler.ts","../../../../../packages/compiler/src/resource_loader.ts","../../../../../packages/compiler/src/jit_compiler_facade.ts","../../../../../packages/compiler/src/version.ts","../../../../../packages/compiler/src/config.ts","../../../../../packages/compiler/src/directive_normalizer.ts","../../../../../packages/compiler/src/directive_resolver.ts","../../../../../packages/compiler/src/i18n/parse_util.ts","../../../../../packages/compiler/src/i18n/extractor_merger.ts","../../../../../packages/compiler/src/ml_parser/xml_tags.ts","../../../../../packages/compiler/src/ml_parser/xml_parser.ts","../../../../../packages/compiler/src/i18n/serializers/xliff.ts","../../../../../packages/compiler/src/i18n/serializers/xliff2.ts","../../../../../packages/compiler/src/i18n/serializers/xtb.ts","../../../../../packages/compiler/src/i18n/translation_bundle.ts","../../../../../packages/compiler/src/i18n/i18n_html_parser.ts","../../../../../packages/compiler/src/output/value_util.ts","../../../../../packages/compiler/src/injectable_compiler.ts","../../../../../packages/compiler/src/aot/util.ts","../../../../../packages/compiler/src/lifecycle_reflector.ts","../../../../../packages/compiler/src/metadata_resolver.ts","../../../../../packages/compiler/src/view_compiler/provider_compiler.ts","../../../../../packages/compiler/src/ng_module_compiler.ts","../../../../../packages/compiler/src/ng_module_resolver.ts","../../../../../packages/compiler/src/output/ts_emitter.ts","../../../../../packages/compiler/src/pipe_resolver.ts","../../../../../packages/compiler/src/view_compiler/type_check_compiler.ts","../../../../../packages/compiler/src/view_compiler/view_compiler.ts","../../../../../packages/compiler/src/i18n/message_bundle.ts","../../../../../packages/compiler/src/aot/generated_file.ts","../../../../../packages/compiler/src/aot/lazy_routes.ts","../../../../../packages/compiler/src/aot/static_symbol_resolver.ts","../../../../../packages/compiler/src/aot/summary_serializer.ts","../../../../../packages/compiler/src/aot/compiler.ts","../../../../../packages/compiler/src/aot/formatted_error.ts","../../../../../packages/compiler/src/aot/static_reflector.ts","../../../../../packages/compiler/src/aot/summary_resolver.ts","../../../../../packages/compiler/src/aot/compiler_factory.ts","../../../../../packages/compiler/src/summary_resolver.ts","../../../../../packages/compiler/src/output/output_interpreter.ts","../../../../../packages/compiler/src/jit/compiler.ts","../../../../../packages/compiler/src/compile_reflector.ts","../../../../../packages/compiler/src/url_resolver.ts","../../../../../packages/compiler/src/i18n/extractor.ts","../../../../../packages/compiler/src/i18n/index.ts","../../../../../packages/compiler/src/render3/view/t2_binder.ts","../../../../../packages/compiler/src/compiler.ts","../../../../../packages/compiler/public_api.ts","../../../../../packages/compiler/compiler.ts","../../../../../packages/compiler/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport enum TagContentType {\n  RAW_TEXT,\n  ESCAPABLE_RAW_TEXT,\n  PARSABLE_DATA\n}\n\nexport interface TagDefinition {\n  closedByParent: boolean;\n  implicitNamespacePrefix: string|null;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n\n  isClosedByChild(name: string): boolean;\n}\n\nexport function splitNsName(elementName: string): [string | null, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n\n// `<ng-container>` tags work the same regardless the namespace\nexport function isNgContainer(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-container';\n}\n\n// `<ng-content>` tags work the same regardless the namespace\nexport function isNgContent(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-content';\n}\n\n// `<ng-template>` tags work the same regardless the namespace\nexport function isNgTemplate(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-template';\n}\n\nexport function getNsPrefix(fullName: string): string;\nexport function getNsPrefix(fullName: null): null;\nexport function getNsPrefix(fullName: string | null): string|null {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport const NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nexport const NGSP_UNICODE = '\\uE500';\n\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class HtmlTagDefinition implements TagDefinition {\n  private closedByChildren: {[key: string]: boolean} = {};\n\n  closedByParent: boolean = false;\n  implicitNamespacePrefix: string|null;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean = false;\n\n  constructor(\n      {closedByChildren, implicitNamespacePrefix, contentType = TagContentType.PARSABLE_DATA,\n       closedByParent = false, isVoid = false, ignoreFirstLf = false}: {\n        closedByChildren?: string[],\n        closedByParent?: boolean,\n        implicitNamespacePrefix?: string,\n        contentType?: TagContentType,\n        isVoid?: boolean,\n        ignoreFirstLf?: boolean\n      } = {}) {\n    if (closedByChildren && closedByChildren.length > 0) {\n      closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n    }\n    this.isVoid = isVoid;\n    this.closedByParent = closedByParent || isVoid;\n    this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n    this.contentType = contentType;\n    this.ignoreFirstLf = ignoreFirstLf;\n  }\n\n  isClosedByChild(name: string): boolean {\n    return this.isVoid || name.toLowerCase() in this.closedByChildren;\n  }\n}\n\nlet _DEFAULT_TAG_DEFINITION !: HtmlTagDefinition;\n\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nlet TAG_DEFINITIONS !: {[key: string]: HtmlTagDefinition};\n\nexport function getHtmlTagDefinition(tagName: string): HtmlTagDefinition {\n  if (!TAG_DEFINITIONS) {\n    _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n    TAG_DEFINITIONS = {\n      'base': new HtmlTagDefinition({isVoid: true}),\n      'meta': new HtmlTagDefinition({isVoid: true}),\n      'area': new HtmlTagDefinition({isVoid: true}),\n      'embed': new HtmlTagDefinition({isVoid: true}),\n      'link': new HtmlTagDefinition({isVoid: true}),\n      'img': new HtmlTagDefinition({isVoid: true}),\n      'input': new HtmlTagDefinition({isVoid: true}),\n      'param': new HtmlTagDefinition({isVoid: true}),\n      'hr': new HtmlTagDefinition({isVoid: true}),\n      'br': new HtmlTagDefinition({isVoid: true}),\n      'source': new HtmlTagDefinition({isVoid: true}),\n      'track': new HtmlTagDefinition({isVoid: true}),\n      'wbr': new HtmlTagDefinition({isVoid: true}),\n      'p': new HtmlTagDefinition({\n        closedByChildren: [\n          'address', 'article', 'aside',   'blockquote', 'div',  'dl',  'fieldset',\n          'footer',  'form',    'h1',      'h2',         'h3',   'h4',  'h5',\n          'h6',      'header',  'hgroup',  'hr',         'main', 'nav', 'ol',\n          'p',       'pre',     'section', 'table',      'ul'\n        ],\n        closedByParent: true\n      }),\n      'thead': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot']}),\n      'tbody': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot'], closedByParent: true}),\n      'tfoot': new HtmlTagDefinition({closedByChildren: ['tbody'], closedByParent: true}),\n      'tr': new HtmlTagDefinition({closedByChildren: ['tr'], closedByParent: true}),\n      'td': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n      'th': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n      'col': new HtmlTagDefinition({isVoid: true}),\n      'svg': new HtmlTagDefinition({implicitNamespacePrefix: 'svg'}),\n      'math': new HtmlTagDefinition({implicitNamespacePrefix: 'math'}),\n      'li': new HtmlTagDefinition({closedByChildren: ['li'], closedByParent: true}),\n      'dt': new HtmlTagDefinition({closedByChildren: ['dt', 'dd']}),\n      'dd': new HtmlTagDefinition({closedByChildren: ['dt', 'dd'], closedByParent: true}),\n      'rb': new HtmlTagDefinition(\n          {closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n      'rt': new HtmlTagDefinition(\n          {closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n      'rtc': new HtmlTagDefinition({closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true}),\n      'rp': new HtmlTagDefinition(\n          {closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n      'optgroup': new HtmlTagDefinition({closedByChildren: ['optgroup'], closedByParent: true}),\n      'option':\n          new HtmlTagDefinition({closedByChildren: ['option', 'optgroup'], closedByParent: true}),\n      'pre': new HtmlTagDefinition({ignoreFirstLf: true}),\n      'listing': new HtmlTagDefinition({ignoreFirstLf: true}),\n      'style': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n      'script': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n      'title': new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT}),\n      'textarea': new HtmlTagDefinition(\n          {contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true}),\n    };\n  }\n  return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +  // \"[name]\", \"[name=value]\",\n                                                                   // \"[name=\"value\"]\",\n                                                                   // \"[name='value']\"\n        '(\\\\))|' +                                                 // \")\"\n        '(\\\\s*,\\\\s*)',                                             // \",\"\n    'g');\n\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string|null = null;\n  classNames: string[] = [];\n  /**\n   * The selectors are encoded in pairs where:\n   * - even locations are attribute names\n   * - odd locations are attribute values.\n   *\n   * Example:\n   * Selector: `[key1=value1][key2]` would parse to:\n   * ```\n   * ['key1', 'value1', 'key2', '']\n   * ```\n   */\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n\n  static parse(selector: string): CssSelector[] {\n    const results: CssSelector[] = [];\n    const _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let cssSelector = new CssSelector();\n    let match: string[]|null;\n    let current = cssSelector;\n    let inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[6]);\n      }\n      if (match[7]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[8]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n\n  isElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n\n  hasElementSelector(): boolean { return !!this.element; }\n\n  setElement(element: string|null = null) { this.element = element; }\n\n  /** Gets a template string for an element that matches the selector. */\n  getMatchingElementTemplate(): string {\n    const tagName = this.element || 'div';\n    const classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let attrs = '';\n    for (let i = 0; i < this.attrs.length; i += 2) {\n      const attrName = this.attrs[i];\n      const attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n\n  getAttrs(): string[] {\n    const result: string[] = [];\n    if (this.classNames.length > 0) {\n      result.push('class', this.classNames.join(' '));\n    }\n    return result.concat(this.attrs);\n  }\n\n  addAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n\n  addClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n\n  toString(): string {\n    let res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let i = 0; i < this.attrs.length; i += 2) {\n        const name = this.attrs[i];\n        const value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher<T = any> {\n  static createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher<null> {\n    const notMatcher = new SelectorMatcher<null>();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\n\n  private _elementMap = new Map<string, SelectorContext<T>[]>();\n  private _elementPartialMap = new Map<string, SelectorMatcher<T>>();\n  private _classMap = new Map<string, SelectorContext<T>[]>();\n  private _classPartialMap = new Map<string, SelectorMatcher<T>>();\n  private _attrValueMap = new Map<string, Map<string, SelectorContext<T>[]>>();\n  private _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher<T>>>();\n  private _listContexts: SelectorListContext[] = [];\n\n  addSelectables(cssSelectors: CssSelector[], callbackCtxt?: T) {\n    let listContext: SelectorListContext = null !;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt as T, listContext);\n    }\n  }\n\n  /**\n   * Add an object that can be found later on by calling `match`.\n   * @param cssSelector A css selector\n   * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n   */\n  private _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: T, listContext: SelectorListContext) {\n    let matcher: SelectorMatcher<T> = this;\n    const element = cssSelector.element;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n    const selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const isTerminal = i === attrs.length - 2;\n        const name = attrs[i];\n        const value = attrs[i + 1];\n        if (isTerminal) {\n          const terminalMap = matcher._attrValueMap;\n          let terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext<T>[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const partialMap = matcher._attrValuePartialMap;\n          let partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher<T>>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n\n  private _addTerminal(\n      map: Map<string, SelectorContext<T>[]>, name: string, selectable: SelectorContext<T>) {\n    let terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n\n  private _addPartial(map: Map<string, SelectorMatcher<T>>, name: string): SelectorMatcher<T> {\n    let matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher<T>();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n\n  /**\n   * Find the objects that have been added via `addSelectable`\n   * whose css selector is contained in the given css selector.\n   * @param cssSelector A css selector\n   * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n   * @return boolean true if a match was found\n  */\n  match(cssSelector: CssSelector, matchedCallback: ((c: CssSelector, a: T) => void)|null): boolean {\n    let result = false;\n    const element = cssSelector.element !;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n\n    for (let i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const name = attrs[i];\n        const value = attrs[i + 1];\n\n        const terminalValuesMap = this._attrValueMap.get(name) !;\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const partialValuesMap = this._attrValuePartialMap.get(name) !;\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchTerminal(\n      map: Map<string, SelectorContext<T>[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let selectables: SelectorContext<T>[] = map.get(name) || [];\n    const starSelectables: SelectorContext<T>[] = map.get('*') !;\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let selectable: SelectorContext<T>;\n    let result = false;\n    for (let i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchPartial(\n      map: Map<string, SelectorMatcher<T>>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n\n  constructor(public selectors: CssSelector[]) {}\n}\n\n// Store context to pass back selector and context when a selector is matched\nexport class SelectorContext<T = any> {\n  notSelectors: CssSelector[];\n\n  constructor(\n      public selector: CssSelector, public cbContext: T, public listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n\n  finalize(cssSelector: CssSelector, callback: ((c: CssSelector, a: T) => void)|null): boolean {\n    let result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n\nimport {CssSelector} from './selector';\n\nexport interface Inject { token: any; }\nexport const createInject = makeMetadataFactory<Inject>('Inject', (token: any) => ({token}));\nexport const createInjectionToken = makeMetadataFactory<object>(\n    'InjectionToken', (desc: string) => ({_desc: desc, ngInjectableDef: undefined}));\n\nexport interface Attribute { attributeName?: string; }\nexport const createAttribute =\n    makeMetadataFactory<Attribute>('Attribute', (attributeName?: string) => ({attributeName}));\n\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n  static: boolean;\n}\n\nexport const createContentChildren = makeMetadataFactory<Query>(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}));\nexport const createContentChild = makeMetadataFactory<Query>(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}));\nexport const createViewChildren = makeMetadataFactory<Query>(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}));\nexport const createViewChild = makeMetadataFactory<Query>(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}));\n\nexport interface Directive {\n  selector?: string;\n  inputs?: string[];\n  outputs?: string[];\n  host?: {[key: string]: string};\n  providers?: Provider[];\n  exportAs?: string;\n  queries?: {[key: string]: any};\n  guards?: {[key: string]: any};\n}\nexport const createDirective =\n    makeMetadataFactory<Directive>('Directive', (dir: Directive = {}) => dir);\n\nexport interface Component extends Directive {\n  changeDetection?: ChangeDetectionStrategy;\n  viewProviders?: Provider[];\n  moduleId?: string;\n  templateUrl?: string;\n  template?: string;\n  styleUrls?: string[];\n  styles?: string[];\n  animations?: any[];\n  encapsulation?: ViewEncapsulation;\n  interpolation?: [string, string];\n  entryComponents?: Array<Type|any[]>;\n  preserveWhitespaces?: boolean;\n}\nexport enum ViewEncapsulation {\n  Emulated = 0,\n  Native = 1,\n  None = 2,\n  ShadowDom = 3\n}\n\nexport enum ChangeDetectionStrategy {\n  OnPush = 0,\n  Default = 1\n}\n\nexport const createComponent = makeMetadataFactory<Component>(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}));\n\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\nexport const createPipe = makeMetadataFactory<Pipe>('Pipe', (p: Pipe) => ({pure: true, ...p}));\n\nexport interface Input { bindingPropertyName?: string; }\nexport const createInput =\n    makeMetadataFactory<Input>('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\nexport interface Output { bindingPropertyName?: string; }\nexport const createOutput = makeMetadataFactory<Output>(\n    'Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\nexport interface HostBinding { hostPropertyName?: string; }\nexport const createHostBinding = makeMetadataFactory<HostBinding>(\n    'HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\nexport const createHostListener = makeMetadataFactory<HostListener>(\n    'HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n\nexport interface NgModule {\n  providers?: Provider[];\n  declarations?: Array<Type|any[]>;\n  imports?: Array<Type|ModuleWithProviders|any[]>;\n  exports?: Array<Type|any[]>;\n  entryComponents?: Array<Type|any[]>;\n  bootstrap?: Array<Type|any[]>;\n  schemas?: Array<SchemaMetadata|any[]>;\n  id?: string;\n}\nexport const createNgModule =\n    makeMetadataFactory<NgModule>('NgModule', (ngModule: NgModule) => ngModule);\n\nexport interface ModuleWithProviders {\n  ngModule: Type;\n  providers?: Provider[];\n}\nexport interface Injectable {\n  providedIn?: Type|'root'|any;\n  useClass?: Type|any;\n  useExisting?: Type|any;\n  useValue?: any;\n  useFactory?: Type|any;\n  deps?: Array<Type|any[]>;\n}\nexport const createInjectable =\n    makeMetadataFactory('Injectable', (injectable: Injectable = {}) => injectable);\nexport interface SchemaMetadata { name: string; }\n\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\nexport const createOptional = makeMetadataFactory('Optional');\nexport const createSelf = makeMetadataFactory('Self');\nexport const createSkipSelf = makeMetadataFactory('SkipSelf');\nexport const createHost = makeMetadataFactory('Host');\n\nexport interface Type extends Function { new (...args: any[]): any; }\nexport const Type = Function;\n\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\nexport type Provider = any;\n\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeModuleProvider = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\n/**\n * Injection flags for DI.\n */\nexport const enum InjectFlags {\n  Default = 0,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 1 << 0,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 1 << 1,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 1 << 2,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 1 << 3,\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n\nexport interface MetadataFactory<T> {\n  (...args: any[]): T;\n  isTypeOf(obj: any): obj is T;\n  ngMetadataName: string;\n}\n\nfunction makeMetadataFactory<T>(name: string, props?: (...args: any[]) => T): MetadataFactory<T> {\n  // This must be declared as a function, not a fat arrow, so that ES2015 devmode produces code\n  // that works with the static_reflector.ts in the ViewEngine compiler.\n  // In particular, `_registerDecoratorOrConstructor` assumes that the value returned here can be\n  // new'ed.\n  function factory(...args: any[]) {\n    const values = props ? props(...args) : {};\n    return {\n      ngMetadataName: name,\n      ...values,\n    };\n  }\n  (factory as any).isTypeOf = (obj: any) => obj && obj.ngMetadataName === name;\n  (factory as any).ngMetadataName = name;\n  return factory as any;\n}\n\nexport interface Route {\n  children?: Route[];\n  loadChildren?: string|Type|any;\n}\n\n/**\n * Flags used to generate R3-style CSS Selectors. They are pasted from\n * core/src/render3/projection.ts because they cannot be referenced directly.\n */\nexport const enum SelectorFlags {\n  /** Indicates this is the beginning of a new negative selector */\n  NOT = 0b0001,\n\n  /** Mode for matching attributes */\n  ATTRIBUTE = 0b0010,\n\n  /** Mode for matching tag names */\n  ELEMENT = 0b0100,\n\n  /** Mode for matching class names */\n  CLASS = 0b1000,\n}\n\n// These are a copy the CSS types from core/src/render3/interfaces/projection.ts\n// They are duplicated here as they cannot be directly referenced from core.\nexport type R3CssSelector = (string | SelectorFlags)[];\nexport type R3CssSelectorList = R3CssSelector[];\n\nfunction parserSelectorToSimpleSelector(selector: CssSelector): R3CssSelector {\n  const classes = selector.classNames && selector.classNames.length ?\n      [SelectorFlags.CLASS, ...selector.classNames] :\n      [];\n  const elementName = selector.element && selector.element !== '*' ? selector.element : '';\n  return [elementName, ...selector.attrs, ...classes];\n}\n\nfunction parserSelectorToNegativeSelector(selector: CssSelector): R3CssSelector {\n  const classes = selector.classNames && selector.classNames.length ?\n      [SelectorFlags.CLASS, ...selector.classNames] :\n      [];\n\n  if (selector.element) {\n    return [\n      SelectorFlags.NOT | SelectorFlags.ELEMENT, selector.element, ...selector.attrs, ...classes\n    ];\n  } else if (selector.attrs.length) {\n    return [SelectorFlags.NOT | SelectorFlags.ATTRIBUTE, ...selector.attrs, ...classes];\n  } else {\n    return selector.classNames && selector.classNames.length ?\n        [SelectorFlags.NOT | SelectorFlags.CLASS, ...selector.classNames] :\n        [];\n  }\n}\n\nfunction parserSelectorToR3Selector(selector: CssSelector): R3CssSelector {\n  const positive = parserSelectorToSimpleSelector(selector);\n\n  const negative: R3CssSelectorList = selector.notSelectors && selector.notSelectors.length ?\n      selector.notSelectors.map(notSelector => parserSelectorToNegativeSelector(notSelector)) :\n      [];\n\n  return positive.concat(...negative);\n}\n\nexport function parseSelectorToR3Selector(selector: string | null): R3CssSelectorList {\n  return selector ? CssSelector.parse(selector).map(parserSelectorToR3Selector) : [];\n}\n\n// Pasted from render3/interfaces/definition since it cannot be referenced directly\n/**\n * Flags passed into template functions to determine which blocks (i.e. creation, update)\n * should be executed.\n *\n * Typically, a template runs both the creation block and the update block on initialization and\n * subsequent runs only execute the update block. However, dynamically created views require that\n * the creation block be executed separately from the update block (for backwards compat).\n */\nexport const enum RenderFlags {\n  /* Whether to run the creation block (e.g. create elements and directives) */\n  Create = 0b01,\n\n  /* Whether to run the update block (e.g. refresh bindings) */\n  Update = 0b10\n}\n\n// Pasted from render3/interfaces/node.ts\n/**\n * A set of marker values to be used in the attributes arrays. These markers indicate that some\n * items are not regular attributes and the processing should be adapted accordingly.\n */\nexport const enum AttributeMarker {\n  /**\n   * Marker indicates that the following 3 values in the attributes array are:\n   * namespaceUri, attributeName, attributeValue\n   * in that order.\n   */\n  NamespaceURI = 0,\n\n  /**\n   * Signals class declaration.\n   *\n   * Each value following `Classes` designates a class name to include on the element.\n   * ## Example:\n   *\n   * Given:\n   * ```\n   * <div class=\"foo bar baz\">...<d/vi>\n   * ```\n   *\n   * the generated code is:\n   * ```\n   * var _c1 = [AttributeMarker.Classes, 'foo', 'bar', 'baz'];\n   * ```\n   */\n  Classes = 1,\n\n  /**\n   * Signals style declaration.\n   *\n   * Each pair of values following `Styles` designates a style name and value to include on the\n   * element.\n   * ## Example:\n   *\n   * Given:\n   * ```\n   * <div style=\"width:100px; height:200px; color:red\">...</div>\n   * ```\n   *\n   * the generated code is:\n   * ```\n   * var _c1 = [AttributeMarker.Styles, 'width', '100px', 'height'. '200px', 'color', 'red'];\n   * ```\n   */\n  Styles = 2,\n\n  /**\n   * Signals that the following attribute names were extracted from input or output bindings.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div moo=\"car\" [foo]=\"exp\" (bar)=\"doSth()\">\n   * ```\n   *\n   * the generated code is:\n   *\n   * ```\n   * var _c1 = ['moo', 'car', AttributeMarker.Bindings, 'foo', 'bar'];\n   * ```\n   */\n  Bindings = 3,\n\n  /**\n   * Signals that the following attribute names were hoisted from an inline-template declaration.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div *ngFor=\"let value of values; trackBy:trackBy\" dirA [dirB]=\"value\">\n   * ```\n   *\n   * the generated code for the `template()` instruction would include:\n   *\n   * ```\n   * ['dirA', '', AttributeMarker.Bindings, 'dirB', AttributeMarker.Template, 'ngFor', 'ngForOf',\n   * 'ngForTrackBy', 'let-value']\n   * ```\n   *\n   * while the generated code for the `element()` instruction inside the template function would\n   * include:\n   *\n   * ```\n   * ['dirA', '', AttributeMarker.Bindings, 'dirB']\n   * ```\n   */\n  Template = 4,\n\n  /**\n   * Signals that the following attribute is `ngProjectAs` and its value is a parsed `CssSelector`.\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <h1 attr=\"value\" ngProjectAs=\"[title]\">\n   * ```\n   *\n   * the generated code for the `element()` instruction would include:\n   *\n   * ```\n   * ['attr', 'value', AttributeMarker.ProjectAs, ['', 'title', '']]\n   * ```\n   */\n  ProjectAs = 5,\n\n  /**\n   * Signals that the following attribute will be translated by runtime i18n\n   *\n   * For example, given the following HTML:\n   *\n   * ```\n   * <div moo=\"car\" foo=\"value\" i18n-foo [bar]=\"binding\" i18n-bar>\n   * ```\n   *\n   * the generated code is:\n   *\n   * ```\n   * var _c1 = ['moo', 'car', AttributeMarker.I18n, 'foo', 'bar'];\n   */\n  I18n = 6,\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ParseSourceSpan} from '../parse_util';\nimport {error} from '../util';\n\n//// Types\nexport enum TypeModifier {\n  Const\n}\n\nexport abstract class Type {\n  constructor(public modifiers: TypeModifier[]|null = null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n  }\n  abstract visitType(visitor: TypeVisitor, context: any): any;\n\n  hasModifier(modifier: TypeModifier): boolean { return this.modifiers !.indexOf(modifier) !== -1; }\n}\n\nexport enum BuiltinTypeName {\n  Dynamic,\n  Bool,\n  String,\n  Int,\n  Number,\n  Function,\n  Inferred,\n  None,\n}\n\nexport class BuiltinType extends Type {\n  constructor(public name: BuiltinTypeName, modifiers: TypeModifier[]|null = null) {\n    super(modifiers);\n  }\n  visitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitBuiltinType(this, context);\n  }\n}\n\nexport class ExpressionType extends Type {\n  constructor(\n      public value: Expression, modifiers: TypeModifier[]|null = null,\n      public typeParams: Type[]|null = null) {\n    super(modifiers);\n  }\n  visitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitExpressionType(this, context);\n  }\n}\n\n\nexport class ArrayType extends Type {\n  constructor(public of : Type, modifiers: TypeModifier[]|null = null) { super(modifiers); }\n  visitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitArrayType(this, context);\n  }\n}\n\n\nexport class MapType extends Type {\n  public valueType: Type|null;\n  constructor(valueType: Type|null|undefined, modifiers: TypeModifier[]|null = null) {\n    super(modifiers);\n    this.valueType = valueType || null;\n  }\n  visitType(visitor: TypeVisitor, context: any): any { return visitor.visitMapType(this, context); }\n}\n\nexport const DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport const INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nexport const BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport const INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport const NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport const STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport const FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nexport const NONE_TYPE = new BuiltinType(BuiltinTypeName.None);\n\nexport interface TypeVisitor {\n  visitBuiltinType(type: BuiltinType, context: any): any;\n  visitExpressionType(type: ExpressionType, context: any): any;\n  visitArrayType(type: ArrayType, context: any): any;\n  visitMapType(type: MapType, context: any): any;\n}\n\n///// Expressions\n\nexport enum BinaryOperator {\n  Equals,\n  NotEquals,\n  Identical,\n  NotIdentical,\n  Minus,\n  Plus,\n  Divide,\n  Multiply,\n  Modulo,\n  And,\n  Or,\n  BitwiseAnd,\n  Lower,\n  LowerEquals,\n  Bigger,\n  BiggerEquals\n}\n\nexport function nullSafeIsEquivalent<T extends{isEquivalent(other: T): boolean}>(\n    base: T | null, other: T | null) {\n  if (base == null || other == null) {\n    return base == other;\n  }\n  return base.isEquivalent(other);\n}\n\nexport function areAllEquivalent<T extends{isEquivalent(other: T): boolean}>(\n    base: T[], other: T[]) {\n  const len = base.length;\n  if (len !== other.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (!base[i].isEquivalent(other[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport abstract class Expression {\n  public type: Type|null;\n  public sourceSpan: ParseSourceSpan|null;\n\n  constructor(type: Type|null|undefined, sourceSpan?: ParseSourceSpan|null) {\n    this.type = type || null;\n    this.sourceSpan = sourceSpan || null;\n  }\n\n  abstract visitExpression(visitor: ExpressionVisitor, context: any): any;\n\n  /**\n   * Calculates whether this expression produces the same value as the given expression.\n   * Note: We don't check Types nor ParseSourceSpans nor function arguments.\n   */\n  abstract isEquivalent(e: Expression): boolean;\n\n  /**\n   * Return true if the expression is constant.\n   */\n  abstract isConstant(): boolean;\n\n  prop(name: string, sourceSpan?: ParseSourceSpan|null): ReadPropExpr {\n    return new ReadPropExpr(this, name, null, sourceSpan);\n  }\n\n  key(index: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null): ReadKeyExpr {\n    return new ReadKeyExpr(this, index, type, sourceSpan);\n  }\n\n  callMethod(name: string|BuiltinMethod, params: Expression[], sourceSpan?: ParseSourceSpan|null):\n      InvokeMethodExpr {\n    return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n  }\n\n  callFn(params: Expression[], sourceSpan?: ParseSourceSpan|null): InvokeFunctionExpr {\n    return new InvokeFunctionExpr(this, params, null, sourceSpan);\n  }\n\n  instantiate(params: Expression[], type?: Type|null, sourceSpan?: ParseSourceSpan|null):\n      InstantiateExpr {\n    return new InstantiateExpr(this, params, type, sourceSpan);\n  }\n\n  conditional(\n      trueCase: Expression, falseCase: Expression|null = null,\n      sourceSpan?: ParseSourceSpan|null): ConditionalExpr {\n    return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n  }\n\n  equals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n  }\n  notEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n  }\n  identical(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n  }\n  notIdentical(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n  }\n  minus(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n  }\n  plus(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n  }\n  divide(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n  }\n  multiply(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n  }\n  modulo(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n  }\n  and(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n  }\n  bitwiseAnd(rhs: Expression, sourceSpan?: ParseSourceSpan|null, parens: boolean = true):\n      BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n  }\n  or(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n  }\n  lower(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n  }\n  lowerEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n  }\n  bigger(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n  }\n  biggerEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n  }\n  isBlank(sourceSpan?: ParseSourceSpan|null): Expression {\n    // Note: We use equals by purpose here to compare to null and undefined in JS.\n    // We use the typed null to allow strictNullChecks to narrow types.\n    return this.equals(TYPED_NULL_EXPR, sourceSpan);\n  }\n  cast(type: Type, sourceSpan?: ParseSourceSpan|null): Expression {\n    return new CastExpr(this, type, sourceSpan);\n  }\n\n  toStmt(): Statement { return new ExpressionStatement(this, null); }\n}\n\nexport enum BuiltinVar {\n  This,\n  Super,\n  CatchError,\n  CatchStack\n}\n\nexport class ReadVarExpr extends Expression {\n  public name: string|null;\n  public builtin: BuiltinVar|null;\n\n  constructor(name: string|BuiltinVar, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (typeof name === 'string') {\n      this.name = name;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = name;\n    }\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadVarExpr(this, context);\n  }\n\n  set(value: Expression): WriteVarExpr {\n    if (!this.name) {\n      throw new Error(`Built in variable ${this.builtin} can not be assigned to.`);\n    }\n    return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n  }\n}\n\nexport class TypeofExpr extends Expression {\n  constructor(public expr: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  visitExpression(visitor: ExpressionVisitor, context: any) {\n    return visitor.visitTypeofExpr(this, context);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n  }\n\n  isConstant(): boolean { return this.expr.isConstant(); }\n}\n\nexport class WrappedNodeExpr<T> extends Expression {\n  constructor(public node: T, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof WrappedNodeExpr && this.node === e.node;\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWrappedNodeExpr(this, context);\n  }\n}\n\nexport class WriteVarExpr extends Expression {\n  public value: Expression;\n  constructor(\n      public name: string, value: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteVarExpr(this, context);\n  }\n\n  toDeclStmt(type?: Type|null, modifiers?: StmtModifier[]|null): DeclareVarStmt {\n    return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n  }\n\n  toConstDecl(): DeclareVarStmt { return this.toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]); }\n}\n\n\nexport class WriteKeyExpr extends Expression {\n  public value: Expression;\n  constructor(\n      public receiver: Expression, public index: Expression, value: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n        this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteKeyExpr(this, context);\n  }\n}\n\n\nexport class WritePropExpr extends Expression {\n  public value: Expression;\n  constructor(\n      public receiver: Expression, public name: string, value: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n        this.name === e.name && this.value.isEquivalent(e.value);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWritePropExpr(this, context);\n  }\n}\n\nexport enum BuiltinMethod {\n  ConcatArray,\n  SubscribeObservable,\n  Bind\n}\n\nexport class InvokeMethodExpr extends Expression {\n  public name: string|null;\n  public builtin: BuiltinMethod|null;\n  constructor(\n      public receiver: Expression, method: string|BuiltinMethod, public args: Expression[],\n      type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (typeof method === 'string') {\n      this.name = method;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = <BuiltinMethod>method;\n    }\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n        this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeMethodExpr(this, context);\n  }\n}\n\n\nexport class InvokeFunctionExpr extends Expression {\n  constructor(\n      public fn: Expression, public args: Expression[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null, public pure = false) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n        areAllEquivalent(this.args, e.args) && this.pure === e.pure;\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeFunctionExpr(this, context);\n  }\n}\n\n\nexport class InstantiateExpr extends Expression {\n  constructor(\n      public classExpr: Expression, public args: Expression[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n        areAllEquivalent(this.args, e.args);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInstantiateExpr(this, context);\n  }\n}\n\n\nexport class LiteralExpr extends Expression {\n  constructor(\n      public value: number|string|boolean|null|undefined, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof LiteralExpr && this.value === e.value;\n  }\n\n  isConstant() { return true; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralExpr(this, context);\n  }\n}\n\n\nexport class ExternalExpr extends Expression {\n  constructor(\n      public value: ExternalReference, type?: Type|null, public typeParams: Type[]|null = null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof ExternalExpr && this.value.name === e.value.name &&\n        this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitExternalExpr(this, context);\n  }\n}\n\nexport class ExternalReference {\n  constructor(public moduleName: string|null, public name: string|null, public runtime?: any|null) {\n  }\n  // Note: no isEquivalent method here as we use this as an interface too.\n}\n\nexport class ConditionalExpr extends Expression {\n  public trueCase: Expression;\n\n  constructor(\n      public condition: Expression, trueCase: Expression, public falseCase: Expression|null = null,\n      type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type || trueCase.type, sourceSpan);\n    this.trueCase = trueCase;\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n        this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitConditionalExpr(this, context);\n  }\n}\n\n\nexport class NotExpr extends Expression {\n  constructor(public condition: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(BOOL_TYPE, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitNotExpr(this, context);\n  }\n}\n\nexport class AssertNotNull extends Expression {\n  constructor(public condition: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(condition.type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitAssertNotNullExpr(this, context);\n  }\n}\n\nexport class CastExpr extends Expression {\n  constructor(public value: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof CastExpr && this.value.isEquivalent(e.value);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitCastExpr(this, context);\n  }\n}\n\n\nexport class FnParam {\n  constructor(public name: string, public type: Type|null = null) {}\n\n  isEquivalent(param: FnParam): boolean { return this.name === param.name; }\n}\n\n\nexport class FunctionExpr extends Expression {\n  constructor(\n      public params: FnParam[], public statements: Statement[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null, public name?: string|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n        areAllEquivalent(this.statements, e.statements);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitFunctionExpr(this, context);\n  }\n\n  toDeclStmt(name: string, modifiers: StmtModifier[]|null = null): DeclareFunctionStmt {\n    return new DeclareFunctionStmt(\n        name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n  }\n}\n\n\nexport class BinaryOperatorExpr extends Expression {\n  public lhs: Expression;\n  constructor(\n      public operator: BinaryOperator, lhs: Expression, public rhs: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null, public parens: boolean = true) {\n    super(type || lhs.type, sourceSpan);\n    this.lhs = lhs;\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n        this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitBinaryOperatorExpr(this, context);\n  }\n}\n\n\nexport class ReadPropExpr extends Expression {\n  constructor(\n      public receiver: Expression, public name: string, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n        this.name === e.name;\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadPropExpr(this, context);\n  }\n\n  set(value: Expression): WritePropExpr {\n    return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n  }\n}\n\n\nexport class ReadKeyExpr extends Expression {\n  constructor(\n      public receiver: Expression, public index: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n        this.index.isEquivalent(e.index);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadKeyExpr(this, context);\n  }\n\n  set(value: Expression): WriteKeyExpr {\n    return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n  }\n}\n\n\nexport class LiteralArrayExpr extends Expression {\n  public entries: Expression[];\n  constructor(entries: Expression[], type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    this.entries = entries;\n  }\n\n  isConstant() { return this.entries.every(e => e.isConstant()); }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n  }\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralArrayExpr(this, context);\n  }\n}\n\nexport class LiteralMapEntry {\n  constructor(public key: string, public value: Expression, public quoted: boolean) {}\n  isEquivalent(e: LiteralMapEntry): boolean {\n    return this.key === e.key && this.value.isEquivalent(e.value);\n  }\n}\n\nexport class LiteralMapExpr extends Expression {\n  public valueType: Type|null = null;\n  constructor(\n      public entries: LiteralMapEntry[], type?: MapType|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (type) {\n      this.valueType = type.valueType;\n    }\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n  }\n\n  isConstant() { return this.entries.every(e => e.value.isConstant()); }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralMapExpr(this, context);\n  }\n}\n\nexport class CommaExpr extends Expression {\n  constructor(public parts: Expression[], sourceSpan?: ParseSourceSpan|null) {\n    super(parts[parts.length - 1].type, sourceSpan);\n  }\n\n  isEquivalent(e: Expression): boolean {\n    return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n  }\n\n  isConstant() { return false; }\n\n  visitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitCommaExpr(this, context);\n  }\n}\n\nexport interface ExpressionVisitor {\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any;\n  visitWriteVarExpr(expr: WriteVarExpr, context: any): any;\n  visitWriteKeyExpr(expr: WriteKeyExpr, context: any): any;\n  visitWritePropExpr(expr: WritePropExpr, context: any): any;\n  visitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any;\n  visitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any;\n  visitInstantiateExpr(ast: InstantiateExpr, context: any): any;\n  visitLiteralExpr(ast: LiteralExpr, context: any): any;\n  visitExternalExpr(ast: ExternalExpr, context: any): any;\n  visitConditionalExpr(ast: ConditionalExpr, context: any): any;\n  visitNotExpr(ast: NotExpr, context: any): any;\n  visitAssertNotNullExpr(ast: AssertNotNull, context: any): any;\n  visitCastExpr(ast: CastExpr, context: any): any;\n  visitFunctionExpr(ast: FunctionExpr, context: any): any;\n  visitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any;\n  visitReadPropExpr(ast: ReadPropExpr, context: any): any;\n  visitReadKeyExpr(ast: ReadKeyExpr, context: any): any;\n  visitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any;\n  visitLiteralMapExpr(ast: LiteralMapExpr, context: any): any;\n  visitCommaExpr(ast: CommaExpr, context: any): any;\n  visitWrappedNodeExpr(ast: WrappedNodeExpr<any>, context: any): any;\n  visitTypeofExpr(ast: TypeofExpr, context: any): any;\n}\n\nexport const THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nexport const SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nexport const CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nexport const CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nexport const NULL_EXPR = new LiteralExpr(null, null, null);\nexport const TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n\n//// Statements\nexport enum StmtModifier {\n  Final,\n  Private,\n  Exported,\n  Static,\n}\n\nexport abstract class Statement {\n  public modifiers: StmtModifier[];\n  public sourceSpan: ParseSourceSpan|null;\n  constructor(modifiers?: StmtModifier[]|null, sourceSpan?: ParseSourceSpan|null) {\n    this.modifiers = modifiers || [];\n    this.sourceSpan = sourceSpan || null;\n  }\n  /**\n   * Calculates whether this statement produces the same value as the given statement.\n   * Note: We don't check Types nor ParseSourceSpans nor function arguments.\n   */\n  abstract isEquivalent(stmt: Statement): boolean;\n\n  abstract visitStatement(visitor: StatementVisitor, context: any): any;\n\n  hasModifier(modifier: StmtModifier): boolean { return this.modifiers !.indexOf(modifier) !== -1; }\n}\n\n\nexport class DeclareVarStmt extends Statement {\n  public type: Type|null;\n  constructor(\n      public name: string, public value?: Expression, type?: Type|null,\n      modifiers: StmtModifier[]|null = null, sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n    this.type = type || (value && value.type) || null;\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n        (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareVarStmt(this, context);\n  }\n}\n\nexport class DeclareFunctionStmt extends Statement {\n  public type: Type|null;\n  constructor(\n      public name: string, public params: FnParam[], public statements: Statement[],\n      type?: Type|null, modifiers: StmtModifier[]|null = null, sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n    this.type = type || null;\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n        areAllEquivalent(this.statements, stmt.statements);\n  }\n\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareFunctionStmt(this, context);\n  }\n}\n\nexport class ExpressionStatement extends Statement {\n  constructor(public expr: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n  }\n\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitExpressionStmt(this, context);\n  }\n}\n\n\nexport class ReturnStatement extends Statement {\n  constructor(public value: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitReturnStmt(this, context);\n  }\n}\n\nexport class AbstractClassPart {\n  public type: Type|null;\n  constructor(type: Type|null|undefined, public modifiers: StmtModifier[]|null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n    this.type = type || null;\n  }\n  hasModifier(modifier: StmtModifier): boolean { return this.modifiers !.indexOf(modifier) !== -1; }\n}\n\nexport class ClassField extends AbstractClassPart {\n  constructor(\n      public name: string, type?: Type|null, modifiers: StmtModifier[]|null = null,\n      public initializer?: Expression) {\n    super(type, modifiers);\n  }\n  isEquivalent(f: ClassField) { return this.name === f.name; }\n}\n\n\nexport class ClassMethod extends AbstractClassPart {\n  constructor(\n      public name: string|null, public params: FnParam[], public body: Statement[],\n      type?: Type|null, modifiers: StmtModifier[]|null = null) {\n    super(type, modifiers);\n  }\n  isEquivalent(m: ClassMethod) {\n    return this.name === m.name && areAllEquivalent(this.body, m.body);\n  }\n}\n\n\nexport class ClassGetter extends AbstractClassPart {\n  constructor(\n      public name: string, public body: Statement[], type?: Type|null,\n      modifiers: StmtModifier[]|null = null) {\n    super(type, modifiers);\n  }\n  isEquivalent(m: ClassGetter) {\n    return this.name === m.name && areAllEquivalent(this.body, m.body);\n  }\n}\n\n\nexport class ClassStmt extends Statement {\n  constructor(\n      public name: string, public parent: Expression|null, public fields: ClassField[],\n      public getters: ClassGetter[], public constructorMethod: ClassMethod,\n      public methods: ClassMethod[], modifiers: StmtModifier[]|null = null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof ClassStmt && this.name === stmt.name &&\n        nullSafeIsEquivalent(this.parent, stmt.parent) &&\n        areAllEquivalent(this.fields, stmt.fields) &&\n        areAllEquivalent(this.getters, stmt.getters) &&\n        this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n        areAllEquivalent(this.methods, stmt.methods);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareClassStmt(this, context);\n  }\n}\n\n\nexport class IfStmt extends Statement {\n  constructor(\n      public condition: Expression, public trueCase: Statement[],\n      public falseCase: Statement[] = [], sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n        areAllEquivalent(this.trueCase, stmt.trueCase) &&\n        areAllEquivalent(this.falseCase, stmt.falseCase);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitIfStmt(this, context);\n  }\n}\n\nexport class CommentStmt extends Statement {\n  constructor(public comment: string, public multiline = false, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean { return stmt instanceof CommentStmt; }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitCommentStmt(this, context);\n  }\n}\n\nexport class JSDocCommentStmt extends Statement {\n  constructor(public tags: JSDocTag[] = [], sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitJSDocCommentStmt(this, context);\n  }\n  toString(): string { return serializeTags(this.tags); }\n}\n\nexport class TryCatchStmt extends Statement {\n  constructor(\n      public bodyStmts: Statement[], public catchStmts: Statement[],\n      sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: Statement): boolean {\n    return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n        areAllEquivalent(this.catchStmts, stmt.catchStmts);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitTryCatchStmt(this, context);\n  }\n}\n\n\nexport class ThrowStmt extends Statement {\n  constructor(public error: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n  isEquivalent(stmt: ThrowStmt): boolean {\n    return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n  }\n  visitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitThrowStmt(this, context);\n  }\n}\n\nexport interface StatementVisitor {\n  visitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any;\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any;\n  visitExpressionStmt(stmt: ExpressionStatement, context: any): any;\n  visitReturnStmt(stmt: ReturnStatement, context: any): any;\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any;\n  visitIfStmt(stmt: IfStmt, context: any): any;\n  visitTryCatchStmt(stmt: TryCatchStmt, context: any): any;\n  visitThrowStmt(stmt: ThrowStmt, context: any): any;\n  visitCommentStmt(stmt: CommentStmt, context: any): any;\n  visitJSDocCommentStmt(stmt: JSDocCommentStmt, context: any): any;\n}\n\nexport class AstTransformer implements StatementVisitor, ExpressionVisitor {\n  transformExpr(expr: Expression, context: any): Expression { return expr; }\n\n  transformStmt(stmt: Statement, context: any): Statement { return stmt; }\n\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any { return this.transformExpr(ast, context); }\n\n  visitWrappedNodeExpr(ast: WrappedNodeExpr<any>, context: any): any {\n    return this.transformExpr(ast, context);\n  }\n\n  visitTypeofExpr(expr: TypeofExpr, context: any): any {\n    return this.transformExpr(\n        new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n\n  visitWriteVarExpr(expr: WriteVarExpr, context: any): any {\n    return this.transformExpr(\n        new WriteVarExpr(\n            expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n\n  visitWriteKeyExpr(expr: WriteKeyExpr, context: any): any {\n    return this.transformExpr(\n        new WriteKeyExpr(\n            expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context),\n            expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n\n  visitWritePropExpr(expr: WritePropExpr, context: any): any {\n    return this.transformExpr(\n        new WritePropExpr(\n            expr.receiver.visitExpression(this, context), expr.name,\n            expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n\n  visitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    const method = ast.builtin || ast.name;\n    return this.transformExpr(\n        new InvokeMethodExpr(\n            ast.receiver.visitExpression(this, context), method !,\n            this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    return this.transformExpr(\n        new InvokeFunctionExpr(\n            ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context),\n            ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    return this.transformExpr(\n        new InstantiateExpr(\n            ast.classExpr.visitExpression(this, context),\n            this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitLiteralExpr(ast: LiteralExpr, context: any): any { return this.transformExpr(ast, context); }\n\n  visitExternalExpr(ast: ExternalExpr, context: any): any {\n    return this.transformExpr(ast, context);\n  }\n\n  visitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    return this.transformExpr(\n        new ConditionalExpr(\n            ast.condition.visitExpression(this, context),\n            ast.trueCase.visitExpression(this, context),\n            ast.falseCase !.visitExpression(this, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitNotExpr(ast: NotExpr, context: any): any {\n    return this.transformExpr(\n        new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n  }\n\n  visitAssertNotNullExpr(ast: AssertNotNull, context: any): any {\n    return this.transformExpr(\n        new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n  }\n\n  visitCastExpr(ast: CastExpr, context: any): any {\n    return this.transformExpr(\n        new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n  }\n\n  visitFunctionExpr(ast: FunctionExpr, context: any): any {\n    return this.transformExpr(\n        new FunctionExpr(\n            ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    return this.transformExpr(\n        new BinaryOperatorExpr(\n            ast.operator, ast.lhs.visitExpression(this, context),\n            ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    return this.transformExpr(\n        new ReadPropExpr(\n            ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    return this.transformExpr(\n        new ReadKeyExpr(\n            ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context),\n            ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    return this.transformExpr(\n        new LiteralArrayExpr(\n            this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan),\n        context);\n  }\n\n  visitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    const entries = ast.entries.map(\n        (entry): LiteralMapEntry => new LiteralMapEntry(\n            entry.key, entry.value.visitExpression(this, context), entry.quoted));\n    const mapType = new MapType(ast.valueType, null);\n    return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n  }\n  visitCommaExpr(ast: CommaExpr, context: any): any {\n    return this.transformExpr(\n        new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n  }\n  visitAllExpressions(exprs: Expression[], context: any): Expression[] {\n    return exprs.map(expr => expr.visitExpression(this, context));\n  }\n\n  visitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    const value = stmt.value && stmt.value.visitExpression(this, context);\n    return this.transformStmt(\n        new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n  }\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    return this.transformStmt(\n        new DeclareFunctionStmt(\n            stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type,\n            stmt.modifiers, stmt.sourceSpan),\n        context);\n  }\n\n  visitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    return this.transformStmt(\n        new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan),\n        context);\n  }\n\n  visitReturnStmt(stmt: ReturnStatement, context: any): any {\n    return this.transformStmt(\n        new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n  }\n\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    const parent = stmt.parent !.visitExpression(this, context);\n    const getters = stmt.getters.map(\n        getter => new ClassGetter(\n            getter.name, this.visitAllStatements(getter.body, context), getter.type,\n            getter.modifiers));\n    const ctorMethod = stmt.constructorMethod &&\n        new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params,\n                        this.visitAllStatements(stmt.constructorMethod.body, context),\n                        stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n    const methods = stmt.methods.map(\n        method => new ClassMethod(\n            method.name, method.params, this.visitAllStatements(method.body, context), method.type,\n            method.modifiers));\n    return this.transformStmt(\n        new ClassStmt(\n            stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers,\n            stmt.sourceSpan),\n        context);\n  }\n\n  visitIfStmt(stmt: IfStmt, context: any): any {\n    return this.transformStmt(\n        new IfStmt(\n            stmt.condition.visitExpression(this, context),\n            this.visitAllStatements(stmt.trueCase, context),\n            this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan),\n        context);\n  }\n\n  visitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    return this.transformStmt(\n        new TryCatchStmt(\n            this.visitAllStatements(stmt.bodyStmts, context),\n            this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan),\n        context);\n  }\n\n  visitThrowStmt(stmt: ThrowStmt, context: any): any {\n    return this.transformStmt(\n        new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n  }\n\n  visitCommentStmt(stmt: CommentStmt, context: any): any {\n    return this.transformStmt(stmt, context);\n  }\n\n  visitJSDocCommentStmt(stmt: JSDocCommentStmt, context: any): any {\n    return this.transformStmt(stmt, context);\n  }\n\n  visitAllStatements(stmts: Statement[], context: any): Statement[] {\n    return stmts.map(stmt => stmt.visitStatement(this, context));\n  }\n}\n\n\nexport class RecursiveAstVisitor implements StatementVisitor, ExpressionVisitor {\n  visitType(ast: Type, context: any): any { return ast; }\n  visitExpression(ast: Expression, context: any): any {\n    if (ast.type) {\n      ast.type.visitType(this, context);\n    }\n    return ast;\n  }\n  visitBuiltinType(type: BuiltinType, context: any): any { return this.visitType(type, context); }\n  visitExpressionType(type: ExpressionType, context: any): any {\n    type.value.visitExpression(this, context);\n    if (type.typeParams !== null) {\n      type.typeParams.forEach(param => this.visitType(param, context));\n    }\n    return this.visitType(type, context);\n  }\n  visitArrayType(type: ArrayType, context: any): any { return this.visitType(type, context); }\n  visitMapType(type: MapType, context: any): any { return this.visitType(type, context); }\n  visitWrappedNodeExpr(ast: WrappedNodeExpr<any>, context: any): any { return ast; }\n  visitTypeofExpr(ast: TypeofExpr, context: any): any { return this.visitExpression(ast, context); }\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any {\n    return this.visitExpression(ast, context);\n  }\n  visitWriteVarExpr(ast: WriteVarExpr, context: any): any {\n    ast.value.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitWriteKeyExpr(ast: WriteKeyExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    ast.index.visitExpression(this, context);\n    ast.value.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitWritePropExpr(ast: WritePropExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    ast.value.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return this.visitExpression(ast, context);\n  }\n  visitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    ast.fn.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return this.visitExpression(ast, context);\n  }\n  visitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    ast.classExpr.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return this.visitExpression(ast, context);\n  }\n  visitLiteralExpr(ast: LiteralExpr, context: any): any {\n    return this.visitExpression(ast, context);\n  }\n  visitExternalExpr(ast: ExternalExpr, context: any): any {\n    if (ast.typeParams) {\n      ast.typeParams.forEach(type => type.visitType(this, context));\n    }\n    return this.visitExpression(ast, context);\n  }\n  visitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    ast.trueCase.visitExpression(this, context);\n    ast.falseCase !.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitNotExpr(ast: NotExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitAssertNotNullExpr(ast: AssertNotNull, context: any): any {\n    ast.condition.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitCastExpr(ast: CastExpr, context: any): any {\n    ast.value.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitFunctionExpr(ast: FunctionExpr, context: any): any {\n    this.visitAllStatements(ast.statements, context);\n    return this.visitExpression(ast, context);\n  }\n  visitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    ast.lhs.visitExpression(this, context);\n    ast.rhs.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    ast.index.visitExpression(this, context);\n    return this.visitExpression(ast, context);\n  }\n  visitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    this.visitAllExpressions(ast.entries, context);\n    return this.visitExpression(ast, context);\n  }\n  visitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    ast.entries.forEach((entry) => entry.value.visitExpression(this, context));\n    return this.visitExpression(ast, context);\n  }\n  visitCommaExpr(ast: CommaExpr, context: any): any {\n    this.visitAllExpressions(ast.parts, context);\n    return this.visitExpression(ast, context);\n  }\n  visitAllExpressions(exprs: Expression[], context: any): void {\n    exprs.forEach(expr => expr.visitExpression(this, context));\n  }\n\n  visitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    if (stmt.value) {\n      stmt.value.visitExpression(this, context);\n    }\n    if (stmt.type) {\n      stmt.type.visitType(this, context);\n    }\n    return stmt;\n  }\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    this.visitAllStatements(stmt.statements, context);\n    if (stmt.type) {\n      stmt.type.visitType(this, context);\n    }\n    return stmt;\n  }\n  visitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    stmt.expr.visitExpression(this, context);\n    return stmt;\n  }\n  visitReturnStmt(stmt: ReturnStatement, context: any): any {\n    stmt.value.visitExpression(this, context);\n    return stmt;\n  }\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    stmt.parent !.visitExpression(this, context);\n    stmt.getters.forEach(getter => this.visitAllStatements(getter.body, context));\n    if (stmt.constructorMethod) {\n      this.visitAllStatements(stmt.constructorMethod.body, context);\n    }\n    stmt.methods.forEach(method => this.visitAllStatements(method.body, context));\n    return stmt;\n  }\n  visitIfStmt(stmt: IfStmt, context: any): any {\n    stmt.condition.visitExpression(this, context);\n    this.visitAllStatements(stmt.trueCase, context);\n    this.visitAllStatements(stmt.falseCase, context);\n    return stmt;\n  }\n  visitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    this.visitAllStatements(stmt.bodyStmts, context);\n    this.visitAllStatements(stmt.catchStmts, context);\n    return stmt;\n  }\n  visitThrowStmt(stmt: ThrowStmt, context: any): any {\n    stmt.error.visitExpression(this, context);\n    return stmt;\n  }\n  visitCommentStmt(stmt: CommentStmt, context: any): any { return stmt; }\n  visitJSDocCommentStmt(stmt: JSDocCommentStmt, context: any): any { return stmt; }\n  visitAllStatements(stmts: Statement[], context: any): void {\n    stmts.forEach(stmt => stmt.visitStatement(this, context));\n  }\n}\n\nexport function findReadVarNames(stmts: Statement[]): Set<string> {\n  const visitor = new _ReadVarVisitor();\n  visitor.visitAllStatements(stmts, null);\n  return visitor.varNames;\n}\n\nclass _ReadVarVisitor extends RecursiveAstVisitor {\n  varNames = new Set<string>();\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    // Don't descend into nested classes\n    return stmt;\n  }\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any {\n    if (ast.name) {\n      this.varNames.add(ast.name);\n    }\n    return null;\n  }\n}\n\nexport function collectExternalReferences(stmts: Statement[]): ExternalReference[] {\n  const visitor = new _FindExternalReferencesVisitor();\n  visitor.visitAllStatements(stmts, null);\n  return visitor.externalReferences;\n}\n\nclass _FindExternalReferencesVisitor extends RecursiveAstVisitor {\n  externalReferences: ExternalReference[] = [];\n  visitExternalExpr(e: ExternalExpr, context: any) {\n    this.externalReferences.push(e.value);\n    return super.visitExternalExpr(e, context);\n  }\n}\n\nexport function applySourceSpanToStatementIfNeeded(\n    stmt: Statement, sourceSpan: ParseSourceSpan | null): Statement {\n  if (!sourceSpan) {\n    return stmt;\n  }\n  const transformer = new _ApplySourceSpanTransformer(sourceSpan);\n  return stmt.visitStatement(transformer, null);\n}\n\nexport function applySourceSpanToExpressionIfNeeded(\n    expr: Expression, sourceSpan: ParseSourceSpan | null): Expression {\n  if (!sourceSpan) {\n    return expr;\n  }\n  const transformer = new _ApplySourceSpanTransformer(sourceSpan);\n  return expr.visitExpression(transformer, null);\n}\n\nclass _ApplySourceSpanTransformer extends AstTransformer {\n  constructor(private sourceSpan: ParseSourceSpan) { super(); }\n  private _clone(obj: any): any {\n    const clone = Object.create(obj.constructor.prototype);\n    for (let prop of Object.keys(obj)) {\n      clone[prop] = obj[prop];\n    }\n    return clone;\n  }\n\n  transformExpr(expr: Expression, context: any): Expression {\n    if (!expr.sourceSpan) {\n      expr = this._clone(expr);\n      expr.sourceSpan = this.sourceSpan;\n    }\n    return expr;\n  }\n\n  transformStmt(stmt: Statement, context: any): Statement {\n    if (!stmt.sourceSpan) {\n      stmt = this._clone(stmt);\n      stmt.sourceSpan = this.sourceSpan;\n    }\n    return stmt;\n  }\n}\n\nexport function variable(\n    name: string, type?: Type | null, sourceSpan?: ParseSourceSpan | null): ReadVarExpr {\n  return new ReadVarExpr(name, type, sourceSpan);\n}\n\nexport function importExpr(\n    id: ExternalReference, typeParams: Type[] | null = null,\n    sourceSpan?: ParseSourceSpan | null): ExternalExpr {\n  return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n\nexport function importType(\n    id: ExternalReference, typeParams: Type[] | null = null,\n    typeModifiers: TypeModifier[] | null = null): ExpressionType|null {\n  return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n\nexport function expressionType(\n    expr: Expression, typeModifiers: TypeModifier[] | null = null,\n    typeParams: Type[] | null = null): ExpressionType {\n  return new ExpressionType(expr, typeModifiers, typeParams);\n}\n\nexport function typeofExpr(expr: Expression) {\n  return new TypeofExpr(expr);\n}\n\nexport function literalArr(\n    values: Expression[], type?: Type | null,\n    sourceSpan?: ParseSourceSpan | null): LiteralArrayExpr {\n  return new LiteralArrayExpr(values, type, sourceSpan);\n}\n\nexport function literalMap(\n    values: {key: string, quoted: boolean, value: Expression}[],\n    type: MapType | null = null): LiteralMapExpr {\n  return new LiteralMapExpr(\n      values.map(e => new LiteralMapEntry(e.key, e.value, e.quoted)), type, null);\n}\n\nexport function not(expr: Expression, sourceSpan?: ParseSourceSpan | null): NotExpr {\n  return new NotExpr(expr, sourceSpan);\n}\n\nexport function assertNotNull(\n    expr: Expression, sourceSpan?: ParseSourceSpan | null): AssertNotNull {\n  return new AssertNotNull(expr, sourceSpan);\n}\n\nexport function fn(\n    params: FnParam[], body: Statement[], type?: Type | null, sourceSpan?: ParseSourceSpan | null,\n    name?: string | null): FunctionExpr {\n  return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n\nexport function ifStmt(condition: Expression, thenClause: Statement[], elseClause?: Statement[]) {\n  return new IfStmt(condition, thenClause, elseClause);\n}\n\nexport function literal(\n    value: any, type?: Type | null, sourceSpan?: ParseSourceSpan | null): LiteralExpr {\n  return new LiteralExpr(value, type, sourceSpan);\n}\n\nexport function isNull(exp: Expression): boolean {\n  return exp instanceof LiteralExpr && exp.value === null;\n}\n\n// The list of JSDoc tags that we currently support. Extend it if needed.\nexport const enum JSDocTagName {\n  Desc = 'desc',\n  Id = 'id',\n  Meaning = 'meaning',\n}\n\n/*\n * TypeScript has an API for JSDoc already, but it's not exposed.\n * https://github.com/Microsoft/TypeScript/issues/7393\n * For now we create types that are similar to theirs so that migrating\n * to their API will be easier. See e.g. `ts.JSDocTag` and `ts.JSDocComment`.\n */\nexport type JSDocTag = {\n  // `tagName` is e.g. \"param\" in an `@param` declaration\n  tagName: JSDocTagName | string,\n  // Any remaining text on the tag, e.g. the description\n  text?: string,\n} | {\n  // no `tagName` for plain text documentation that occurs before any `@param` lines\n  tagName?: undefined,\n  text: string,\n};\n\n/*\n * Serializes a `Tag` into a string.\n * Returns a string like \" @foo {bar} baz\" (note the leading whitespace before `@foo`).\n */\nfunction tagToString(tag: JSDocTag): string {\n  let out = '';\n  if (tag.tagName) {\n    out += ` @${tag.tagName}`;\n  }\n  if (tag.text) {\n    if (tag.text.match(/\\/\\*|\\*\\//)) {\n      throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n    }\n    out += ' ' + tag.text.replace(/@/g, '\\\\@');\n  }\n  return out;\n}\n\nfunction serializeTags(tags: JSDocTag[]): string {\n  if (tags.length === 0) return '';\n\n  let out = '*\\n';\n  for (const tag of tags) {\n    out += ' *';\n    // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n    out += tagToString(tag).replace(/\\n/g, '\\n * ');\n    out += '\\n';\n  }\n  out += ' ';\n  return out;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstantPool} from './constant_pool';\n\nimport * as o from './output/output_ast';\nimport {ParseError} from './parse_util';\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n\nexport function splitAtColon(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, ':', defaultValues);\n}\n\nexport function splitAtPeriod(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, '.', defaultValues);\n}\n\nfunction _splitAt(input: string, character: string, defaultValues: string[]): string[] {\n  const characterIndex = input.indexOf(character);\n  if (characterIndex == -1) return defaultValues;\n  return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n\nexport function visitValue(value: any, visitor: ValueVisitor, context: any): any {\n  if (Array.isArray(value)) {\n    return visitor.visitArray(<any[]>value, context);\n  }\n\n  if (isStrictStringMap(value)) {\n    return visitor.visitStringMap(<{[key: string]: any}>value, context);\n  }\n\n  if (value == null || typeof value == 'string' || typeof value == 'number' ||\n      typeof value == 'boolean') {\n    return visitor.visitPrimitive(value, context);\n  }\n\n  return visitor.visitOther(value, context);\n}\n\nexport function isDefined(val: any): boolean {\n  return val !== null && val !== undefined;\n}\n\nexport function noUndefined<T>(val: T | undefined): T {\n  return val === undefined ? null ! : val;\n}\n\nexport interface ValueVisitor {\n  visitArray(arr: any[], context: any): any;\n  visitStringMap(map: {[key: string]: any}, context: any): any;\n  visitPrimitive(value: any, context: any): any;\n  visitOther(value: any, context: any): any;\n}\n\nexport class ValueTransformer implements ValueVisitor {\n  visitArray(arr: any[], context: any): any {\n    return arr.map(value => visitValue(value, this, context));\n  }\n  visitStringMap(map: {[key: string]: any}, context: any): any {\n    const result: {[key: string]: any} = {};\n    Object.keys(map).forEach(key => { result[key] = visitValue(map[key], this, context); });\n    return result;\n  }\n  visitPrimitive(value: any, context: any): any { return value; }\n  visitOther(value: any, context: any): any { return value; }\n}\n\nexport type SyncAsync<T> = T | Promise<T>;\n\nexport const SyncAsync = {\n  assertSync: <T>(value: SyncAsync<T>): T => {\n    if (isPromise(value)) {\n      throw new Error(`Illegal state: value cannot be a promise`);\n    }\n    return value;\n  },\n  then: <T, R>(value: SyncAsync<T>, cb: (value: T) => R | Promise<R>| SyncAsync<R>):\n            SyncAsync<R> => { return isPromise(value) ? value.then(cb) : cb(value);},\n  all: <T>(syncAsyncValues: SyncAsync<T>[]): SyncAsync<T[]> => {\n    return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues as T[];\n  }\n};\n\nexport function error(msg: string): never {\n  throw new Error(`Internal Error: ${msg}`);\n}\n\nexport function syntaxError(msg: string, parseErrors?: ParseError[]): Error {\n  const error = Error(msg);\n  (error as any)[ERROR_SYNTAX_ERROR] = true;\n  if (parseErrors) (error as any)[ERROR_PARSE_ERRORS] = parseErrors;\n  return error;\n}\n\nconst ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nconst ERROR_PARSE_ERRORS = 'ngParseErrors';\n\nexport function isSyntaxError(error: Error): boolean {\n  return (error as any)[ERROR_SYNTAX_ERROR];\n}\n\nexport function getParseErrors(error: Error): ParseError[] {\n  return (error as any)[ERROR_PARSE_ERRORS] || [];\n}\n\n// Escape characters that have a special meaning in Regular Expressions\nexport function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nconst STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj: any): boolean {\n  return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n\nexport function utf8Encode(str: string): string {\n  let encoded = '';\n  for (let index = 0; index < str.length; index++) {\n    let codePoint = str.charCodeAt(index);\n\n    // decode surrogate\n    // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n      const low = str.charCodeAt(index + 1);\n      if (low >= 0xdc00 && low <= 0xdfff) {\n        index++;\n        codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n      }\n    }\n\n    if (codePoint <= 0x7f) {\n      encoded += String.fromCharCode(codePoint);\n    } else if (codePoint <= 0x7ff) {\n      encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0xffff) {\n      encoded += String.fromCharCode(\n          (codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0x1fffff) {\n      encoded += String.fromCharCode(\n          ((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80,\n          ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    }\n  }\n\n  return encoded;\n}\n\nexport interface OutputContext {\n  genFilePath: string;\n  statements: o.Statement[];\n  constantPool: ConstantPool;\n  importExpr(reference: any, typeParams?: o.Type[]|null, useSummaries?: boolean): o.Expression;\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  if (!token.toString) {\n    return 'object';\n  }\n\n  // WARNING: do not try to `JSON.stringify(token)` here\n  // see https://github.com/angular/angular/issues/23440\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n    return type();\n  } else {\n    return type;\n  }\n}\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    const splits = full.split('.');\n    this.major = splits[0];\n    this.minor = splits[1];\n    this.patch = splits.slice(2).join('.');\n  }\n}\n\nexport interface Console {\n  log(message: string): void;\n  warn(message: string): void;\n}\n\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\nexport {_global as global};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output/output_ast';\nimport {OutputContext, error} from './util';\n\nconst CONSTANT_PREFIX = '_c';\n\nexport const enum DefinitionKind {Injector, Directive, Component, Pipe}\n\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nconst KEY_CONTEXT = {};\n\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nclass FixupExpression extends o.Expression {\n  private original: o.Expression;\n\n  // TODO(issue/24571): remove '!'.\n  shared !: boolean;\n\n  constructor(public resolved: o.Expression) {\n    super(resolved.type);\n    this.original = resolved;\n  }\n\n  visitExpression(visitor: o.ExpressionVisitor, context: any): any {\n    if (context === KEY_CONTEXT) {\n      // When producing a key we want to traverse the constant not the\n      // variable used to refer to it.\n      return this.original.visitExpression(visitor, context);\n    } else {\n      return this.resolved.visitExpression(visitor, context);\n    }\n  }\n\n  isEquivalent(e: o.Expression): boolean {\n    return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n  }\n\n  isConstant() { return true; }\n\n  fixup(expression: o.Expression) {\n    this.resolved = expression;\n    this.shared = true;\n  }\n}\n\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nexport class ConstantPool {\n  statements: o.Statement[] = [];\n  private literals = new Map<string, FixupExpression>();\n  private literalFactories = new Map<string, o.Expression>();\n  private injectorDefinitions = new Map<any, FixupExpression>();\n  private directiveDefinitions = new Map<any, FixupExpression>();\n  private componentDefinitions = new Map<any, FixupExpression>();\n  private pipeDefinitions = new Map<any, FixupExpression>();\n\n  private nextNameIndex = 0;\n\n  getConstLiteral(literal: o.Expression, forceShared?: boolean): o.Expression {\n    if (literal instanceof o.LiteralExpr || literal instanceof FixupExpression) {\n      // Do no put simple literals into the constant pool or try to produce a constant for a\n      // reference to a constant.\n      return literal;\n    }\n    const key = this.keyOf(literal);\n    let fixup = this.literals.get(key);\n    let newValue = false;\n    if (!fixup) {\n      fixup = new FixupExpression(literal);\n      this.literals.set(key, fixup);\n      newValue = true;\n    }\n\n    if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n      // Replace the expression with a variable\n      const name = this.freshName();\n      this.statements.push(\n          o.variable(name).set(literal).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n      fixup.fixup(o.variable(name));\n    }\n\n    return fixup;\n  }\n\n  getDefinition(type: any, kind: DefinitionKind, ctx: OutputContext, forceShared: boolean = false):\n      o.Expression {\n    const definitions = this.definitionsOf(kind);\n    let fixup = definitions.get(type);\n    let newValue = false;\n    if (!fixup) {\n      const property = this.propertyNameOf(kind);\n      fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n      definitions.set(type, fixup);\n      newValue = true;\n    }\n\n    if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n      const name = this.freshName();\n      this.statements.push(\n          o.variable(name).set(fixup.resolved).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n      fixup.fixup(o.variable(name));\n    }\n    return fixup;\n  }\n\n  getLiteralFactory(literal: o.LiteralArrayExpr|o.LiteralMapExpr):\n      {literalFactory: o.Expression, literalFactoryArguments: o.Expression[]} {\n    // Create a pure function that builds an array of a mix of constant  and variable expressions\n    if (literal instanceof o.LiteralArrayExpr) {\n      const argumentsForKey = literal.entries.map(e => e.isConstant() ? e : o.literal(null));\n      const key = this.keyOf(o.literalArr(argumentsForKey));\n      return this._getLiteralFactory(key, literal.entries, entries => o.literalArr(entries));\n    } else {\n      const expressionForKey = o.literalMap(\n          literal.entries.map(e => ({\n                                key: e.key,\n                                value: e.value.isConstant() ? e.value : o.literal(null),\n                                quoted: e.quoted\n                              })));\n      const key = this.keyOf(expressionForKey);\n      return this._getLiteralFactory(\n          key, literal.entries.map(e => e.value),\n          entries => o.literalMap(entries.map((value, index) => ({\n                                                key: literal.entries[index].key,\n                                                value,\n                                                quoted: literal.entries[index].quoted\n                                              }))));\n    }\n  }\n\n  private _getLiteralFactory(\n      key: string, values: o.Expression[], resultMap: (parameters: o.Expression[]) => o.Expression):\n      {literalFactory: o.Expression, literalFactoryArguments: o.Expression[]} {\n    let literalFactory = this.literalFactories.get(key);\n    const literalFactoryArguments = values.filter((e => !e.isConstant()));\n    if (!literalFactory) {\n      const resultExpressions = values.map(\n          (e, index) => e.isConstant() ? this.getConstLiteral(e, true) : o.variable(`a${index}`));\n      const parameters =\n          resultExpressions.filter(isVariable).map(e => new o.FnParam(e.name !, o.DYNAMIC_TYPE));\n      const pureFunctionDeclaration =\n          o.fn(parameters, [new o.ReturnStatement(resultMap(resultExpressions))], o.INFERRED_TYPE);\n      const name = this.freshName();\n      this.statements.push(\n          o.variable(name).set(pureFunctionDeclaration).toDeclStmt(o.INFERRED_TYPE, [\n            o.StmtModifier.Final\n          ]));\n      literalFactory = o.variable(name);\n      this.literalFactories.set(key, literalFactory);\n    }\n    return {literalFactory, literalFactoryArguments};\n  }\n\n  /**\n   * Produce a unique name.\n   *\n   * The name might be unique among different prefixes if any of the prefixes end in\n   * a digit so the prefix should be a constant string (not based on user input) and\n   * must not end in a digit.\n   */\n  uniqueName(prefix: string): string { return `${prefix}${this.nextNameIndex++}`; }\n\n  private definitionsOf(kind: DefinitionKind): Map<any, FixupExpression> {\n    switch (kind) {\n      case DefinitionKind.Component:\n        return this.componentDefinitions;\n      case DefinitionKind.Directive:\n        return this.directiveDefinitions;\n      case DefinitionKind.Injector:\n        return this.injectorDefinitions;\n      case DefinitionKind.Pipe:\n        return this.pipeDefinitions;\n    }\n    error(`Unknown definition kind ${kind}`);\n    return this.componentDefinitions;\n  }\n\n  public propertyNameOf(kind: DefinitionKind): string {\n    switch (kind) {\n      case DefinitionKind.Component:\n        return 'ngComponentDef';\n      case DefinitionKind.Directive:\n        return 'ngDirectiveDef';\n      case DefinitionKind.Injector:\n        return 'ngInjectorDef';\n      case DefinitionKind.Pipe:\n        return 'ngPipeDef';\n    }\n    error(`Unknown definition kind ${kind}`);\n    return '<unknown>';\n  }\n\n  private freshName(): string { return this.uniqueName(CONSTANT_PREFIX); }\n\n  private keyOf(expression: o.Expression) {\n    return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n  }\n}\n\n/**\n * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n * `ConstantPool`.\n *\n * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n */\nclass KeyVisitor implements o.ExpressionVisitor {\n  visitLiteralExpr(ast: o.LiteralExpr): string {\n    return `${typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value}`;\n  }\n\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, context: object): string {\n    return `[${ast.entries.map(entry => entry.visitExpression(this, context)).join(',')}]`;\n  }\n\n  visitLiteralMapExpr(ast: o.LiteralMapExpr, context: object): string {\n    const mapKey = (entry: o.LiteralMapEntry) => {\n      const quote = entry.quoted ? '\"' : '';\n      return `${quote}${entry.key}${quote}`;\n    };\n    const mapEntry = (entry: o.LiteralMapEntry) =>\n        `${mapKey(entry)}:${entry.value.visitExpression(this, context)}`;\n    return `{${ast.entries.map(mapEntry).join(',')}`;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr): string {\n    return ast.value.moduleName ? `EX:${ast.value.moduleName}:${ast.value.name}` :\n                                  `EX:${ast.value.runtime.name}`;\n  }\n\n  visitReadVarExpr(node: o.ReadVarExpr) { return `VAR:${node.name}`; }\n\n  visitTypeofExpr(node: o.TypeofExpr, context: any): string {\n    return `TYPEOF:${node.expr.visitExpression(this, context)}`;\n  }\n\n  visitWrappedNodeExpr = invalid;\n  visitWriteVarExpr = invalid;\n  visitWriteKeyExpr = invalid;\n  visitWritePropExpr = invalid;\n  visitInvokeMethodExpr = invalid;\n  visitInvokeFunctionExpr = invalid;\n  visitInstantiateExpr = invalid;\n  visitConditionalExpr = invalid;\n  visitNotExpr = invalid;\n  visitAssertNotNullExpr = invalid;\n  visitCastExpr = invalid;\n  visitFunctionExpr = invalid;\n  visitBinaryOperatorExpr = invalid;\n  visitReadPropExpr = invalid;\n  visitReadKeyExpr = invalid;\n  visitCommaExpr = invalid;\n}\n\nfunction invalid<T>(this: o.ExpressionVisitor, arg: o.Expression | o.Statement): never {\n  throw new Error(\n      `Invalid state: Visitor ${this.constructor.name} doesn't handle ${arg.constructor.name}`);\n}\n\nfunction isVariable(e: o.Expression): e is o.ReadVarExpr {\n  return e instanceof o.ReadVarExpr;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileTokenMetadata} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport * as o from './output/output_ast';\n\nconst CORE = '@angular/core';\n\nexport class Identifiers {\n  static ANALYZE_FOR_ENTRY_COMPONENTS: o.ExternalReference = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n\n  };\n  static ElementRef: o.ExternalReference = {name: 'ElementRef', moduleName: CORE};\n  static NgModuleRef: o.ExternalReference = {name: 'NgModuleRef', moduleName: CORE};\n  static ViewContainerRef: o.ExternalReference = {name: 'ViewContainerRef', moduleName: CORE};\n  static ChangeDetectorRef: o.ExternalReference = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n\n  };\n  static QueryList: o.ExternalReference = {name: 'QueryList', moduleName: CORE};\n  static TemplateRef: o.ExternalReference = {name: 'TemplateRef', moduleName: CORE};\n  static Renderer2: o.ExternalReference = {name: 'Renderer2', moduleName: CORE};\n  static CodegenComponentFactoryResolver: o.ExternalReference = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n\n  };\n  static ComponentFactoryResolver: o.ExternalReference = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n\n  };\n  static ComponentFactory: o.ExternalReference = {name: 'ComponentFactory', moduleName: CORE};\n  static ComponentRef: o.ExternalReference = {name: 'ComponentRef', moduleName: CORE};\n  static NgModuleFactory: o.ExternalReference = {name: 'NgModuleFactory', moduleName: CORE};\n  static createModuleFactory: o.ExternalReference = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n\n  };\n  static moduleDef: o.ExternalReference = {\n    name: 'Éµmod',\n    moduleName: CORE,\n\n  };\n  static moduleProviderDef: o.ExternalReference = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n\n  };\n  static RegisterModuleFactoryFn: o.ExternalReference = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n\n  };\n  static inject: o.ExternalReference = {name: 'ÉµÉµinject', moduleName: CORE};\n  static INJECTOR: o.ExternalReference = {name: 'INJECTOR', moduleName: CORE};\n  static Injector: o.ExternalReference = {name: 'Injector', moduleName: CORE};\n  static ÉµÉµdefineInjectable: o.ExternalReference = {name: 'ÉµÉµdefineInjectable', moduleName: CORE};\n  static InjectableDef: o.ExternalReference = {name: 'ÉµÉµInjectableDef', moduleName: CORE};\n  static ViewEncapsulation: o.ExternalReference = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n\n  };\n  static ChangeDetectionStrategy: o.ExternalReference = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n\n  };\n  static SecurityContext: o.ExternalReference = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n\n  };\n  static LOCALE_ID: o.ExternalReference = {name: 'LOCALE_ID', moduleName: CORE};\n  static TRANSLATIONS_FORMAT: o.ExternalReference = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n\n  };\n  static inlineInterpolate: o.ExternalReference = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n  };\n  static interpolate: o.ExternalReference = {name: 'Éµinterpolate', moduleName: CORE};\n  static EMPTY_ARRAY: o.ExternalReference = {name: 'ÉµEMPTY_ARRAY', moduleName: CORE};\n  static EMPTY_MAP: o.ExternalReference = {name: 'ÉµEMPTY_MAP', moduleName: CORE};\n  static Renderer: o.ExternalReference = {name: 'Renderer', moduleName: CORE};\n  static viewDef: o.ExternalReference = {name: 'Éµvid', moduleName: CORE};\n  static elementDef: o.ExternalReference = {name: 'Éµeld', moduleName: CORE};\n  static anchorDef: o.ExternalReference = {name: 'Éµand', moduleName: CORE};\n  static textDef: o.ExternalReference = {name: 'Éµted', moduleName: CORE};\n  static directiveDef: o.ExternalReference = {name: 'Éµdid', moduleName: CORE};\n  static providerDef: o.ExternalReference = {name: 'Éµprd', moduleName: CORE};\n  static queryDef: o.ExternalReference = {name: 'Éµqud', moduleName: CORE};\n  static pureArrayDef: o.ExternalReference = {name: 'Éµpad', moduleName: CORE};\n  static pureObjectDef: o.ExternalReference = {name: 'Éµpod', moduleName: CORE};\n  static purePipeDef: o.ExternalReference = {name: 'Éµppd', moduleName: CORE};\n  static pipeDef: o.ExternalReference = {name: 'Éµpid', moduleName: CORE};\n  static nodeValue: o.ExternalReference = {name: 'Éµnov', moduleName: CORE};\n  static ngContentDef: o.ExternalReference = {name: 'Éµncd', moduleName: CORE};\n  static unwrapValue: o.ExternalReference = {name: 'Éµunv', moduleName: CORE};\n  static createRendererType2: o.ExternalReference = {name: 'Éµcrt', moduleName: CORE};\n  // type only\n  static RendererType2: o.ExternalReference = {\n    name: 'RendererType2',\n    moduleName: CORE,\n\n  };\n  // type only\n  static ViewDefinition: o.ExternalReference = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n  };\n  static createComponentFactory: o.ExternalReference = {name: 'Éµccf', moduleName: CORE};\n  static setClassMetadata: o.ExternalReference = {name: 'ÉµsetClassMetadata', moduleName: CORE};\n}\n\nexport function createTokenForReference(reference: any): CompileTokenMetadata {\n  return {identifier: {reference: reference}};\n}\n\nexport function createTokenForExternalReference(\n    reflector: CompileReflector, reference: o.ExternalReference): CompileTokenMetadata {\n  return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n  constructor(public filePath: string, public name: string, public members: string[]) {}\n\n  assertNoMembers() {\n    if (this.members.length) {\n      throw new Error(\n          `Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`);\n    }\n  }\n}\n\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nexport class StaticSymbolCache {\n  private cache = new Map<string, StaticSymbol>();\n\n  get(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    members = members || [];\n    const memberSuffix = members.length ? `.${ members.join('.')}` : '';\n    const key = `\"${declarationFile}\".${name}${memberSuffix}`;\n    let result = this.cache.get(key);\n    if (!result) {\n      result = new StaticSymbol(declarationFile, name, members);\n      this.cache.set(key, result);\n    }\n    return result;\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from './aot/static_symbol';\nimport {ChangeDetectionStrategy, SchemaMetadata, Type, ViewEncapsulation} from './core';\nimport {LifecycleHooks} from './lifecycle_reflector';\nimport {ParseTreeResult as HtmlParseTreeResult} from './ml_parser/parser';\nimport {splitAtColon, stringify} from './util';\n\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\nexport function sanitizeIdentifier(name: string): string {\n  return name.replace(/\\W/g, '_');\n}\n\nlet _anonymousTypeIndex = 0;\n\nexport function identifierName(compileIdentifier: CompileIdentifierMetadata | null | undefined):\n    string|null {\n  if (!compileIdentifier || !compileIdentifier.reference) {\n    return null;\n  }\n  const ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.name;\n  }\n  if (ref['__anonymousType']) {\n    return ref['__anonymousType'];\n  }\n  let identifier = stringify(ref);\n  if (identifier.indexOf('(') >= 0) {\n    // case: anonymous functions!\n    identifier = `anonymous_${_anonymousTypeIndex++}`;\n    ref['__anonymousType'] = identifier;\n  } else {\n    identifier = sanitizeIdentifier(identifier);\n  }\n  return identifier;\n}\n\nexport function identifierModuleUrl(compileIdentifier: CompileIdentifierMetadata): string {\n  const ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.filePath;\n  }\n  // Runtime type\n  return `./${stringify(ref)}`;\n}\n\nexport function viewClassName(compType: any, embeddedTemplateIndex: number): string {\n  return `View_${identifierName({reference: compType})}_${embeddedTemplateIndex}`;\n}\n\nexport function rendererTypeName(compType: any): string {\n  return `RenderType_${identifierName({reference: compType})}`;\n}\n\nexport function hostViewClassName(compType: any): string {\n  return `HostView_${identifierName({reference: compType})}`;\n}\n\nexport function componentFactoryName(compType: any): string {\n  return `${identifierName({reference: compType})}NgFactory`;\n}\n\nexport interface ProxyClass { setDelegate(delegate: any): void; }\n\nexport interface CompileIdentifierMetadata { reference: any; }\n\nexport enum CompileSummaryKind {\n  Pipe,\n  Directive,\n  NgModule,\n  Injectable\n}\n\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n */\nexport interface CompileTypeSummary {\n  summaryKind: CompileSummaryKind|null;\n  type: CompileTypeMetadata;\n}\n\nexport interface CompileDiDependencyMetadata {\n  isAttribute?: boolean;\n  isSelf?: boolean;\n  isHost?: boolean;\n  isSkipSelf?: boolean;\n  isOptional?: boolean;\n  isValue?: boolean;\n  token?: CompileTokenMetadata;\n  value?: any;\n}\n\nexport interface CompileProviderMetadata {\n  token: CompileTokenMetadata;\n  useClass?: CompileTypeMetadata;\n  useValue?: any;\n  useExisting?: CompileTokenMetadata;\n  useFactory?: CompileFactoryMetadata;\n  deps?: CompileDiDependencyMetadata[];\n  multi?: boolean;\n}\n\nexport interface CompileFactoryMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  reference: any;\n}\n\nexport function tokenName(token: CompileTokenMetadata) {\n  return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n\nexport function tokenReference(token: CompileTokenMetadata) {\n  if (token.identifier != null) {\n    return token.identifier.reference;\n  } else {\n    return token.value;\n  }\n}\n\nexport interface CompileTokenMetadata {\n  value?: any;\n  identifier?: CompileIdentifierMetadata|CompileTypeMetadata;\n}\n\nexport interface CompileInjectableMetadata {\n  symbol: StaticSymbol;\n  type: CompileTypeMetadata;\n\n  providedIn?: StaticSymbol;\n\n  useValue?: any;\n  useClass?: StaticSymbol;\n  useExisting?: StaticSymbol;\n  useFactory?: StaticSymbol;\n  deps?: any[];\n}\n\n/**\n * Metadata regarding compilation of a type.\n */\nexport interface CompileTypeMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  lifecycleHooks: LifecycleHooks[];\n  reference: any;\n}\n\nexport interface CompileQueryMetadata {\n  selectors: Array<CompileTokenMetadata>;\n  descendants: boolean;\n  first: boolean;\n  propertyName: string;\n  read: CompileTokenMetadata;\n  static?: boolean;\n}\n\n/**\n * Metadata about a stylesheet\n */\nexport class CompileStylesheetMetadata {\n  moduleUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n  constructor(\n      {moduleUrl, styles,\n       styleUrls}: {moduleUrl?: string, styles?: string[], styleUrls?: string[]} = {}) {\n    this.moduleUrl = moduleUrl || null;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n  }\n}\n\n/**\n * Summary Metadata regarding compilation of a template.\n */\nexport interface CompileTemplateSummary {\n  ngContentSelectors: string[];\n  encapsulation: ViewEncapsulation|null;\n  styles: string[];\n  animations: any[]|null;\n}\n\n/**\n * Metadata regarding compilation of a template.\n */\nexport class CompileTemplateMetadata {\n  encapsulation: ViewEncapsulation|null;\n  template: string|null;\n  templateUrl: string|null;\n  htmlAst: HtmlParseTreeResult|null;\n  isInline: boolean;\n  styles: string[];\n  styleUrls: string[];\n  externalStylesheets: CompileStylesheetMetadata[];\n  animations: any[];\n  ngContentSelectors: string[];\n  interpolation: [string, string]|null;\n  preserveWhitespaces: boolean;\n  constructor({encapsulation, template, templateUrl, htmlAst, styles, styleUrls,\n               externalStylesheets, animations, ngContentSelectors, interpolation, isInline,\n               preserveWhitespaces}: {\n    encapsulation: ViewEncapsulation | null,\n    template: string|null,\n    templateUrl: string|null,\n    htmlAst: HtmlParseTreeResult|null,\n    styles: string[],\n    styleUrls: string[],\n    externalStylesheets: CompileStylesheetMetadata[],\n    ngContentSelectors: string[],\n    animations: any[],\n    interpolation: [string, string]|null,\n    isInline: boolean,\n    preserveWhitespaces: boolean\n  }) {\n    this.encapsulation = encapsulation;\n    this.template = template;\n    this.templateUrl = templateUrl;\n    this.htmlAst = htmlAst;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n    this.externalStylesheets = _normalizeArray(externalStylesheets);\n    this.animations = animations ? flatten(animations) : [];\n    this.ngContentSelectors = ngContentSelectors || [];\n    if (interpolation && interpolation.length != 2) {\n      throw new Error(`'interpolation' should have a start and an end symbol.`);\n    }\n    this.interpolation = interpolation;\n    this.isInline = isInline;\n    this.preserveWhitespaces = preserveWhitespaces;\n  }\n\n  toSummary(): CompileTemplateSummary {\n    return {\n      ngContentSelectors: this.ngContentSelectors,\n      encapsulation: this.encapsulation,\n      styles: this.styles,\n      animations: this.animations\n    };\n  }\n}\n\nexport interface CompileEntryComponentMetadata {\n  componentType: any;\n  componentFactory: StaticSymbol|object;\n}\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileDirectiveSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  guards: {[key: string]: any};\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  changeDetection: ChangeDetectionStrategy|null;\n  template: CompileTemplateSummary|null;\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|object|null;\n  componentFactory: StaticSymbol|object|null;\n}\n\n/**\n * Metadata regarding compilation of a directive.\n */\nexport class CompileDirectiveMetadata {\n  static create({isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs,\n                 host, providers, viewProviders, queries, guards, viewQueries, entryComponents,\n                 template, componentViewType, rendererType, componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: string[],\n    outputs: string[],\n    host: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    guards: {[key: string]: any};\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|object|null,\n    componentFactory: StaticSymbol|object|null,\n  }): CompileDirectiveMetadata {\n    const hostListeners: {[key: string]: string} = {};\n    const hostProperties: {[key: string]: string} = {};\n    const hostAttributes: {[key: string]: string} = {};\n    if (host != null) {\n      Object.keys(host).forEach(key => {\n        const value = host[key];\n        const matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n          hostAttributes[key] = value;\n        } else if (matches[1] != null) {\n          hostProperties[matches[1]] = value;\n        } else if (matches[2] != null) {\n          hostListeners[matches[2]] = value;\n        }\n      });\n    }\n    const inputsMap: {[key: string]: string} = {};\n    if (inputs != null) {\n      inputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        inputsMap[parts[0]] = parts[1];\n      });\n    }\n    const outputsMap: {[key: string]: string} = {};\n    if (outputs != null) {\n      outputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        outputsMap[parts[0]] = parts[1];\n      });\n    }\n\n    return new CompileDirectiveMetadata({\n      isHost,\n      type,\n      isComponent: !!isComponent, selector, exportAs, changeDetection,\n      inputs: inputsMap,\n      outputs: outputsMap,\n      hostListeners,\n      hostProperties,\n      hostAttributes,\n      providers,\n      viewProviders,\n      queries,\n      guards,\n      viewQueries,\n      entryComponents,\n      template,\n      componentViewType,\n      rendererType,\n      componentFactory,\n    });\n  }\n  isHost: boolean;\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  changeDetection: ChangeDetectionStrategy|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  guards: {[key: string]: any};\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n\n  template: CompileTemplateMetadata|null;\n\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|object|null;\n  componentFactory: StaticSymbol|object|null;\n\n  constructor({isHost,\n               type,\n               isComponent,\n               selector,\n               exportAs,\n               changeDetection,\n               inputs,\n               outputs,\n               hostListeners,\n               hostProperties,\n               hostAttributes,\n               providers,\n               viewProviders,\n               queries,\n               guards,\n               viewQueries,\n               entryComponents,\n               template,\n               componentViewType,\n               rendererType,\n               componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: {[key: string]: string},\n    outputs: {[key: string]: string},\n    hostListeners: {[key: string]: string},\n    hostProperties: {[key: string]: string},\n    hostAttributes: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    guards: {[key: string]: any},\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata|null,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|object|null,\n    componentFactory: StaticSymbol|object|null,\n  }) {\n    this.isHost = !!isHost;\n    this.type = type;\n    this.isComponent = isComponent;\n    this.selector = selector;\n    this.exportAs = exportAs;\n    this.changeDetection = changeDetection;\n    this.inputs = inputs;\n    this.outputs = outputs;\n    this.hostListeners = hostListeners;\n    this.hostProperties = hostProperties;\n    this.hostAttributes = hostAttributes;\n    this.providers = _normalizeArray(providers);\n    this.viewProviders = _normalizeArray(viewProviders);\n    this.queries = _normalizeArray(queries);\n    this.guards = guards;\n    this.viewQueries = _normalizeArray(viewQueries);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.template = template;\n\n    this.componentViewType = componentViewType;\n    this.rendererType = rendererType;\n    this.componentFactory = componentFactory;\n  }\n\n  toSummary(): CompileDirectiveSummary {\n    return {\n      summaryKind: CompileSummaryKind.Directive,\n      type: this.type,\n      isComponent: this.isComponent,\n      selector: this.selector,\n      exportAs: this.exportAs,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      hostListeners: this.hostListeners,\n      hostProperties: this.hostProperties,\n      hostAttributes: this.hostAttributes,\n      providers: this.providers,\n      viewProviders: this.viewProviders,\n      queries: this.queries,\n      guards: this.guards,\n      viewQueries: this.viewQueries,\n      entryComponents: this.entryComponents,\n      changeDetection: this.changeDetection,\n      template: this.template && this.template.toSummary(),\n      componentViewType: this.componentViewType,\n      rendererType: this.rendererType,\n      componentFactory: this.componentFactory\n    };\n  }\n}\n\nexport interface CompilePipeSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n}\n\nexport class CompilePipeMetadata {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n\n  constructor({type, name, pure}: {\n    type: CompileTypeMetadata,\n    name: string,\n    pure: boolean,\n  }) {\n    this.type = type;\n    this.name = name;\n    this.pure = !!pure;\n  }\n\n  toSummary(): CompilePipeSummary {\n    return {\n      summaryKind: CompileSummaryKind.Pipe,\n      type: this.type,\n      name: this.name,\n      pure: this.pure\n    };\n  }\n}\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileNgModuleSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n\n  // Note: This is transitive over the exported modules.\n  exportedDirectives: CompileIdentifierMetadata[];\n  // Note: This is transitive over the exported modules.\n  exportedPipes: CompileIdentifierMetadata[];\n\n  // Note: This is transitive.\n  entryComponents: CompileEntryComponentMetadata[];\n  // Note: This is transitive.\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[];\n  // Note: This is transitive.\n  modules: CompileTypeMetadata[];\n}\n\nexport class CompileShallowModuleMetadata {\n  // TODO(issue/24571): remove '!'.\n  type !: CompileTypeMetadata;\n\n  rawExports: any;\n  rawImports: any;\n  rawProviders: any;\n}\n\n/**\n * Metadata regarding compilation of a module.\n */\nexport class CompileNgModuleMetadata {\n  type: CompileTypeMetadata;\n  declaredDirectives: CompileIdentifierMetadata[];\n  exportedDirectives: CompileIdentifierMetadata[];\n  declaredPipes: CompileIdentifierMetadata[];\n\n  exportedPipes: CompileIdentifierMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  bootstrapComponents: CompileIdentifierMetadata[];\n  providers: CompileProviderMetadata[];\n\n  importedModules: CompileNgModuleSummary[];\n  exportedModules: CompileNgModuleSummary[];\n  schemas: SchemaMetadata[];\n  id: string|null;\n\n  transitiveModule: TransitiveCompileNgModuleMetadata;\n\n  constructor({type, providers, declaredDirectives, exportedDirectives, declaredPipes,\n               exportedPipes, entryComponents, bootstrapComponents, importedModules,\n               exportedModules, schemas, transitiveModule, id}: {\n    type: CompileTypeMetadata,\n    providers: CompileProviderMetadata[],\n    declaredDirectives: CompileIdentifierMetadata[],\n    exportedDirectives: CompileIdentifierMetadata[],\n    declaredPipes: CompileIdentifierMetadata[],\n    exportedPipes: CompileIdentifierMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    bootstrapComponents: CompileIdentifierMetadata[],\n    importedModules: CompileNgModuleSummary[],\n    exportedModules: CompileNgModuleSummary[],\n    transitiveModule: TransitiveCompileNgModuleMetadata,\n    schemas: SchemaMetadata[],\n    id: string|null\n  }) {\n    this.type = type || null;\n    this.declaredDirectives = _normalizeArray(declaredDirectives);\n    this.exportedDirectives = _normalizeArray(exportedDirectives);\n    this.declaredPipes = _normalizeArray(declaredPipes);\n    this.exportedPipes = _normalizeArray(exportedPipes);\n    this.providers = _normalizeArray(providers);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n    this.importedModules = _normalizeArray(importedModules);\n    this.exportedModules = _normalizeArray(exportedModules);\n    this.schemas = _normalizeArray(schemas);\n    this.id = id || null;\n    this.transitiveModule = transitiveModule || null;\n  }\n\n  toSummary(): CompileNgModuleSummary {\n    const module = this.transitiveModule !;\n    return {\n      summaryKind: CompileSummaryKind.NgModule,\n      type: this.type,\n      entryComponents: module.entryComponents,\n      providers: module.providers,\n      modules: module.modules,\n      exportedDirectives: module.exportedDirectives,\n      exportedPipes: module.exportedPipes\n    };\n  }\n}\n\nexport class TransitiveCompileNgModuleMetadata {\n  directivesSet = new Set<any>();\n  directives: CompileIdentifierMetadata[] = [];\n  exportedDirectivesSet = new Set<any>();\n  exportedDirectives: CompileIdentifierMetadata[] = [];\n  pipesSet = new Set<any>();\n  pipes: CompileIdentifierMetadata[] = [];\n  exportedPipesSet = new Set<any>();\n  exportedPipes: CompileIdentifierMetadata[] = [];\n  modulesSet = new Set<any>();\n  modules: CompileTypeMetadata[] = [];\n  entryComponentsSet = new Set<any>();\n  entryComponents: CompileEntryComponentMetadata[] = [];\n\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[] = [];\n\n  addProvider(provider: CompileProviderMetadata, module: CompileIdentifierMetadata) {\n    this.providers.push({provider: provider, module: module});\n  }\n\n  addDirective(id: CompileIdentifierMetadata) {\n    if (!this.directivesSet.has(id.reference)) {\n      this.directivesSet.add(id.reference);\n      this.directives.push(id);\n    }\n  }\n  addExportedDirective(id: CompileIdentifierMetadata) {\n    if (!this.exportedDirectivesSet.has(id.reference)) {\n      this.exportedDirectivesSet.add(id.reference);\n      this.exportedDirectives.push(id);\n    }\n  }\n  addPipe(id: CompileIdentifierMetadata) {\n    if (!this.pipesSet.has(id.reference)) {\n      this.pipesSet.add(id.reference);\n      this.pipes.push(id);\n    }\n  }\n  addExportedPipe(id: CompileIdentifierMetadata) {\n    if (!this.exportedPipesSet.has(id.reference)) {\n      this.exportedPipesSet.add(id.reference);\n      this.exportedPipes.push(id);\n    }\n  }\n  addModule(id: CompileTypeMetadata) {\n    if (!this.modulesSet.has(id.reference)) {\n      this.modulesSet.add(id.reference);\n      this.modules.push(id);\n    }\n  }\n  addEntryComponent(ec: CompileEntryComponentMetadata) {\n    if (!this.entryComponentsSet.has(ec.componentType)) {\n      this.entryComponentsSet.add(ec.componentType);\n      this.entryComponents.push(ec);\n    }\n  }\n}\n\nfunction _normalizeArray(obj: any[] | undefined | null): any[] {\n  return obj || [];\n}\n\nexport class ProviderMeta {\n  token: any;\n  useClass: Type|null;\n  useValue: any;\n  useExisting: any;\n  useFactory: Function|null;\n  dependencies: Object[]|null;\n  multi: boolean;\n\n  constructor(token: any, {useClass, useValue, useExisting, useFactory, deps, multi}: {\n    useClass?: Type,\n    useValue?: any,\n    useExisting?: any,\n    useFactory?: Function|null,\n    deps?: Object[]|null,\n    multi?: boolean\n  }) {\n    this.token = token;\n    this.useClass = useClass || null;\n    this.useValue = useValue;\n    this.useExisting = useExisting;\n    this.useFactory = useFactory || null;\n    this.dependencies = deps || null;\n    this.multi = !!multi;\n  }\n}\n\nexport function flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n\nfunction jitSourceUrl(url: string) {\n  // Note: We need 3 \"/\" so that ng shows up as a separate domain\n  // in the chrome dev tools.\n  return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n\nexport function templateSourceUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: {type: CompileIdentifierMetadata},\n    templateMeta: {isInline: boolean, templateUrl: string | null}) {\n  let url: string;\n  if (templateMeta.isInline) {\n    if (compMeta.type.reference instanceof StaticSymbol) {\n      // Note: a .ts file might contain multiple components with inline templates,\n      // so we need to give them unique urls, as these will be used for sourcemaps.\n      url = `${compMeta.type.reference.filePath}.${compMeta.type.reference.name}.html`;\n    } else {\n      url = `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.html`;\n    }\n  } else {\n    url = templateMeta.templateUrl !;\n  }\n  return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n\nexport function sharedStylesheetJitUrl(meta: CompileStylesheetMetadata, id: number) {\n  const pathParts = meta.moduleUrl !.split(/\\/\\\\/g);\n  const baseName = pathParts[pathParts.length - 1];\n  return jitSourceUrl(`css/${id}${baseName}.ngstyle.js`);\n}\n\nexport function ngModuleJitUrl(moduleMeta: CompileNgModuleMetadata): string {\n  return jitSourceUrl(`${identifierName(moduleMeta.type)}/module.ngfactory.js`);\n}\n\nexport function templateJitUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: CompileDirectiveMetadata): string {\n  return jitSourceUrl(\n      `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.ngfactory.js`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from '../output/output_ast';\n\nconst CORE = '@angular/core';\n\nexport class Identifiers {\n  /* Methods */\n  static NEW_METHOD = 'factory';\n  static TRANSFORM_METHOD = 'transform';\n  static PATCH_DEPS = 'patchedDeps';\n\n  /* Instructions */\n  static namespaceHTML: o.ExternalReference = {name: 'ÉµÉµnamespaceHTML', moduleName: CORE};\n\n  static namespaceMathML: o.ExternalReference = {name: 'ÉµÉµnamespaceMathML', moduleName: CORE};\n\n  static namespaceSVG: o.ExternalReference = {name: 'ÉµÉµnamespaceSVG', moduleName: CORE};\n\n  static element: o.ExternalReference = {name: 'ÉµÉµelement', moduleName: CORE};\n\n  static elementStart: o.ExternalReference = {name: 'ÉµÉµelementStart', moduleName: CORE};\n\n  static elementEnd: o.ExternalReference = {name: 'ÉµÉµelementEnd', moduleName: CORE};\n\n  static select: o.ExternalReference = {name: 'ÉµÉµselect', moduleName: CORE};\n\n  static updateSyntheticHostBinding:\n      o.ExternalReference = {name: 'ÉµÉµupdateSyntheticHostBinding', moduleName: CORE};\n\n  static componentHostSyntheticListener:\n      o.ExternalReference = {name: 'ÉµÉµcomponentHostSyntheticListener', moduleName: CORE};\n\n  static attribute: o.ExternalReference = {name: 'ÉµÉµattribute', moduleName: CORE};\n\n  static attributeInterpolate1:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate1', moduleName: CORE};\n  static attributeInterpolate2:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate2', moduleName: CORE};\n  static attributeInterpolate3:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate3', moduleName: CORE};\n  static attributeInterpolate4:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate4', moduleName: CORE};\n  static attributeInterpolate5:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate5', moduleName: CORE};\n  static attributeInterpolate6:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate6', moduleName: CORE};\n  static attributeInterpolate7:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate7', moduleName: CORE};\n  static attributeInterpolate8:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolate8', moduleName: CORE};\n  static attributeInterpolateV:\n      o.ExternalReference = {name: 'ÉµÉµattributeInterpolateV', moduleName: CORE};\n\n  static classProp: o.ExternalReference = {name: 'ÉµÉµclassProp', moduleName: CORE};\n\n  static elementContainerStart:\n      o.ExternalReference = {name: 'ÉµÉµelementContainerStart', moduleName: CORE};\n\n  static elementContainerEnd:\n      o.ExternalReference = {name: 'ÉµÉµelementContainerEnd', moduleName: CORE};\n\n  static elementContainer: o.ExternalReference = {name: 'ÉµÉµelementContainer', moduleName: CORE};\n\n  static styling: o.ExternalReference = {name: 'ÉµÉµstyling', moduleName: CORE};\n\n  static styleMap: o.ExternalReference = {name: 'ÉµÉµstyleMap', moduleName: CORE};\n\n  static classMap: o.ExternalReference = {name: 'ÉµÉµclassMap', moduleName: CORE};\n\n  static classMapInterpolate1:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate1', moduleName: CORE};\n  static classMapInterpolate2:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate2', moduleName: CORE};\n  static classMapInterpolate3:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate3', moduleName: CORE};\n  static classMapInterpolate4:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate4', moduleName: CORE};\n  static classMapInterpolate5:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate5', moduleName: CORE};\n  static classMapInterpolate6:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate6', moduleName: CORE};\n  static classMapInterpolate7:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate7', moduleName: CORE};\n  static classMapInterpolate8:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolate8', moduleName: CORE};\n  static classMapInterpolateV:\n      o.ExternalReference = {name: 'ÉµÉµclassMapInterpolateV', moduleName: CORE};\n\n  static styleProp: o.ExternalReference = {name: 'ÉµÉµstyleProp', moduleName: CORE};\n\n  static stylePropInterpolate1:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate1', moduleName: CORE};\n  static stylePropInterpolate2:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate2', moduleName: CORE};\n  static stylePropInterpolate3:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate3', moduleName: CORE};\n  static stylePropInterpolate4:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate4', moduleName: CORE};\n  static stylePropInterpolate5:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate5', moduleName: CORE};\n  static stylePropInterpolate6:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate6', moduleName: CORE};\n  static stylePropInterpolate7:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate7', moduleName: CORE};\n  static stylePropInterpolate8:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolate8', moduleName: CORE};\n  static stylePropInterpolateV:\n      o.ExternalReference = {name: 'ÉµÉµstylePropInterpolateV', moduleName: CORE};\n\n  static stylingApply: o.ExternalReference = {name: 'ÉµÉµstylingApply', moduleName: CORE};\n\n  static styleSanitizer: o.ExternalReference = {name: 'ÉµÉµstyleSanitizer', moduleName: CORE};\n\n  static elementHostAttrs: o.ExternalReference = {name: 'ÉµÉµelementHostAttrs', moduleName: CORE};\n\n  static containerCreate: o.ExternalReference = {name: 'ÉµÉµcontainer', moduleName: CORE};\n\n  static nextContext: o.ExternalReference = {name: 'ÉµÉµnextContext', moduleName: CORE};\n\n  static templateCreate: o.ExternalReference = {name: 'ÉµÉµtemplate', moduleName: CORE};\n\n  static text: o.ExternalReference = {name: 'ÉµÉµtext', moduleName: CORE};\n\n  static textBinding: o.ExternalReference = {name: 'ÉµÉµtextBinding', moduleName: CORE};\n\n  static enableBindings: o.ExternalReference = {name: 'ÉµÉµenableBindings', moduleName: CORE};\n\n  static disableBindings: o.ExternalReference = {name: 'ÉµÉµdisableBindings', moduleName: CORE};\n\n  static allocHostVars: o.ExternalReference = {name: 'ÉµÉµallocHostVars', moduleName: CORE};\n\n  static getCurrentView: o.ExternalReference = {name: 'ÉµÉµgetCurrentView', moduleName: CORE};\n\n  static textInterpolate: o.ExternalReference = {name: 'ÉµÉµtextInterpolate', moduleName: CORE};\n  static textInterpolate1: o.ExternalReference = {name: 'ÉµÉµtextInterpolate1', moduleName: CORE};\n  static textInterpolate2: o.ExternalReference = {name: 'ÉµÉµtextInterpolate2', moduleName: CORE};\n  static textInterpolate3: o.ExternalReference = {name: 'ÉµÉµtextInterpolate3', moduleName: CORE};\n  static textInterpolate4: o.ExternalReference = {name: 'ÉµÉµtextInterpolate4', moduleName: CORE};\n  static textInterpolate5: o.ExternalReference = {name: 'ÉµÉµtextInterpolate5', moduleName: CORE};\n  static textInterpolate6: o.ExternalReference = {name: 'ÉµÉµtextInterpolate6', moduleName: CORE};\n  static textInterpolate7: o.ExternalReference = {name: 'ÉµÉµtextInterpolate7', moduleName: CORE};\n  static textInterpolate8: o.ExternalReference = {name: 'ÉµÉµtextInterpolate8', moduleName: CORE};\n  static textInterpolateV: o.ExternalReference = {name: 'ÉµÉµtextInterpolateV', moduleName: CORE};\n\n  static restoreView: o.ExternalReference = {name: 'ÉµÉµrestoreView', moduleName: CORE};\n\n  static pureFunction0: o.ExternalReference = {name: 'ÉµÉµpureFunction0', moduleName: CORE};\n  static pureFunction1: o.ExternalReference = {name: 'ÉµÉµpureFunction1', moduleName: CORE};\n  static pureFunction2: o.ExternalReference = {name: 'ÉµÉµpureFunction2', moduleName: CORE};\n  static pureFunction3: o.ExternalReference = {name: 'ÉµÉµpureFunction3', moduleName: CORE};\n  static pureFunction4: o.ExternalReference = {name: 'ÉµÉµpureFunction4', moduleName: CORE};\n  static pureFunction5: o.ExternalReference = {name: 'ÉµÉµpureFunction5', moduleName: CORE};\n  static pureFunction6: o.ExternalReference = {name: 'ÉµÉµpureFunction6', moduleName: CORE};\n  static pureFunction7: o.ExternalReference = {name: 'ÉµÉµpureFunction7', moduleName: CORE};\n  static pureFunction8: o.ExternalReference = {name: 'ÉµÉµpureFunction8', moduleName: CORE};\n  static pureFunctionV: o.ExternalReference = {name: 'ÉµÉµpureFunctionV', moduleName: CORE};\n\n  static pipeBind1: o.ExternalReference = {name: 'ÉµÉµpipeBind1', moduleName: CORE};\n  static pipeBind2: o.ExternalReference = {name: 'ÉµÉµpipeBind2', moduleName: CORE};\n  static pipeBind3: o.ExternalReference = {name: 'ÉµÉµpipeBind3', moduleName: CORE};\n  static pipeBind4: o.ExternalReference = {name: 'ÉµÉµpipeBind4', moduleName: CORE};\n  static pipeBindV: o.ExternalReference = {name: 'ÉµÉµpipeBindV', moduleName: CORE};\n\n  static hostProperty: o.ExternalReference = {name: 'ÉµÉµhostProperty', moduleName: CORE};\n\n  static property: o.ExternalReference = {name: 'ÉµÉµproperty', moduleName: CORE};\n\n  static propertyInterpolate:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate', moduleName: CORE};\n  static propertyInterpolate1:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate1', moduleName: CORE};\n  static propertyInterpolate2:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate2', moduleName: CORE};\n  static propertyInterpolate3:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate3', moduleName: CORE};\n  static propertyInterpolate4:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate4', moduleName: CORE};\n  static propertyInterpolate5:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate5', moduleName: CORE};\n  static propertyInterpolate6:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate6', moduleName: CORE};\n  static propertyInterpolate7:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate7', moduleName: CORE};\n  static propertyInterpolate8:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolate8', moduleName: CORE};\n  static propertyInterpolateV:\n      o.ExternalReference = {name: 'ÉµÉµpropertyInterpolateV', moduleName: CORE};\n\n  static i18n: o.ExternalReference = {name: 'ÉµÉµi18n', moduleName: CORE};\n  static i18nAttributes: o.ExternalReference = {name: 'ÉµÉµi18nAttributes', moduleName: CORE};\n  static i18nExp: o.ExternalReference = {name: 'ÉµÉµi18nExp', moduleName: CORE};\n  static i18nStart: o.ExternalReference = {name: 'ÉµÉµi18nStart', moduleName: CORE};\n  static i18nEnd: o.ExternalReference = {name: 'ÉµÉµi18nEnd', moduleName: CORE};\n  static i18nApply: o.ExternalReference = {name: 'ÉµÉµi18nApply', moduleName: CORE};\n  static i18nPostprocess: o.ExternalReference = {name: 'ÉµÉµi18nPostprocess', moduleName: CORE};\n  static i18nLocalize: o.ExternalReference = {name: 'ÉµÉµi18nLocalize', moduleName: CORE};\n\n  static load: o.ExternalReference = {name: 'ÉµÉµload', moduleName: CORE};\n\n  static pipe: o.ExternalReference = {name: 'ÉµÉµpipe', moduleName: CORE};\n\n  static projection: o.ExternalReference = {name: 'ÉµÉµprojection', moduleName: CORE};\n  static projectionDef: o.ExternalReference = {name: 'ÉµÉµprojectionDef', moduleName: CORE};\n\n  static reference: o.ExternalReference = {name: 'ÉµÉµreference', moduleName: CORE};\n\n  static inject: o.ExternalReference = {name: 'ÉµÉµinject', moduleName: CORE};\n\n  static injectAttribute: o.ExternalReference = {name: 'ÉµÉµinjectAttribute', moduleName: CORE};\n\n  static injectPipeChangeDetectorRef:\n      o.ExternalReference = {name: 'ÉµÉµinjectPipeChangeDetectorRef', moduleName: CORE};\n\n  static directiveInject: o.ExternalReference = {name: 'ÉµÉµdirectiveInject', moduleName: CORE};\n\n  static templateRefExtractor:\n      o.ExternalReference = {name: 'ÉµÉµtemplateRefExtractor', moduleName: CORE};\n\n  static resolveWindow: o.ExternalReference = {name: 'ÉµÉµresolveWindow', moduleName: CORE};\n  static resolveDocument: o.ExternalReference = {name: 'ÉµÉµresolveDocument', moduleName: CORE};\n  static resolveBody: o.ExternalReference = {name: 'ÉµÉµresolveBody', moduleName: CORE};\n\n  static defineBase: o.ExternalReference = {name: 'ÉµÉµdefineBase', moduleName: CORE};\n\n  static BaseDef: o.ExternalReference = {\n    name: 'ÉµÉµBaseDef',\n    moduleName: CORE,\n  };\n\n  static defineComponent: o.ExternalReference = {name: 'ÉµÉµdefineComponent', moduleName: CORE};\n\n  static setComponentScope: o.ExternalReference = {name: 'ÉµÉµsetComponentScope', moduleName: CORE};\n\n  static ComponentDefWithMeta: o.ExternalReference = {\n    name: 'ÉµÉµComponentDefWithMeta',\n    moduleName: CORE,\n  };\n\n  static defineDirective: o.ExternalReference = {\n    name: 'ÉµÉµdefineDirective',\n    moduleName: CORE,\n  };\n\n  static DirectiveDefWithMeta: o.ExternalReference = {\n    name: 'ÉµÉµDirectiveDefWithMeta',\n    moduleName: CORE,\n  };\n\n  static InjectorDef: o.ExternalReference = {\n    name: 'ÉµÉµInjectorDef',\n    moduleName: CORE,\n  };\n\n  static defineInjector: o.ExternalReference = {\n    name: 'ÉµÉµdefineInjector',\n    moduleName: CORE,\n  };\n\n  static NgModuleDefWithMeta: o.ExternalReference = {\n    name: 'ÉµÉµNgModuleDefWithMeta',\n    moduleName: CORE,\n  };\n\n  static defineNgModule: o.ExternalReference = {name: 'ÉµÉµdefineNgModule', moduleName: CORE};\n  static setNgModuleScope: o.ExternalReference = {name: 'ÉµÉµsetNgModuleScope', moduleName: CORE};\n\n  static PipeDefWithMeta: o.ExternalReference = {name: 'ÉµÉµPipeDefWithMeta', moduleName: CORE};\n\n  static definePipe: o.ExternalReference = {name: 'ÉµÉµdefinePipe', moduleName: CORE};\n\n  static queryRefresh: o.ExternalReference = {name: 'ÉµÉµqueryRefresh', moduleName: CORE};\n  static viewQuery: o.ExternalReference = {name: 'ÉµÉµviewQuery', moduleName: CORE};\n  static staticViewQuery: o.ExternalReference = {name: 'ÉµÉµstaticViewQuery', moduleName: CORE};\n  static staticContentQuery: o.ExternalReference = {name: 'ÉµÉµstaticContentQuery', moduleName: CORE};\n  static loadViewQuery: o.ExternalReference = {name: 'ÉµÉµloadViewQuery', moduleName: CORE};\n  static contentQuery: o.ExternalReference = {name: 'ÉµÉµcontentQuery', moduleName: CORE};\n  static loadContentQuery: o.ExternalReference = {name: 'ÉµÉµloadContentQuery', moduleName: CORE};\n\n  static NgOnChangesFeature: o.ExternalReference = {name: 'ÉµÉµNgOnChangesFeature', moduleName: CORE};\n\n  static InheritDefinitionFeature:\n      o.ExternalReference = {name: 'ÉµÉµInheritDefinitionFeature', moduleName: CORE};\n\n  static ProvidersFeature: o.ExternalReference = {name: 'ÉµÉµProvidersFeature', moduleName: CORE};\n\n  static listener: o.ExternalReference = {name: 'ÉµÉµlistener', moduleName: CORE};\n\n  static getFactoryOf: o.ExternalReference = {\n    name: 'ÉµÉµgetFactoryOf',\n    moduleName: CORE,\n  };\n\n  static getInheritedFactory: o.ExternalReference = {\n    name: 'ÉµÉµgetInheritedFactory',\n    moduleName: CORE,\n  };\n\n  // sanitization-related functions\n  static sanitizeHtml: o.ExternalReference = {name: 'ÉµÉµsanitizeHtml', moduleName: CORE};\n  static sanitizeStyle: o.ExternalReference = {name: 'ÉµÉµsanitizeStyle', moduleName: CORE};\n  static defaultStyleSanitizer:\n      o.ExternalReference = {name: 'ÉµÉµdefaultStyleSanitizer', moduleName: CORE};\n  static sanitizeResourceUrl:\n      o.ExternalReference = {name: 'ÉµÉµsanitizeResourceUrl', moduleName: CORE};\n  static sanitizeScript: o.ExternalReference = {name: 'ÉµÉµsanitizeScript', moduleName: CORE};\n  static sanitizeUrl: o.ExternalReference = {name: 'ÉµÉµsanitizeUrl', moduleName: CORE};\n  static sanitizeUrlOrResourceUrl:\n      o.ExternalReference = {name: 'ÉµÉµsanitizeUrlOrResourceUrl', moduleName: CORE};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $EOF = 0;\nexport const $BSPACE = 8;\nexport const $TAB = 9;\nexport const $LF = 10;\nexport const $VTAB = 11;\nexport const $FF = 12;\nexport const $CR = 13;\nexport const $SPACE = 32;\nexport const $BANG = 33;\nexport const $DQ = 34;\nexport const $HASH = 35;\nexport const $$ = 36;\nexport const $PERCENT = 37;\nexport const $AMPERSAND = 38;\nexport const $SQ = 39;\nexport const $LPAREN = 40;\nexport const $RPAREN = 41;\nexport const $STAR = 42;\nexport const $PLUS = 43;\nexport const $COMMA = 44;\nexport const $MINUS = 45;\nexport const $PERIOD = 46;\nexport const $SLASH = 47;\nexport const $COLON = 58;\nexport const $SEMICOLON = 59;\nexport const $LT = 60;\nexport const $EQ = 61;\nexport const $GT = 62;\nexport const $QUESTION = 63;\n\nexport const $0 = 48;\nexport const $7 = 55;\nexport const $9 = 57;\n\nexport const $A = 65;\nexport const $E = 69;\nexport const $F = 70;\nexport const $X = 88;\nexport const $Z = 90;\n\nexport const $LBRACKET = 91;\nexport const $BACKSLASH = 92;\nexport const $RBRACKET = 93;\nexport const $CARET = 94;\nexport const $_ = 95;\n\nexport const $a = 97;\nexport const $b = 98;\nexport const $e = 101;\nexport const $f = 102;\nexport const $n = 110;\nexport const $r = 114;\nexport const $t = 116;\nexport const $u = 117;\nexport const $v = 118;\nexport const $x = 120;\nexport const $z = 122;\n\nexport const $LBRACE = 123;\nexport const $BAR = 124;\nexport const $RBRACE = 125;\nexport const $NBSP = 160;\n\nexport const $PIPE = 124;\nexport const $TILDA = 126;\nexport const $AT = 64;\n\nexport const $BT = 96;\n\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n\nexport function isDigit(code: number): boolean {\n  return $0 <= code && code <= $9;\n}\n\nexport function isAsciiLetter(code: number): boolean {\n  return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n\nexport function isAsciiHexDigit(code: number): boolean {\n  return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\nexport function isNewLine(code: number): boolean {\n  return code === $LF || code === $CR;\n}\n\nexport function isOctalDigit(code: number): boolean {\n  return $0 <= code && code <= $7;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from './chars';\nimport {CompileIdentifierMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {error} from './util';\n\nexport class ParseLocation {\n  constructor(\n      public file: ParseSourceFile, public offset: number, public line: number,\n      public col: number) {}\n\n  toString(): string {\n    return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;\n  }\n\n  moveBy(delta: number): ParseLocation {\n    const source = this.file.content;\n    const len = source.length;\n    let offset = this.offset;\n    let line = this.line;\n    let col = this.col;\n    while (offset > 0 && delta < 0) {\n      offset--;\n      delta++;\n      const ch = source.charCodeAt(offset);\n      if (ch == chars.$LF) {\n        line--;\n        const priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n        col = priorLine > 0 ? offset - priorLine : offset;\n      } else {\n        col--;\n      }\n    }\n    while (offset < len && delta > 0) {\n      const ch = source.charCodeAt(offset);\n      offset++;\n      delta--;\n      if (ch == chars.$LF) {\n        line++;\n        col = 0;\n      } else {\n        col++;\n      }\n    }\n    return new ParseLocation(this.file, offset, line, col);\n  }\n\n  // Return the source around the location\n  // Up to `maxChars` or `maxLines` on each side of the location\n  getContext(maxChars: number, maxLines: number): {before: string, after: string}|null {\n    const content = this.file.content;\n    let startOffset = this.offset;\n\n    if (startOffset != null) {\n      if (startOffset > content.length - 1) {\n        startOffset = content.length - 1;\n      }\n      let endOffset = startOffset;\n      let ctxChars = 0;\n      let ctxLines = 0;\n\n      while (ctxChars < maxChars && startOffset > 0) {\n        startOffset--;\n        ctxChars++;\n        if (content[startOffset] == '\\n') {\n          if (++ctxLines == maxLines) {\n            break;\n          }\n        }\n      }\n\n      ctxChars = 0;\n      ctxLines = 0;\n      while (ctxChars < maxChars && endOffset < content.length - 1) {\n        endOffset++;\n        ctxChars++;\n        if (content[endOffset] == '\\n') {\n          if (++ctxLines == maxLines) {\n            break;\n          }\n        }\n      }\n\n      return {\n        before: content.substring(startOffset, this.offset),\n        after: content.substring(this.offset, endOffset + 1),\n      };\n    }\n\n    return null;\n  }\n}\n\nexport class ParseSourceFile {\n  constructor(public content: string, public url: string) {}\n}\n\nexport class ParseSourceSpan {\n  constructor(\n      public start: ParseLocation, public end: ParseLocation, public details: string|null = null) {}\n\n  toString(): string {\n    return this.start.file.content.substring(this.start.offset, this.end.offset);\n  }\n}\n\nexport const EMPTY_PARSE_LOCATION = new ParseLocation(new ParseSourceFile('', ''), 0, 0, 0);\nexport const EMPTY_SOURCE_SPAN = new ParseSourceSpan(EMPTY_PARSE_LOCATION, EMPTY_PARSE_LOCATION);\n\nexport enum ParseErrorLevel {\n  WARNING,\n  ERROR,\n}\n\nexport class ParseError {\n  constructor(\n      public span: ParseSourceSpan, public msg: string,\n      public level: ParseErrorLevel = ParseErrorLevel.ERROR) {}\n\n  contextualMessage(): string {\n    const ctx = this.span.start.getContext(100, 3);\n    return ctx ? `${this.msg} (\"${ctx.before}[${ParseErrorLevel[this.level]} ->]${ctx.after}\")` :\n                 this.msg;\n  }\n\n  toString(): string {\n    const details = this.span.details ? `, ${this.span.details}` : '';\n    return `${this.contextualMessage()}: ${this.span.start}${details}`;\n  }\n}\n\nexport function typeSourceSpan(kind: string, type: CompileIdentifierMetadata): ParseSourceSpan {\n  const moduleUrl = identifierModuleUrl(type);\n  const sourceFileName = moduleUrl != null ? `in ${kind} ${identifierName(type)} in ${moduleUrl}` :\n                                             `in ${kind} ${identifierName(type)}`;\n  const sourceFile = new ParseSourceFile('', sourceFileName);\n  return new ParseSourceSpan(\n      new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * Generates Source Span object for a given R3 Type for JIT mode.\n *\n * @param kind Component or Directive.\n * @param typeName name of the Component or Directive.\n * @param sourceUrl reference to Component or Directive source.\n * @returns instance of ParseSourceSpan that represent a given Component or Directive.\n */\nexport function r3JitTypeSourceSpan(\n    kind: string, typeName: string, sourceUrl: string): ParseSourceSpan {\n  const sourceFileName = `in ${kind} ${typeName} in ${sourceUrl}`;\n  const sourceFile = new ParseSourceFile('', sourceFileName);\n  return new ParseSourceSpan(\n      new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '../core';\nimport {AST, BindingType, BoundElementProperty, ParsedEvent, ParsedEventType} from '../expression_parser/ast';\nimport {AST as I18nAST} from '../i18n/i18n_ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit<Result>(visitor: Visitor<Result>): Result;\n}\n\nexport class Text implements Node {\n  constructor(public value: string, public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitText(this); }\n}\n\nexport class BoundText implements Node {\n  constructor(public value: AST, public sourceSpan: ParseSourceSpan, public i18n?: I18nAST) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundText(this); }\n}\n\nexport class TextAttribute implements Node {\n  constructor(\n      public name: string, public value: string, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan, public i18n?: I18nAST) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitTextAttribute(this); }\n}\n\nexport class BoundAttribute implements Node {\n  constructor(\n      public name: string, public type: BindingType, public securityContext: SecurityContext,\n      public value: AST, public unit: string|null, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan, public i18n?: I18nAST) {}\n\n  static fromBoundElementProperty(prop: BoundElementProperty, i18n?: I18nAST) {\n    return new BoundAttribute(\n        prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan,\n        prop.valueSpan, i18n);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundAttribute(this); }\n}\n\nexport class BoundEvent implements Node {\n  constructor(\n      public name: string, public type: ParsedEventType, public handler: AST,\n      public target: string|null, public phase: string|null, public sourceSpan: ParseSourceSpan,\n      public handlerSpan: ParseSourceSpan) {}\n\n  static fromParsedEvent(event: ParsedEvent) {\n    const target: string|null = event.type === ParsedEventType.Regular ? event.targetOrPhase : null;\n    const phase: string|null =\n        event.type === ParsedEventType.Animation ? event.targetOrPhase : null;\n    return new BoundEvent(\n        event.name, event.type, event.handler, target, phase, event.sourceSpan, event.handlerSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundEvent(this); }\n}\n\nexport class Element implements Node {\n  constructor(\n      public name: string, public attributes: TextAttribute[], public inputs: BoundAttribute[],\n      public outputs: BoundEvent[], public children: Node[], public references: Reference[],\n      public sourceSpan: ParseSourceSpan, public startSourceSpan: ParseSourceSpan|null,\n      public endSourceSpan: ParseSourceSpan|null, public i18n?: I18nAST) {\n    // If the element is empty then the source span should include any closing tag\n    if (children.length === 0 && startSourceSpan && endSourceSpan) {\n      this.sourceSpan = new ParseSourceSpan(sourceSpan.start, endSourceSpan.end);\n    }\n  }\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitElement(this); }\n}\n\nexport class Template implements Node {\n  constructor(\n      public tagName: string, public attributes: TextAttribute[], public inputs: BoundAttribute[],\n      public outputs: BoundEvent[], public templateAttrs: (BoundAttribute|TextAttribute)[],\n      public children: Node[], public references: Reference[], public variables: Variable[],\n      public sourceSpan: ParseSourceSpan, public startSourceSpan: ParseSourceSpan|null,\n      public endSourceSpan: ParseSourceSpan|null, public i18n?: I18nAST) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitTemplate(this); }\n}\n\nexport class Content implements Node {\n  constructor(\n      public selector: string, public attributes: TextAttribute[],\n      public sourceSpan: ParseSourceSpan, public i18n?: I18nAST) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitContent(this); }\n}\n\nexport class Variable implements Node {\n  constructor(\n      public name: string, public value: string, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitVariable(this); }\n}\n\nexport class Reference implements Node {\n  constructor(\n      public name: string, public value: string, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitReference(this); }\n}\n\nexport class Icu implements Node {\n  constructor(\n      public vars: {[name: string]: BoundText},\n      public placeholders: {[name: string]: Text | BoundText}, public sourceSpan: ParseSourceSpan,\n      public i18n?: I18nAST) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitIcu(this); }\n}\n\nexport interface Visitor<Result = any> {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node): Result;\n\n  visitElement(element: Element): Result;\n  visitTemplate(template: Template): Result;\n  visitContent(content: Content): Result;\n  visitVariable(variable: Variable): Result;\n  visitReference(reference: Reference): Result;\n  visitTextAttribute(attribute: TextAttribute): Result;\n  visitBoundAttribute(attribute: BoundAttribute): Result;\n  visitBoundEvent(attribute: BoundEvent): Result;\n  visitText(text: Text): Result;\n  visitBoundText(text: BoundText): Result;\n  visitIcu(icu: Icu): Result;\n}\n\nexport class NullVisitor implements Visitor<void> {\n  visitElement(element: Element): void {}\n  visitTemplate(template: Template): void {}\n  visitContent(content: Content): void {}\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n  visitIcu(icu: Icu): void {}\n}\n\nexport class RecursiveVisitor implements Visitor<void> {\n  visitElement(element: Element): void {\n    visitAll(this, element.attributes);\n    visitAll(this, element.children);\n    visitAll(this, element.references);\n  }\n  visitTemplate(template: Template): void {\n    visitAll(this, template.attributes);\n    visitAll(this, template.children);\n    visitAll(this, template.references);\n    visitAll(this, template.variables);\n  }\n  visitContent(content: Content): void {}\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n  visitIcu(icu: Icu): void {}\n}\n\nexport class TransformVisitor implements Visitor<Node> {\n  visitElement(element: Element): Node {\n    const newAttributes = transformAll(this, element.attributes);\n    const newInputs = transformAll(this, element.inputs);\n    const newOutputs = transformAll(this, element.outputs);\n    const newChildren = transformAll(this, element.children);\n    const newReferences = transformAll(this, element.references);\n    if (newAttributes != element.attributes || newInputs != element.inputs ||\n        newOutputs != element.outputs || newChildren != element.children ||\n        newReferences != element.references) {\n      return new Element(\n          element.name, newAttributes, newInputs, newOutputs, newChildren, newReferences,\n          element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    return element;\n  }\n\n  visitTemplate(template: Template): Node {\n    const newAttributes = transformAll(this, template.attributes);\n    const newInputs = transformAll(this, template.inputs);\n    const newOutputs = transformAll(this, template.outputs);\n    const newTemplateAttrs = transformAll(this, template.templateAttrs);\n    const newChildren = transformAll(this, template.children);\n    const newReferences = transformAll(this, template.references);\n    const newVariables = transformAll(this, template.variables);\n    if (newAttributes != template.attributes || newInputs != template.inputs ||\n        newOutputs != template.outputs || newTemplateAttrs != template.templateAttrs ||\n        newChildren != template.children || newReferences != template.references ||\n        newVariables != template.variables) {\n      return new Template(\n          template.tagName, newAttributes, newInputs, newOutputs, newTemplateAttrs, newChildren,\n          newReferences, newVariables, template.sourceSpan, template.startSourceSpan,\n          template.endSourceSpan);\n    }\n    return template;\n  }\n\n  visitContent(content: Content): Node { return content; }\n\n  visitVariable(variable: Variable): Node { return variable; }\n  visitReference(reference: Reference): Node { return reference; }\n  visitTextAttribute(attribute: TextAttribute): Node { return attribute; }\n  visitBoundAttribute(attribute: BoundAttribute): Node { return attribute; }\n  visitBoundEvent(attribute: BoundEvent): Node { return attribute; }\n  visitText(text: Text): Node { return text; }\n  visitBoundText(text: BoundText): Node { return text; }\n  visitIcu(icu: Icu): Node { return icu; }\n}\n\nexport function visitAll<Result>(visitor: Visitor<Result>, nodes: Node[]): Result[] {\n  const result: Result[] = [];\n  if (visitor.visit) {\n    for (const node of nodes) {\n      const newNode = visitor.visit(node) || node.visit(visitor);\n    }\n  } else {\n    for (const node of nodes) {\n      const newNode = node.visit(visitor);\n      if (newNode) {\n        result.push(newNode);\n      }\n    }\n  }\n  return result;\n}\n\nexport function transformAll<Result extends Node>(\n    visitor: Visitor<Node>, nodes: Result[]): Result[] {\n  const result: Result[] = [];\n  let changed = false;\n  for (const node of nodes) {\n    const newNode = node.visit(visitor);\n    if (newNode) {\n      result.push(newNode as Result);\n    }\n    changed = changed || newNode != node;\n  }\n  return changed ? result : nodes;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nexport class Message {\n  sources: MessageSpan[];\n\n  /**\n   * @param nodes message AST\n   * @param placeholders maps placeholder names to static content\n   * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n   * @param meaning\n   * @param description\n   * @param id\n   */\n  constructor(\n      public nodes: Node[], public placeholders: {[phName: string]: string},\n      public placeholderToMessage: {[phName: string]: Message}, public meaning: string,\n      public description: string, public id: string) {\n    if (nodes.length) {\n      this.sources = [{\n        filePath: nodes[0].sourceSpan.start.file.url,\n        startLine: nodes[0].sourceSpan.start.line + 1,\n        startCol: nodes[0].sourceSpan.start.col + 1,\n        endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n        endCol: nodes[0].sourceSpan.start.col + 1\n      }];\n    } else {\n      this.sources = [];\n    }\n  }\n}\n\n// line and columns indexes are 1 based\nexport interface MessageSpan {\n  filePath: string;\n  startLine: number;\n  startCol: number;\n  endLine: number;\n  endCol: number;\n}\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context?: any): any;\n}\n\nexport class Text implements Node {\n  constructor(public value: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitText(this, context); }\n}\n\n// TODO(vicb): do we really need this node (vs an array) ?\nexport class Container implements Node {\n  constructor(public children: Node[], public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitContainer(this, context); }\n}\n\nexport class Icu implements Node {\n  // TODO(issue/24571): remove '!'.\n  public expressionPlaceholder !: string;\n  constructor(\n      public expression: string, public type: string, public cases: {[k: string]: Node},\n      public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitIcu(this, context); }\n}\n\nexport class TagPlaceholder implements Node {\n  constructor(\n      public tag: string, public attrs: {[k: string]: string}, public startName: string,\n      public closeName: string, public children: Node[], public isVoid: boolean,\n      public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitTagPlaceholder(this, context); }\n}\n\nexport class Placeholder implements Node {\n  constructor(public value: string, public name: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitPlaceholder(this, context); }\n}\n\nexport class IcuPlaceholder implements Node {\n  constructor(public value: Icu, public name: string, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context?: any): any { return visitor.visitIcuPlaceholder(this, context); }\n}\n\nexport type AST = Message | Node;\n\nexport interface Visitor {\n  visitText(text: Text, context?: any): any;\n  visitContainer(container: Container, context?: any): any;\n  visitIcu(icu: Icu, context?: any): any;\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any;\n  visitPlaceholder(ph: Placeholder, context?: any): any;\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any;\n}\n\n// Clone the AST\nexport class CloneVisitor implements Visitor {\n  visitText(text: Text, context?: any): Text { return new Text(text.value, text.sourceSpan); }\n\n  visitContainer(container: Container, context?: any): Container {\n    const children = container.children.map(n => n.visit(this, context));\n    return new Container(children, container.sourceSpan);\n  }\n\n  visitIcu(icu: Icu, context?: any): Icu {\n    const cases: {[k: string]: Node} = {};\n    Object.keys(icu.cases).forEach(key => cases[key] = icu.cases[key].visit(this, context));\n    const msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n    msg.expressionPlaceholder = icu.expressionPlaceholder;\n    return msg;\n  }\n\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): TagPlaceholder {\n    const children = ph.children.map(n => n.visit(this, context));\n    return new TagPlaceholder(\n        ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n\n  visitPlaceholder(ph: Placeholder, context?: any): Placeholder {\n    return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n  }\n\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): IcuPlaceholder {\n    return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n  }\n}\n\n// Visit all the nodes recursively\nexport class RecurseVisitor implements Visitor {\n  visitText(text: Text, context?: any): any {}\n\n  visitContainer(container: Container, context?: any): any {\n    container.children.forEach(child => child.visit(this));\n  }\n\n  visitIcu(icu: Icu, context?: any): any {\n    Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n  }\n\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any {\n    ph.children.forEach(child => child.visit(this));\n  }\n\n  visitPlaceholder(ph: Placeholder, context?: any): any {}\n\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {utf8Encode} from '../util';\n\nimport * as i18n from './i18n_ast';\n\nexport function digest(message: i18n.Message): string {\n  return message.id || sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n\nexport function decimalDigest(message: i18n.Message): string {\n  if (message.id) {\n    return message.id;\n  }\n\n  const visitor = new _SerializerIgnoreIcuExpVisitor();\n  const parts = message.nodes.map(a => a.visit(visitor, null));\n  return computeMsgId(parts.join(''), message.meaning);\n}\n\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor implements i18n.Visitor {\n  visitText(text: i18n.Text, context: any): any { return text.value; }\n\n  visitContainer(container: i18n.Container, context: any): any {\n    return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n  }\n\n  visitIcu(icu: i18n.Icu, context: any): any {\n    const strCases =\n        Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context: any): any {\n    return ph.isVoid ?\n        `<ph tag name=\"${ph.startName}\"/>` :\n        `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context: any): any {\n    return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n  }\n}\n\nconst serializerVisitor = new _SerializerVisitor();\n\nexport function serializeNodes(nodes: i18n.Node[]): string[] {\n  return nodes.map(a => a.visit(serializerVisitor, null));\n}\n\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n  visitIcu(icu: i18n.Icu, context: any): any {\n    let strCases = Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    // Do not take the expression into account\n    return `{${icu.type}, ${strCases.join(', ')}}`;\n  }\n}\n\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nexport function sha1(str: string): string {\n  const utf8 = utf8Encode(str);\n  const words32 = stringToWords32(utf8, Endian.Big);\n  const len = utf8.length * 8;\n\n  const w = new Array(80);\n  let [a, b, c, d, e]: number[] = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  words32[len >> 5] |= 0x80 << (24 - len % 32);\n  words32[((len + 64 >> 9) << 4) + 15] = len;\n\n  for (let i = 0; i < words32.length; i += 16) {\n    const [h0, h1, h2, h3, h4]: number[] = [a, b, c, d, e];\n\n    for (let j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = words32[i + j];\n      } else {\n        w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n\n      const [f, k] = fk(j, b, c, d);\n      const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n      [e, d, c, b, a] = [d, c, rol32(b, 30), a, temp];\n    }\n\n    [a, b, c, d, e] = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)];\n  }\n\n  return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\n\nfunction fk(index: number, b: number, c: number, d: number): [number, number] {\n  if (index < 20) {\n    return [(b & c) | (~b & d), 0x5a827999];\n  }\n\n  if (index < 40) {\n    return [b ^ c ^ d, 0x6ed9eba1];\n  }\n\n  if (index < 60) {\n    return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n  }\n\n  return [b ^ c ^ d, 0xca62c1d6];\n}\n\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nexport function fingerprint(str: string): [number, number] {\n  const utf8 = utf8Encode(str);\n\n  let [hi, lo] = [hash32(utf8, 0), hash32(utf8, 102072)];\n\n  if (hi == 0 && (lo == 0 || lo == 1)) {\n    hi = hi ^ 0x130f9bef;\n    lo = lo ^ -0x6b5f56d8;\n  }\n\n  return [hi, lo];\n}\n\nexport function computeMsgId(msg: string, meaning: string): string {\n  let [hi, lo] = fingerprint(msg);\n\n  if (meaning) {\n    const [him, lom] = fingerprint(meaning);\n    [hi, lo] = add64(rol64([hi, lo], 1), [him, lom]);\n  }\n\n  return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\n\nfunction hash32(str: string, c: number): number {\n  let [a, b] = [0x9e3779b9, 0x9e3779b9];\n  let i: number;\n\n  const len = str.length;\n\n  for (i = 0; i + 12 <= len; i += 12) {\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    c = add32(c, wordAt(str, i + 8, Endian.Little));\n    [a, b, c] = mix([a, b, c]);\n  }\n\n  a = add32(a, wordAt(str, i, Endian.Little));\n  b = add32(b, wordAt(str, i + 4, Endian.Little));\n  // the first byte of c is reserved for the length\n  c = add32(c, len);\n  c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n\n  return mix([a, b, c])[2];\n}\n\n// clang-format off\nfunction mix([a, b, c]: [number, number, number]): [number, number, number] {\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 13;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 8;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 13;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 12;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 16;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 5;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 3;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 10;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 15;\n  return [a, b, c];\n}\n// clang-format on\n\n// Utils\n\nenum Endian {\n  Little,\n  Big,\n}\n\nfunction add32(a: number, b: number): number {\n  return add32to64(a, b)[1];\n}\n\nfunction add32to64(a: number, b: number): [number, number] {\n  const low = (a & 0xffff) + (b & 0xffff);\n  const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n  return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n\nfunction add64([ah, al]: [number, number], [bh, bl]: [number, number]): [number, number] {\n  const [carry, l] = add32to64(al, bl);\n  const h = add32(add32(ah, bh), carry);\n  return [h, l];\n}\n\nfunction sub32(a: number, b: number): number {\n  const low = (a & 0xffff) - (b & 0xffff);\n  const high = (a >> 16) - (b >> 16) + (low >> 16);\n  return (high << 16) | (low & 0xffff);\n}\n\n// Rotate a 32b number left `count` position\nfunction rol32(a: number, count: number): number {\n  return (a << count) | (a >>> (32 - count));\n}\n\n// Rotate a 64b number left `count` position\nfunction rol64([hi, lo]: [number, number], count: number): [number, number] {\n  const h = (hi << count) | (lo >>> (32 - count));\n  const l = (lo << count) | (hi >>> (32 - count));\n  return [h, l];\n}\n\nfunction stringToWords32(str: string, endian: Endian): number[] {\n  const words32 = Array((str.length + 3) >>> 2);\n\n  for (let i = 0; i < words32.length; i++) {\n    words32[i] = wordAt(str, i * 4, endian);\n  }\n\n  return words32;\n}\n\nfunction byteAt(str: string, index: number): number {\n  return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n\nfunction wordAt(str: string, index: number, endian: Endian): number {\n  let word = 0;\n  if (endian === Endian.Big) {\n    for (let i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << (24 - 8 * i);\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << 8 * i;\n    }\n  }\n  return word;\n}\n\nfunction words32ToByteString(words32: number[]): string {\n  return words32.reduce((str, word) => str + word32ToByteString(word), '');\n}\n\nfunction word32ToByteString(word: number): string {\n  let str = '';\n  for (let i = 0; i < 4; i++) {\n    str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n  }\n  return str;\n}\n\nfunction byteStringToHexString(str: string): string {\n  let hex: string = '';\n  for (let i = 0; i < str.length; i++) {\n    const b = byteAt(str, i);\n    hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n  }\n  return hex.toLowerCase();\n}\n\n// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\nfunction byteStringToDecString(str: string): string {\n  let decimal = '';\n  let toThePower = '1';\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n    toThePower = numberTimesBigInt(256, toThePower);\n  }\n\n  return decimal.split('').reverse().join('');\n}\n\n// x and y decimal, lowest significant digit first\nfunction addBigInt(x: string, y: string): string {\n  let sum = '';\n  const len = Math.max(x.length, y.length);\n  for (let i = 0, carry = 0; i < len || carry; i++) {\n    const tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n    if (tmpSum >= 10) {\n      carry = 1;\n      sum += tmpSum - 10;\n    } else {\n      carry = 0;\n      sum += tmpSum;\n    }\n  }\n\n  return sum;\n}\n\nfunction numberTimesBigInt(num: number, b: string): string {\n  let product = '';\n  let bToThePower = b;\n  for (; num !== 0; num = num >>> 1) {\n    if (num & 1) product = addBigInt(product, bToThePower);\n    bToThePower = addBigInt(bToThePower, bToThePower);\n  }\n  return product;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as i18n from '../i18n_ast';\n\nexport abstract class Serializer {\n  // - The `placeholders` and `placeholderToMessage` properties are irrelevant in the input messages\n  // - The `id` contains the message id that the serializer is expected to use\n  // - Placeholder names are already map to public names using the provided mapper\n  abstract write(messages: i18n.Message[], locale: string|null): string;\n\n  abstract load(content: string, url: string):\n      {locale: string | null, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}};\n\n  abstract digest(message: i18n.Message): string;\n\n  // Creates a name mapper, see `PlaceholderMapper`\n  // Returning `null` means that no name mapping is used.\n  createNameMapper(message: i18n.Message): PlaceholderMapper|null { return null; }\n}\n\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n */\nexport interface PlaceholderMapper {\n  toPublicName(internalName: string): string|null;\n\n  toInternalName(publicName: string): string|null;\n}\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nexport class SimplePlaceholderMapper extends i18n.RecurseVisitor implements PlaceholderMapper {\n  private internalToPublic: {[k: string]: string} = {};\n  private publicToNextId: {[k: string]: number} = {};\n  private publicToInternal: {[k: string]: string} = {};\n\n  // create a mapping from the message\n  constructor(message: i18n.Message, private mapName: (name: string) => string) {\n    super();\n    message.nodes.forEach(node => node.visit(this));\n  }\n\n  toPublicName(internalName: string): string|null {\n    return this.internalToPublic.hasOwnProperty(internalName) ?\n        this.internalToPublic[internalName] :\n        null;\n  }\n\n  toInternalName(publicName: string): string|null {\n    return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n                                                              null;\n  }\n\n  visitText(text: i18n.Text, context?: any): any { return null; }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): any {\n    this.visitPlaceholderName(ph.startName);\n    super.visitTagPlaceholder(ph, context);\n    this.visitPlaceholderName(ph.closeName);\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): any { this.visitPlaceholderName(ph.name); }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    this.visitPlaceholderName(ph.name);\n  }\n\n  // XMB placeholders could only contains A-Z, 0-9 and _\n  private visitPlaceholderName(internalName: string): void {\n    if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n      return;\n    }\n\n    let publicName = this.mapName(internalName);\n\n    if (this.publicToInternal.hasOwnProperty(publicName)) {\n      // Create a new XMB when it has already been used\n      const nextId = this.publicToNextId[publicName];\n      this.publicToNextId[publicName] = nextId + 1;\n      publicName = `${publicName}_${nextId}`;\n    } else {\n      this.publicToNextId[publicName] = 1;\n    }\n\n    this.internalToPublic[internalName] = publicName;\n    this.publicToInternal[publicName] = internalName;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface IVisitor {\n  visitTag(tag: Tag): any;\n  visitText(text: Text): any;\n  visitDeclaration(decl: Declaration): any;\n  visitDoctype(doctype: Doctype): any;\n}\n\nclass _Visitor implements IVisitor {\n  visitTag(tag: Tag): string {\n    const strAttrs = this._serializeAttributes(tag.attrs);\n\n    if (tag.children.length == 0) {\n      return `<${tag.name}${strAttrs}/>`;\n    }\n\n    const strChildren = tag.children.map(node => node.visit(this));\n    return `<${tag.name}${strAttrs}>${strChildren.join('')}</${tag.name}>`;\n  }\n\n  visitText(text: Text): string { return text.value; }\n\n  visitDeclaration(decl: Declaration): string {\n    return `<?xml${this._serializeAttributes(decl.attrs)} ?>`;\n  }\n\n  private _serializeAttributes(attrs: {[k: string]: string}) {\n    const strAttrs = Object.keys(attrs).map((name: string) => `${name}=\"${attrs[name]}\"`).join(' ');\n    return strAttrs.length > 0 ? ' ' + strAttrs : '';\n  }\n\n  visitDoctype(doctype: Doctype): any {\n    return `<!DOCTYPE ${doctype.rootTag} [\\n${doctype.dtd}\\n]>`;\n  }\n}\n\nconst _visitor = new _Visitor();\n\nexport function serialize(nodes: Node[]): string {\n  return nodes.map((node: Node): string => node.visit(_visitor)).join('');\n}\n\nexport interface Node { visit(visitor: IVisitor): any; }\n\nexport class Declaration implements Node {\n  public attrs: {[k: string]: string} = {};\n\n  constructor(unescapedAttrs: {[k: string]: string}) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = escapeXml(unescapedAttrs[k]);\n    });\n  }\n\n  visit(visitor: IVisitor): any { return visitor.visitDeclaration(this); }\n}\n\nexport class Doctype implements Node {\n  constructor(public rootTag: string, public dtd: string) {}\n\n  visit(visitor: IVisitor): any { return visitor.visitDoctype(this); }\n}\n\nexport class Tag implements Node {\n  public attrs: {[k: string]: string} = {};\n\n  constructor(\n      public name: string, unescapedAttrs: {[k: string]: string} = {},\n      public children: Node[] = []) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = escapeXml(unescapedAttrs[k]);\n    });\n  }\n\n  visit(visitor: IVisitor): any { return visitor.visitTag(this); }\n}\n\nexport class Text implements Node {\n  value: string;\n  constructor(unescapedValue: string) { this.value = escapeXml(unescapedValue); }\n\n  visit(visitor: IVisitor): any { return visitor.visitText(this); }\n}\n\nexport class CR extends Text {\n  constructor(ws: number = 0) { super(`\\n${new Array(ws + 1).join(' ')}`); }\n}\n\nconst _ESCAPED_CHARS: [RegExp, string][] = [\n  [/&/g, '&amp;'],\n  [/\"/g, '&quot;'],\n  [/'/g, '&apos;'],\n  [/</g, '&lt;'],\n  [/>/g, '&gt;'],\n];\n\n// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities\nexport function escapeXml(text: string): string {\n  return _ESCAPED_CHARS.reduce(\n      (text: string, entry: [RegExp, string]) => text.replace(entry[0], entry[1]), text);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _MESSAGES_TAG = 'messagebundle';\nconst _MESSAGE_TAG = 'msg';\nconst _PLACEHOLDER_TAG = 'ph';\nconst _EXAMPLE_TAG = 'ex';\nconst _SOURCE_TAG = 'source';\n\nconst _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\n\nexport class Xmb extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const exampleVisitor = new ExampleVisitor();\n    const visitor = new _Visitor();\n    let rootNode = new xml.Tag(_MESSAGES_TAG);\n\n    messages.forEach(message => {\n      const attrs: {[k: string]: string} = {id: message.id};\n\n      if (message.description) {\n        attrs['desc'] = message.description;\n      }\n\n      if (message.meaning) {\n        attrs['meaning'] = message.meaning;\n      }\n\n      let sourceTags: xml.Tag[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      rootNode.children.push(\n          new xml.CR(2),\n          new xml.Tag(_MESSAGE_TAG, attrs, [...sourceTags, ...visitor.serialize(message.nodes)]));\n    });\n\n    rootNode.children.push(new xml.CR());\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}),\n      new xml.CR(),\n      new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n      new xml.CR(),\n      exampleVisitor.addDefaultExamples(rootNode),\n      new xml.CR(),\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    throw new Error('Unsupported');\n  }\n\n  digest(message: i18n.Message): string { return digest(message); }\n\n\n  createNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\n\nclass _Visitor implements i18n.Visitor {\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const startTagAsText = new xml.Text(`<${ph.tag}>`);\n    const startEx = new xml.Tag(_EXAMPLE_TAG, {}, [startTagAsText]);\n    // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n    const startTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {name: ph.startName}, [startEx, startTagAsText]);\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const closeTagAsText = new xml.Text(`</${ph.tag}>`);\n    const closeEx = new xml.Tag(_EXAMPLE_TAG, {}, [closeTagAsText]);\n    // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n    const closeTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {name: ph.closeName}, [closeEx, closeTagAsText]);\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const interpolationAsText = new xml.Text(`{{${ph.value}}}`);\n    // Example tag needs to be not-empty for TC.\n    const exTag = new xml.Tag(_EXAMPLE_TAG, {}, [interpolationAsText]);\n    return [\n      // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n      new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag, interpolationAsText])\n    ];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const icuExpression = ph.value.expression;\n    const icuType = ph.value.type;\n    const icuCases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const icuAsText = new xml.Text(`{${icuExpression}, ${icuType}, ${icuCases}}`);\n    const exTag = new xml.Tag(_EXAMPLE_TAG, {}, [icuAsText]);\n    return [\n      // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n      new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag, icuAsText])\n    ];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\nexport function digest(message: i18n.Message): string {\n  return decimalDigest(message);\n}\n\n// TC requires at least one non-empty example on placeholders\nclass ExampleVisitor implements xml.IVisitor {\n  addDefaultExamples(node: xml.Node): xml.Node {\n    node.visit(this);\n    return node;\n  }\n\n  visitTag(tag: xml.Tag): void {\n    if (tag.name === _PLACEHOLDER_TAG) {\n      if (!tag.children || tag.children.length == 0) {\n        const exText = new xml.Text(tag.attrs['name'] || '...');\n        tag.children = [new xml.Tag(_EXAMPLE_TAG, {}, [exText])];\n      }\n    } else if (tag.children) {\n      tag.children.forEach(node => node.visit(this));\n    }\n  }\n\n  visitText(text: xml.Text): void {}\n  visitDeclaration(decl: xml.Declaration): void {}\n  visitDoctype(doctype: xml.Doctype): void {}\n}\n\n// XMB/XTB placeholders can only contain A-Z, 0-9 and _\nexport function toPublicName(internalName: string): string {\n  return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output_ast';\n\nexport type MapEntry = {\n  key: string,\n  quoted: boolean,\n  value: o.Expression\n};\n\nexport type MapLiteral = MapEntry[];\n\nexport function mapEntry(key: string, value: o.Expression): MapEntry {\n  return {key, value, quoted: false};\n}\n\nexport function mapLiteral(\n    obj: {[key: string]: o.Expression}, quoted: boolean = false): o.Expression {\n  return o.literalMap(Object.keys(obj).map(key => ({\n                                             key,\n                                             quoted,\n                                             value: obj[key],\n                                           })));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as i18n from '../../../i18n/i18n_ast';\nimport {toPublicName} from '../../../i18n/serializers/xmb';\nimport * as html from '../../../ml_parser/ast';\nimport {mapLiteral} from '../../../output/map_util';\nimport * as o from '../../../output/output_ast';\nimport {Identifiers as R3} from '../../r3_identifiers';\n\n\n/* Closure variables holding messages must be named `MSG_[A-Z0-9]+` */\nconst CLOSURE_TRANSLATION_PREFIX = 'MSG_';\n\n/* Prefix for non-`goog.getMsg` i18n-related vars */\nexport const TRANSLATION_PREFIX = 'I18N_';\n\n/** Closure uses `goog.getMsg(message)` to lookup translations */\nconst GOOG_GET_MSG = 'goog.getMsg';\n\n/** Name of the global variable that is used to determine if we use Closure translations or not */\nconst NG_I18N_CLOSURE_MODE = 'ngI18nClosureMode';\n\n/** I18n separators for metadata **/\nconst I18N_MEANING_SEPARATOR = '|';\nconst I18N_ID_SEPARATOR = '@@';\n\n/** Name of the i18n attributes **/\nexport const I18N_ATTR = 'i18n';\nexport const I18N_ATTR_PREFIX = 'i18n-';\n\n/** Prefix of var expressions used in ICUs */\nexport const I18N_ICU_VAR_PREFIX = 'VAR_';\n\n/** Prefix of ICU expressions for post processing */\nexport const I18N_ICU_MAPPING_PREFIX = 'I18N_EXP_';\n\n/** Placeholder wrapper for i18n expressions **/\nexport const I18N_PLACEHOLDER_SYMBOL = 'ï¿½';\n\nexport type I18nMeta = {\n  id?: string,\n  description?: string,\n  meaning?: string\n};\n\nfunction i18nTranslationToDeclStmt(\n    variable: o.ReadVarExpr, closureVar: o.ReadVarExpr, message: string, meta: I18nMeta,\n    params?: {[name: string]: o.Expression}): o.Statement[] {\n  const statements: o.Statement[] = [];\n  // var I18N_X;\n  statements.push(\n      new o.DeclareVarStmt(variable.name !, undefined, o.INFERRED_TYPE, null, variable.sourceSpan));\n\n  const args = [o.literal(message) as o.Expression];\n  if (params && Object.keys(params).length) {\n    args.push(mapLiteral(params, true));\n  }\n\n  // Closure JSDoc comments\n  const docStatements = i18nMetaToDocStmt(meta);\n  const thenStatements: o.Statement[] = docStatements ? [docStatements] : [];\n  const googFnCall = o.variable(GOOG_GET_MSG).callFn(args);\n  // const MSG_... = goog.getMsg(..);\n  thenStatements.push(closureVar.set(googFnCall).toConstDecl());\n  // I18N_X = MSG_...;\n  thenStatements.push(new o.ExpressionStatement(variable.set(closureVar)));\n  const localizeFnCall = o.importExpr(R3.i18nLocalize).callFn(args);\n  // I18N_X = i18nLocalize(...);\n  const elseStatements = [new o.ExpressionStatement(variable.set(localizeFnCall))];\n  // if(ngI18nClosureMode) { ... } else { ... }\n  statements.push(o.ifStmt(o.variable(NG_I18N_CLOSURE_MODE), thenStatements, elseStatements));\n\n  return statements;\n}\n\n// Converts i18n meta information for a message (id, description, meaning)\n// to a JsDoc statement formatted as expected by the Closure compiler.\nfunction i18nMetaToDocStmt(meta: I18nMeta): o.JSDocCommentStmt|null {\n  const tags: o.JSDocTag[] = [];\n  if (meta.description) {\n    tags.push({tagName: o.JSDocTagName.Desc, text: meta.description});\n  }\n  if (meta.meaning) {\n    tags.push({tagName: o.JSDocTagName.Meaning, text: meta.meaning});\n  }\n  return tags.length == 0 ? null : new o.JSDocCommentStmt(tags);\n}\n\nexport function isI18nAttribute(name: string): boolean {\n  return name === I18N_ATTR || name.startsWith(I18N_ATTR_PREFIX);\n}\n\nexport function isI18nRootNode(meta?: i18n.AST): meta is i18n.Message {\n  return meta instanceof i18n.Message;\n}\n\nexport function isSingleI18nIcu(meta?: i18n.AST): boolean {\n  return isI18nRootNode(meta) && meta.nodes.length === 1 && meta.nodes[0] instanceof i18n.Icu;\n}\n\nexport function hasI18nAttrs(element: html.Element): boolean {\n  return element.attrs.some((attr: html.Attribute) => isI18nAttribute(attr.name));\n}\n\nexport function metaFromI18nMessage(message: i18n.Message, id: string | null = null): I18nMeta {\n  return {\n    id: typeof id === 'string' ? id : message.id || '',\n    meaning: message.meaning || '',\n    description: message.description || ''\n  };\n}\n\nexport function icuFromI18nMessage(message: i18n.Message) {\n  return message.nodes[0] as i18n.IcuPlaceholder;\n}\n\nexport function wrapI18nPlaceholder(content: string | number, contextId: number = 0): string {\n  const blockId = contextId > 0 ? `:${contextId}` : '';\n  return `${I18N_PLACEHOLDER_SYMBOL}${content}${blockId}${I18N_PLACEHOLDER_SYMBOL}`;\n}\n\nexport function assembleI18nBoundString(\n    strings: string[], bindingStartIndex: number = 0, contextId: number = 0): string {\n  if (!strings.length) return '';\n  let acc = '';\n  const lastIdx = strings.length - 1;\n  for (let i = 0; i < lastIdx; i++) {\n    acc += `${strings[i]}${wrapI18nPlaceholder(bindingStartIndex + i, contextId)}`;\n  }\n  acc += strings[lastIdx];\n  return acc;\n}\n\nexport function getSeqNumberGenerator(startsAt: number = 0): () => number {\n  let current = startsAt;\n  return () => current++;\n}\n\nexport function placeholdersToParams(placeholders: Map<string, string[]>):\n    {[name: string]: o.Expression} {\n  const params: {[name: string]: o.Expression} = {};\n  placeholders.forEach((values: string[], key: string) => {\n    params[key] = o.literal(values.length > 1 ? `[${values.join('|')}]` : values[0]);\n  });\n  return params;\n}\n\nexport function updatePlaceholderMap(map: Map<string, any[]>, name: string, ...values: any[]) {\n  const current = map.get(name) || [];\n  current.push(...values);\n  map.set(name, current);\n}\n\nexport function assembleBoundTextPlaceholders(\n    meta: i18n.AST, bindingStartIndex: number = 0, contextId: number = 0): Map<string, any[]> {\n  const startIdx = bindingStartIndex;\n  const placeholders = new Map<string, any>();\n  const node =\n      meta instanceof i18n.Message ? meta.nodes.find(node => node instanceof i18n.Container) : meta;\n  if (node) {\n    (node as i18n.Container)\n        .children\n        .filter((child: i18n.Node): child is i18n.Placeholder => child instanceof i18n.Placeholder)\n        .forEach((child: i18n.Placeholder, idx: number) => {\n          const content = wrapI18nPlaceholder(startIdx + idx, contextId);\n          updatePlaceholderMap(placeholders, child.name, content);\n        });\n  }\n  return placeholders;\n}\n\nexport function findIndex(items: any[], callback: (item: any) => boolean): number {\n  for (let i = 0; i < items.length; i++) {\n    if (callback(items[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Parses i18n metas like:\n *  - \"@@id\",\n *  - \"description[@@id]\",\n *  - \"meaning|description[@@id]\"\n * and returns an object with parsed output.\n *\n * @param meta String that represents i18n meta\n * @returns Object with id, meaning and description fields\n */\nexport function parseI18nMeta(meta?: string): I18nMeta {\n  let id: string|undefined;\n  let meaning: string|undefined;\n  let description: string|undefined;\n\n  if (meta) {\n    const idIndex = meta.indexOf(I18N_ID_SEPARATOR);\n    const descIndex = meta.indexOf(I18N_MEANING_SEPARATOR);\n    let meaningAndDesc: string;\n    [meaningAndDesc, id] =\n        (idIndex > -1) ? [meta.slice(0, idIndex), meta.slice(idIndex + 2)] : [meta, ''];\n    [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n  }\n\n  return {id, meaning, description};\n}\n\n/**\n * Converts internal placeholder names to public-facing format\n * (for example to use in goog.getMsg call).\n * Example: `START_TAG_DIV_1` is converted to `startTagDiv_1`.\n *\n * @param name The placeholder name that should be formatted\n * @returns Formatted placeholder name\n */\nexport function formatI18nPlaceholderName(name: string, useCamelCase: boolean = true): string {\n  const publicName = toPublicName(name);\n  if (!useCamelCase) {\n    return publicName;\n  }\n  const chunks = publicName.split('_');\n  if (chunks.length === 1) {\n    // if no \"_\" found - just lowercase the value\n    return name.toLowerCase();\n  }\n  let postfix;\n  // eject last element if it's a number\n  if (/^\\d+$/.test(chunks[chunks.length - 1])) {\n    postfix = chunks.pop();\n  }\n  let raw = chunks.shift() !.toLowerCase();\n  if (chunks.length) {\n    raw += chunks.map(c => c.charAt(0).toUpperCase() + c.slice(1).toLowerCase()).join('');\n  }\n  return postfix ? `${raw}_${postfix}` : raw;\n}\n\n/**\n * Generates a prefix for translation const name.\n *\n * @param extra Additional local prefix that should be injected into translation var name\n * @returns Complete translation const prefix\n */\nexport function getTranslationConstPrefix(extra: string): string {\n  return `${CLOSURE_TRANSLATION_PREFIX}${extra}`.toUpperCase();\n}\n\n/**\n * Generates translation declaration statements.\n *\n * @param variable Translation value reference\n * @param closureVar Variable for Closure `goog.getMsg` calls\n * @param message Text message to be translated\n * @param meta Object that contains meta information (id, meaning and description)\n * @param params Object with placeholders key-value pairs\n * @param transformFn Optional transformation (post processing) function reference\n * @returns Array of Statements that represent a given translation\n */\nexport function getTranslationDeclStmts(\n    variable: o.ReadVarExpr, closureVar: o.ReadVarExpr, message: string, meta: I18nMeta,\n    params: {[name: string]: o.Expression} = {},\n    transformFn?: (raw: o.ReadVarExpr) => o.Expression): o.Statement[] {\n  const statements: o.Statement[] = [];\n\n  statements.push(...i18nTranslationToDeclStmt(variable, closureVar, message, meta, params));\n\n  if (transformFn) {\n    statements.push(new o.ExpressionStatement(variable.set(transformFn(variable))));\n  }\n\n  return statements;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstantPool} from '../../constant_pool';\nimport {Interpolation} from '../../expression_parser/ast';\nimport * as o from '../../output/output_ast';\nimport {ParseSourceSpan} from '../../parse_util';\nimport {splitAtColon} from '../../util';\nimport * as t from '../r3_ast';\n\nimport {R3QueryMetadata} from './api';\nimport {isI18nAttribute} from './i18n/util';\n\n\n/**\n * Checks whether an object key contains potentially unsafe chars, thus the key should be wrapped in\n * quotes. Note: we do not wrap all keys into quotes, as it may have impact on minification and may\n * bot work in some cases when object keys are mangled by minifier.\n *\n * TODO(FW-1136): this is a temporary solution, we need to come up with a better way of working with\n * inputs that contain potentially unsafe chars.\n */\nconst UNSAFE_OBJECT_KEY_NAME_REGEXP = /[-.]/;\n\n/** Name of the temporary to use during data binding */\nexport const TEMPORARY_NAME = '_t';\n\n/** Name of the context parameter passed into a template function */\nexport const CONTEXT_NAME = 'ctx';\n\n/** Name of the RenderFlag passed into a template function */\nexport const RENDER_FLAGS = 'rf';\n\n/** The prefix reference variables */\nexport const REFERENCE_PREFIX = '_r';\n\n/** The name of the implicit context reference */\nexport const IMPLICIT_REFERENCE = '$implicit';\n\n/** Non bindable attribute name **/\nexport const NON_BINDABLE_ATTR = 'ngNonBindable';\n\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nexport function temporaryAllocator(statements: o.Statement[], name: string): () => o.ReadVarExpr {\n  let temp: o.ReadVarExpr|null = null;\n  return () => {\n    if (!temp) {\n      statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n      temp = o.variable(name);\n    }\n    return temp;\n  };\n}\n\n\nexport function unsupported(this: void|Function, feature: string): never {\n  if (this) {\n    throw new Error(`Builder ${this.constructor.name} doesn't support ${feature} yet`);\n  }\n  throw new Error(`Feature ${feature} is not supported yet`);\n}\n\nexport function invalid<T>(this: t.Visitor, arg: o.Expression | o.Statement | t.Node): never {\n  throw new Error(\n      `Invalid state: Visitor ${this.constructor.name} doesn't handle ${arg.constructor.name}`);\n}\n\nexport function asLiteral(value: any): o.Expression {\n  if (Array.isArray(value)) {\n    return o.literalArr(value.map(asLiteral));\n  }\n  return o.literal(value, o.INFERRED_TYPE);\n}\n\nexport function conditionallyCreateMapObjectLiteral(\n    keys: {[key: string]: string | string[]}, keepDeclared?: boolean): o.Expression|null {\n  if (Object.getOwnPropertyNames(keys).length > 0) {\n    return mapToExpression(keys, keepDeclared);\n  }\n  return null;\n}\n\nfunction mapToExpression(\n    map: {[key: string]: string | string[]}, keepDeclared?: boolean): o.Expression {\n  return o.literalMap(Object.getOwnPropertyNames(map).map(key => {\n    // canonical syntax: `dirProp: publicProp`\n    // if there is no `:`, use dirProp = elProp\n    const value = map[key];\n    let declaredName: string;\n    let publicName: string;\n    let minifiedName: string;\n    if (Array.isArray(value)) {\n      [publicName, declaredName] = value;\n    } else {\n      [declaredName, publicName] = splitAtColon(key, [key, value]);\n    }\n    minifiedName = declaredName;\n    return {\n      key: minifiedName,\n      // put quotes around keys that contain potentially unsafe characters\n      quoted: UNSAFE_OBJECT_KEY_NAME_REGEXP.test(minifiedName),\n      value: (keepDeclared && publicName !== declaredName) ?\n          o.literalArr([asLiteral(publicName), asLiteral(declaredName)]) :\n          asLiteral(publicName)\n    };\n  }));\n}\n\n/**\n *  Remove trailing null nodes as they are implied.\n */\nexport function trimTrailingNulls(parameters: o.Expression[]): o.Expression[] {\n  while (o.isNull(parameters[parameters.length - 1])) {\n    parameters.pop();\n  }\n  return parameters;\n}\n\nexport function getQueryPredicate(\n    query: R3QueryMetadata, constantPool: ConstantPool): o.Expression {\n  if (Array.isArray(query.predicate)) {\n    let predicate: o.Expression[] = [];\n    query.predicate.forEach((selector: string): void => {\n      // Each item in predicates array may contain strings with comma-separated refs\n      // (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them\n      // as separate array entities\n      const selectors = selector.split(',').map(token => o.literal(token.trim()));\n      predicate.push(...selectors);\n    });\n    return constantPool.getConstLiteral(o.literalArr(predicate), true);\n  } else {\n    return query.predicate;\n  }\n}\n\nexport function noop() {}\n\nexport class DefinitionMap {\n  values: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  set(key: string, value: o.Expression|null): void {\n    if (value) {\n      this.values.push({key, value, quoted: false});\n    }\n  }\n\n  toLiteralMap(): o.LiteralMapExpr { return o.literalMap(this.values); }\n}\n\n/**\n * Extract a map of properties to values for a given element or template node, which can be used\n * by the directive matching machinery.\n *\n * @param elOrTpl the element or template in question\n * @return an object set up for directive matching. For attributes on the element/template, this\n * object maps a property name to its (static) value. For any bindings, this map simply maps the\n * property name to an empty string.\n */\nexport function getAttrsForDirectiveMatching(elOrTpl: t.Element | t.Template):\n    {[name: string]: string} {\n  const attributesMap: {[name: string]: string} = {};\n\n\n  if (elOrTpl instanceof t.Template && elOrTpl.tagName !== 'ng-template') {\n    elOrTpl.templateAttrs.forEach(a => attributesMap[a.name] = '');\n  } else {\n    elOrTpl.attributes.forEach(a => {\n      if (!isI18nAttribute(a.name)) {\n        attributesMap[a.name] = a.value;\n      }\n    });\n\n    elOrTpl.inputs.forEach(i => { attributesMap[i.name] = ''; });\n    elOrTpl.outputs.forEach(o => { attributesMap[o.name] = ''; });\n  }\n\n  return attributesMap;\n}\n\n/** Returns a call expression to a chained instruction, e.g. `property(params[0])(params[1])`. */\nexport function chainedInstruction(\n    reference: o.ExternalReference, calls: o.Expression[][], span?: ParseSourceSpan | null) {\n  let expression = o.importExpr(reference, null, span) as o.Expression;\n\n  if (calls.length > 0) {\n    for (let i = 0; i < calls.length; i++) {\n      expression = expression.callFn(calls[i], span);\n    }\n  } else {\n    // Add a blank invocation, in case the `calls` array is empty.\n    expression = expression.callFn([], span);\n  }\n\n  return expression;\n}\n\n/**\n * Gets the number of arguments expected to be passed to a generated instruction in the case of\n * interpolation instructions.\n * @param interpolation An interpolation ast\n */\nexport function getInterpolationArgsLength(interpolation: Interpolation) {\n  const {expressions, strings} = interpolation;\n  if (expressions.length === 1 && strings.length === 2 && strings[0] === '' && strings[1] === '') {\n    // If the interpolation has one interpolated value, but the prefix and suffix are both empty\n    // strings, we only pass one argument, to a special instruction like `propertyInterpolate` or\n    // `textInterpolate`.\n    return 1;\n  } else {\n    return expressions.length + strings.length;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileTypeMetadata, tokenReference} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {InjectFlags} from '../core';\nimport {Identifiers} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {Identifiers as R3} from '../render3/r3_identifiers';\nimport {OutputContext} from '../util';\n\nimport {unsupported} from './view/util';\n\n\n/**\n * Metadata required by the factory generator to generate a `factory` function for a type.\n */\nexport interface R3ConstructorFactoryMetadata {\n  /**\n   * String name of the type being generated (used to name the factory function).\n   */\n  name: string;\n\n  /**\n   * An expression representing the function (or constructor) which will instantiate the requested\n   * type.\n   *\n   * This could be a reference to a constructor type, or to a user-defined factory function. The\n   * `useNew` property determines whether it will be called as a constructor or not.\n   */\n  type: o.Expression;\n\n  /**\n   * Regardless of whether `fnOrClass` is a constructor function or a user-defined factory, it\n   * may have 0 or more parameters, which will be injected according to the `R3DependencyMetadata`\n   * for those parameters. If this is `null`, then the type's constructor is nonexistent and will\n   * be inherited from `fnOrClass` which is interpreted as the current type. If this is `'invalid'`,\n   * then one or more of the parameters wasn't resolvable and any attempt to use these deps will\n   * result in a runtime error.\n   */\n  deps: R3DependencyMetadata[]|'invalid'|null;\n\n  /**\n   * An expression for the function which will be used to inject dependencies. The API of this\n   * function could be different, and other options control how it will be invoked.\n   */\n  injectFn: o.ExternalReference;\n}\n\nexport enum R3FactoryDelegateType {\n  Class,\n  Function,\n  Factory,\n}\n\nexport interface R3DelegatedFactoryMetadata extends R3ConstructorFactoryMetadata {\n  delegate: o.Expression;\n  delegateType: R3FactoryDelegateType.Factory;\n}\n\nexport interface R3DelegatedFnOrClassMetadata extends R3ConstructorFactoryMetadata {\n  delegate: o.Expression;\n  delegateType: R3FactoryDelegateType.Class|R3FactoryDelegateType.Function;\n  delegateDeps: R3DependencyMetadata[];\n}\n\nexport interface R3ExpressionFactoryMetadata extends R3ConstructorFactoryMetadata {\n  expression: o.Expression;\n}\n\nexport type R3FactoryMetadata = R3ConstructorFactoryMetadata | R3DelegatedFactoryMetadata |\n    R3DelegatedFnOrClassMetadata | R3ExpressionFactoryMetadata;\n\n/**\n * Resolved type of a dependency.\n *\n * Occasionally, dependencies will have special significance which is known statically. In that\n * case the `R3ResolvedDependencyType` informs the factory generator that a particular dependency\n * should be generated specially (usually by calling a special injection function instead of the\n * standard one).\n */\nexport enum R3ResolvedDependencyType {\n  /**\n   * A normal token dependency.\n   */\n  Token = 0,\n\n  /**\n   * The dependency is for an attribute.\n   *\n   * The token expression is a string representing the attribute name.\n   */\n  Attribute = 1,\n\n  /**\n   * Injecting the `ChangeDetectorRef` token. Needs special handling when injected into a pipe.\n   */\n  ChangeDetectorRef = 2,\n}\n\n/**\n * Metadata representing a single dependency to be injected into a constructor or function call.\n */\nexport interface R3DependencyMetadata {\n  /**\n   * An expression representing the token or value to be injected.\n   */\n  token: o.Expression;\n\n  /**\n   * An enum indicating whether this dependency has special meaning to Angular and needs to be\n   * injected specially.\n   */\n  resolved: R3ResolvedDependencyType;\n\n  /**\n   * Whether the dependency has an @Host qualifier.\n   */\n  host: boolean;\n\n  /**\n   * Whether the dependency has an @Optional qualifier.\n   */\n  optional: boolean;\n\n  /**\n   * Whether the dependency has an @Self qualifier.\n   */\n  self: boolean;\n\n  /**\n   * Whether the dependency has an @SkipSelf qualifier.\n   */\n  skipSelf: boolean;\n}\n\n/**\n * Construct a factory function expression for the given `R3FactoryMetadata`.\n */\nexport function compileFactoryFunction(\n    meta: R3FactoryMetadata, isPipe = false): {factory: o.Expression, statements: o.Statement[]} {\n  const t = o.variable('t');\n  const statements: o.Statement[] = [];\n\n  // The type to instantiate via constructor invocation. If there is no delegated factory, meaning\n  // this type is always created by constructor invocation, then this is the type-to-create\n  // parameter provided by the user (t) if specified, or the current type if not. If there is a\n  // delegated factory (which is used to create the current type) then this is only the type-to-\n  // create parameter (t).\n  const typeForCtor =\n      !isDelegatedMetadata(meta) ? new o.BinaryOperatorExpr(o.BinaryOperator.Or, t, meta.type) : t;\n\n  let ctorExpr: o.Expression|null = null;\n  if (meta.deps !== null) {\n    // There is a constructor (either explicitly or implicitly defined).\n    if (meta.deps !== 'invalid') {\n      ctorExpr =\n          new o.InstantiateExpr(typeForCtor, injectDependencies(meta.deps, meta.injectFn, isPipe));\n    }\n  } else {\n    const baseFactory = o.variable(`Éµ${meta.name}_BaseFactory`);\n    const getInheritedFactory = o.importExpr(R3.getInheritedFactory);\n    const baseFactoryStmt =\n        baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(o.INFERRED_TYPE, [\n          o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n    statements.push(baseFactoryStmt);\n\n    // There is no constructor, use the base class' factory to construct typeForCtor.\n    ctorExpr = baseFactory.callFn([typeForCtor]);\n  }\n  const ctorExprFinal = ctorExpr;\n\n  const body: o.Statement[] = [];\n  let retExpr: o.Expression|null = null;\n\n  function makeConditionalFactory(nonCtorExpr: o.Expression): o.ReadVarExpr {\n    const r = o.variable('r');\n    body.push(r.set(o.NULL_EXPR).toDeclStmt());\n    let ctorStmt: o.Statement|null = null;\n    if (ctorExprFinal !== null) {\n      ctorStmt = r.set(ctorExprFinal).toStmt();\n    } else {\n      ctorStmt = makeErrorStmt(meta.name);\n    }\n    body.push(o.ifStmt(t, [ctorStmt], [r.set(nonCtorExpr).toStmt()]));\n    return r;\n  }\n\n  if (isDelegatedMetadata(meta) && meta.delegateType === R3FactoryDelegateType.Factory) {\n    const delegateFactory = o.variable(`Éµ${meta.name}_BaseFactory`);\n    const getFactoryOf = o.importExpr(R3.getFactoryOf);\n    if (meta.delegate.isEquivalent(meta.type)) {\n      throw new Error(`Illegal state: compiling factory that delegates to itself`);\n    }\n    const delegateFactoryStmt =\n        delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(o.INFERRED_TYPE, [\n          o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n\n    statements.push(delegateFactoryStmt);\n    retExpr = makeConditionalFactory(delegateFactory.callFn([]));\n  } else if (isDelegatedMetadata(meta)) {\n    // This type is created with a delegated factory. If a type parameter is not specified, call\n    // the factory instead.\n    const delegateArgs = injectDependencies(meta.delegateDeps, meta.injectFn, isPipe);\n    // Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.\n    const factoryExpr = new (\n        meta.delegateType === R3FactoryDelegateType.Class ?\n            o.InstantiateExpr :\n            o.InvokeFunctionExpr)(meta.delegate, delegateArgs);\n    retExpr = makeConditionalFactory(factoryExpr);\n  } else if (isExpressionFactoryMetadata(meta)) {\n    // TODO(alxhub): decide whether to lower the value here or in the caller\n    retExpr = makeConditionalFactory(meta.expression);\n  } else {\n    retExpr = ctorExpr;\n  }\n\n  if (retExpr !== null) {\n    body.push(new o.ReturnStatement(retExpr));\n  } else {\n    body.push(makeErrorStmt(meta.name));\n  }\n\n  return {\n    factory: o.fn(\n        [new o.FnParam('t', o.DYNAMIC_TYPE)], body, o.INFERRED_TYPE, undefined,\n        `${meta.name}_Factory`),\n    statements,\n  };\n}\n\nfunction injectDependencies(\n    deps: R3DependencyMetadata[], injectFn: o.ExternalReference, isPipe: boolean): o.Expression[] {\n  return deps.map(dep => compileInjectDependency(dep, injectFn, isPipe));\n}\n\nfunction compileInjectDependency(\n    dep: R3DependencyMetadata, injectFn: o.ExternalReference, isPipe: boolean): o.Expression {\n  // Interpret the dependency according to its resolved type.\n  switch (dep.resolved) {\n    case R3ResolvedDependencyType.Token:\n    case R3ResolvedDependencyType.ChangeDetectorRef:\n      // Build up the injection flags according to the metadata.\n      const flags = InjectFlags.Default | (dep.self ? InjectFlags.Self : 0) |\n          (dep.skipSelf ? InjectFlags.SkipSelf : 0) | (dep.host ? InjectFlags.Host : 0) |\n          (dep.optional ? InjectFlags.Optional : 0);\n\n      // If this dependency is optional or otherwise has non-default flags, then additional\n      // parameters describing how to inject the dependency must be passed to the inject function\n      // that's being used.\n      let flagsParam: o.LiteralExpr|null =\n          (flags !== InjectFlags.Default || dep.optional) ? o.literal(flags) : null;\n\n      // We have a separate instruction for injecting ChangeDetectorRef into a pipe.\n      if (isPipe && dep.resolved === R3ResolvedDependencyType.ChangeDetectorRef) {\n        return o.importExpr(R3.injectPipeChangeDetectorRef).callFn(flagsParam ? [flagsParam] : []);\n      }\n\n      // Build up the arguments to the injectFn call.\n      const injectArgs = [dep.token];\n      if (flagsParam) {\n        injectArgs.push(flagsParam);\n      }\n      return o.importExpr(injectFn).callFn(injectArgs);\n    case R3ResolvedDependencyType.Attribute:\n      // In the case of attributes, the attribute name in question is given as the token.\n      return o.importExpr(R3.injectAttribute).callFn([dep.token]);\n    default:\n      return unsupported(\n          `Unknown R3ResolvedDependencyType: ${R3ResolvedDependencyType[dep.resolved]}`);\n  }\n}\n\n/**\n * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n * `CompileTypeMetadata` instance.\n */\nexport function dependenciesFromGlobalMetadata(\n    type: CompileTypeMetadata, outputCtx: OutputContext,\n    reflector: CompileReflector): R3DependencyMetadata[] {\n  // Use the `CompileReflector` to look up references to some well-known Angular types. These will\n  // be compared with the token to statically determine whether the token has significance to\n  // Angular, and set the correct `R3ResolvedDependencyType` as a result.\n  const injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n\n  // Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.\n  const deps: R3DependencyMetadata[] = [];\n  for (let dependency of type.diDeps) {\n    if (dependency.token) {\n      const tokenRef = tokenReference(dependency.token);\n      let resolved: R3ResolvedDependencyType = dependency.isAttribute ?\n          R3ResolvedDependencyType.Attribute :\n          R3ResolvedDependencyType.Token;\n\n      // In the case of most dependencies, the token will be a reference to a type. Sometimes,\n      // however, it can be a string, in the case of older Angular code or @Attribute injection.\n      const token =\n          tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n\n      // Construct the dependency.\n      deps.push({\n        token,\n        resolved,\n        host: !!dependency.isHost,\n        optional: !!dependency.isOptional,\n        self: !!dependency.isSelf,\n        skipSelf: !!dependency.isSkipSelf,\n      });\n    } else {\n      unsupported('dependency without a token');\n    }\n  }\n\n  return deps;\n}\n\nfunction makeErrorStmt(name: string): o.Statement {\n  return new o.ThrowStmt(new o.InstantiateExpr(new o.ReadVarExpr('Error'), [\n    o.literal(\n        `${name} has a constructor which is not compatible with Dependency Injection. It should probably not be @Injectable().`)\n  ]));\n}\n\nfunction isDelegatedMetadata(meta: R3FactoryMetadata): meta is R3DelegatedFactoryMetadata|\n    R3DelegatedFnOrClassMetadata {\n  return (meta as any).delegateType !== undefined;\n}\n\nfunction isExpressionFactoryMetadata(meta: R3FactoryMetadata): meta is R3ExpressionFactoryMetadata {\n  return (meta as any).expression !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport * as o from '../output/output_ast';\nimport {OutputContext} from '../util';\n\n/**\n * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n */\nexport function mapToMapExpression(map: {[key: string]: o.Expression}): o.LiteralMapExpr {\n  const result = Object.keys(map).map(key => ({key, value: map[key], quoted: false}));\n  return o.literalMap(result);\n}\n\n/**\n * Convert metadata into an `Expression` in the given `OutputContext`.\n *\n * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n */\nexport function convertMetaToOutput(meta: any, ctx: OutputContext): o.Expression {\n  if (Array.isArray(meta)) {\n    return o.literalArr(meta.map(entry => convertMetaToOutput(entry, ctx)));\n  }\n  if (meta instanceof StaticSymbol) {\n    return ctx.importExpr(meta);\n  }\n  if (meta == null) {\n    return o.literal(meta);\n  }\n\n  throw new Error(`Internal error: Unsupported or unknown metadata: ${meta}`);\n}\n\nexport function typeWithParameters(type: o.Expression, numParams: number): o.ExpressionType {\n  let params: o.Type[]|null = null;\n  if (numParams > 0) {\n    params = [];\n    for (let i = 0; i < numParams; i++) {\n      params.push(o.DYNAMIC_TYPE);\n    }\n  }\n  return o.expressionType(type, null, params);\n}\n\nexport interface R3Reference {\n  value: o.Expression;\n  type: o.Expression;\n}\n\nconst ANIMATE_SYMBOL_PREFIX = '@';\nexport function prepareSyntheticPropertyName(name: string) {\n  return `${ANIMATE_SYMBOL_PREFIX}${name}`;\n}\n\nexport function prepareSyntheticListenerName(name: string, phase: string) {\n  return `${ANIMATE_SYMBOL_PREFIX}${name}.${phase}`;\n}\n\nexport function isSyntheticPropertyOrListener(name: string) {\n  return name.charAt(0) == ANIMATE_SYMBOL_PREFIX;\n}\n\nexport function getSyntheticPropertyName(name: string) {\n  // this will strip out listener phase values...\n  // @foo.start => @foo\n  const i = name.indexOf('.');\n  name = i > 0 ? name.substring(0, i) : name;\n  if (name.charAt(0) !== ANIMATE_SYMBOL_PREFIX) {\n    name = ANIMATE_SYMBOL_PREFIX + name;\n  }\n  return name;\n}\n\nexport function prepareSyntheticListenerFunctionName(name: string, phase: string) {\n  return `animation_${name}_${phase}`;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectFlags} from './core';\nimport {Identifiers} from './identifiers';\nimport * as o from './output/output_ast';\nimport {R3DependencyMetadata, R3FactoryDelegateType, R3FactoryMetadata, compileFactoryFunction} from './render3/r3_factory';\nimport {mapToMapExpression, typeWithParameters} from './render3/util';\n\nexport interface InjectableDef {\n  expression: o.Expression;\n  type: o.Type;\n  statements: o.Statement[];\n}\n\nexport interface R3InjectableMetadata {\n  name: string;\n  type: o.Expression;\n  typeArgumentCount: number;\n  ctorDeps: R3DependencyMetadata[]|'invalid'|null;\n  providedIn: o.Expression;\n  useClass?: o.Expression;\n  useFactory?: o.Expression;\n  useExisting?: o.Expression;\n  useValue?: o.Expression;\n  userDeps?: R3DependencyMetadata[];\n}\n\nexport function compileInjectable(meta: R3InjectableMetadata): InjectableDef {\n  let result: {factory: o.Expression, statements: o.Statement[]}|null = null;\n\n  const factoryMeta = {\n    name: meta.name,\n    type: meta.type,\n    deps: meta.ctorDeps,\n    injectFn: Identifiers.inject,\n  };\n\n  if (meta.useClass !== undefined) {\n    // meta.useClass has two modes of operation. Either deps are specified, in which case `new` is\n    // used to instantiate the class with dependencies injected, or deps are not specified and\n    // the factory of the class is used to instantiate it.\n    //\n    // A special case exists for useClass: Type where Type is the injectable type itself and no\n    // deps are specified, in which case 'useClass' is effectively ignored.\n\n    const useClassOnSelf = meta.useClass.isEquivalent(meta.type);\n    let deps: R3DependencyMetadata[]|undefined = undefined;\n    if (meta.userDeps !== undefined) {\n      deps = meta.userDeps;\n    }\n\n    if (deps !== undefined) {\n      // factory: () => new meta.useClass(...deps)\n      result = compileFactoryFunction({\n        ...factoryMeta,\n        delegate: meta.useClass,\n        delegateDeps: deps,\n        delegateType: R3FactoryDelegateType.Class,\n      });\n    } else if (useClassOnSelf) {\n      result = compileFactoryFunction(factoryMeta);\n    } else {\n      result = compileFactoryFunction({\n        ...factoryMeta,\n        delegate: meta.useClass,\n        delegateType: R3FactoryDelegateType.Factory,\n      });\n    }\n  } else if (meta.useFactory !== undefined) {\n    result = compileFactoryFunction({\n      ...factoryMeta,\n      delegate: meta.useFactory,\n      delegateDeps: meta.userDeps || [],\n      delegateType: R3FactoryDelegateType.Function,\n    });\n  } else if (meta.useValue !== undefined) {\n    // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n    // client code because meta.useValue is an Expression which will be defined even if the actual\n    // value is undefined.\n    result = compileFactoryFunction({\n      ...factoryMeta,\n      expression: meta.useValue,\n    });\n  } else if (meta.useExisting !== undefined) {\n    // useExisting is an `inject` call on the existing token.\n    result = compileFactoryFunction({\n      ...factoryMeta,\n      expression: o.importExpr(Identifiers.inject).callFn([meta.useExisting]),\n    });\n  } else {\n    result = compileFactoryFunction(factoryMeta);\n  }\n\n  const token = meta.type;\n  const providedIn = meta.providedIn;\n\n  const expression = o.importExpr(Identifiers.ÉµÉµdefineInjectable).callFn([mapToMapExpression(\n      {token, factory: result.factory, providedIn})]);\n  const type = new o.ExpressionType(o.importExpr(\n      Identifiers.InjectableDef, [typeWithParameters(meta.type, meta.typeArgumentCount)]));\n\n  return {\n    expression,\n    type,\n    statements: result.statements,\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function assertArrayOfStrings(identifier: string, value: any) {\n  if (value == null) {\n    return;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected '${identifier}' to be an array of strings.`);\n  }\n  for (let i = 0; i < value.length; i += 1) {\n    if (typeof value[i] !== 'string') {\n      throw new Error(`Expected '${identifier}' to be an array of strings.`);\n    }\n  }\n}\n\nconst UNUSABLE_INTERPOLATION_REGEXPS = [\n  /^\\s*$/,        // empty\n  /[<>]/,         // html tag\n  /^[{}]$/,       // i18n expansion\n  /&(#|[a-z])/i,  // character reference,\n  /^\\/\\//,        // comment\n];\n\nexport function assertInterpolationSymbols(identifier: string, value: any): void {\n  if (value != null && !(Array.isArray(value) && value.length == 2)) {\n    throw new Error(`Expected '${identifier}' to be an array, [start, end].`);\n  } else if (value != null) {\n    const start = value[0] as string;\n    const end = value[1] as string;\n    // Check for unusable interpolation symbols\n    UNUSABLE_INTERPOLATION_REGEXPS.forEach(regexp => {\n      if (regexp.test(start) || regexp.test(end)) {\n        throw new Error(`['${start}', '${end}'] contains unusable interpolation symbol.`);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertInterpolationSymbols} from '../assertions';\n\nexport class InterpolationConfig {\n  static fromArray(markers: [string, string]|null): InterpolationConfig {\n    if (!markers) {\n      return DEFAULT_INTERPOLATION_CONFIG;\n    }\n\n    assertInterpolationSymbols('interpolation', markers);\n    return new InterpolationConfig(markers[0], markers[1]);\n  }\n\n  constructor(public start: string, public end: string) {}\n}\n\nexport const DEFAULT_INTERPOLATION_CONFIG: InterpolationConfig =\n    new InterpolationConfig('{{', '}}');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {utf8Encode} from '../util';\n\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nconst VERSION = 3;\n\nconst JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\n\ntype Segment = {\n  col0: number,\n  sourceUrl?: string,\n  sourceLine0?: number,\n  sourceCol0?: number,\n};\n\nexport type SourceMap = {\n  version: number,\n  file?: string,\n  sourceRoot: string,\n  sources: string[],\n  sourcesContent: (string | null)[],\n  mappings: string,\n};\n\nexport class SourceMapGenerator {\n  private sourcesContent: Map<string, string|null> = new Map();\n  private lines: Segment[][] = [];\n  private lastCol0: number = 0;\n  private hasMappings = false;\n\n  constructor(private file: string|null = null) {}\n\n  // The content is `null` when the content is expected to be loaded using the URL\n  addSource(url: string, content: string|null = null): this {\n    if (!this.sourcesContent.has(url)) {\n      this.sourcesContent.set(url, content);\n    }\n    return this;\n  }\n\n  addLine(): this {\n    this.lines.push([]);\n    this.lastCol0 = 0;\n    return this;\n  }\n\n  addMapping(col0: number, sourceUrl?: string, sourceLine0?: number, sourceCol0?: number): this {\n    if (!this.currentLine) {\n      throw new Error(`A line must be added before mappings can be added`);\n    }\n    if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n      throw new Error(`Unknown source file \"${sourceUrl}\"`);\n    }\n    if (col0 == null) {\n      throw new Error(`The column in the generated code must be provided`);\n    }\n    if (col0 < this.lastCol0) {\n      throw new Error(`Mapping should be added in output order`);\n    }\n    if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n      throw new Error(`The source location must be provided when a source url is provided`);\n    }\n\n    this.hasMappings = true;\n    this.lastCol0 = col0;\n    this.currentLine.push({col0, sourceUrl, sourceLine0, sourceCol0});\n    return this;\n  }\n\n  private get currentLine(): Segment[]|null { return this.lines.slice(-1)[0]; }\n\n  toJSON(): SourceMap|null {\n    if (!this.hasMappings) {\n      return null;\n    }\n\n    const sourcesIndex = new Map<string, number>();\n    const sources: string[] = [];\n    const sourcesContent: (string | null)[] = [];\n\n    Array.from(this.sourcesContent.keys()).forEach((url: string, i: number) => {\n      sourcesIndex.set(url, i);\n      sources.push(url);\n      sourcesContent.push(this.sourcesContent.get(url) || null);\n    });\n\n    let mappings: string = '';\n    let lastCol0: number = 0;\n    let lastSourceIndex: number = 0;\n    let lastSourceLine0: number = 0;\n    let lastSourceCol0: number = 0;\n\n    this.lines.forEach(segments => {\n      lastCol0 = 0;\n\n      mappings += segments\n                      .map(segment => {\n                        // zero-based starting column of the line in the generated code\n                        let segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                        lastCol0 = segment.col0;\n\n                        if (segment.sourceUrl != null) {\n                          // zero-based index into the âsourcesâ list\n                          segAsStr +=\n                              toBase64VLQ(sourcesIndex.get(segment.sourceUrl) ! - lastSourceIndex);\n                          lastSourceIndex = sourcesIndex.get(segment.sourceUrl) !;\n                          // the zero-based starting line in the original source\n                          segAsStr += toBase64VLQ(segment.sourceLine0 ! - lastSourceLine0);\n                          lastSourceLine0 = segment.sourceLine0 !;\n                          // the zero-based starting column in the original source\n                          segAsStr += toBase64VLQ(segment.sourceCol0 ! - lastSourceCol0);\n                          lastSourceCol0 = segment.sourceCol0 !;\n                        }\n\n                        return segAsStr;\n                      })\n                      .join(',');\n      mappings += ';';\n    });\n\n    mappings = mappings.slice(0, -1);\n\n    return {\n      'file': this.file || '',\n      'version': VERSION,\n      'sourceRoot': '',\n      'sources': sources,\n      'sourcesContent': sourcesContent,\n      'mappings': mappings,\n    };\n  }\n\n  toJsComment(): string {\n    return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n                              '';\n  }\n}\n\nexport function toBase64String(value: string): string {\n  let b64 = '';\n  value = utf8Encode(value);\n  for (let i = 0; i < value.length;) {\n    const i1 = value.charCodeAt(i++);\n    const i2 = value.charCodeAt(i++);\n    const i3 = value.charCodeAt(i++);\n    b64 += toBase64Digit(i1 >> 2);\n    b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n    b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n    b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n  }\n\n  return b64;\n}\n\nfunction toBase64VLQ(value: number): string {\n  value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n\n  let out = '';\n  do {\n    let digit = value & 31;\n    value = value >> 5;\n    if (value > 0) {\n      digit = digit | 32;\n    }\n    out += toBase64Digit(digit);\n  } while (value > 0);\n\n  return out;\n}\n\nconst B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfunction toBase64Digit(value: number): string {\n  if (value < 0 || value >= 64) {\n    throw new Error(`Can only encode value in the range [0, 63]`);\n  }\n\n  return B64_DIGITS[value];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nimport * as o from './output_ast';\nimport {SourceMapGenerator} from './source_map';\n\nconst _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nconst _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nconst _INDENT_WITH = '  ';\nexport const CATCH_ERROR_VAR = o.variable('error', null, null);\nexport const CATCH_STACK_VAR = o.variable('stack', null, null);\n\nexport interface OutputEmitter {\n  emitStatements(genFilePath: string, stmts: o.Statement[], preamble?: string|null): string;\n}\n\nclass _EmittedLine {\n  partsLength = 0;\n  parts: string[] = [];\n  srcSpans: (ParseSourceSpan|null)[] = [];\n  constructor(public indent: number) {}\n}\n\nexport class EmitterVisitorContext {\n  static createRoot(): EmitterVisitorContext { return new EmitterVisitorContext(0); }\n\n  private _lines: _EmittedLine[];\n  private _classes: o.ClassStmt[] = [];\n  private _preambleLineCount = 0;\n\n  constructor(private _indent: number) { this._lines = [new _EmittedLine(_indent)]; }\n\n  private get _currentLine(): _EmittedLine { return this._lines[this._lines.length - 1]; }\n\n  println(from?: {sourceSpan: ParseSourceSpan | null}|null, lastPart: string = ''): void {\n    this.print(from || null, lastPart, true);\n  }\n\n  lineIsEmpty(): boolean { return this._currentLine.parts.length === 0; }\n\n  lineLength(): number {\n    return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n  }\n\n  print(from: {sourceSpan: ParseSourceSpan | null}|null, part: string, newLine: boolean = false) {\n    if (part.length > 0) {\n      this._currentLine.parts.push(part);\n      this._currentLine.partsLength += part.length;\n      this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n    }\n    if (newLine) {\n      this._lines.push(new _EmittedLine(this._indent));\n    }\n  }\n\n  removeEmptyLastLine() {\n    if (this.lineIsEmpty()) {\n      this._lines.pop();\n    }\n  }\n\n  incIndent() {\n    this._indent++;\n    if (this.lineIsEmpty()) {\n      this._currentLine.indent = this._indent;\n    }\n  }\n\n  decIndent() {\n    this._indent--;\n    if (this.lineIsEmpty()) {\n      this._currentLine.indent = this._indent;\n    }\n  }\n\n  pushClass(clazz: o.ClassStmt) { this._classes.push(clazz); }\n\n  popClass(): o.ClassStmt { return this._classes.pop() !; }\n\n  get currentClass(): o.ClassStmt|null {\n    return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n  }\n\n  toSource(): string {\n    return this.sourceLines\n        .map(l => l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : '')\n        .join('\\n');\n  }\n\n  toSourceMapGenerator(genFilePath: string, startsAtLine: number = 0): SourceMapGenerator {\n    const map = new SourceMapGenerator(genFilePath);\n\n    let firstOffsetMapped = false;\n    const mapFirstOffsetIfNeeded = () => {\n      if (!firstOffsetMapped) {\n        // Add a single space so that tools won't try to load the file from disk.\n        // Note: We are using virtual urls like `ng:///`, so we have to\n        // provide a content here.\n        map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n        firstOffsetMapped = true;\n      }\n    };\n\n    for (let i = 0; i < startsAtLine; i++) {\n      map.addLine();\n      mapFirstOffsetIfNeeded();\n    }\n\n    this.sourceLines.forEach((line, lineIdx) => {\n      map.addLine();\n\n      const spans = line.srcSpans;\n      const parts = line.parts;\n      let col0 = line.indent * _INDENT_WITH.length;\n      let spanIdx = 0;\n      // skip leading parts without source spans\n      while (spanIdx < spans.length && !spans[spanIdx]) {\n        col0 += parts[spanIdx].length;\n        spanIdx++;\n      }\n      if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n        firstOffsetMapped = true;\n      } else {\n        mapFirstOffsetIfNeeded();\n      }\n\n      while (spanIdx < spans.length) {\n        const span = spans[spanIdx] !;\n        const source = span.start.file;\n        const sourceLine = span.start.line;\n        const sourceCol = span.start.col;\n        map.addSource(source.url, source.content)\n            .addMapping(col0, source.url, sourceLine, sourceCol);\n\n        col0 += parts[spanIdx].length;\n        spanIdx++;\n\n        // assign parts without span or the same span to the previous segment\n        while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n          col0 += parts[spanIdx].length;\n          spanIdx++;\n        }\n      }\n    });\n\n    return map;\n  }\n\n  setPreambleLineCount(count: number) { return this._preambleLineCount = count; }\n\n  spanOf(line: number, column: number): ParseSourceSpan|null {\n    const emittedLine = this._lines[line - this._preambleLineCount];\n    if (emittedLine) {\n      let columnsLeft = column - _createIndent(emittedLine.indent).length;\n      for (let partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n        const part = emittedLine.parts[partIndex];\n        if (part.length > columnsLeft) {\n          return emittedLine.srcSpans[partIndex];\n        }\n        columnsLeft -= part.length;\n      }\n    }\n    return null;\n  }\n\n  private get sourceLines(): _EmittedLine[] {\n    if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n      return this._lines.slice(0, -1);\n    }\n    return this._lines;\n  }\n}\n\nexport abstract class AbstractEmitterVisitor implements o.StatementVisitor, o.ExpressionVisitor {\n  constructor(private _escapeDollarInStrings: boolean) {}\n\n  visitExpressionStmt(stmt: o.ExpressionStatement, ctx: EmitterVisitorContext): any {\n    stmt.expr.visitExpression(this, ctx);\n    ctx.println(stmt, ';');\n    return null;\n  }\n\n  visitReturnStmt(stmt: o.ReturnStatement, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `return `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, ';');\n    return null;\n  }\n\n  abstract visitCastExpr(ast: o.CastExpr, context: any): any;\n\n  abstract visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any;\n\n  visitIfStmt(stmt: o.IfStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `if (`);\n    stmt.condition.visitExpression(this, ctx);\n    ctx.print(stmt, `) {`);\n    const hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n    if (stmt.trueCase.length <= 1 && !hasElseCase) {\n      ctx.print(stmt, ` `);\n      this.visitAllStatements(stmt.trueCase, ctx);\n      ctx.removeEmptyLastLine();\n      ctx.print(stmt, ` `);\n    } else {\n      ctx.println();\n      ctx.incIndent();\n      this.visitAllStatements(stmt.trueCase, ctx);\n      ctx.decIndent();\n      if (hasElseCase) {\n        ctx.println(stmt, `} else {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.falseCase, ctx);\n        ctx.decIndent();\n      }\n    }\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  abstract visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any;\n\n  visitThrowStmt(stmt: o.ThrowStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `throw `);\n    stmt.error.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n  visitCommentStmt(stmt: o.CommentStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.multiline) {\n      ctx.println(stmt, `/* ${stmt.comment} */`);\n    } else {\n      stmt.comment.split('\\n').forEach((line) => { ctx.println(stmt, `// ${line}`); });\n    }\n    return null;\n  }\n  visitJSDocCommentStmt(stmt: o.JSDocCommentStmt, ctx: EmitterVisitorContext) {\n    ctx.println(stmt, `/*${stmt.toString()}*/`);\n    return null;\n  }\n\n  abstract visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any;\n\n  visitWriteVarExpr(expr: o.WriteVarExpr, ctx: EmitterVisitorContext): any {\n    const lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    ctx.print(expr, `${expr.name} = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n  visitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: EmitterVisitorContext): any {\n    const lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    expr.receiver.visitExpression(this, ctx);\n    ctx.print(expr, `[`);\n    expr.index.visitExpression(this, ctx);\n    ctx.print(expr, `] = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n  visitWritePropExpr(expr: o.WritePropExpr, ctx: EmitterVisitorContext): any {\n    const lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    expr.receiver.visitExpression(this, ctx);\n    ctx.print(expr, `.${expr.name} = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n  visitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: EmitterVisitorContext): any {\n    expr.receiver.visitExpression(this, ctx);\n    let name = expr.name;\n    if (expr.builtin != null) {\n      name = this.getBuiltinMethodName(expr.builtin);\n      if (name == null) {\n        // some builtins just mean to skip the call.\n        return null;\n      }\n    }\n    ctx.print(expr, `.${name}(`);\n    this.visitAllExpressions(expr.args, ctx, `,`);\n    ctx.print(expr, `)`);\n    return null;\n  }\n\n  abstract getBuiltinMethodName(method: o.BuiltinMethod): string;\n\n  visitInvokeFunctionExpr(expr: o.InvokeFunctionExpr, ctx: EmitterVisitorContext): any {\n    expr.fn.visitExpression(this, ctx);\n    ctx.print(expr, `(`);\n    this.visitAllExpressions(expr.args, ctx, ',');\n    ctx.print(expr, `)`);\n    return null;\n  }\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): any {\n    throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n  }\n  visitTypeofExpr(expr: o.TypeofExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(expr, 'typeof ');\n    expr.expr.visitExpression(this, ctx);\n  }\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: EmitterVisitorContext): any {\n    let varName = ast.name !;\n    if (ast.builtin != null) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n          varName = 'super';\n          break;\n        case o.BuiltinVar.This:\n          varName = 'this';\n          break;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR.name !;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR.name !;\n          break;\n        default:\n          throw new Error(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    ctx.print(ast, varName);\n    return null;\n  }\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    ast.classExpr.visitExpression(this, ctx);\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const value = ast.value;\n    if (typeof value === 'string') {\n      ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n    } else {\n      ctx.print(ast, `${value}`);\n    }\n    return null;\n  }\n\n  abstract visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any;\n\n  visitConditionalExpr(ast: o.ConditionalExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(`);\n    ast.condition.visitExpression(this, ctx);\n    ctx.print(ast, '? ');\n    ast.trueCase.visitExpression(this, ctx);\n    ctx.print(ast, ': ');\n    ast.falseCase !.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n  visitNotExpr(ast: o.NotExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, '!');\n    ast.condition.visitExpression(this, ctx);\n    return null;\n  }\n  visitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    ast.condition.visitExpression(this, ctx);\n    return null;\n  }\n  abstract visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any;\n  abstract visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, context: any): any;\n\n  visitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: EmitterVisitorContext): any {\n    let opStr: string;\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        opStr = '==';\n        break;\n      case o.BinaryOperator.Identical:\n        opStr = '===';\n        break;\n      case o.BinaryOperator.NotEquals:\n        opStr = '!=';\n        break;\n      case o.BinaryOperator.NotIdentical:\n        opStr = '!==';\n        break;\n      case o.BinaryOperator.And:\n        opStr = '&&';\n        break;\n      case o.BinaryOperator.BitwiseAnd:\n        opStr = '&';\n        break;\n      case o.BinaryOperator.Or:\n        opStr = '||';\n        break;\n      case o.BinaryOperator.Plus:\n        opStr = '+';\n        break;\n      case o.BinaryOperator.Minus:\n        opStr = '-';\n        break;\n      case o.BinaryOperator.Divide:\n        opStr = '/';\n        break;\n      case o.BinaryOperator.Multiply:\n        opStr = '*';\n        break;\n      case o.BinaryOperator.Modulo:\n        opStr = '%';\n        break;\n      case o.BinaryOperator.Lower:\n        opStr = '<';\n        break;\n      case o.BinaryOperator.LowerEquals:\n        opStr = '<=';\n        break;\n      case o.BinaryOperator.Bigger:\n        opStr = '>';\n        break;\n      case o.BinaryOperator.BiggerEquals:\n        opStr = '>=';\n        break;\n      default:\n        throw new Error(`Unknown operator ${ast.operator}`);\n    }\n    if (ast.parens) ctx.print(ast, `(`);\n    ast.lhs.visitExpression(this, ctx);\n    ctx.print(ast, ` ${opStr} `);\n    ast.rhs.visitExpression(this, ctx);\n    if (ast.parens) ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitReadPropExpr(ast: o.ReadPropExpr, ctx: EmitterVisitorContext): any {\n    ast.receiver.visitExpression(this, ctx);\n    ctx.print(ast, `.`);\n    ctx.print(ast, ast.name);\n    return null;\n  }\n  visitReadKeyExpr(ast: o.ReadKeyExpr, ctx: EmitterVisitorContext): any {\n    ast.receiver.visitExpression(this, ctx);\n    ctx.print(ast, `[`);\n    ast.index.visitExpression(this, ctx);\n    ctx.print(ast, `]`);\n    return null;\n  }\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `[`);\n    this.visitAllExpressions(ast.entries, ctx, ',');\n    ctx.print(ast, `]`);\n    return null;\n  }\n  visitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `{`);\n    this.visitAllObjects(entry => {\n      ctx.print(ast, `${escapeIdentifier(entry.key, this._escapeDollarInStrings, entry.quoted)}:`);\n      entry.value.visitExpression(this, ctx);\n    }, ast.entries, ctx, ',');\n    ctx.print(ast, `}`);\n    return null;\n  }\n  visitCommaExpr(ast: o.CommaExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, '(');\n    this.visitAllExpressions(ast.parts, ctx, ',');\n    ctx.print(ast, ')');\n    return null;\n  }\n  visitAllExpressions(expressions: o.Expression[], ctx: EmitterVisitorContext, separator: string):\n      void {\n    this.visitAllObjects(expr => expr.visitExpression(this, ctx), expressions, ctx, separator);\n  }\n\n  visitAllObjects<T>(\n      handler: (t: T) => void, expressions: T[], ctx: EmitterVisitorContext,\n      separator: string): void {\n    let incrementedIndent = false;\n    for (let i = 0; i < expressions.length; i++) {\n      if (i > 0) {\n        if (ctx.lineLength() > 80) {\n          ctx.print(null, separator, true);\n          if (!incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.incIndent();\n            ctx.incIndent();\n            incrementedIndent = true;\n          }\n        } else {\n          ctx.print(null, separator, false);\n        }\n      }\n      handler(expressions[i]);\n    }\n    if (incrementedIndent) {\n      // continuation are marked with double indent.\n      ctx.decIndent();\n      ctx.decIndent();\n    }\n  }\n\n  visitAllStatements(statements: o.Statement[], ctx: EmitterVisitorContext): void {\n    statements.forEach((stmt) => stmt.visitStatement(this, ctx));\n  }\n}\n\nexport function escapeIdentifier(\n    input: string, escapeDollar: boolean, alwaysQuote: boolean = true): any {\n  if (input == null) {\n    return null;\n  }\n  const body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, (...match: string[]) => {\n    if (match[0] == '$') {\n      return escapeDollar ? '\\\\$' : '$';\n    } else if (match[0] == '\\n') {\n      return '\\\\n';\n    } else if (match[0] == '\\r') {\n      return '\\\\r';\n    } else {\n      return `\\\\${match[0]}`;\n    }\n  });\n  const requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n  return requiresQuotes ? `'${body}'` : body;\n}\n\nfunction _createIndent(count: number): string {\n  let res = '';\n  for (let i = 0; i < count; i++) {\n    res += _INDENT_WITH;\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext} from './abstract_emitter';\nimport * as o from './output_ast';\n\nexport abstract class AbstractJsEmitterVisitor extends AbstractEmitterVisitor {\n  constructor() { super(false); }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    this._visitClassConstructor(stmt, ctx);\n\n    if (stmt.parent != null) {\n      ctx.print(stmt, `${stmt.name}.prototype = Object.create(`);\n      stmt.parent.visitExpression(this, ctx);\n      ctx.println(stmt, `.prototype);`);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(stmt, getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(stmt, method, ctx));\n    ctx.popClass();\n    return null;\n  }\n\n  private _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    if (stmt.constructorMethod != null) {\n      this._visitParams(stmt.constructorMethod.params, ctx);\n    }\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (stmt.constructorMethod != null) {\n      if (stmt.constructorMethod.body.length > 0) {\n        ctx.println(stmt, `var self = this;`);\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n      }\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n\n  private _visitClassGetter(stmt: o.ClassStmt, getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    ctx.println(\n        stmt,\n        `Object.defineProperty(${stmt.name}.prototype, '${getter.name}', { get: function() {`);\n    ctx.incIndent();\n    if (getter.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(getter.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}});`);\n  }\n\n  private _visitClassMethod(stmt: o.ClassStmt, method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `${stmt.name}.prototype.${method.name} = function(`);\n    this._visitParams(method.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (method.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(method.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `};`);\n  }\n\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): any {\n    throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n  }\n\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: EmitterVisitorContext): string|null {\n    if (ast.builtin === o.BuiltinVar.This) {\n      ctx.print(ast, 'self');\n    } else if (ast.builtin === o.BuiltinVar.Super) {\n      throw new Error(\n          `'super' needs to be handled at a parent ast node, not at the variable level!`);\n    } else {\n      super.visitReadVarExpr(ast, ctx);\n    }\n    return null;\n  }\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `var ${stmt.name}`);\n    if (stmt.value) {\n      ctx.print(stmt, ' = ');\n      stmt.value.visitExpression(this, ctx);\n    }\n    ctx.println(stmt, `;`);\n    return null;\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n  visitInvokeFunctionExpr(expr: o.InvokeFunctionExpr, ctx: EmitterVisitorContext): string|null {\n    const fnExpr = expr.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.currentClass !.parent !.visitExpression(this, ctx);\n      ctx.print(expr, `.call(this`);\n      if (expr.args.length > 0) {\n        ctx.print(expr, `, `);\n        this.visitAllExpressions(expr.args, ctx, ',');\n      }\n      ctx.print(expr, `)`);\n    } else {\n      super.visitInvokeFunctionExpr(expr, ctx);\n    }\n    return null;\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `function${ast.name ? ' ' + ast.name : ''}(`);\n    this._visitParams(ast.params, ctx);\n    ctx.println(ast, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const catchStmts =\n        [<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  private _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => ctx.print(null, param.name), params, ctx, ',');\n  }\n\n  getBuiltinMethodName(method: o.BuiltinMethod): string {\n    let name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {identifierName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n\n/**\n * A helper class to manage the evaluation of JIT generated code.\n */\nexport class JitEvaluator {\n  /**\n   *\n   * @param sourceUrl The URL of the generated code.\n   * @param statements An array of Angular statement AST nodes to be evaluated.\n   * @param reflector A helper used when converting the statements to executable code.\n   * @param createSourceMaps If true then create a source-map for the generated code and include it\n   * inline as a source-map comment.\n   * @returns A map of all the variables in the generated code.\n   */\n  evaluateStatements(\n      sourceUrl: string, statements: o.Statement[], reflector: CompileReflector,\n      createSourceMaps: boolean): {[key: string]: any} {\n    const converter = new JitEmitterVisitor(reflector);\n    const ctx = EmitterVisitorContext.createRoot();\n    // Ensure generated code is in strict mode\n    if (statements.length > 0 && !isUseStrictStatement(statements[0])) {\n      statements = [\n        o.literal('use strict').toStmt(),\n        ...statements,\n      ];\n    }\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return this.evaluateCode(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n  }\n\n  /**\n   * Evaluate a piece of JIT generated code.\n   * @param sourceUrl The URL of this generated code.\n   * @param ctx A context object that contains an AST of the code to be evaluated.\n   * @param vars A map containing the names and values of variables that the evaluated code might\n   * reference.\n   * @param createSourceMap If true then create a source-map for the generated code and include it\n   * inline as a source-map comment.\n   * @returns The result of evaluating the code.\n   */\n  evaluateCode(\n      sourceUrl: string, ctx: EmitterVisitorContext, vars: {[key: string]: any},\n      createSourceMap: boolean): any {\n    let fnBody = `\"use strict\";${ctx.toSource()}\\n//# sourceURL=${sourceUrl}`;\n    const fnArgNames: string[] = [];\n    const fnArgValues: any[] = [];\n    for (const argName in vars) {\n      fnArgValues.push(vars[argName]);\n      fnArgNames.push(argName);\n    }\n    if (createSourceMap) {\n      // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n      // E.g. ```\n      // function anonymous(a,b,c\n      // /**/) { ... }```\n      // We don't want to hard code this fact, so we auto detect it via an empty function first.\n      const emptyFn = new Function(...fnArgNames.concat('return null;')).toString();\n      const headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n      fnBody += `\\n${ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment()}`;\n    }\n    const fn = new Function(...fnArgNames.concat(fnBody));\n    return this.executeFunction(fn, fnArgValues);\n  }\n\n  /**\n   * Execute a JIT generated function by calling it.\n   *\n   * This method can be overridden in tests to capture the functions that are generated\n   * by this `JitEvaluator` class.\n   *\n   * @param fn A function to execute.\n   * @param args The arguments to pass to the function being executed.\n   * @returns The return value of the executed function.\n   */\n  executeFunction(fn: Function, args: any[]) { return fn(...args); }\n}\n\n/**\n * An Angular AST visitor that converts AST nodes into executable JavaScript code.\n */\nexport class JitEmitterVisitor extends AbstractJsEmitterVisitor {\n  private _evalArgNames: string[] = [];\n  private _evalArgValues: any[] = [];\n  private _evalExportedVars: string[] = [];\n\n  constructor(private reflector: CompileReflector) { super(); }\n\n  createReturnStmt(ctx: EmitterVisitorContext) {\n    const stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(\n        resultVar => new o.LiteralMapEntry(resultVar, o.variable(resultVar), false))));\n    stmt.visitStatement(this, ctx);\n  }\n\n  getArgs(): {[key: string]: any} {\n    const result: {[key: string]: any} = {};\n    for (let i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n    return null;\n  }\n\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): any {\n    this._emitReferenceToExternal(ast, ast.node, ctx);\n    return null;\n  }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareVarStmt(stmt, ctx);\n  }\n\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareFunctionStmt(stmt, ctx);\n  }\n\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareClassStmt(stmt, ctx);\n  }\n\n  private _emitReferenceToExternal(ast: o.Expression, value: any, ctx: EmitterVisitorContext):\n      void {\n    let id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      const name = identifierName({reference: value}) || 'val';\n      this._evalArgNames.push(`jit_${name}_${id}`);\n    }\n    ctx.print(ast, this._evalArgNames[id]);\n  }\n}\n\n\nfunction isUseStrictStatement(statement: o.Statement): boolean {\n  return statement.isEquivalent(o.literal('use strict').toStmt());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from '../compile_reflector';\nimport * as o from '../output/output_ast';\n\n/**\n * Implementation of `CompileReflector` which resolves references to @angular/core\n * symbols at runtime, according to a consumer-provided mapping.\n *\n * Only supports `resolveExternalReference`, all other methods throw.\n */\nexport class R3JitReflector implements CompileReflector {\n  constructor(private context: {[key: string]: any}) {}\n\n  resolveExternalReference(ref: o.ExternalReference): any {\n    // This reflector only handles @angular/core imports.\n    if (ref.moduleName !== '@angular/core') {\n      throw new Error(\n          `Cannot resolve external reference to ${ref.moduleName}, only references to @angular/core are supported.`);\n    }\n    if (!this.context.hasOwnProperty(ref.name !)) {\n      throw new Error(`No value provided for @angular/core symbol '${ref.name!}'.`);\n    }\n    return this.context[ref.name !];\n  }\n\n  parameters(typeOrFunc: any): any[][] { throw new Error('Not implemented.'); }\n\n  annotations(typeOrFunc: any): any[] { throw new Error('Not implemented.'); }\n\n  shallowAnnotations(typeOrFunc: any): any[] { throw new Error('Not implemented.'); }\n\n  tryAnnotations(typeOrFunc: any): any[] { throw new Error('Not implemented.'); }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[];} { throw new Error('Not implemented.'); }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean { throw new Error('Not implemented.'); }\n\n  guards(typeOrFunc: any): {[key: string]: any;} { throw new Error('Not implemented.'); }\n\n  componentModuleUrl(type: any, cmpMetadata: any): string { throw new Error('Not implemented.'); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileShallowModuleMetadata, identifierName} from '../compile_metadata';\nimport {InjectableCompiler} from '../injectable_compiler';\nimport {mapLiteral} from '../output/map_util';\nimport * as o from '../output/output_ast';\nimport {OutputContext} from '../util';\n\nimport {R3DependencyMetadata, compileFactoryFunction} from './r3_factory';\nimport {Identifiers as R3} from './r3_identifiers';\nimport {R3Reference, convertMetaToOutput, mapToMapExpression} from './util';\n\nexport interface R3NgModuleDef {\n  expression: o.Expression;\n  type: o.Type;\n  additionalStatements: o.Statement[];\n}\n\n/**\n * Metadata required by the module compiler to generate a `ngModuleDef` for a type.\n */\nexport interface R3NgModuleMetadata {\n  /**\n   * An expression representing the module type being compiled.\n   */\n  type: o.Expression;\n\n  /**\n   * An array of expressions representing the bootstrap components specified by the module.\n   */\n  bootstrap: R3Reference[];\n\n  /**\n   * An array of expressions representing the directives and pipes declared by the module.\n   */\n  declarations: R3Reference[];\n\n  /**\n   * An array of expressions representing the imports of the module.\n   */\n  imports: R3Reference[];\n\n  /**\n   * An array of expressions representing the exports of the module.\n   */\n  exports: R3Reference[];\n\n  /**\n   * Whether to emit the selector scope values (declarations, imports, exports) inline into the\n   * module definition, or to generate additional statements which patch them on. Inline emission\n   * does not allow components to be tree-shaken, but is useful for JIT mode.\n   */\n  emitInline: boolean;\n\n  /**\n   * Whether to generate closure wrappers for bootstrap, declarations, imports, and exports.\n   */\n  containsForwardDecls: boolean;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   */\n  schemas: R3Reference[]|null;\n\n  /** Unique ID or expression representing the unique ID of an NgModule. */\n  id: o.Expression|null;\n}\n\n/**\n * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n */\nexport function compileNgModule(meta: R3NgModuleMetadata): R3NgModuleDef {\n  const {\n    type: moduleType,\n    bootstrap,\n    declarations,\n    imports,\n    exports,\n    schemas,\n    containsForwardDecls,\n    emitInline,\n    id\n  } = meta;\n\n  const additionalStatements: o.Statement[] = [];\n  const definitionMap = {\n    type: moduleType\n  } as{\n    type: o.Expression,\n    bootstrap: o.Expression,\n    declarations: o.Expression,\n    imports: o.Expression,\n    exports: o.Expression,\n    schemas: o.LiteralArrayExpr,\n    id: o.Expression\n  };\n\n  // Only generate the keys in the metadata if the arrays have values.\n  if (bootstrap.length) {\n    definitionMap.bootstrap = refsToArray(bootstrap, containsForwardDecls);\n  }\n\n  // If requested to emit scope information inline, pass the declarations, imports and exports to\n  // the `ÉµÉµdefineNgModule` call. The JIT compilation uses this.\n  if (emitInline) {\n    if (declarations.length) {\n      definitionMap.declarations = refsToArray(declarations, containsForwardDecls);\n    }\n\n    if (imports.length) {\n      definitionMap.imports = refsToArray(imports, containsForwardDecls);\n    }\n\n    if (exports.length) {\n      definitionMap.exports = refsToArray(exports, containsForwardDecls);\n    }\n  }\n\n  // If not emitting inline, the scope information is not passed into `ÉµÉµdefineNgModule` as it would\n  // prevent tree-shaking of the declarations, imports and exports references.\n  else {\n    const setNgModuleScopeCall = generateSetNgModuleScopeCall(meta);\n    if (setNgModuleScopeCall !== null) {\n      additionalStatements.push(setNgModuleScopeCall);\n    }\n  }\n\n  if (schemas && schemas.length) {\n    definitionMap.schemas = o.literalArr(schemas.map(ref => ref.value));\n  }\n\n  if (id) {\n    definitionMap.id = id;\n  }\n\n  const expression = o.importExpr(R3.defineNgModule).callFn([mapToMapExpression(definitionMap)]);\n  const type = new o.ExpressionType(o.importExpr(R3.NgModuleDefWithMeta, [\n    new o.ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n    tupleTypeOf(exports)\n  ]));\n\n\n  return {expression, type, additionalStatements};\n}\n\n/**\n * Generates a function call to `ÉµÉµsetNgModuleScope` with all necessary information so that the\n * transitive module scope can be computed during runtime in JIT mode. This call is marked pure\n * such that the references to declarations, imports and exports may be elided causing these\n * symbols to become tree-shakeable.\n */\nfunction generateSetNgModuleScopeCall(meta: R3NgModuleMetadata): o.Statement|null {\n  const {type: moduleType, declarations, imports, exports, containsForwardDecls} = meta;\n\n  const scopeMap = {} as{\n    declarations: o.Expression,\n    imports: o.Expression,\n    exports: o.Expression,\n  };\n\n  if (declarations.length) {\n    scopeMap.declarations = refsToArray(declarations, containsForwardDecls);\n  }\n\n  if (imports.length) {\n    scopeMap.imports = refsToArray(imports, containsForwardDecls);\n  }\n\n  if (exports.length) {\n    scopeMap.exports = refsToArray(exports, containsForwardDecls);\n  }\n\n  if (Object.keys(scopeMap).length === 0) {\n    return null;\n  }\n\n  const fnCall = new o.InvokeFunctionExpr(\n      /* fn */ o.importExpr(R3.setNgModuleScope),\n      /* args */[moduleType, mapToMapExpression(scopeMap)],\n      /* type */ undefined,\n      /* sourceSpan */ undefined,\n      /* pure */ true);\n  return fnCall.toStmt();\n}\n\nexport interface R3InjectorDef {\n  expression: o.Expression;\n  type: o.Type;\n  statements: o.Statement[];\n}\n\nexport interface R3InjectorMetadata {\n  name: string;\n  type: o.Expression;\n  deps: R3DependencyMetadata[]|null;\n  providers: o.Expression|null;\n  imports: o.Expression[];\n}\n\nexport function compileInjector(meta: R3InjectorMetadata): R3InjectorDef {\n  const result = compileFactoryFunction({\n    name: meta.name,\n    type: meta.type,\n    deps: meta.deps,\n    injectFn: R3.inject,\n  });\n  const definitionMap = {\n    factory: result.factory,\n  } as{factory: o.Expression, providers: o.Expression, imports: o.Expression};\n\n  if (meta.providers !== null) {\n    definitionMap.providers = meta.providers;\n  }\n\n  if (meta.imports.length > 0) {\n    definitionMap.imports = o.literalArr(meta.imports);\n  }\n\n  const expression = o.importExpr(R3.defineInjector).callFn([mapToMapExpression(definitionMap)]);\n  const type =\n      new o.ExpressionType(o.importExpr(R3.InjectorDef, [new o.ExpressionType(meta.type)]));\n  return {expression, type, statements: result.statements};\n}\n\n// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.\nexport function compileNgModuleFromRender2(\n    ctx: OutputContext, ngModule: CompileShallowModuleMetadata,\n    injectableCompiler: InjectableCompiler): void {\n  const className = identifierName(ngModule.type) !;\n\n  const rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n  const rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n\n  const injectorDefArg = mapLiteral({\n    'factory':\n        injectableCompiler.factoryFor({type: ngModule.type, symbol: ngModule.type.reference}, ctx),\n    'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n    'imports': convertMetaToOutput([...rawImports, ...rawExports], ctx),\n  });\n\n  const injectorDef = o.importExpr(R3.defineInjector).callFn([injectorDefArg]);\n\n  ctx.statements.push(new o.ClassStmt(\n      /* name */ className,\n      /* parent */ null,\n      /* fields */[new o.ClassField(\n          /* name */ 'ngInjectorDef',\n          /* type */ o.INFERRED_TYPE,\n          /* modifiers */[o.StmtModifier.Static],\n          /* initializer */ injectorDef, )],\n      /* getters */[],\n      /* constructorMethod */ new o.ClassMethod(null, [], []),\n      /* methods */[]));\n}\n\nfunction accessExportScope(module: o.Expression): o.Expression {\n  const selectorScope = new o.ReadPropExpr(module, 'ngModuleDef');\n  return new o.ReadPropExpr(selectorScope, 'exported');\n}\n\nfunction tupleTypeOf(exp: R3Reference[]): o.Type {\n  const types = exp.map(ref => o.typeofExpr(ref.type));\n  return exp.length > 0 ? o.expressionType(o.literalArr(types)) : o.NONE_TYPE;\n}\n\nfunction refsToArray(refs: R3Reference[], shouldForwardDeclare: boolean): o.Expression {\n  const values = o.literalArr(refs.map(ref => ref.value));\n  return shouldForwardDeclare ? o.fn([], [new o.ReturnStatement(values)]) : values;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilePipeMetadata, identifierName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {DefinitionKind} from '../constant_pool';\nimport * as o from '../output/output_ast';\nimport {OutputContext, error} from '../util';\n\nimport {R3DependencyMetadata, compileFactoryFunction, dependenciesFromGlobalMetadata} from './r3_factory';\nimport {Identifiers as R3} from './r3_identifiers';\nimport {typeWithParameters} from './util';\n\nexport interface R3PipeMetadata {\n  /**\n   * Name of the pipe type.\n   */\n  name: string;\n\n  /**\n   * An expression representing a reference to the pipe itself.\n   */\n  type: o.Expression;\n\n  /**\n   * Number of generic type parameters of the type itself.\n   */\n  typeArgumentCount: number;\n\n  /**\n   * Name of the pipe.\n   */\n  pipeName: string;\n\n  /**\n   * Dependencies of the pipe's constructor.\n   */\n  deps: R3DependencyMetadata[]|null;\n\n  /**\n   * Whether the pipe is marked as pure.\n   */\n  pure: boolean;\n}\n\nexport function compilePipeFromMetadata(metadata: R3PipeMetadata) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  // e.g. `name: 'myPipe'`\n  definitionMapValues.push({key: 'name', value: o.literal(metadata.pipeName), quoted: false});\n\n  // e.g. `type: MyPipe`\n  definitionMapValues.push({key: 'type', value: metadata.type, quoted: false});\n\n  const templateFactory = compileFactoryFunction(\n      {\n        name: metadata.name,\n        type: metadata.type,\n        deps: metadata.deps,\n        injectFn: R3.directiveInject,\n      },\n      true);\n  definitionMapValues.push({key: 'factory', value: templateFactory.factory, quoted: false});\n\n  // e.g. `pure: true`\n  definitionMapValues.push({key: 'pure', value: o.literal(metadata.pure), quoted: false});\n\n  const expression = o.importExpr(R3.definePipe).callFn([o.literalMap(definitionMapValues)]);\n  const type = new o.ExpressionType(o.importExpr(R3.PipeDefWithMeta, [\n    typeWithParameters(metadata.type, metadata.typeArgumentCount),\n    new o.ExpressionType(new o.LiteralExpr(metadata.pipeName)),\n  ]));\n  return {expression, type, statements: templateFactory.statements};\n}\n\n/**\n * Write a pipe definition to the output context.\n */\nexport function compilePipeFromRender2(\n    outputCtx: OutputContext, pipe: CompilePipeMetadata, reflector: CompileReflector) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  const name = identifierName(pipe.type);\n  if (!name) {\n    return error(`Cannot resolve the name of ${pipe.type}`);\n  }\n\n  const metadata: R3PipeMetadata = {\n    name,\n    pipeName: pipe.name,\n    type: outputCtx.importExpr(pipe.type.reference),\n    typeArgumentCount: 0,\n    deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n    pure: pipe.pure,\n  };\n\n  const res = compilePipeFromMetadata(metadata);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Pipe);\n\n  outputCtx.statements.push(new o.ClassStmt(\n      /* name */ name,\n      /* parent */ null,\n      /* fields */[new o.ClassField(\n          /* name */ definitionField,\n          /* type */ o.INFERRED_TYPE,\n          /* modifiers */[o.StmtModifier.Static],\n          /* initializer */ res.expression)],\n      /* getters */[],\n      /* constructorMethod */ new o.ClassMethod(null, [], []),\n      /* methods */[]));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '../core';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport class ParserError {\n  public message: string;\n  constructor(\n      message: string, public input: string, public errLocation: string, public ctxLocation?: any) {\n    this.message = `Parser Error: ${message} ${errLocation} [${input}] in ${ctxLocation}`;\n  }\n}\n\nexport class ParseSpan {\n  constructor(public start: number, public end: number) {}\n}\n\nexport class AST {\n  constructor(public span: ParseSpan) {}\n  visit(visitor: AstVisitor, context: any = null): any { return null; }\n  toString(): string { return 'AST'; }\n}\n\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n  constructor(\n      span: ParseSpan, public prefix: string, public uninterpretedExpression: string,\n      public location: any) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any { return visitor.visitQuote(this, context); }\n  toString(): string { return 'Quote'; }\n}\n\nexport class EmptyExpr extends AST {\n  visit(visitor: AstVisitor, context: any = null) {\n    // do nothing\n  }\n}\n\nexport class ImplicitReceiver extends AST {\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitImplicitReceiver(this, context);\n  }\n}\n\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n  constructor(span: ParseSpan, public expressions: any[]) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any { return visitor.visitChain(this, context); }\n}\n\nexport class Conditional extends AST {\n  constructor(span: ParseSpan, public condition: AST, public trueExp: AST, public falseExp: AST) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitConditional(this, context);\n  }\n}\n\nexport class PropertyRead extends AST {\n  constructor(span: ParseSpan, public receiver: AST, public name: string) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyRead(this, context);\n  }\n}\n\nexport class PropertyWrite extends AST {\n  constructor(span: ParseSpan, public receiver: AST, public name: string, public value: AST) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyWrite(this, context);\n  }\n}\n\nexport class SafePropertyRead extends AST {\n  constructor(span: ParseSpan, public receiver: AST, public name: string) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafePropertyRead(this, context);\n  }\n}\n\nexport class KeyedRead extends AST {\n  constructor(span: ParseSpan, public obj: AST, public key: AST) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedRead(this, context);\n  }\n}\n\nexport class KeyedWrite extends AST {\n  constructor(span: ParseSpan, public obj: AST, public key: AST, public value: AST) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedWrite(this, context);\n  }\n}\n\nexport class BindingPipe extends AST {\n  constructor(span: ParseSpan, public exp: AST, public name: string, public args: any[]) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any { return visitor.visitPipe(this, context); }\n}\n\nexport class LiteralPrimitive extends AST {\n  constructor(span: ParseSpan, public value: any) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralPrimitive(this, context);\n  }\n}\n\nexport class LiteralArray extends AST {\n  constructor(span: ParseSpan, public expressions: any[]) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralArray(this, context);\n  }\n}\n\nexport type LiteralMapKey = {\n  key: string; quoted: boolean;\n};\n\nexport class LiteralMap extends AST {\n  constructor(span: ParseSpan, public keys: LiteralMapKey[], public values: any[]) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralMap(this, context);\n  }\n}\n\nexport class Interpolation extends AST {\n  constructor(span: ParseSpan, public strings: any[], public expressions: any[]) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitInterpolation(this, context);\n  }\n}\n\nexport class Binary extends AST {\n  constructor(span: ParseSpan, public operation: string, public left: AST, public right: AST) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitBinary(this, context);\n  }\n}\n\nexport class PrefixNot extends AST {\n  constructor(span: ParseSpan, public expression: AST) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPrefixNot(this, context);\n  }\n}\n\nexport class NonNullAssert extends AST {\n  constructor(span: ParseSpan, public expression: AST) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitNonNullAssert(this, context);\n  }\n}\n\nexport class MethodCall extends AST {\n  constructor(span: ParseSpan, public receiver: AST, public name: string, public args: any[]) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitMethodCall(this, context);\n  }\n}\n\nexport class SafeMethodCall extends AST {\n  constructor(span: ParseSpan, public receiver: AST, public name: string, public args: any[]) {\n    super(span);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafeMethodCall(this, context);\n  }\n}\n\nexport class FunctionCall extends AST {\n  constructor(span: ParseSpan, public target: AST|null, public args: any[]) { super(span); }\n  visit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitFunctionCall(this, context);\n  }\n}\n\n/**\n * Records the absolute position of a text span in a source file, where `start` and `end` are the\n * starting and ending byte offsets, respectively, of the text span in a source file.\n */\nexport class AbsoluteSourceSpan {\n  constructor(public start: number, public end: number) {}\n}\n\nexport class ASTWithSource extends AST {\n  public sourceSpan: AbsoluteSourceSpan;\n  constructor(\n      public ast: AST, public source: string|null, public location: string, absoluteOffset: number,\n      public errors: ParserError[]) {\n    super(new ParseSpan(0, source == null ? 0 : source.length));\n    this.sourceSpan = new AbsoluteSourceSpan(absoluteOffset, absoluteOffset + this.span.end);\n  }\n  visit(visitor: AstVisitor, context: any = null): any {\n    if (visitor.visitASTWithSource) {\n      return visitor.visitASTWithSource(this, context);\n    }\n    return this.ast.visit(visitor, context);\n  }\n  toString(): string { return `${this.source} in ${this.location}`; }\n}\n\nexport class TemplateBinding {\n  constructor(\n      public span: ParseSpan, public key: string, public keyIsVar: boolean, public name: string,\n      public expression: ASTWithSource|null) {}\n}\n\nexport interface AstVisitor {\n  visitBinary(ast: Binary, context: any): any;\n  visitChain(ast: Chain, context: any): any;\n  visitConditional(ast: Conditional, context: any): any;\n  visitFunctionCall(ast: FunctionCall, context: any): any;\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any;\n  visitInterpolation(ast: Interpolation, context: any): any;\n  visitKeyedRead(ast: KeyedRead, context: any): any;\n  visitKeyedWrite(ast: KeyedWrite, context: any): any;\n  visitLiteralArray(ast: LiteralArray, context: any): any;\n  visitLiteralMap(ast: LiteralMap, context: any): any;\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any;\n  visitMethodCall(ast: MethodCall, context: any): any;\n  visitPipe(ast: BindingPipe, context: any): any;\n  visitPrefixNot(ast: PrefixNot, context: any): any;\n  visitNonNullAssert(ast: NonNullAssert, context: any): any;\n  visitPropertyRead(ast: PropertyRead, context: any): any;\n  visitPropertyWrite(ast: PropertyWrite, context: any): any;\n  visitQuote(ast: Quote, context: any): any;\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any;\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any;\n  visitASTWithSource?(ast: ASTWithSource, context: any): any;\n  visit?(ast: AST, context?: any): any;\n}\n\nexport class NullAstVisitor implements AstVisitor {\n  visitBinary(ast: Binary, context: any): any {}\n  visitChain(ast: Chain, context: any): any {}\n  visitConditional(ast: Conditional, context: any): any {}\n  visitFunctionCall(ast: FunctionCall, context: any): any {}\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any {}\n  visitInterpolation(ast: Interpolation, context: any): any {}\n  visitKeyedRead(ast: KeyedRead, context: any): any {}\n  visitKeyedWrite(ast: KeyedWrite, context: any): any {}\n  visitLiteralArray(ast: LiteralArray, context: any): any {}\n  visitLiteralMap(ast: LiteralMap, context: any): any {}\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any {}\n  visitMethodCall(ast: MethodCall, context: any): any {}\n  visitPipe(ast: BindingPipe, context: any): any {}\n  visitPrefixNot(ast: PrefixNot, context: any): any {}\n  visitNonNullAssert(ast: NonNullAssert, context: any): any {}\n  visitPropertyRead(ast: PropertyRead, context: any): any {}\n  visitPropertyWrite(ast: PropertyWrite, context: any): any {}\n  visitQuote(ast: Quote, context: any): any {}\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any {}\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any {}\n}\n\nexport class RecursiveAstVisitor implements AstVisitor {\n  visitBinary(ast: Binary, context: any): any {\n    ast.left.visit(this, context);\n    ast.right.visit(this, context);\n    return null;\n  }\n  visitChain(ast: Chain, context: any): any { return this.visitAll(ast.expressions, context); }\n  visitConditional(ast: Conditional, context: any): any {\n    ast.condition.visit(this, context);\n    ast.trueExp.visit(this, context);\n    ast.falseExp.visit(this, context);\n    return null;\n  }\n  visitPipe(ast: BindingPipe, context: any): any {\n    ast.exp.visit(this, context);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n  visitFunctionCall(ast: FunctionCall, context: any): any {\n    ast.target !.visit(this, context);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any { return null; }\n  visitInterpolation(ast: Interpolation, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n  visitKeyedRead(ast: KeyedRead, context: any): any {\n    ast.obj.visit(this, context);\n    ast.key.visit(this, context);\n    return null;\n  }\n  visitKeyedWrite(ast: KeyedWrite, context: any): any {\n    ast.obj.visit(this, context);\n    ast.key.visit(this, context);\n    ast.value.visit(this, context);\n    return null;\n  }\n  visitLiteralArray(ast: LiteralArray, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n  visitLiteralMap(ast: LiteralMap, context: any): any { return this.visitAll(ast.values, context); }\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any { return null; }\n  visitMethodCall(ast: MethodCall, context: any): any {\n    ast.receiver.visit(this, context);\n    return this.visitAll(ast.args, context);\n  }\n  visitPrefixNot(ast: PrefixNot, context: any): any {\n    ast.expression.visit(this, context);\n    return null;\n  }\n  visitNonNullAssert(ast: NonNullAssert, context: any): any {\n    ast.expression.visit(this, context);\n    return null;\n  }\n  visitPropertyRead(ast: PropertyRead, context: any): any {\n    ast.receiver.visit(this, context);\n    return null;\n  }\n  visitPropertyWrite(ast: PropertyWrite, context: any): any {\n    ast.receiver.visit(this, context);\n    ast.value.visit(this, context);\n    return null;\n  }\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any {\n    ast.receiver.visit(this, context);\n    return null;\n  }\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any {\n    ast.receiver.visit(this, context);\n    return this.visitAll(ast.args, context);\n  }\n  visitAll(asts: AST[], context: any): any {\n    asts.forEach(ast => ast.visit(this, context));\n    return null;\n  }\n  visitQuote(ast: Quote, context: any): any { return null; }\n}\n\nexport class AstTransformer implements AstVisitor {\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): AST { return ast; }\n\n  visitInterpolation(ast: Interpolation, context: any): AST {\n    return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n  }\n\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): AST {\n    return new LiteralPrimitive(ast.span, ast.value);\n  }\n\n  visitPropertyRead(ast: PropertyRead, context: any): AST {\n    return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n\n  visitPropertyWrite(ast: PropertyWrite, context: any): AST {\n    return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n  }\n\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): AST {\n    return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n\n  visitMethodCall(ast: MethodCall, context: any): AST {\n    return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): AST {\n    return new SafeMethodCall(\n        ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n\n  visitFunctionCall(ast: FunctionCall, context: any): AST {\n    return new FunctionCall(ast.span, ast.target !.visit(this), this.visitAll(ast.args));\n  }\n\n  visitLiteralArray(ast: LiteralArray, context: any): AST {\n    return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n  }\n\n  visitLiteralMap(ast: LiteralMap, context: any): AST {\n    return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n  }\n\n  visitBinary(ast: Binary, context: any): AST {\n    return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n  }\n\n  visitPrefixNot(ast: PrefixNot, context: any): AST {\n    return new PrefixNot(ast.span, ast.expression.visit(this));\n  }\n\n  visitNonNullAssert(ast: NonNullAssert, context: any): AST {\n    return new NonNullAssert(ast.span, ast.expression.visit(this));\n  }\n\n  visitConditional(ast: Conditional, context: any): AST {\n    return new Conditional(\n        ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n  }\n\n  visitPipe(ast: BindingPipe, context: any): AST {\n    return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n  }\n\n  visitKeyedRead(ast: KeyedRead, context: any): AST {\n    return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n  }\n\n  visitKeyedWrite(ast: KeyedWrite, context: any): AST {\n    return new KeyedWrite(\n        ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n  }\n\n  visitAll(asts: any[]): any[] {\n    const res = new Array(asts.length);\n    for (let i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n\n  visitChain(ast: Chain, context: any): AST {\n    return new Chain(ast.span, this.visitAll(ast.expressions));\n  }\n\n  visitQuote(ast: Quote, context: any): AST {\n    return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n  }\n}\n\n// A transformer that only creates new nodes if the transformer makes a change or\n// a change is made a child node.\nexport class AstMemoryEfficientTransformer implements AstVisitor {\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): AST { return ast; }\n\n  visitInterpolation(ast: Interpolation, context: any): Interpolation {\n    const expressions = this.visitAll(ast.expressions);\n    if (expressions !== ast.expressions)\n      return new Interpolation(ast.span, ast.strings, expressions);\n    return ast;\n  }\n\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): AST { return ast; }\n\n  visitPropertyRead(ast: PropertyRead, context: any): AST {\n    const receiver = ast.receiver.visit(this);\n    if (receiver !== ast.receiver) {\n      return new PropertyRead(ast.span, receiver, ast.name);\n    }\n    return ast;\n  }\n\n  visitPropertyWrite(ast: PropertyWrite, context: any): AST {\n    const receiver = ast.receiver.visit(this);\n    const value = ast.value.visit(this);\n    if (receiver !== ast.receiver || value !== ast.value) {\n      return new PropertyWrite(ast.span, receiver, ast.name, value);\n    }\n    return ast;\n  }\n\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): AST {\n    const receiver = ast.receiver.visit(this);\n    if (receiver !== ast.receiver) {\n      return new SafePropertyRead(ast.span, receiver, ast.name);\n    }\n    return ast;\n  }\n\n  visitMethodCall(ast: MethodCall, context: any): AST {\n    const receiver = ast.receiver.visit(this);\n    const args = this.visitAll(ast.args);\n    if (receiver !== ast.receiver || args !== ast.args) {\n      return new MethodCall(ast.span, receiver, ast.name, args);\n    }\n    return ast;\n  }\n\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): AST {\n    const receiver = ast.receiver.visit(this);\n    const args = this.visitAll(ast.args);\n    if (receiver !== ast.receiver || args !== ast.args) {\n      return new SafeMethodCall(ast.span, receiver, ast.name, args);\n    }\n    return ast;\n  }\n\n  visitFunctionCall(ast: FunctionCall, context: any): AST {\n    const target = ast.target && ast.target.visit(this);\n    const args = this.visitAll(ast.args);\n    if (target !== ast.target || args !== ast.args) {\n      return new FunctionCall(ast.span, target, args);\n    }\n    return ast;\n  }\n\n  visitLiteralArray(ast: LiteralArray, context: any): AST {\n    const expressions = this.visitAll(ast.expressions);\n    if (expressions !== ast.expressions) {\n      return new LiteralArray(ast.span, expressions);\n    }\n    return ast;\n  }\n\n  visitLiteralMap(ast: LiteralMap, context: any): AST {\n    const values = this.visitAll(ast.values);\n    if (values !== ast.values) {\n      return new LiteralMap(ast.span, ast.keys, values);\n    }\n    return ast;\n  }\n\n  visitBinary(ast: Binary, context: any): AST {\n    const left = ast.left.visit(this);\n    const right = ast.right.visit(this);\n    if (left !== ast.left || right !== ast.right) {\n      return new Binary(ast.span, ast.operation, left, right);\n    }\n    return ast;\n  }\n\n  visitPrefixNot(ast: PrefixNot, context: any): AST {\n    const expression = ast.expression.visit(this);\n    if (expression !== ast.expression) {\n      return new PrefixNot(ast.span, expression);\n    }\n    return ast;\n  }\n\n  visitNonNullAssert(ast: NonNullAssert, context: any): AST {\n    const expression = ast.expression.visit(this);\n    if (expression !== ast.expression) {\n      return new NonNullAssert(ast.span, expression);\n    }\n    return ast;\n  }\n\n  visitConditional(ast: Conditional, context: any): AST {\n    const condition = ast.condition.visit(this);\n    const trueExp = ast.trueExp.visit(this);\n    const falseExp = ast.falseExp.visit(this);\n    if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== ast.falseExp) {\n      return new Conditional(ast.span, condition, trueExp, falseExp);\n    }\n    return ast;\n  }\n\n  visitPipe(ast: BindingPipe, context: any): AST {\n    const exp = ast.exp.visit(this);\n    const args = this.visitAll(ast.args);\n    if (exp !== ast.exp || args !== ast.args) {\n      return new BindingPipe(ast.span, exp, ast.name, args);\n    }\n    return ast;\n  }\n\n  visitKeyedRead(ast: KeyedRead, context: any): AST {\n    const obj = ast.obj.visit(this);\n    const key = ast.key.visit(this);\n    if (obj !== ast.obj || key !== ast.key) {\n      return new KeyedRead(ast.span, obj, key);\n    }\n    return ast;\n  }\n\n  visitKeyedWrite(ast: KeyedWrite, context: any): AST {\n    const obj = ast.obj.visit(this);\n    const key = ast.key.visit(this);\n    const value = ast.value.visit(this);\n    if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n      return new KeyedWrite(ast.span, obj, key, value);\n    }\n    return ast;\n  }\n\n  visitAll(asts: any[]): any[] {\n    const res = new Array(asts.length);\n    let modified = false;\n    for (let i = 0; i < asts.length; ++i) {\n      const original = asts[i];\n      const value = original.visit(this);\n      res[i] = value;\n      modified = modified || value !== original;\n    }\n    return modified ? res : asts;\n  }\n\n  visitChain(ast: Chain, context: any): AST {\n    const expressions = this.visitAll(ast.expressions);\n    if (expressions !== ast.expressions) {\n      return new Chain(ast.span, expressions);\n    }\n    return ast;\n  }\n\n  visitQuote(ast: Quote, context: any): AST { return ast; }\n}\n\nexport function visitAstChildren(ast: AST, visitor: AstVisitor, context?: any) {\n  function visit(ast: AST) {\n    visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n  }\n\n  function visitAll<T extends AST>(asts: T[]) { asts.forEach(visit); }\n\n  ast.visit({\n    visitBinary(ast) {\n      visit(ast.left);\n      visit(ast.right);\n    },\n    visitChain(ast) { visitAll(ast.expressions); },\n    visitConditional(ast) {\n      visit(ast.condition);\n      visit(ast.trueExp);\n      visit(ast.falseExp);\n    },\n    visitFunctionCall(ast) {\n      if (ast.target) {\n        visit(ast.target);\n      }\n      visitAll(ast.args);\n    },\n    visitImplicitReceiver(ast) {},\n    visitInterpolation(ast) { visitAll(ast.expressions); },\n    visitKeyedRead(ast) {\n      visit(ast.obj);\n      visit(ast.key);\n    },\n    visitKeyedWrite(ast) {\n      visit(ast.obj);\n      visit(ast.key);\n      visit(ast.obj);\n    },\n    visitLiteralArray(ast) { visitAll(ast.expressions); },\n    visitLiteralMap(ast) {},\n    visitLiteralPrimitive(ast) {},\n    visitMethodCall(ast) {\n      visit(ast.receiver);\n      visitAll(ast.args);\n    },\n    visitPipe(ast) {\n      visit(ast.exp);\n      visitAll(ast.args);\n    },\n    visitPrefixNot(ast) { visit(ast.expression); },\n    visitNonNullAssert(ast) { visit(ast.expression); },\n    visitPropertyRead(ast) { visit(ast.receiver); },\n    visitPropertyWrite(ast) {\n      visit(ast.receiver);\n      visit(ast.value);\n    },\n    visitQuote(ast) {},\n    visitSafeMethodCall(ast) {\n      visit(ast.receiver);\n      visitAll(ast.args);\n    },\n    visitSafePropertyRead(ast) { visit(ast.receiver); },\n  });\n}\n\n\n// Bindings\n\nexport class ParsedProperty {\n  public readonly isLiteral: boolean;\n  public readonly isAnimation: boolean;\n\n  constructor(\n      public name: string, public expression: ASTWithSource, public type: ParsedPropertyType,\n      public sourceSpan: ParseSourceSpan, public valueSpan?: ParseSourceSpan) {\n    this.isLiteral = this.type === ParsedPropertyType.LITERAL_ATTR;\n    this.isAnimation = this.type === ParsedPropertyType.ANIMATION;\n  }\n}\n\nexport enum ParsedPropertyType {\n  DEFAULT,\n  LITERAL_ATTR,\n  ANIMATION\n}\n\nexport const enum ParsedEventType {\n  // DOM or Directive event\n  Regular,\n  // Animation specific event\n  Animation,\n}\n\nexport class ParsedEvent {\n  // Regular events have a target\n  // Animation events have a phase\n  constructor(\n      public name: string, public targetOrPhase: string, public type: ParsedEventType,\n      public handler: AST, public sourceSpan: ParseSourceSpan,\n      public handlerSpan: ParseSourceSpan) {}\n}\n\nexport class ParsedVariable {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n}\n\nexport const enum BindingType {\n  // A regular binding to a property (e.g. `[property]=\"expression\"`).\n  Property,\n  // A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n  Attribute,\n  // A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n  Class,\n  // A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n  Style,\n  // A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n  Animation,\n}\n\nexport class BoundElementProperty {\n  constructor(\n      public name: string, public type: BindingType, public securityContext: SecurityContext,\n      public value: AST, public unit: string|null, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as cdAst from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport class EventHandlerVars { static event = o.variable('$event'); }\n\nexport interface LocalResolver {\n  getLocal(name: string): o.Expression|null;\n  notifyImplicitReceiverUse(): void;\n}\n\nexport class ConvertActionBindingResult {\n  /**\n   * Store statements which are render3 compatible.\n   */\n  render3Stmts: o.Statement[];\n  constructor(\n      /**\n       * Render2 compatible statements,\n       */\n      public stmts: o.Statement[],\n      /**\n       * Variable name used with render2 compatible statements.\n       */\n      public allowDefault: o.ReadVarExpr) {\n    /**\n     * This is bit of a hack. It converts statements which render2 expects to statements which are\n     * expected by render3.\n     *\n     * Example: `<div click=\"doSomething($event)\">` will generate:\n     *\n     * Render3:\n     * ```\n     * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n     * return pd_b;\n     * ```\n     *\n     * but render2 expects:\n     * ```\n     * return ctx.doSomething($event);\n     * ```\n     */\n    // TODO(misko): remove this hack once we no longer support ViewEngine.\n    this.render3Stmts = stmts.map((statement: o.Statement) => {\n      if (statement instanceof o.DeclareVarStmt && statement.name == allowDefault.name &&\n          statement.value instanceof o.BinaryOperatorExpr) {\n        const lhs = statement.value.lhs as o.CastExpr;\n        return new o.ReturnStatement(lhs.value);\n      }\n      return statement;\n    });\n  }\n}\n\nexport type InterpolationFunction = (args: o.Expression[]) => o.Expression;\n\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n */\nexport function convertActionBinding(\n    localResolver: LocalResolver | null, implicitReceiver: o.Expression, action: cdAst.AST,\n    bindingId: string, interpolationFunction?: InterpolationFunction,\n    baseSourceSpan?: ParseSourceSpan): ConvertActionBindingResult {\n  if (!localResolver) {\n    localResolver = new DefaultLocalResolver();\n  }\n  const actionWithoutBuiltins = convertPropertyBindingBuiltins(\n      {\n        createLiteralArrayConverter: (argCount: number) => {\n          // Note: no caching for literal arrays in actions.\n          return (args: o.Expression[]) => o.literalArr(args);\n        },\n        createLiteralMapConverter: (keys: {key: string, quoted: boolean}[]) => {\n          // Note: no caching for literal maps in actions.\n          return (values: o.Expression[]) => {\n            const entries = keys.map((k, i) => ({\n                                       key: k.key,\n                                       value: values[i],\n                                       quoted: k.quoted,\n                                     }));\n            return o.literalMap(entries);\n          };\n        },\n        createPipeConverter: (name: string) => {\n          throw new Error(`Illegal State: Actions are not allowed to contain pipes. Pipe: ${name}`);\n        }\n      },\n      action);\n\n  const visitor = new _AstToIrVisitor(\n      localResolver, implicitReceiver, bindingId, interpolationFunction, baseSourceSpan);\n  const actionStmts: o.Statement[] = [];\n  flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n  prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n\n  if (visitor.usesImplicitReceiver) {\n    localResolver.notifyImplicitReceiverUse();\n  }\n\n  const lastIndex = actionStmts.length - 1;\n  let preventDefaultVar: o.ReadVarExpr = null !;\n  if (lastIndex >= 0) {\n    const lastStatement = actionStmts[lastIndex];\n    const returnExpr = convertStmtIntoExpression(lastStatement);\n    if (returnExpr) {\n      // Note: We need to cast the result of the method call to dynamic,\n      // as it might be a void method!\n      preventDefaultVar = createPreventDefaultVar(bindingId);\n      actionStmts[lastIndex] =\n          preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n              .toDeclStmt(null, [o.StmtModifier.Final]);\n    }\n  }\n  return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n\nexport interface BuiltinConverter { (args: o.Expression[]): o.Expression; }\n\nexport interface BuiltinConverterFactory {\n  createLiteralArrayConverter(argCount: number): BuiltinConverter;\n  createLiteralMapConverter(keys: {key: string, quoted: boolean}[]): BuiltinConverter;\n  createPipeConverter(name: string, argCount: number): BuiltinConverter;\n}\n\nexport function convertPropertyBindingBuiltins(\n    converterFactory: BuiltinConverterFactory, ast: cdAst.AST): cdAst.AST {\n  return convertBuiltins(converterFactory, ast);\n}\n\nexport class ConvertPropertyBindingResult {\n  constructor(public stmts: o.Statement[], public currValExpr: o.Expression) {}\n}\n\nexport enum BindingForm {\n  // The general form of binding expression, supports all expressions.\n  General,\n\n  // Try to generate a simple binding (no temporaries or statements)\n  // otherwise generate a general binding\n  TrySimple,\n}\n\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n */\nexport function convertPropertyBinding(\n    localResolver: LocalResolver | null, implicitReceiver: o.Expression,\n    expressionWithoutBuiltins: cdAst.AST, bindingId: string, form: BindingForm,\n    interpolationFunction?: InterpolationFunction): ConvertPropertyBindingResult {\n  if (!localResolver) {\n    localResolver = new DefaultLocalResolver();\n  }\n  const currValExpr = createCurrValueExpr(bindingId);\n  const visitor =\n      new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n  const outputExpr: o.Expression = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n  const stmts: o.Statement[] = getStatementsFromVisitor(visitor, bindingId);\n\n  if (visitor.usesImplicitReceiver) {\n    localResolver.notifyImplicitReceiverUse();\n  }\n\n  if (visitor.temporaryCount === 0 && form == BindingForm.TrySimple) {\n    return new ConvertPropertyBindingResult([], outputExpr);\n  }\n\n  stmts.push(currValExpr.set(outputExpr).toDeclStmt(o.DYNAMIC_TYPE, [o.StmtModifier.Final]));\n  return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n\n/**\n * Given some expression, such as a binding or interpolation expression, and a context expression to\n * look values up on, visit each facet of the given expression resolving values from the context\n * expression such that a list of arguments can be derived from the found values that can be used as\n * arguments to an external update instruction.\n *\n * @param localResolver The resolver to use to look up expressions by name appropriately\n * @param contextVariableExpression The expression representing the context variable used to create\n * the final argument expressions\n * @param expressionWithArgumentsToExtract The expression to visit to figure out what values need to\n * be resolved and what arguments list to build.\n * @param bindingId A name prefix used to create temporary variable names if they're needed for the\n * arguments generated\n * @returns An array of expressions that can be passed as arguments to instruction expressions like\n * `o.importExpr(R3.propertyInterpolate).callFn(result)`\n */\nexport function convertUpdateArguments(\n    localResolver: LocalResolver, contextVariableExpression: o.Expression,\n    expressionWithArgumentsToExtract: cdAst.AST, bindingId: string) {\n  const visitor =\n      new _AstToIrVisitor(localResolver, contextVariableExpression, bindingId, undefined);\n  const outputExpr: o.InvokeFunctionExpr =\n      expressionWithArgumentsToExtract.visit(visitor, _Mode.Expression);\n\n  if (visitor.usesImplicitReceiver) {\n    localResolver.notifyImplicitReceiverUse();\n  }\n\n  const stmts = getStatementsFromVisitor(visitor, bindingId);\n\n  // Removing the first argument, because it was a length for ViewEngine, not Ivy.\n  let args = outputExpr.args.slice(1);\n  if (expressionWithArgumentsToExtract instanceof cdAst.Interpolation) {\n    // If we're dealing with an interpolation of 1 value with an empty prefix and suffix, reduce the\n    // args returned to just the value, because we're going to pass it to a special instruction.\n    const strings = expressionWithArgumentsToExtract.strings;\n    if (args.length === 3 && strings[0] === '' && strings[1] === '') {\n      // Single argument interpolate instructions.\n      args = [args[1]];\n    } else if (args.length >= 19) {\n      // 19 or more arguments must be passed to the `interpolateV`-style instructions, which accept\n      // an array of arguments\n      args = [o.literalArr(args)];\n    }\n  }\n  return {stmts, args};\n}\n\nfunction getStatementsFromVisitor(visitor: _AstToIrVisitor, bindingId: string) {\n  const stmts: o.Statement[] = [];\n  for (let i = 0; i < visitor.temporaryCount; i++) {\n    stmts.push(temporaryDeclaration(bindingId, i));\n  }\n  return stmts;\n}\n\nfunction convertBuiltins(converterFactory: BuiltinConverterFactory, ast: cdAst.AST): cdAst.AST {\n  const visitor = new _BuiltinAstConverter(converterFactory);\n  return ast.visit(visitor);\n}\n\nfunction temporaryName(bindingId: string, temporaryNumber: number): string {\n  return `tmp_${bindingId}_${temporaryNumber}`;\n}\n\nexport function temporaryDeclaration(bindingId: string, temporaryNumber: number): o.Statement {\n  return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\n\nfunction prependTemporaryDecls(\n    temporaryCount: number, bindingId: string, statements: o.Statement[]) {\n  for (let i = temporaryCount - 1; i >= 0; i--) {\n    statements.unshift(temporaryDeclaration(bindingId, i));\n  }\n}\n\nenum _Mode {\n  Statement,\n  Expression\n}\n\nfunction ensureStatementMode(mode: _Mode, ast: cdAst.AST) {\n  if (mode !== _Mode.Statement) {\n    throw new Error(`Expected a statement, but saw ${ast}`);\n  }\n}\n\nfunction ensureExpressionMode(mode: _Mode, ast: cdAst.AST) {\n  if (mode !== _Mode.Expression) {\n    throw new Error(`Expected an expression, but saw ${ast}`);\n  }\n}\n\nfunction convertToStatementIfNeeded(mode: _Mode, expr: o.Expression): o.Expression|o.Statement {\n  if (mode === _Mode.Statement) {\n    return expr.toStmt();\n  } else {\n    return expr;\n  }\n}\n\nclass _BuiltinAstConverter extends cdAst.AstTransformer {\n  constructor(private _converterFactory: BuiltinConverterFactory) { super(); }\n  visitPipe(ast: cdAst.BindingPipe, context: any): any {\n    const args = [ast.exp, ...ast.args].map(ast => ast.visit(this, context));\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n  }\n  visitLiteralArray(ast: cdAst.LiteralArray, context: any): any {\n    const args = ast.expressions.map(ast => ast.visit(this, context));\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n  }\n  visitLiteralMap(ast: cdAst.LiteralMap, context: any): any {\n    const args = ast.values.map(ast => ast.visit(this, context));\n\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n  }\n}\n\nclass _AstToIrVisitor implements cdAst.AstVisitor {\n  private _nodeMap = new Map<cdAst.AST, cdAst.AST>();\n  private _resultMap = new Map<cdAst.AST, o.Expression>();\n  private _currentTemporary: number = 0;\n  public temporaryCount: number = 0;\n  public usesImplicitReceiver: boolean = false;\n\n  constructor(\n      private _localResolver: LocalResolver, private _implicitReceiver: o.Expression,\n      private bindingId: string, private interpolationFunction: InterpolationFunction|undefined,\n      private baseSourceSpan?: ParseSourceSpan) {}\n\n  visitBinary(ast: cdAst.Binary, mode: _Mode): any {\n    let op: o.BinaryOperator;\n    switch (ast.operation) {\n      case '+':\n        op = o.BinaryOperator.Plus;\n        break;\n      case '-':\n        op = o.BinaryOperator.Minus;\n        break;\n      case '*':\n        op = o.BinaryOperator.Multiply;\n        break;\n      case '/':\n        op = o.BinaryOperator.Divide;\n        break;\n      case '%':\n        op = o.BinaryOperator.Modulo;\n        break;\n      case '&&':\n        op = o.BinaryOperator.And;\n        break;\n      case '||':\n        op = o.BinaryOperator.Or;\n        break;\n      case '==':\n        op = o.BinaryOperator.Equals;\n        break;\n      case '!=':\n        op = o.BinaryOperator.NotEquals;\n        break;\n      case '===':\n        op = o.BinaryOperator.Identical;\n        break;\n      case '!==':\n        op = o.BinaryOperator.NotIdentical;\n        break;\n      case '<':\n        op = o.BinaryOperator.Lower;\n        break;\n      case '>':\n        op = o.BinaryOperator.Bigger;\n        break;\n      case '<=':\n        op = o.BinaryOperator.LowerEquals;\n        break;\n      case '>=':\n        op = o.BinaryOperator.BiggerEquals;\n        break;\n      default:\n        throw new Error(`Unsupported operation ${ast.operation}`);\n    }\n\n    return convertToStatementIfNeeded(\n        mode,\n        new o.BinaryOperatorExpr(\n            op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression),\n            undefined, this.convertSourceSpan(ast.span)));\n  }\n\n  visitChain(ast: cdAst.Chain, mode: _Mode): any {\n    ensureStatementMode(mode, ast);\n    return this.visitAll(ast.expressions, mode);\n  }\n\n  visitConditional(ast: cdAst.Conditional, mode: _Mode): any {\n    const value: o.Expression = this._visit(ast.condition, _Mode.Expression);\n    return convertToStatementIfNeeded(\n        mode, value.conditional(\n                  this._visit(ast.trueExp, _Mode.Expression),\n                  this._visit(ast.falseExp, _Mode.Expression), this.convertSourceSpan(ast.span)));\n  }\n\n  visitPipe(ast: cdAst.BindingPipe, mode: _Mode): any {\n    throw new Error(\n        `Illegal state: Pipes should have been converted into functions. Pipe: ${ast.name}`);\n  }\n\n  visitFunctionCall(ast: cdAst.FunctionCall, mode: _Mode): any {\n    const convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n    let fnResult: o.Expression;\n    if (ast instanceof BuiltinFunctionCall) {\n      fnResult = ast.converter(convertedArgs);\n    } else {\n      fnResult = this._visit(ast.target !, _Mode.Expression)\n                     .callFn(convertedArgs, this.convertSourceSpan(ast.span));\n    }\n    return convertToStatementIfNeeded(mode, fnResult);\n  }\n\n  visitImplicitReceiver(ast: cdAst.ImplicitReceiver, mode: _Mode): any {\n    ensureExpressionMode(mode, ast);\n    this.usesImplicitReceiver = true;\n    return this._implicitReceiver;\n  }\n\n  visitInterpolation(ast: cdAst.Interpolation, mode: _Mode): any {\n    ensureExpressionMode(mode, ast);\n    const args = [o.literal(ast.expressions.length)];\n    for (let i = 0; i < ast.strings.length - 1; i++) {\n      args.push(o.literal(ast.strings[i]));\n      args.push(this._visit(ast.expressions[i], _Mode.Expression));\n    }\n    args.push(o.literal(ast.strings[ast.strings.length - 1]));\n\n    if (this.interpolationFunction) {\n      return this.interpolationFunction(args);\n    }\n    return ast.expressions.length <= 9 ?\n        o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n        o.importExpr(Identifiers.interpolate).callFn([\n          args[0], o.literalArr(args.slice(1), undefined, this.convertSourceSpan(ast.span))\n        ]);\n  }\n\n  visitKeyedRead(ast: cdAst.KeyedRead, mode: _Mode): any {\n    const leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      return convertToStatementIfNeeded(\n          mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n    }\n  }\n\n  visitKeyedWrite(ast: cdAst.KeyedWrite, mode: _Mode): any {\n    const obj: o.Expression = this._visit(ast.obj, _Mode.Expression);\n    const key: o.Expression = this._visit(ast.key, _Mode.Expression);\n    const value: o.Expression = this._visit(ast.value, _Mode.Expression);\n    return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n  }\n\n  visitLiteralArray(ast: cdAst.LiteralArray, mode: _Mode): any {\n    throw new Error(`Illegal State: literal arrays should have been converted into functions`);\n  }\n\n  visitLiteralMap(ast: cdAst.LiteralMap, mode: _Mode): any {\n    throw new Error(`Illegal State: literal maps should have been converted into functions`);\n  }\n\n  visitLiteralPrimitive(ast: cdAst.LiteralPrimitive, mode: _Mode): any {\n    // For literal values of null, undefined, true, or false allow type interference\n    // to infer the type.\n    const type =\n        ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n        o.INFERRED_TYPE :\n        undefined;\n    return convertToStatementIfNeeded(\n        mode, o.literal(ast.value, type, this.convertSourceSpan(ast.span)));\n  }\n\n  private _getLocal(name: string): o.Expression|null { return this._localResolver.getLocal(name); }\n\n  visitMethodCall(ast: cdAst.MethodCall, mode: _Mode): any {\n    if (ast.receiver instanceof cdAst.ImplicitReceiver && ast.name == '$any') {\n      const args = this.visitAll(ast.args, _Mode.Expression) as any[];\n      if (args.length != 1) {\n        throw new Error(\n            `Invalid call to $any, expected 1 argument but received ${args.length || 'none'}`);\n      }\n      return (args[0] as o.Expression).cast(o.DYNAMIC_TYPE, this.convertSourceSpan(ast.span));\n    }\n\n    const leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      const args = this.visitAll(ast.args, _Mode.Expression);\n      const prevUsesImplicitReceiver = this.usesImplicitReceiver;\n      let result: any = null;\n      const receiver = this._visit(ast.receiver, _Mode.Expression);\n      if (receiver === this._implicitReceiver) {\n        const varExpr = this._getLocal(ast.name);\n        if (varExpr) {\n          // Restore the previous \"usesImplicitReceiver\" state since the implicit\n          // receiver has been replaced with a resolved local expression.\n          this.usesImplicitReceiver = prevUsesImplicitReceiver;\n          result = varExpr.callFn(args);\n        }\n      }\n      if (result == null) {\n        result = receiver.callMethod(ast.name, args, this.convertSourceSpan(ast.span));\n      }\n      return convertToStatementIfNeeded(mode, result);\n    }\n  }\n\n  visitPrefixNot(ast: cdAst.PrefixNot, mode: _Mode): any {\n    return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n  }\n\n  visitNonNullAssert(ast: cdAst.NonNullAssert, mode: _Mode): any {\n    return convertToStatementIfNeeded(\n        mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n  }\n\n  visitPropertyRead(ast: cdAst.PropertyRead, mode: _Mode): any {\n    const leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      let result: any = null;\n      const prevUsesImplicitReceiver = this.usesImplicitReceiver;\n      const receiver = this._visit(ast.receiver, _Mode.Expression);\n      if (receiver === this._implicitReceiver) {\n        result = this._getLocal(ast.name);\n        if (result) {\n          // Restore the previous \"usesImplicitReceiver\" state since the implicit\n          // receiver has been replaced with a resolved local expression.\n          this.usesImplicitReceiver = prevUsesImplicitReceiver;\n        }\n      }\n      if (result == null) {\n        result = receiver.prop(ast.name);\n      }\n      return convertToStatementIfNeeded(mode, result);\n    }\n  }\n\n  visitPropertyWrite(ast: cdAst.PropertyWrite, mode: _Mode): any {\n    const receiver: o.Expression = this._visit(ast.receiver, _Mode.Expression);\n    const prevUsesImplicitReceiver = this.usesImplicitReceiver;\n\n    let varExpr: o.ReadPropExpr|null = null;\n    if (receiver === this._implicitReceiver) {\n      const localExpr = this._getLocal(ast.name);\n      if (localExpr) {\n        if (localExpr instanceof o.ReadPropExpr) {\n          // If the local variable is a property read expression, it's a reference\n          // to a 'context.property' value and will be used as the target of the\n          // write expression.\n          varExpr = localExpr;\n          // Restore the previous \"usesImplicitReceiver\" state since the implicit\n          // receiver has been replaced with a resolved local expression.\n          this.usesImplicitReceiver = prevUsesImplicitReceiver;\n        } else {\n          // Otherwise it's an error.\n          throw new Error('Cannot assign to a reference or variable!');\n        }\n      }\n    }\n    // If no local expression could be produced, use the original receiver's\n    // property as the target.\n    if (varExpr === null) {\n      varExpr = receiver.prop(ast.name);\n    }\n    return convertToStatementIfNeeded(mode, varExpr.set(this._visit(ast.value, _Mode.Expression)));\n  }\n\n  visitSafePropertyRead(ast: cdAst.SafePropertyRead, mode: _Mode): any {\n    return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n  }\n\n  visitSafeMethodCall(ast: cdAst.SafeMethodCall, mode: _Mode): any {\n    return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n  }\n\n  visitAll(asts: cdAst.AST[], mode: _Mode): any { return asts.map(ast => this._visit(ast, mode)); }\n\n  visitQuote(ast: cdAst.Quote, mode: _Mode): any {\n    throw new Error(`Quotes are not supported for evaluation!\n        Statement: ${ast.uninterpretedExpression} located at ${ast.location}`);\n  }\n\n  private _visit(ast: cdAst.AST, mode: _Mode): any {\n    const result = this._resultMap.get(ast);\n    if (result) return result;\n    return (this._nodeMap.get(ast) || ast).visit(this, mode);\n  }\n\n  private convertSafeAccess(\n      ast: cdAst.AST, leftMostSafe: cdAst.SafeMethodCall|cdAst.SafePropertyRead, mode: _Mode): any {\n    // If the expression contains a safe access node on the left it needs to be converted to\n    // an expression that guards the access to the member by checking the receiver for blank. As\n    // execution proceeds from left to right, the left most part of the expression must be guarded\n    // first but, because member access is left associative, the right side of the expression is at\n    // the top of the AST. The desired result requires lifting a copy of the the left part of the\n    // expression up to test it for blank before generating the unguarded version.\n\n    // Consider, for example the following expression: a?.b.c?.d.e\n\n    // This results in the ast:\n    //         .\n    //        / \\\n    //       ?.   e\n    //      /  \\\n    //     .    d\n    //    / \\\n    //   ?.  c\n    //  /  \\\n    // a    b\n\n    // The following tree should be generated:\n    //\n    //        /---- ? ----\\\n    //       /      |      \\\n    //     a   /--- ? ---\\  null\n    //        /     |     \\\n    //       .      .     null\n    //      / \\    / \\\n    //     .  c   .   e\n    //    / \\    / \\\n    //   a   b  .   d\n    //         / \\\n    //        .   c\n    //       / \\\n    //      a   b\n    //\n    // Notice that the first guard condition is the left hand of the left most safe access node\n    // which comes in as leftMostSafe to this routine.\n\n    let guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n    let temporary: o.ReadVarExpr = undefined !;\n    if (this.needsTemporary(leftMostSafe.receiver)) {\n      // If the expression has method calls or pipes then we need to save the result into a\n      // temporary variable to avoid calling stateful or impure code more than once.\n      temporary = this.allocateTemporary();\n\n      // Preserve the result in the temporary variable\n      guardedExpression = temporary.set(guardedExpression);\n\n      // Ensure all further references to the guarded expression refer to the temporary instead.\n      this._resultMap.set(leftMostSafe.receiver, temporary);\n    }\n    const condition = guardedExpression.isBlank();\n\n    // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n    // leftMostNode with its unguarded version in the call to `this.visit()`.\n    if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n      this._nodeMap.set(\n          leftMostSafe,\n          new cdAst.MethodCall(\n              leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n    } else {\n      this._nodeMap.set(\n          leftMostSafe,\n          new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n    }\n\n    // Recursively convert the node now without the guarded member access.\n    const access = this._visit(ast, _Mode.Expression);\n\n    // Remove the mapping. This is not strictly required as the converter only traverses each node\n    // once but is safer if the conversion is changed to traverse the nodes more than once.\n    this._nodeMap.delete(leftMostSafe);\n\n    // If we allocated a temporary, release it.\n    if (temporary) {\n      this.releaseTemporary(temporary);\n    }\n\n    // Produce the conditional\n    return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n  }\n\n  // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n  // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n  // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n  // safe method call as this needs be transform initially to:\n  //   a == null ? null : a.c.b.c?.d.e\n  // then to:\n  //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n  private leftMostSafeNode(ast: cdAst.AST): cdAst.SafePropertyRead|cdAst.SafeMethodCall {\n    const visit = (visitor: cdAst.AstVisitor, ast: cdAst.AST): any => {\n      return (this._nodeMap.get(ast) || ast).visit(visitor);\n    };\n    return ast.visit({\n      visitBinary(ast: cdAst.Binary) { return null; },\n      visitChain(ast: cdAst.Chain) { return null; },\n      visitConditional(ast: cdAst.Conditional) { return null; },\n      visitFunctionCall(ast: cdAst.FunctionCall) { return null; },\n      visitImplicitReceiver(ast: cdAst.ImplicitReceiver) { return null; },\n      visitInterpolation(ast: cdAst.Interpolation) { return null; },\n      visitKeyedRead(ast: cdAst.KeyedRead) { return visit(this, ast.obj); },\n      visitKeyedWrite(ast: cdAst.KeyedWrite) { return null; },\n      visitLiteralArray(ast: cdAst.LiteralArray) { return null; },\n      visitLiteralMap(ast: cdAst.LiteralMap) { return null; },\n      visitLiteralPrimitive(ast: cdAst.LiteralPrimitive) { return null; },\n      visitMethodCall(ast: cdAst.MethodCall) { return visit(this, ast.receiver); },\n      visitPipe(ast: cdAst.BindingPipe) { return null; },\n      visitPrefixNot(ast: cdAst.PrefixNot) { return null; },\n      visitNonNullAssert(ast: cdAst.NonNullAssert) { return null; },\n      visitPropertyRead(ast: cdAst.PropertyRead) { return visit(this, ast.receiver); },\n      visitPropertyWrite(ast: cdAst.PropertyWrite) { return null; },\n      visitQuote(ast: cdAst.Quote) { return null; },\n      visitSafeMethodCall(ast: cdAst.SafeMethodCall) { return visit(this, ast.receiver) || ast; },\n      visitSafePropertyRead(ast: cdAst.SafePropertyRead) {\n        return visit(this, ast.receiver) || ast;\n      }\n    });\n  }\n\n  // Returns true of the AST includes a method or a pipe indicating that, if the\n  // expression is used as the target of a safe property or method access then\n  // the expression should be stored into a temporary variable.\n  private needsTemporary(ast: cdAst.AST): boolean {\n    const visit = (visitor: cdAst.AstVisitor, ast: cdAst.AST): boolean => {\n      return ast && (this._nodeMap.get(ast) || ast).visit(visitor);\n    };\n    const visitSome = (visitor: cdAst.AstVisitor, ast: cdAst.AST[]): boolean => {\n      return ast.some(ast => visit(visitor, ast));\n    };\n    return ast.visit({\n      visitBinary(ast: cdAst.Binary):\n          boolean{return visit(this, ast.left) || visit(this, ast.right);},\n      visitChain(ast: cdAst.Chain) { return false; },\n      visitConditional(ast: cdAst.Conditional):\n          boolean{return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                      visit(this, ast.falseExp);},\n      visitFunctionCall(ast: cdAst.FunctionCall) { return true; },\n      visitImplicitReceiver(ast: cdAst.ImplicitReceiver) { return false; },\n      visitInterpolation(ast: cdAst.Interpolation) { return visitSome(this, ast.expressions); },\n      visitKeyedRead(ast: cdAst.KeyedRead) { return false; },\n      visitKeyedWrite(ast: cdAst.KeyedWrite) { return false; },\n      visitLiteralArray(ast: cdAst.LiteralArray) { return true; },\n      visitLiteralMap(ast: cdAst.LiteralMap) { return true; },\n      visitLiteralPrimitive(ast: cdAst.LiteralPrimitive) { return false; },\n      visitMethodCall(ast: cdAst.MethodCall) { return true; },\n      visitPipe(ast: cdAst.BindingPipe) { return true; },\n      visitPrefixNot(ast: cdAst.PrefixNot) { return visit(this, ast.expression); },\n      visitNonNullAssert(ast: cdAst.PrefixNot) { return visit(this, ast.expression); },\n      visitPropertyRead(ast: cdAst.PropertyRead) { return false; },\n      visitPropertyWrite(ast: cdAst.PropertyWrite) { return false; },\n      visitQuote(ast: cdAst.Quote) { return false; },\n      visitSafeMethodCall(ast: cdAst.SafeMethodCall) { return true; },\n      visitSafePropertyRead(ast: cdAst.SafePropertyRead) { return false; }\n    });\n  }\n\n  private allocateTemporary(): o.ReadVarExpr {\n    const tempNumber = this._currentTemporary++;\n    this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n    return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n  }\n\n  private releaseTemporary(temporary: o.ReadVarExpr) {\n    this._currentTemporary--;\n    if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n      throw new Error(`Temporary ${temporary.name} released out of order`);\n    }\n  }\n\n  /**\n   * Creates an absolute `ParseSourceSpan` from the relative `ParseSpan`.\n   *\n   * `ParseSpan` objects are relative to the start of the expression.\n   * This method converts these to full `ParseSourceSpan` objects that\n   * show where the span is within the overall source file.\n   *\n   * @param span the relative span to convert.\n   * @returns a `ParseSourceSpan` for the the given span or null if no\n   * `baseSourceSpan` was provided to this class.\n   */\n  private convertSourceSpan(span: cdAst.ParseSpan) {\n    if (this.baseSourceSpan) {\n      const start = this.baseSourceSpan.start.moveBy(span.start);\n      const end = this.baseSourceSpan.start.moveBy(span.end);\n      return new ParseSourceSpan(start, end);\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction flattenStatements(arg: any, output: o.Statement[]) {\n  if (Array.isArray(arg)) {\n    (<any[]>arg).forEach((entry) => flattenStatements(entry, output));\n  } else {\n    output.push(arg);\n  }\n}\n\nclass DefaultLocalResolver implements LocalResolver {\n  notifyImplicitReceiverUse(): void {}\n  getLocal(name: string): o.Expression|null {\n    if (name === EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    return null;\n  }\n}\n\nfunction createCurrValueExpr(bindingId: string): o.ReadVarExpr {\n  return o.variable(`currVal_${bindingId}`);  // fix syntax highlighting: `\n}\n\nfunction createPreventDefaultVar(bindingId: string): o.ReadVarExpr {\n  return o.variable(`pd_${bindingId}`);\n}\n\nfunction convertStmtIntoExpression(stmt: o.Statement): o.Expression|null {\n  if (stmt instanceof o.ExpressionStatement) {\n    return stmt.expr;\n  } else if (stmt instanceof o.ReturnStatement) {\n    return stmt.value;\n  }\n  return null;\n}\n\nexport class BuiltinFunctionCall extends cdAst.FunctionCall {\n  constructor(span: cdAst.ParseSpan, public args: cdAst.AST[], public converter: BuiltinConverter) {\n    super(span, null, args);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport class ShadowCss {\n  strictStyling: boolean = true;\n\n  constructor() {}\n\n  /*\n  * Shim some cssText with the given selector. Returns cssText that can\n  * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n  *\n  * When strictStyling is true:\n  * - selector is the attribute added to all elements inside the host,\n  * - hostSelector is the attribute added to the host itself.\n  */\n  shimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n\n    const scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n    return [scopedCssText, ...commentsWithHash].join('\\n');\n  }\n\n  private _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n\n  /*\n   * Process styles to convert native ShadowDOM rules that will trip\n   * up the css parser; we rely on decorating the stylesheet with inert rules.\n   *\n   * For example, we convert this rule:\n   *\n   * polyfill-next-selector { content: ':host menu-item'; }\n   * ::content menu-item {\n   *\n   * to this:\n   *\n   * scopeName menu-item {\n   *\n  **/\n  private _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n\n  /*\n   * Process styles to add rules which will only apply under the polyfill\n   *\n   * For example, we convert this rule:\n   *\n   * polyfill-rule {\n   *   content: ':host menu-item';\n   * ...\n   * }\n   *\n   * to this:\n   *\n   * scopeName menu-item {...}\n   *\n  **/\n  private _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n\n  /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n   *\n   *  .foo {... }\n   *\n   *  and converts this to\n   *\n   *  scopeName .foo { ... }\n  */\n  private _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n\n  /*\n   * Process styles to add rules which will only apply under the polyfill\n   * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n   * occasions, e.g. -webkit-calc on Safari.)\n   * For example, we convert this rule:\n   *\n   * @polyfill-unscoped-rule {\n   *   content: 'menu-item';\n   * ... }\n   *\n   * to this:\n   *\n   * menu-item {...}\n   *\n  **/\n  private _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let r = '';\n    let m: RegExpExecArray|null;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n\n  /*\n   * convert a rule like :host(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar\n  */\n  private _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n\n  /*\n   * convert a rule like :host-context(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n   *\n   * and\n   *\n   * :host-context(.foo:host) .bar { ... }\n   *\n   * to\n   *\n   * .foo<scopeName> .bar { ... }\n  */\n  private _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n\n  private _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const parts = m[2].split(',');\n        const r: string[] = [];\n        for (let i = 0; i < parts.length; i++) {\n          const p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n\n  private _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n\n  private _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n\n  /*\n   * Convert combinators like ::shadow and pseudo-elements like ::content\n   * by replacing with space.\n  */\n  private _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n\n  // change a selector like 'div' to 'name div'\n  private _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let selector = rule.selector;\n      let content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n\n  private _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n\n  private _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n\n  private _makeScopeMatcher(scopeSelector: string): RegExp {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n\n  private _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n\n  // scope via name and [is=name]\n  private _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n  private _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const attrName = '[' + scopeSelector + ']';\n\n    const _scopeSelectorPart = (p: string) => {\n      let scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res: RegExpExecArray|null;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n\n    while ((res = sep.exec(selector)) !== null) {\n      const separator = res[1];\n      const part = selector.slice(startIndex, res.index).trim();\n      shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n      const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n\n  private _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nclass SafeSelector {\n  private placeholders: string[] = [];\n  private index = 0;\n  private _content: string;\n\n  constructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  }\n\n  restore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n\n  content(): string { return this._content; }\n}\n\nconst _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\n\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nconst _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonHostContextRe = /:host-context/gim;\n\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nfunction extractCommentsWithHash(input: string): string[] {\n  return input.match(_commentWithHashRe) || [];\n}\n\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\n\nexport class CssRule {\n  constructor(public selector: string, public content: string) {}\n}\n\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const inputWithEscapedBlocks = escapeBlocks(input);\n  let nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const selector = m[2];\n    let content = '';\n    let suffix = m[4];\n    let contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\n\nclass StringWithEscapedBlocks {\n  constructor(public escapedString: string, public blocks: string[]) {}\n}\n\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const inputParts = input.split(_curlyRe);\n  const resultParts: string[] = [];\n  const escapedBlocks: string[] = [];\n  let bracketCount = 0;\n  let currentBlockParts: string[] = [];\n  for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {ViewEncapsulation} from './core';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\nimport {OutputContext} from './util';\n\nconst COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport class StylesCompileDependency {\n  constructor(\n      public name: string, public moduleUrl: string, public setValue: (value: any) => void) {}\n}\n\nexport class CompiledStylesheet {\n  constructor(\n      public outputCtx: OutputContext, public stylesVar: string,\n      public dependencies: StylesCompileDependency[], public isShimmed: boolean,\n      public meta: CompileStylesheetMetadata) {}\n}\n\nexport class StyleCompiler {\n  private _shadowCss: ShadowCss = new ShadowCss();\n\n  constructor(private _urlResolver: UrlResolver) {}\n\n  compileComponent(outputCtx: OutputContext, comp: CompileDirectiveMetadata): CompiledStylesheet {\n    const template = comp.template !;\n    return this._compileStyles(\n        outputCtx, comp, new CompileStylesheetMetadata({\n          styles: template.styles,\n          styleUrls: template.styleUrls,\n          moduleUrl: identifierModuleUrl(comp.type)\n        }),\n        this.needsStyleShim(comp), true);\n  }\n\n  compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata,\n      shim: boolean = this.needsStyleShim(comp)): CompiledStylesheet {\n    return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n  }\n\n  needsStyleShim(comp: CompileDirectiveMetadata): boolean {\n    return comp.template !.encapsulation === ViewEncapsulation.Emulated;\n  }\n\n  private _compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata, shim: boolean,\n      isComponentStylesheet: boolean): CompiledStylesheet {\n    const styleExpressions: o.Expression[] =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    const dependencies: StylesCompileDependency[] = [];\n    stylesheet.styleUrls.forEach((styleUrl) => {\n      const exprIndex = styleExpressions.length;\n      // Note: This placeholder will be filled later.\n      styleExpressions.push(null !);\n      dependencies.push(new StylesCompileDependency(\n          getStylesVarName(null), styleUrl,\n          (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n    });\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    const stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    const stmt = o.variable(stylesVar)\n                     .set(o.literalArr(\n                         styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                     .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n                       o.StmtModifier.Final, o.StmtModifier.Exported\n                     ]);\n    outputCtx.statements.push(stmt);\n    return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n  }\n\n  private _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\n}\n\nfunction getStylesVarName(component: CompileDirectiveMetadata | null): string {\n  let result = `styles`;\n  if (component) {\n    result += `_${identifierName(component.type)}`;\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expression `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nexport class AstPath<T> {\n  constructor(private path: T[], public position: number = -1) {}\n\n  get empty(): boolean { return !this.path || !this.path.length; }\n  get head(): T|undefined { return this.path[0]; }\n  get tail(): T|undefined { return this.path[this.path.length - 1]; }\n\n  parentOf(node: T|undefined): T|undefined {\n    return node && this.path[this.path.indexOf(node) - 1];\n  }\n  childOf(node: T): T|undefined { return this.path[this.path.indexOf(node) + 1]; }\n\n  first<N extends T>(ctor: {new (...args: any[]): N}): N|undefined {\n    for (let i = this.path.length - 1; i >= 0; i--) {\n      let item = this.path[i];\n      if (item instanceof ctor) return <N>item;\n    }\n  }\n\n  push(node: T) { this.path.push(node); }\n\n  pop(): T { return this.path.pop() !; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AstPath} from '../ast_path';\nimport {AST as I18nAST} from '../i18n/i18n_ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context: any): any;\n}\n\nexport class Text implements Node {\n  constructor(public value: string, public sourceSpan: ParseSourceSpan, public i18n?: I18nAST) {}\n  visit(visitor: Visitor, context: any): any { return visitor.visitText(this, context); }\n}\n\nexport class Expansion implements Node {\n  constructor(\n      public switchValue: string, public type: string, public cases: ExpansionCase[],\n      public sourceSpan: ParseSourceSpan, public switchValueSourceSpan: ParseSourceSpan,\n      public i18n?: I18nAST) {}\n  visit(visitor: Visitor, context: any): any { return visitor.visitExpansion(this, context); }\n}\n\nexport class ExpansionCase implements Node {\n  constructor(\n      public value: string, public expression: Node[], public sourceSpan: ParseSourceSpan,\n      public valueSourceSpan: ParseSourceSpan, public expSourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: Visitor, context: any): any { return visitor.visitExpansionCase(this, context); }\n}\n\nexport class Attribute implements Node {\n  constructor(\n      public name: string, public value: string, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan, public i18n?: I18nAST) {}\n  visit(visitor: Visitor, context: any): any { return visitor.visitAttribute(this, context); }\n}\n\nexport class Element implements Node {\n  constructor(\n      public name: string, public attrs: Attribute[], public children: Node[],\n      public sourceSpan: ParseSourceSpan, public startSourceSpan: ParseSourceSpan|null = null,\n      public endSourceSpan: ParseSourceSpan|null = null, public i18n?: I18nAST) {}\n  visit(visitor: Visitor, context: any): any { return visitor.visitElement(this, context); }\n}\n\nexport class Comment implements Node {\n  constructor(public value: string|null, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: Visitor, context: any): any { return visitor.visitComment(this, context); }\n}\n\nexport interface Visitor {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node, context: any): any;\n\n  visitElement(element: Element, context: any): any;\n  visitAttribute(attribute: Attribute, context: any): any;\n  visitText(text: Text, context: any): any;\n  visitComment(comment: Comment, context: any): any;\n  visitExpansion(expansion: Expansion, context: any): any;\n  visitExpansionCase(expansionCase: ExpansionCase, context: any): any;\n}\n\nexport function visitAll(visitor: Visitor, nodes: Node[], context: any = null): any[] {\n  const result: any[] = [];\n\n  const visit = visitor.visit ?\n      (ast: Node) => visitor.visit !(ast, context) || ast.visit(visitor, context) :\n      (ast: Node) => ast.visit(visitor, context);\n  nodes.forEach(ast => {\n    const astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\nexport class RecursiveVisitor implements Visitor {\n  constructor() {}\n\n  visitElement(ast: Element, context: any): any {\n    this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.children);\n    });\n  }\n\n  visitAttribute(ast: Attribute, context: any): any {}\n  visitText(ast: Text, context: any): any {}\n  visitComment(ast: Comment, context: any): any {}\n\n  visitExpansion(ast: Expansion, context: any): any {\n    return this.visitChildren(context, visit => { visit(ast.cases); });\n  }\n\n  visitExpansionCase(ast: ExpansionCase, context: any): any {}\n\n  private visitChildren<T extends Node>(\n      context: any, cb: (visit: (<V extends Node>(children: V[]|undefined) => void)) => void) {\n    let results: any[][] = [];\n    let t = this;\n    function visit<T extends Node>(children: T[] | undefined) {\n      if (children) results.push(visitAll(t, children, context));\n    }\n    cb(visit);\n    return Array.prototype.concat.apply([], results);\n  }\n}\n\nexport type HtmlAstPath = AstPath<Node>;\n\nfunction spanOf(ast: Node) {\n  const start = ast.sourceSpan.start.offset;\n  let end = ast.sourceSpan.end.offset;\n  if (ast instanceof Element) {\n    if (ast.endSourceSpan) {\n      end = ast.endSourceSpan.end.offset;\n    } else if (ast.children && ast.children.length) {\n      end = spanOf(ast.children[ast.children.length - 1]).end;\n    }\n  }\n  return {start, end};\n}\n\nexport function findNode(nodes: Node[], position: number): HtmlAstPath {\n  const path: Node[] = [];\n\n  const visitor = new class extends RecursiveVisitor {\n    visit(ast: Node, context: any): any {\n      const span = spanOf(ast);\n      if (span.start <= position && position < span.end) {\n        path.push(ast);\n      } else {\n        // Returning a value here will result in the children being skipped.\n        return true;\n      }\n    }\n  };\n\n  visitAll(visitor, nodes);\n\n  return new AstPath<Node>(path, position);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan} from '../parse_util';\n\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {NAMED_ENTITIES, TagContentType, TagDefinition} from './tags';\n\nexport enum TokenType {\n  TAG_OPEN_START,\n  TAG_OPEN_END,\n  TAG_OPEN_END_VOID,\n  TAG_CLOSE,\n  TEXT,\n  ESCAPABLE_RAW_TEXT,\n  RAW_TEXT,\n  COMMENT_START,\n  COMMENT_END,\n  CDATA_START,\n  CDATA_END,\n  ATTR_NAME,\n  ATTR_QUOTE,\n  ATTR_VALUE,\n  DOC_TYPE,\n  EXPANSION_FORM_START,\n  EXPANSION_CASE_VALUE,\n  EXPANSION_CASE_EXP_START,\n  EXPANSION_CASE_EXP_END,\n  EXPANSION_FORM_END,\n  EOF\n}\n\nexport class Token {\n  constructor(\n      public type: TokenType|null, public parts: string[], public sourceSpan: ParseSourceSpan) {}\n}\n\nexport class TokenError extends ParseError {\n  constructor(errorMsg: string, public tokenType: TokenType|null, span: ParseSourceSpan) {\n    super(span, errorMsg);\n  }\n}\n\nexport class TokenizeResult {\n  constructor(public tokens: Token[], public errors: TokenError[]) {}\n}\n\nexport interface LexerRange {\n  startPos: number;\n  startLine: number;\n  startCol: number;\n  endPos: number;\n}\n\n/**\n * Options that modify how the text is tokenized.\n */\nexport interface TokenizeOptions {\n  /** Whether to tokenize ICU messages (considered as text nodes when false). */\n  tokenizeExpansionForms?: boolean;\n  /** How to tokenize interpolation markers. */\n  interpolationConfig?: InterpolationConfig;\n  /**\n   * The start and end point of the text to parse within the `source` string.\n   * The entire `source` string is parsed if this is not provided.\n   * */\n  range?: LexerRange;\n  /**\n   * If this text is stored in a JavaScript string, then we have to deal with escape sequences.\n   *\n   * **Example 1:**\n   *\n   * ```\n   * \"abc\\\"def\\nghi\"\n   * ```\n   *\n   * - The `\\\"` must be converted to `\"`.\n   * - The `\\n` must be converted to a new line character in a token,\n   *   but it should not increment the current line for source mapping.\n   *\n   * **Example 2:**\n   *\n   * ```\n   * \"abc\\\n   *  def\"\n   * ```\n   *\n   * The line continuation (`\\` followed by a newline) should be removed from a token\n   * but the new line should increment the current line for source mapping.\n   */\n  escapedString?: boolean;\n  /**\n   * An array of characters that should be considered as leading trivia.\n   * Leading trivia are characters that are not important to the developer, and so should not be\n   * included in source-map segments.  A common example is whitespace.\n   */\n  leadingTriviaChars?: string[];\n}\n\nexport function tokenize(\n    source: string, url: string, getTagDefinition: (tagName: string) => TagDefinition,\n    options: TokenizeOptions = {}): TokenizeResult {\n  return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, options).tokenize();\n}\n\nconst _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n\nfunction _unexpectedCharacterErrorMsg(charCode: number): string {\n  const char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n  return `Unexpected character \"${char}\"`;\n}\n\nfunction _unknownEntityErrorMsg(entitySrc: string): string {\n  return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\n\nclass _ControlFlowError {\n  constructor(public error: TokenError) {}\n}\n\n// See http://www.w3.org/TR/html51/syntax.html#writing\nclass _Tokenizer {\n  private _cursor: CharacterCursor;\n  private _tokenizeIcu: boolean;\n  private _interpolationConfig: InterpolationConfig;\n  private _leadingTriviaCodePoints: number[]|undefined;\n  private _currentTokenStart: CharacterCursor|null = null;\n  private _currentTokenType: TokenType|null = null;\n  private _expansionCaseStack: TokenType[] = [];\n  private _inInterpolation: boolean = false;\n  tokens: Token[] = [];\n  errors: TokenError[] = [];\n\n  /**\n   * @param _file The html source file being tokenized.\n   * @param _getTagDefinition A function that will retrieve a tag definition for a given tag name.\n   * @param options Configuration of the tokenization.\n   */\n  constructor(\n      _file: ParseSourceFile, private _getTagDefinition: (tagName: string) => TagDefinition,\n      options: TokenizeOptions) {\n    this._tokenizeIcu = options.tokenizeExpansionForms || false;\n    this._interpolationConfig = options.interpolationConfig || DEFAULT_INTERPOLATION_CONFIG;\n    this._leadingTriviaCodePoints =\n        options.leadingTriviaChars && options.leadingTriviaChars.map(c => c.codePointAt(0) || 0);\n    const range =\n        options.range || {endPos: _file.content.length, startPos: 0, startLine: 0, startCol: 0};\n    this._cursor = options.escapedString ? new EscapedCharacterCursor(_file, range) :\n                                           new PlainCharacterCursor(_file, range);\n    try {\n      this._cursor.init();\n    } catch (e) {\n      this.handleError(e);\n    }\n  }\n\n  private _processCarriageReturns(content: string): string {\n    // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n    // In order to keep the original position in the source, we can not\n    // pre-process it.\n    // Instead CRs are processed right before instantiating the tokens.\n    return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n  }\n\n  tokenize(): TokenizeResult {\n    while (this._cursor.peek() !== chars.$EOF) {\n      const start = this._cursor.clone();\n      try {\n        if (this._attemptCharCode(chars.$LT)) {\n          if (this._attemptCharCode(chars.$BANG)) {\n            if (this._attemptCharCode(chars.$LBRACKET)) {\n              this._consumeCdata(start);\n            } else if (this._attemptCharCode(chars.$MINUS)) {\n              this._consumeComment(start);\n            } else {\n              this._consumeDocType(start);\n            }\n          } else if (this._attemptCharCode(chars.$SLASH)) {\n            this._consumeTagClose(start);\n          } else {\n            this._consumeTagOpen(start);\n          }\n        } else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n          this._consumeText();\n        }\n      } catch (e) {\n        this.handleError(e);\n      }\n    }\n    this._beginToken(TokenType.EOF);\n    this._endToken([]);\n    return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n  }\n\n  /**\n   * @returns whether an ICU token has been created\n   * @internal\n   */\n  private _tokenizeExpansionForm(): boolean {\n    if (this.isExpansionFormStart()) {\n      this._consumeExpansionFormStart();\n      return true;\n    }\n\n    if (isExpansionCaseStart(this._cursor.peek()) && this._isInExpansionForm()) {\n      this._consumeExpansionCaseStart();\n      return true;\n    }\n\n    if (this._cursor.peek() === chars.$RBRACE) {\n      if (this._isInExpansionCase()) {\n        this._consumeExpansionCaseEnd();\n        return true;\n      }\n\n      if (this._isInExpansionForm()) {\n        this._consumeExpansionFormEnd();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _beginToken(type: TokenType, start = this._cursor.clone()) {\n    this._currentTokenStart = start;\n    this._currentTokenType = type;\n  }\n\n  private _endToken(parts: string[], end = this._cursor.clone()): Token {\n    if (this._currentTokenStart === null) {\n      throw new TokenError(\n          'Programming error - attempted to end a token when there was no start to the token',\n          this._currentTokenType, this._cursor.getSpan(end));\n    }\n    if (this._currentTokenType === null) {\n      throw new TokenError(\n          'Programming error - attempted to end a token which has no token type', null,\n          this._cursor.getSpan(this._currentTokenStart));\n    }\n    const token = new Token(\n        this._currentTokenType, parts,\n        this._cursor.getSpan(this._currentTokenStart, this._leadingTriviaCodePoints));\n    this.tokens.push(token);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return token;\n  }\n\n  private _createError(msg: string, span: ParseSourceSpan): _ControlFlowError {\n    if (this._isInExpansionForm()) {\n      msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n    }\n    const error = new TokenError(msg, this._currentTokenType, span);\n    this._currentTokenStart = null;\n    this._currentTokenType = null;\n    return new _ControlFlowError(error);\n  }\n\n  private handleError(e: any) {\n    if (e instanceof CursorError) {\n      e = this._createError(e.msg, this._cursor.getSpan(e.cursor));\n    }\n    if (e instanceof _ControlFlowError) {\n      this.errors.push(e.error);\n    } else {\n      throw e;\n    }\n  }\n\n  private _attemptCharCode(charCode: number): boolean {\n    if (this._cursor.peek() === charCode) {\n      this._cursor.advance();\n      return true;\n    }\n    return false;\n  }\n\n  private _attemptCharCodeCaseInsensitive(charCode: number): boolean {\n    if (compareCharCodeCaseInsensitive(this._cursor.peek(), charCode)) {\n      this._cursor.advance();\n      return true;\n    }\n    return false;\n  }\n\n  private _requireCharCode(charCode: number) {\n    const location = this._cursor.clone();\n    if (!this._attemptCharCode(charCode)) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._cursor.peek()), this._cursor.getSpan(location));\n    }\n  }\n\n  private _attemptStr(chars: string): boolean {\n    const len = chars.length;\n    if (this._cursor.charsLeft() < len) {\n      return false;\n    }\n    const initialPosition = this._cursor.clone();\n    for (let i = 0; i < len; i++) {\n      if (!this._attemptCharCode(chars.charCodeAt(i))) {\n        // If attempting to parse the string fails, we want to reset the parser\n        // to where it was before the attempt\n        this._cursor = initialPosition;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private _attemptStrCaseInsensitive(chars: string): boolean {\n    for (let i = 0; i < chars.length; i++) {\n      if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private _requireStr(chars: string) {\n    const location = this._cursor.clone();\n    if (!this._attemptStr(chars)) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._cursor.peek()), this._cursor.getSpan(location));\n    }\n  }\n\n  private _attemptCharCodeUntilFn(predicate: (code: number) => boolean) {\n    while (!predicate(this._cursor.peek())) {\n      this._cursor.advance();\n    }\n  }\n\n  private _requireCharCodeUntilFn(predicate: (code: number) => boolean, len: number) {\n    const start = this._cursor.clone();\n    this._attemptCharCodeUntilFn(predicate);\n    const end = this._cursor.clone();\n    if (end.diff(start) < len) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._cursor.peek()), this._cursor.getSpan(start));\n    }\n  }\n\n  private _attemptUntilChar(char: number) {\n    while (this._cursor.peek() !== char) {\n      this._cursor.advance();\n    }\n  }\n\n  private _readChar(decodeEntities: boolean): string {\n    if (decodeEntities && this._cursor.peek() === chars.$AMPERSAND) {\n      return this._decodeEntity();\n    } else {\n      // Don't rely upon reading directly from `_input` as the actual char value\n      // may have been generated from an escape sequence.\n      const char = String.fromCodePoint(this._cursor.peek());\n      this._cursor.advance();\n      return char;\n    }\n  }\n\n  private _decodeEntity(): string {\n    const start = this._cursor.clone();\n    this._cursor.advance();\n    if (this._attemptCharCode(chars.$HASH)) {\n      const isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n      const codeStart = this._cursor.clone();\n      this._attemptCharCodeUntilFn(isDigitEntityEnd);\n      if (this._cursor.peek() != chars.$SEMICOLON) {\n        throw this._createError(\n            _unexpectedCharacterErrorMsg(this._cursor.peek()), this._cursor.getSpan());\n      }\n      const strNum = this._cursor.getChars(codeStart);\n      this._cursor.advance();\n      try {\n        const charCode = parseInt(strNum, isHex ? 16 : 10);\n        return String.fromCharCode(charCode);\n      } catch {\n        throw this._createError(\n            _unknownEntityErrorMsg(this._cursor.getChars(start)), this._cursor.getSpan());\n      }\n    } else {\n      const nameStart = this._cursor.clone();\n      this._attemptCharCodeUntilFn(isNamedEntityEnd);\n      if (this._cursor.peek() != chars.$SEMICOLON) {\n        this._cursor = nameStart;\n        return '&';\n      }\n      const name = this._cursor.getChars(nameStart);\n      this._cursor.advance();\n      const char = NAMED_ENTITIES[name];\n      if (!char) {\n        throw this._createError(_unknownEntityErrorMsg(name), this._cursor.getSpan(start));\n      }\n      return char;\n    }\n  }\n\n  private _consumeRawText(decodeEntities: boolean, endMarkerPredicate: () => boolean): Token {\n    this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT);\n    const parts: string[] = [];\n    while (true) {\n      const tagCloseStart = this._cursor.clone();\n      const foundEndMarker = endMarkerPredicate();\n      this._cursor = tagCloseStart;\n      if (foundEndMarker) {\n        break;\n      }\n      parts.push(this._readChar(decodeEntities));\n    }\n    return this._endToken([this._processCarriageReturns(parts.join(''))]);\n  }\n\n  private _consumeComment(start: CharacterCursor) {\n    this._beginToken(TokenType.COMMENT_START, start);\n    this._requireCharCode(chars.$MINUS);\n    this._endToken([]);\n    this._consumeRawText(false, () => this._attemptStr('-->'));\n    this._beginToken(TokenType.COMMENT_END);\n    this._requireStr('-->');\n    this._endToken([]);\n  }\n\n  private _consumeCdata(start: CharacterCursor) {\n    this._beginToken(TokenType.CDATA_START, start);\n    this._requireStr('CDATA[');\n    this._endToken([]);\n    this._consumeRawText(false, () => this._attemptStr(']]>'));\n    this._beginToken(TokenType.CDATA_END);\n    this._requireStr(']]>');\n    this._endToken([]);\n  }\n\n  private _consumeDocType(start: CharacterCursor) {\n    this._beginToken(TokenType.DOC_TYPE, start);\n    const contentStart = this._cursor.clone();\n    this._attemptUntilChar(chars.$GT);\n    const content = this._cursor.getChars(contentStart);\n    this._cursor.advance();\n    this._endToken([content]);\n  }\n\n  private _consumePrefixAndName(): string[] {\n    const nameOrPrefixStart = this._cursor.clone();\n    let prefix: string = '';\n    while (this._cursor.peek() !== chars.$COLON && !isPrefixEnd(this._cursor.peek())) {\n      this._cursor.advance();\n    }\n    let nameStart: CharacterCursor;\n    if (this._cursor.peek() === chars.$COLON) {\n      prefix = this._cursor.getChars(nameOrPrefixStart);\n      this._cursor.advance();\n      nameStart = this._cursor.clone();\n    } else {\n      nameStart = nameOrPrefixStart;\n    }\n    this._requireCharCodeUntilFn(isNameEnd, prefix === '' ? 0 : 1);\n    const name = this._cursor.getChars(nameStart);\n    return [prefix, name];\n  }\n\n  private _consumeTagOpen(start: CharacterCursor) {\n    let tagName: string;\n    let prefix: string;\n    let openTagToken: Token|undefined;\n    let tokensBeforeTagOpen = this.tokens.length;\n    const innerStart = this._cursor.clone();\n    try {\n      if (!chars.isAsciiLetter(this._cursor.peek())) {\n        throw this._createError(\n            _unexpectedCharacterErrorMsg(this._cursor.peek()), this._cursor.getSpan(start));\n      }\n\n      openTagToken = this._consumeTagOpenStart(start);\n      prefix = openTagToken.parts[0];\n      tagName = openTagToken.parts[1];\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      while (this._cursor.peek() !== chars.$SLASH && this._cursor.peek() !== chars.$GT) {\n        this._consumeAttributeName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        if (this._attemptCharCode(chars.$EQ)) {\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._consumeAttributeValue();\n        }\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n      }\n      this._consumeTagOpenEnd();\n    } catch (e) {\n      if (e instanceof _ControlFlowError) {\n        // When the start tag is invalid (including invalid \"attributes\"), assume we want a \"<\"\n        this._cursor = innerStart;\n        if (openTagToken) {\n          this.tokens.length = tokensBeforeTagOpen;\n        }\n        // Back to back text tokens are merged at the end\n        this._beginToken(TokenType.TEXT, start);\n        this._endToken(['<']);\n        return;\n      }\n\n      throw e;\n    }\n\n    const contentTokenType = this._getTagDefinition(tagName).contentType;\n\n    if (contentTokenType === TagContentType.RAW_TEXT) {\n      this._consumeRawTextWithTagClose(prefix, tagName, false);\n    } else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n      this._consumeRawTextWithTagClose(prefix, tagName, true);\n    }\n  }\n\n  private _consumeRawTextWithTagClose(prefix: string, tagName: string, decodeEntities: boolean) {\n    const textToken = this._consumeRawText(decodeEntities, () => {\n      if (!this._attemptCharCode(chars.$LT)) return false;\n      if (!this._attemptCharCode(chars.$SLASH)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      if (!this._attemptStrCaseInsensitive(tagName)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      return this._attemptCharCode(chars.$GT);\n    });\n    this._beginToken(TokenType.TAG_CLOSE);\n    this._requireCharCodeUntilFn(code => code === chars.$GT, 3);\n    this._cursor.advance();  // Consume the `>`\n    this._endToken([prefix, tagName]);\n  }\n\n  private _consumeTagOpenStart(start: CharacterCursor) {\n    this._beginToken(TokenType.TAG_OPEN_START, start);\n    const parts = this._consumePrefixAndName();\n    return this._endToken(parts);\n  }\n\n  private _consumeAttributeName() {\n    const attrNameStart = this._cursor.peek();\n    if (attrNameStart === chars.$SQ || attrNameStart === chars.$DQ) {\n      throw this._createError(_unexpectedCharacterErrorMsg(attrNameStart), this._cursor.getSpan());\n    }\n    this._beginToken(TokenType.ATTR_NAME);\n    const prefixAndName = this._consumePrefixAndName();\n    this._endToken(prefixAndName);\n  }\n\n  private _consumeAttributeValue() {\n    let value: string;\n    if (this._cursor.peek() === chars.$SQ || this._cursor.peek() === chars.$DQ) {\n      this._beginToken(TokenType.ATTR_QUOTE);\n      const quoteChar = this._cursor.peek();\n      this._cursor.advance();\n      this._endToken([String.fromCodePoint(quoteChar)]);\n      this._beginToken(TokenType.ATTR_VALUE);\n      const parts: string[] = [];\n      while (this._cursor.peek() !== quoteChar) {\n        parts.push(this._readChar(true));\n      }\n      value = parts.join('');\n      this._endToken([this._processCarriageReturns(value)]);\n      this._beginToken(TokenType.ATTR_QUOTE);\n      this._cursor.advance();\n      this._endToken([String.fromCodePoint(quoteChar)]);\n    } else {\n      this._beginToken(TokenType.ATTR_VALUE);\n      const valueStart = this._cursor.clone();\n      this._requireCharCodeUntilFn(isNameEnd, 1);\n      value = this._cursor.getChars(valueStart);\n      this._endToken([this._processCarriageReturns(value)]);\n    }\n  }\n\n  private _consumeTagOpenEnd() {\n    const tokenType =\n        this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n    this._beginToken(tokenType);\n    this._requireCharCode(chars.$GT);\n    this._endToken([]);\n  }\n\n  private _consumeTagClose(start: CharacterCursor) {\n    this._beginToken(TokenType.TAG_CLOSE, start);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    const prefixAndName = this._consumePrefixAndName();\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    this._requireCharCode(chars.$GT);\n    this._endToken(prefixAndName);\n  }\n\n  private _consumeExpansionFormStart() {\n    this._beginToken(TokenType.EXPANSION_FORM_START);\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n\n    this._beginToken(TokenType.RAW_TEXT);\n    const condition = this._readUntil(chars.$COMMA);\n    this._endToken([condition]);\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.RAW_TEXT);\n    const type = this._readUntil(chars.$COMMA);\n    this._endToken([type]);\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n  }\n\n  private _consumeExpansionCaseStart() {\n    this._beginToken(TokenType.EXPANSION_CASE_VALUE);\n    const value = this._readUntil(chars.$LBRACE).trim();\n    this._endToken([value]);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_START);\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([]);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n  }\n\n  private _consumeExpansionCaseEnd() {\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_END);\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([]);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.pop();\n  }\n\n  private _consumeExpansionFormEnd() {\n    this._beginToken(TokenType.EXPANSION_FORM_END);\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.pop();\n  }\n\n  private _consumeText() {\n    const start = this._cursor.clone();\n    this._beginToken(TokenType.TEXT, start);\n    const parts: string[] = [];\n\n    do {\n      if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n        parts.push(this._interpolationConfig.start);\n        this._inInterpolation = true;\n      } else if (\n          this._interpolationConfig && this._inInterpolation &&\n          this._attemptStr(this._interpolationConfig.end)) {\n        parts.push(this._interpolationConfig.end);\n        this._inInterpolation = false;\n      } else {\n        parts.push(this._readChar(true));\n      }\n    } while (!this._isTextEnd());\n\n    this._endToken([this._processCarriageReturns(parts.join(''))]);\n  }\n\n  private _isTextEnd(): boolean {\n    if (this._cursor.peek() === chars.$LT || this._cursor.peek() === chars.$EOF) {\n      return true;\n    }\n\n    if (this._tokenizeIcu && !this._inInterpolation) {\n      if (this.isExpansionFormStart()) {\n        // start of an expansion form\n        return true;\n      }\n\n      if (this._cursor.peek() === chars.$RBRACE && this._isInExpansionCase()) {\n        // end of and expansion case\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _readUntil(char: number): string {\n    const start = this._cursor.clone();\n    this._attemptUntilChar(char);\n    return this._cursor.getChars(start);\n  }\n\n  private _isInExpansionCase(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_CASE_EXP_START;\n  }\n\n  private _isInExpansionForm(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_FORM_START;\n  }\n\n  private isExpansionFormStart(): boolean {\n    if (this._cursor.peek() !== chars.$LBRACE) {\n      return false;\n    }\n    if (this._interpolationConfig) {\n      const start = this._cursor.clone();\n      const isInterpolation = this._attemptStr(this._interpolationConfig.start);\n      this._cursor = start;\n      return !isInterpolation;\n    }\n    return true;\n  }\n}\n\nfunction isNotWhitespace(code: number): boolean {\n  return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n\nfunction isNameEnd(code: number): boolean {\n  return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n      code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n\nfunction isPrefixEnd(code: number): boolean {\n  return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n      (code < chars.$0 || code > chars.$9);\n}\n\nfunction isDigitEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n\nfunction isNamedEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n\nfunction isExpansionCaseStart(peek: number): boolean {\n  return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\n\nfunction compareCharCodeCaseInsensitive(code1: number, code2: number): boolean {\n  return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n\nfunction toUpperCaseCharCode(code: number): number {\n  return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n\nfunction mergeTextTokens(srcTokens: Token[]): Token[] {\n  const dstTokens: Token[] = [];\n  let lastDstToken: Token|undefined = undefined;\n  for (let i = 0; i < srcTokens.length; i++) {\n    const token = srcTokens[i];\n    if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n      lastDstToken.parts[0] ! += token.parts[0];\n      lastDstToken.sourceSpan.end = token.sourceSpan.end;\n    } else {\n      lastDstToken = token;\n      dstTokens.push(lastDstToken);\n    }\n  }\n\n  return dstTokens;\n}\n\n\n/**\n * The _Tokenizer uses objects of this type to move through the input text,\n * extracting \"parsed characters\". These could be more than one actual character\n * if the text contains escape sequences.\n */\ninterface CharacterCursor {\n  /** Initialize the cursor. */\n  init(): void;\n  /** The parsed character at the current cursor position. */\n  peek(): number;\n  /** Advance the cursor by one parsed character. */\n  advance(): void;\n  /** Get a span from the marked start point to the current point. */\n  getSpan(start?: this, leadingTriviaCodePoints?: number[]): ParseSourceSpan;\n  /** Get the parsed characters from the marked start point to the current point. */\n  getChars(start: this): string;\n  /** The number of characters left before the end of the cursor. */\n  charsLeft(): number;\n  /** The number of characters between `this` cursor and `other` cursor. */\n  diff(other: this): number;\n  /** Make a copy of this cursor */\n  clone(): CharacterCursor;\n}\n\ninterface CursorState {\n  peek: number;\n  offset: number;\n  line: number;\n  column: number;\n}\n\nclass PlainCharacterCursor implements CharacterCursor {\n  protected state: CursorState;\n  protected file: ParseSourceFile;\n  protected input: string;\n  protected end: number;\n\n  constructor(fileOrCursor: PlainCharacterCursor);\n  constructor(fileOrCursor: ParseSourceFile, range: LexerRange);\n  constructor(fileOrCursor: ParseSourceFile|PlainCharacterCursor, range?: LexerRange) {\n    if (fileOrCursor instanceof PlainCharacterCursor) {\n      this.file = fileOrCursor.file;\n      this.input = fileOrCursor.input;\n      this.end = fileOrCursor.end;\n      this.state = {...fileOrCursor.state};\n    } else {\n      if (!range) {\n        throw new Error(\n            'Programming error: the range argument must be provided with a file argument.');\n      }\n      this.file = fileOrCursor;\n      this.input = fileOrCursor.content;\n      this.end = range.endPos;\n      this.state = {\n        peek: -1,\n        offset: range.startPos,\n        line: range.startLine,\n        column: range.startCol,\n      };\n    }\n  }\n\n  clone(): PlainCharacterCursor { return new PlainCharacterCursor(this); }\n\n  peek() { return this.state.peek; }\n  charsLeft() { return this.end - this.state.offset; }\n  diff(other: this) { return this.state.offset - other.state.offset; }\n\n  advance(): void { this.advanceState(this.state); }\n\n  init(): void { this.updatePeek(this.state); }\n\n  getSpan(start?: this, leadingTriviaCodePoints?: number[]): ParseSourceSpan {\n    start = start || this;\n    if (leadingTriviaCodePoints) {\n      start = start.clone() as this;\n      while (this.diff(start) > 0 && leadingTriviaCodePoints.indexOf(start.peek()) !== -1) {\n        start.advance();\n      }\n    }\n    return new ParseSourceSpan(\n        new ParseLocation(start.file, start.state.offset, start.state.line, start.state.column),\n        new ParseLocation(this.file, this.state.offset, this.state.line, this.state.column));\n  }\n\n  getChars(start: this): string {\n    return this.input.substring(start.state.offset, this.state.offset);\n  }\n\n  charAt(pos: number): number { return this.input.charCodeAt(pos); }\n\n  protected advanceState(state: CursorState) {\n    if (state.offset >= this.end) {\n      this.state = state;\n      throw new CursorError('Unexpected character \"EOF\"', this);\n    }\n    const currentChar = this.charAt(state.offset);\n    if (currentChar === chars.$LF) {\n      state.line++;\n      state.column = 0;\n    } else if (!chars.isNewLine(currentChar)) {\n      state.column++;\n    }\n    state.offset++;\n    this.updatePeek(state);\n  }\n\n  protected updatePeek(state: CursorState): void {\n    state.peek = state.offset >= this.end ? chars.$EOF : this.charAt(state.offset);\n  }\n}\n\nclass EscapedCharacterCursor extends PlainCharacterCursor {\n  protected internalState: CursorState;\n\n  constructor(fileOrCursor: EscapedCharacterCursor);\n  constructor(fileOrCursor: ParseSourceFile, range: LexerRange);\n  constructor(fileOrCursor: ParseSourceFile|EscapedCharacterCursor, range?: LexerRange) {\n    if (fileOrCursor instanceof EscapedCharacterCursor) {\n      super(fileOrCursor);\n      this.internalState = {...fileOrCursor.internalState};\n    } else {\n      super(fileOrCursor, range !);\n      this.internalState = this.state;\n    }\n  }\n\n  advance(): void {\n    this.state = this.internalState;\n    super.advance();\n    this.processEscapeSequence();\n  }\n\n  init(): void {\n    super.init();\n    this.processEscapeSequence();\n  }\n\n  clone(): EscapedCharacterCursor { return new EscapedCharacterCursor(this); }\n\n  getChars(start: this): string {\n    const cursor = start.clone();\n    let chars = '';\n    while (cursor.internalState.offset < this.internalState.offset) {\n      chars += String.fromCodePoint(cursor.peek());\n      cursor.advance();\n    }\n    return chars;\n  }\n\n  /**\n   * Process the escape sequence that starts at the current position in the text.\n   *\n   * This method is called to ensure that `peek` has the unescaped value of escape sequences.\n   */\n  protected processEscapeSequence(): void {\n    const peek = () => this.internalState.peek;\n\n    if (peek() === chars.$BACKSLASH) {\n      // We have hit an escape sequence so we need the internal state to become independent\n      // of the external state.\n      this.internalState = {...this.state};\n\n      // Move past the backslash\n      this.advanceState(this.internalState);\n\n      // First check for standard control char sequences\n      if (peek() === chars.$n) {\n        this.state.peek = chars.$LF;\n      } else if (peek() === chars.$r) {\n        this.state.peek = chars.$CR;\n      } else if (peek() === chars.$v) {\n        this.state.peek = chars.$VTAB;\n      } else if (peek() === chars.$t) {\n        this.state.peek = chars.$TAB;\n      } else if (peek() === chars.$b) {\n        this.state.peek = chars.$BSPACE;\n      } else if (peek() === chars.$f) {\n        this.state.peek = chars.$FF;\n      }\n\n      // Now consider more complex sequences\n      else if (peek() === chars.$u) {\n        // Unicode code-point sequence\n        this.advanceState(this.internalState);  // advance past the `u` char\n        if (peek() === chars.$LBRACE) {\n          // Variable length Unicode, e.g. `\\x{123}`\n          this.advanceState(this.internalState);  // advance past the `{` char\n          // Advance past the variable number of hex digits until we hit a `}` char\n          const digitStart = this.clone();\n          let length = 0;\n          while (peek() !== chars.$RBRACE) {\n            this.advanceState(this.internalState);\n            length++;\n          }\n          this.state.peek = this.decodeHexDigits(digitStart, length);\n        } else {\n          // Fixed length Unicode, e.g. `\\u1234`\n          const digitStart = this.clone();\n          this.advanceState(this.internalState);\n          this.advanceState(this.internalState);\n          this.advanceState(this.internalState);\n          this.state.peek = this.decodeHexDigits(digitStart, 4);\n        }\n      }\n\n      else if (peek() === chars.$x) {\n        // Hex char code, e.g. `\\x2F`\n        this.advanceState(this.internalState);  // advance past the `x` char\n        const digitStart = this.clone();\n        this.advanceState(this.internalState);\n        this.state.peek = this.decodeHexDigits(digitStart, 2);\n      }\n\n      else if (chars.isOctalDigit(peek())) {\n        // Octal char code, e.g. `\\012`,\n        let octal = '';\n        let length = 0;\n        let previous = this.clone();\n        while (chars.isOctalDigit(peek()) && length < 3) {\n          previous = this.clone();\n          octal += String.fromCodePoint(peek());\n          this.advanceState(this.internalState);\n          length++;\n        }\n        this.state.peek = parseInt(octal, 8);\n        // Backup one char\n        this.internalState = previous.internalState;\n      }\n\n      else if (chars.isNewLine(this.internalState.peek)) {\n        // Line continuation `\\` followed by a new line\n        this.advanceState(this.internalState);  // advance over the newline\n        this.state = this.internalState;\n      }\n\n      else {\n        // If none of the `if` blocks were executed then we just have an escaped normal character.\n        // In that case we just, effectively, skip the backslash from the character.\n        this.state.peek = this.internalState.peek;\n      }\n    }\n  }\n\n  protected decodeHexDigits(start: EscapedCharacterCursor, length: number): number {\n    const hex = this.input.substr(start.internalState.offset, length);\n    const charCode = parseInt(hex, 16);\n    if (!isNaN(charCode)) {\n      return charCode;\n    } else {\n      start.state = start.internalState;\n      throw new CursorError('Invalid hexadecimal escape sequence', start);\n    }\n  }\n}\n\nexport class CursorError {\n  constructor(public msg: string, public cursor: CharacterCursor) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, isNgContainer, mergeNsAndName} from './tags';\n\nexport class TreeError extends ParseError {\n  static create(elementName: string|null, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n\n  constructor(public elementName: string|null, span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n\nexport class ParseTreeResult {\n  constructor(public rootNodes: html.Node[], public errors: ParseError[]) {}\n}\n\nexport class Parser {\n  constructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n\n  parse(source: string, url: string, options?: lex.TokenizeOptions): ParseTreeResult {\n    const tokensAndErrors = lex.tokenize(source, url, this.getTagDefinition, options);\n\n    const treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        (<ParseError[]>tokensAndErrors.errors).concat(treeAndErrors.errors));\n  }\n}\n\nclass _TreeBuilder {\n  private _index: number = -1;\n  // TODO(issue/24571): remove '!'.\n  private _peek !: lex.Token;\n\n  private _rootNodes: html.Node[] = [];\n  private _errors: TreeError[] = [];\n\n  private _elementStack: html.Element[] = [];\n\n  constructor(\n      private tokens: lex.Token[], private getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n\n  build(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n\n  private _advance(): lex.Token {\n    const prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n\n  private _advanceIf(type: lex.TokenType): lex.Token|null {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n\n  private _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n\n  private _consumeComment(token: lex.Token) {\n    const text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const value = text != null ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n\n  private _consumeExpansion(token: lex.Token) {\n    const switchValue = this._advance();\n\n    const type = this._advance();\n    const cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n\n  private _parseExpansionCase(): html.ExpansionCase|null {\n    const value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const start = this._advance();\n\n    const exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat(<TreeError[]>parsedExp.errors);\n      return null;\n    }\n\n    const sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n\n  private _collectExpansionExpTokens(start: lex.Token): lex.Token[]|null {\n    const exp: lex.Token[] = [];\n    const expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n\n  private _consumeText(token: lex.Token) {\n    let text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const parent = this._getParentElement();\n      if (parent != null && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n\n  private _closeVoidElement(): void {\n    const el = this._getParentElement();\n    if (el && this.getTagDefinition(el.name).isVoid) {\n      this._elementStack.pop();\n    }\n  }\n\n  private _consumeStartTag(startTagToken: lex.Token) {\n    const prefix = startTagToken.parts[0];\n    const name = startTagToken.parts[1];\n    const attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const end = this._peek.sourceSpan.start;\n    const span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const el = new html.Element(fullName, attrs, [], span, span, undefined);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n\n  private _pushElement(el: html.Element) {\n    const parentEl = this._getParentElement();\n\n    if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n      this._elementStack.pop();\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n\n  private _consumeEndTag(endTagToken: lex.Token) {\n    const fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) {\n      this._getParentElement() !.endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      const errMsg =\n          `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n      this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n    }\n  }\n\n  private _popElement(fullName: string): boolean {\n    for (let stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private _consumeAttr(attrName: lex.Token): html.Attribute {\n    const fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let end = attrName.sourceSpan.end;\n    let value = '';\n    let valueSpan: ParseSourceSpan = undefined !;\n    if (this._peek.type === lex.TokenType.ATTR_QUOTE) {\n      this._advance();\n    }\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    if (this._peek.type === lex.TokenType.ATTR_QUOTE) {\n      const quoteToken = this._advance();\n      end = quoteToken.sourceSpan.end;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n\n  private _getParentElement(): html.Element|null {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n\n  /**\n   * Returns the parent in the DOM and the container.\n   *\n   * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n   */\n  private _getParentElementSkippingContainers():\n      {parent: html.Element | null, container: html.Element|null} {\n    let container: html.Element|null = null;\n\n    for (let i = this._elementStack.length - 1; i >= 0; i--) {\n      if (!isNgContainer(this._elementStack[i].name)) {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: null, container};\n  }\n\n  private _addToParent(node: html.Node) {\n    const parent = this._getParentElement();\n    if (parent != null) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n\n  /**\n   * Insert a node between the parent and the container.\n   * When no container is given, the node is appended as a child of the parent.\n   * Also updates the element stack accordingly.\n   *\n   * @internal\n   */\n  private _insertBeforeContainer(\n      parent: html.Element, container: html.Element|null, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n\n  private _getElementFullName(prefix: string, localName: string, parentElement: html.Element|null):\n      string {\n    if (prefix === '') {\n      prefix = this.getTagDefinition(localName).implicitNamespacePrefix || '';\n      if (prefix === '' && parentElement != null) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './html_tags';\nimport {TokenizeOptions} from './lexer';\nimport {ParseTreeResult, Parser} from './parser';\n\nexport {ParseTreeResult, TreeError} from './parser';\n\nexport class HtmlParser extends Parser {\n  constructor() { super(getHtmlTagDefinition); }\n\n  parse(source: string, url: string, options?: TokenizeOptions): ParseTreeResult {\n    return super.parse(source, url, options);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from './ast';\nimport {ParseTreeResult} from './parser';\nimport {NGSP_UNICODE} from './tags';\n\nexport const PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\n\nconst SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nconst WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nconst NO_WS_REGEXP = new RegExp(`[^${WS_CHARS}]`);\nconst WS_REPLACE_REGEXP = new RegExp(`[${WS_CHARS}]{2,}`, 'g');\n\nfunction hasPreserveWhitespacesAttr(attrs: html.Attribute[]): boolean {\n  return attrs.some((attr: html.Attribute) => attr.name === PRESERVE_WS_ATTR_NAME);\n}\n\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n */\nexport function replaceNgsp(value: string): string {\n  // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n  return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nexport class WhitespaceVisitor implements html.Visitor {\n  visitElement(element: html.Element, context: any): any {\n    if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n      // don't descent into elements where we need to preserve whitespaces\n      // but still visit all attributes to eliminate one used as a market to preserve WS\n      return new html.Element(\n          element.name, html.visitAll(this, element.attrs), element.children, element.sourceSpan,\n          element.startSourceSpan, element.endSourceSpan, element.i18n);\n    }\n\n    return new html.Element(\n        element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan,\n        element.startSourceSpan, element.endSourceSpan, element.i18n);\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): any {\n    return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n  }\n\n  visitText(text: html.Text, context: any): any {\n    const isNotBlank = text.value.match(NO_WS_REGEXP);\n\n    if (isNotBlank) {\n      return new html.Text(\n          replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan, text.i18n);\n    }\n\n    return null;\n  }\n\n  visitComment(comment: html.Comment, context: any): any { return comment; }\n\n  visitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\n\nexport function removeWhitespaces(htmlAstWithErrors: ParseTreeResult): ParseTreeResult {\n  return new ParseTreeResult(\n      html.visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes),\n      htmlAstWithErrors.errors);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\n\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nconst PLURAL_CASES: string[] = ['zero', 'one', 'two', 'few', 'many', 'other'];\n\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n */\nexport function expandNodes(nodes: html.Node[]): ExpansionResult {\n  const expander = new _Expander();\n  return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\n\nexport class ExpansionResult {\n  constructor(public nodes: html.Node[], public expanded: boolean, public errors: ParseError[]) {}\n}\n\nexport class ExpansionError extends ParseError {\n  constructor(span: ParseSourceSpan, errorMsg: string) { super(span, errorMsg); }\n}\n\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * @internal\n */\nclass _Expander implements html.Visitor {\n  isExpanded: boolean = false;\n  errors: ParseError[] = [];\n\n  visitElement(element: html.Element, context: any): any {\n    return new html.Element(\n        element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan,\n        element.startSourceSpan, element.endSourceSpan);\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): any { return attribute; }\n\n  visitText(text: html.Text, context: any): any { return text; }\n\n  visitComment(comment: html.Comment, context: any): any { return comment; }\n\n  visitExpansion(icu: html.Expansion, context: any): any {\n    this.isExpanded = true;\n    return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n                                  _expandDefaultForm(icu, this.errors);\n  }\n\n  visitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    throw new Error('Should not be reached');\n  }\n}\n\n// Plural forms are expanded to `NgPlural` and `NgPluralCase`s\nfunction _expandPluralForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const children = ast.cases.map(c => {\n    if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n      errors.push(new ExpansionError(\n          c.valueSourceSpan,\n          `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n    }\n\n    const expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    return new html.Element(\n        `ng-template`, [new html.Attribute('ngPluralCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s\nfunction _expandDefaultForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const children = ast.cases.map(c => {\n    const expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    if (c.value === 'other') {\n      // other is the default case when no values match\n      return new html.Element(\n          `ng-template`, [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)],\n          expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    }\n\n    return new html.Element(\n        `ng-template`, [new html.Attribute('ngSwitchCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AstPath} from '../ast_path';\nimport {CompileDirectiveSummary, CompileProviderMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {SecurityContext} from '../core';\nimport {AST, BindingType, BoundElementProperty, ParsedEvent, ParsedEventType, ParsedVariable} from '../expression_parser/ast';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {ParseSourceSpan} from '../parse_util';\n\n\n\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n */\nexport interface TemplateAst {\n  /**\n   * The source span from which this node was parsed.\n   */\n  sourceSpan: ParseSourceSpan;\n\n  /**\n   * Visit this node and possibly transform it.\n   */\n  visit(visitor: TemplateAstVisitor, context: any): any;\n}\n\n/**\n * A segment of text within the template.\n */\nexport class TextAst implements TemplateAst {\n  constructor(\n      public value: string, public ngContentIndex: number, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitText(this, context); }\n}\n\n/**\n * A bound expression within the text of a template.\n */\nexport class BoundTextAst implements TemplateAst {\n  constructor(\n      public value: AST, public ngContentIndex: number, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitBoundText(this, context);\n  }\n}\n\n/**\n * A plain attribute on an element.\n */\nexport class AttrAst implements TemplateAst {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitAttr(this, context); }\n}\n\nexport const enum PropertyBindingType {\n  // A normal binding to a property (e.g. `[property]=\"expression\"`).\n  Property,\n  // A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n  Attribute,\n  // A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n  Class,\n  // A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n  Style,\n  // A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n  Animation,\n}\n\nconst BoundPropertyMapping = {\n  [BindingType.Animation]: PropertyBindingType.Animation,\n  [BindingType.Attribute]: PropertyBindingType.Attribute,\n  [BindingType.Class]: PropertyBindingType.Class,\n  [BindingType.Property]: PropertyBindingType.Property,\n  [BindingType.Style]: PropertyBindingType.Style,\n};\n\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[@trigger]=\"stateExp\"`)\n */\nexport class BoundElementPropertyAst implements TemplateAst {\n  readonly isAnimation: boolean;\n\n  constructor(\n      public name: string, public type: PropertyBindingType,\n      public securityContext: SecurityContext, public value: AST, public unit: string|null,\n      public sourceSpan: ParseSourceSpan) {\n    this.isAnimation = this.type === PropertyBindingType.Animation;\n  }\n\n  static fromBoundProperty(prop: BoundElementProperty) {\n    const type = BoundPropertyMapping[prop.type];\n    return new BoundElementPropertyAst(\n        prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n  }\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElementProperty(this, context);\n  }\n}\n\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(@trigger.phase)=\"callback($event)\"`).\n */\nexport class BoundEventAst implements TemplateAst {\n  readonly fullName: string;\n  readonly isAnimation: boolean;\n\n  constructor(\n      public name: string, public target: string|null, public phase: string|null,\n      public handler: AST, public sourceSpan: ParseSourceSpan,\n      public handlerSpan: ParseSourceSpan) {\n    this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n    this.isAnimation = !!this.phase;\n  }\n\n  static calcFullName(name: string, target: string|null, phase: string|null): string {\n    if (target) {\n      return `${target}:${name}`;\n    }\n    if (phase) {\n      return `@${name}.${phase}`;\n    }\n\n    return name;\n  }\n\n  static fromParsedEvent(event: ParsedEvent) {\n    const target: string|null = event.type === ParsedEventType.Regular ? event.targetOrPhase : null;\n    const phase: string|null =\n        event.type === ParsedEventType.Animation ? event.targetOrPhase : null;\n    return new BoundEventAst(\n        event.name, target, phase, event.handler, event.sourceSpan, event.handlerSpan);\n  }\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEvent(this, context);\n  }\n}\n\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nexport class ReferenceAst implements TemplateAst {\n  constructor(\n      public name: string, public value: CompileTokenMetadata, public originalValue: string,\n      public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitReference(this, context);\n  }\n}\n\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nexport class VariableAst implements TemplateAst {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n\n  static fromParsedVariable(v: ParsedVariable) {\n    return new VariableAst(v.name, v.value, v.sourceSpan);\n  }\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitVariable(this, context);\n  }\n}\n\n/**\n * An element declaration in a template.\n */\nexport class ElementAst implements TemplateAst {\n  constructor(\n      public name: string, public attrs: AttrAst[], public inputs: BoundElementPropertyAst[],\n      public outputs: BoundEventAst[], public references: ReferenceAst[],\n      public directives: DirectiveAst[], public providers: ProviderAst[],\n      public hasViewContainer: boolean, public queryMatches: QueryMatch[],\n      public children: TemplateAst[], public ngContentIndex: number|null,\n      public sourceSpan: ParseSourceSpan, public endSourceSpan: ParseSourceSpan|null) {}\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElement(this, context);\n  }\n}\n\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nexport class EmbeddedTemplateAst implements TemplateAst {\n  constructor(\n      public attrs: AttrAst[], public outputs: BoundEventAst[], public references: ReferenceAst[],\n      public variables: VariableAst[], public directives: DirectiveAst[],\n      public providers: ProviderAst[], public hasViewContainer: boolean,\n      public queryMatches: QueryMatch[], public children: TemplateAst[],\n      public ngContentIndex: number, public sourceSpan: ParseSourceSpan) {}\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEmbeddedTemplate(this, context);\n  }\n}\n\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nexport class BoundDirectivePropertyAst implements TemplateAst {\n  constructor(\n      public directiveName: string, public templateName: string, public value: AST,\n      public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirectiveProperty(this, context);\n  }\n}\n\n/**\n * A directive declared on an element.\n */\nexport class DirectiveAst implements TemplateAst {\n  constructor(\n      public directive: CompileDirectiveSummary, public inputs: BoundDirectivePropertyAst[],\n      public hostProperties: BoundElementPropertyAst[], public hostEvents: BoundEventAst[],\n      public contentQueryStartId: number, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirective(this, context);\n  }\n}\n\n/**\n * A provider declared on an element\n */\nexport class ProviderAst implements TemplateAst {\n  constructor(\n      public token: CompileTokenMetadata, public multiProvider: boolean, public eager: boolean,\n      public providers: CompileProviderMetadata[], public providerType: ProviderAstType,\n      public lifecycleHooks: LifecycleHooks[], public sourceSpan: ParseSourceSpan,\n      readonly isModule: boolean) {}\n\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    // No visit method in the visitor for now...\n    return null;\n  }\n}\n\nexport enum ProviderAstType {\n  PublicService,\n  PrivateService,\n  Component,\n  Directive,\n  Builtin\n}\n\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nexport class NgContentAst implements TemplateAst {\n  constructor(\n      public index: number, public ngContentIndex: number, public sourceSpan: ParseSourceSpan) {}\n  visit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitNgContent(this, context);\n  }\n}\n\nexport interface QueryMatch {\n  queryId: number;\n  value: CompileTokenMetadata;\n}\n\n/**\n * A visitor for {@link TemplateAst} trees that will process each node.\n */\nexport interface TemplateAstVisitor {\n  // Returning a truthy value from `visit()` will prevent `templateVisitAll()` from the call to\n  // the typed method and result returned will become the result included in `visitAll()`s\n  // result array.\n  visit?(ast: TemplateAst, context: any): any;\n\n  visitNgContent(ast: NgContentAst, context: any): any;\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any;\n  visitElement(ast: ElementAst, context: any): any;\n  visitReference(ast: ReferenceAst, context: any): any;\n  visitVariable(ast: VariableAst, context: any): any;\n  visitEvent(ast: BoundEventAst, context: any): any;\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any;\n  visitAttr(ast: AttrAst, context: any): any;\n  visitBoundText(ast: BoundTextAst, context: any): any;\n  visitText(ast: TextAst, context: any): any;\n  visitDirective(ast: DirectiveAst, context: any): any;\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any;\n}\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nexport class NullTemplateVisitor implements TemplateAstVisitor {\n  visitNgContent(ast: NgContentAst, context: any): void {}\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): void {}\n  visitElement(ast: ElementAst, context: any): void {}\n  visitReference(ast: ReferenceAst, context: any): void {}\n  visitVariable(ast: VariableAst, context: any): void {}\n  visitEvent(ast: BoundEventAst, context: any): void {}\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): void {}\n  visitAttr(ast: AttrAst, context: any): void {}\n  visitBoundText(ast: BoundTextAst, context: any): void {}\n  visitText(ast: TextAst, context: any): void {}\n  visitDirective(ast: DirectiveAst, context: any): void {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): void {}\n}\n\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nexport class RecursiveTemplateAstVisitor extends NullTemplateVisitor implements TemplateAstVisitor {\n  constructor() { super(); }\n\n  // Nodes with children\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.references);\n      visit(ast.variables);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.inputs);\n      visit(ast.outputs);\n      visit(ast.references);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.inputs);\n      visit(ast.hostProperties);\n      visit(ast.hostEvents);\n    });\n  }\n\n  protected visitChildren<T extends TemplateAst>(\n      context: any,\n      cb: (visit: (<V extends TemplateAst>(children: V[]|undefined) => void)) => void) {\n    let results: any[][] = [];\n    let t = this;\n    function visit<T extends TemplateAst>(children: T[] | undefined) {\n      if (children && children.length) results.push(templateVisitAll(t, children, context));\n    }\n    cb(visit);\n    return Array.prototype.concat.apply([], results);\n  }\n}\n\n/**\n * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n */\nexport function templateVisitAll(\n    visitor: TemplateAstVisitor, asts: TemplateAst[], context: any = null): any[] {\n  const result: any[] = [];\n  const visit = visitor.visit ?\n      (ast: TemplateAst) => visitor.visit !(ast, context) || ast.visit(visitor, context) :\n      (ast: TemplateAst) => ast.visit(visitor, context);\n  asts.forEach(ast => {\n    const astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\nexport type TemplateAstPath = AstPath<TemplateAst>;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompileNgModuleMetadata, CompileProviderMetadata, CompileQueryMetadata, CompileTokenMetadata, CompileTypeMetadata, tokenName, tokenReference} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {Identifiers, createTokenForExternalReference} from './identifiers';\nimport {ParseError, ParseSourceSpan} from './parse_util';\nimport {AttrAst, DirectiveAst, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst} from './template_parser/template_ast';\n\nexport class ProviderError extends ParseError {\n  constructor(message: string, span: ParseSourceSpan) { super(span, message); }\n}\n\nexport interface QueryWithId {\n  meta: CompileQueryMetadata;\n  queryId: number;\n}\n\nexport class ProviderViewContext {\n  /**\n   * @internal\n   */\n  viewQueries: Map<any, QueryWithId[]>;\n  /**\n   * @internal\n   */\n  viewProviders: Map<any, boolean>;\n  errors: ProviderError[] = [];\n\n  constructor(public reflector: CompileReflector, public component: CompileDirectiveMetadata) {\n    this.viewQueries = _getViewQueries(component);\n    this.viewProviders = new Map<any, boolean>();\n    component.viewProviders.forEach((provider) => {\n      if (this.viewProviders.get(tokenReference(provider.token)) == null) {\n        this.viewProviders.set(tokenReference(provider.token), true);\n      }\n    });\n  }\n}\n\nexport class ProviderElementContext {\n  private _contentQueries: Map<any, QueryWithId[]>;\n\n  private _transformedProviders = new Map<any, ProviderAst>();\n  private _seenProviders = new Map<any, boolean>();\n  private _allProviders: Map<any, ProviderAst>;\n  private _attrs: {[key: string]: string};\n  private _queriedTokens = new Map<any, QueryMatch[]>();\n\n  public readonly transformedHasViewContainer: boolean = false;\n\n  constructor(\n      public viewContext: ProviderViewContext, private _parent: ProviderElementContext,\n      private _isViewRoot: boolean, private _directiveAsts: DirectiveAst[], attrs: AttrAst[],\n      refs: ReferenceAst[], isTemplate: boolean, contentQueryStartId: number,\n      private _sourceSpan: ParseSourceSpan) {\n    this._attrs = {};\n    attrs.forEach((attrAst) => this._attrs[attrAst.name] = attrAst.value);\n    const directivesMeta = _directiveAsts.map(directiveAst => directiveAst.directive);\n    this._allProviders =\n        _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n    this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._addQueryReadsTo(provider.token, provider.token, this._queriedTokens);\n    });\n    if (isTemplate) {\n      const templateRefId =\n          createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n      this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n    }\n    refs.forEach((refAst) => {\n      let defaultQueryValue = refAst.value ||\n          createTokenForExternalReference(this.viewContext.reflector, Identifiers.ElementRef);\n      this._addQueryReadsTo({value: refAst.name}, defaultQueryValue, this._queriedTokens);\n    });\n    if (this._queriedTokens.get(\n            this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n      this.transformedHasViewContainer = true;\n    }\n\n    // create the providers that we know are eager first\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      const eager = provider.eager || this._queriedTokens.get(tokenReference(provider.token));\n      if (eager) {\n        this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n      }\n    });\n  }\n\n  afterElement() {\n    // collect lazy providers\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n    });\n  }\n\n  get transformProviders(): ProviderAst[] {\n    // Note: Maps keep their insertion order.\n    const lazyProviders: ProviderAst[] = [];\n    const eagerProviders: ProviderAst[] = [];\n    this._transformedProviders.forEach(provider => {\n      if (provider.eager) {\n        eagerProviders.push(provider);\n      } else {\n        lazyProviders.push(provider);\n      }\n    });\n    return lazyProviders.concat(eagerProviders);\n  }\n\n  get transformedDirectiveAsts(): DirectiveAst[] {\n    const sortedProviderTypes = this.transformProviders.map(provider => provider.token.identifier);\n    const sortedDirectives = this._directiveAsts.slice();\n    sortedDirectives.sort(\n        (dir1, dir2) => sortedProviderTypes.indexOf(dir1.directive.type) -\n            sortedProviderTypes.indexOf(dir2.directive.type));\n    return sortedDirectives;\n  }\n\n  get queryMatches(): QueryMatch[] {\n    const allMatches: QueryMatch[] = [];\n    this._queriedTokens.forEach((matches: QueryMatch[]) => { allMatches.push(...matches); });\n    return allMatches;\n  }\n\n  private _addQueryReadsTo(\n      token: CompileTokenMetadata, defaultValue: CompileTokenMetadata,\n      queryReadTokens: Map<any, QueryMatch[]>) {\n    this._getQueriesFor(token).forEach((query) => {\n      const queryValue = query.meta.read || defaultValue;\n      const tokenRef = tokenReference(queryValue);\n      let queryMatches = queryReadTokens.get(tokenRef);\n      if (!queryMatches) {\n        queryMatches = [];\n        queryReadTokens.set(tokenRef, queryMatches);\n      }\n      queryMatches.push({queryId: query.queryId, value: queryValue});\n    });\n  }\n\n  private _getQueriesFor(token: CompileTokenMetadata): QueryWithId[] {\n    const result: QueryWithId[] = [];\n    let currentEl: ProviderElementContext = this;\n    let distance = 0;\n    let queries: QueryWithId[]|undefined;\n    while (currentEl !== null) {\n      queries = currentEl._contentQueries.get(tokenReference(token));\n      if (queries) {\n        result.push(...queries.filter((query) => query.meta.descendants || distance <= 1));\n      }\n      if (currentEl._directiveAsts.length > 0) {\n        distance++;\n      }\n      currentEl = currentEl._parent;\n    }\n    queries = this.viewContext.viewQueries.get(tokenReference(token));\n    if (queries) {\n      result.push(...queries);\n    }\n    return result;\n  }\n\n\n  private _getOrCreateLocalProvider(\n      requestingProviderType: ProviderAstType, token: CompileTokenMetadata,\n      eager: boolean): ProviderAst|null {\n    const resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n                               requestingProviderType === ProviderAstType.PublicService) &&\n                              resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n        ((requestingProviderType === ProviderAstType.PrivateService ||\n          requestingProviderType === ProviderAstType.PublicService) &&\n         resolvedProvider.providerType === ProviderAstType.Builtin)) {\n      return null;\n    }\n    let transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (this._seenProviders.get(tokenReference(token)) != null) {\n      this.viewContext.errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`, this._sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const transformedProviders = resolvedProvider.providers.map((provider) => {\n      let transformedUseValue = provider.useValue;\n      let transformedUseExisting = provider.useExisting !;\n      let transformedDeps: CompileDiDependencyMetadata[] = undefined !;\n      if (provider.useExisting != null) {\n        const existingDiDep = this._getDependency(\n            resolvedProvider.providerType, {token: provider.useExisting}, eager) !;\n        if (existingDiDep.token != null) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = null !;\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(resolvedProvider.providerType, dep, eager) !);\n      } else if (provider.useClass) {\n        const deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(resolvedProvider.providerType, dep, eager) !);\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n\n  private _getLocalDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = false): CompileDiDependencyMetadata|null {\n    if (dep.isAttribute) {\n      const attrValue = this._attrs[dep.token !.value];\n      return {isValue: true, value: attrValue == null ? null : attrValue};\n    }\n\n    if (dep.token != null) {\n      // access builtints\n      if ((requestingProviderType === ProviderAstType.Directive ||\n           requestingProviderType === ProviderAstType.Component)) {\n        if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(\n                    Identifiers.ChangeDetectorRef) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n          return dep;\n        }\n        if (tokenReference(dep.token) ===\n            this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n          (this as{transformedHasViewContainer: boolean}).transformedHasViewContainer = true;\n        }\n      }\n      // access the injector\n      if (tokenReference(dep.token) ===\n          this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n        return dep;\n      }\n      // access providers\n      if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n        return dep;\n      }\n    }\n    return null;\n  }\n\n  private _getDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = false): CompileDiDependencyMetadata|null {\n    let currElement: ProviderElementContext = this;\n    let currEager: boolean = eager;\n    let result: CompileDiDependencyMetadata|null = null;\n    if (!dep.isSkipSelf) {\n      result = this._getLocalDependency(requestingProviderType, dep, eager);\n    }\n    if (dep.isSelf) {\n      if (!result && dep.isOptional) {\n        result = {isValue: true, value: null};\n      }\n    } else {\n      // check parent elements\n      while (!result && currElement._parent) {\n        const prevElement = currElement;\n        currElement = currElement._parent;\n        if (prevElement._isViewRoot) {\n          currEager = false;\n        }\n        result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n      }\n      // check @Host restriction\n      if (!result) {\n        if (!dep.isHost || this.viewContext.component.isHost ||\n            this.viewContext.component.type.reference === tokenReference(dep.token !) ||\n            this.viewContext.viewProviders.get(tokenReference(dep.token !)) != null) {\n          result = dep;\n        } else {\n          result = dep.isOptional ? {isValue: true, value: null} : null;\n        }\n      }\n    }\n    if (!result) {\n      this.viewContext.errors.push(\n          new ProviderError(`No provider for ${tokenName(dep.token!)}`, this._sourceSpan));\n    }\n    return result;\n  }\n}\n\n\nexport class NgModuleProviderAnalyzer {\n  private _transformedProviders = new Map<any, ProviderAst>();\n  private _seenProviders = new Map<any, boolean>();\n  private _allProviders: Map<any, ProviderAst>;\n  private _errors: ProviderError[] = [];\n\n  constructor(\n      private reflector: CompileReflector, ngModule: CompileNgModuleMetadata,\n      extraProviders: CompileProviderMetadata[], sourceSpan: ParseSourceSpan) {\n    this._allProviders = new Map<any, ProviderAst>();\n    ngModule.transitiveModule.modules.forEach((ngModuleType: CompileTypeMetadata) => {\n      const ngModuleProvider = {token: {identifier: ngModuleType}, useClass: ngModuleType};\n      _resolveProviders(\n          [ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, this._errors,\n          this._allProviders, /* isModule */ true);\n    });\n    _resolveProviders(\n        ngModule.transitiveModule.providers.map(entry => entry.provider).concat(extraProviders),\n        ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders,\n        /* isModule */ false);\n  }\n\n  parse(): ProviderAst[] {\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.token, provider.eager);\n    });\n    if (this._errors.length > 0) {\n      const errorString = this._errors.join('\\n');\n      throw new Error(`Provider parse errors:\\n${errorString}`);\n    }\n    // Note: Maps keep their insertion order.\n    const lazyProviders: ProviderAst[] = [];\n    const eagerProviders: ProviderAst[] = [];\n    this._transformedProviders.forEach(provider => {\n      if (provider.eager) {\n        eagerProviders.push(provider);\n      } else {\n        lazyProviders.push(provider);\n      }\n    });\n    return lazyProviders.concat(eagerProviders);\n  }\n\n  private _getOrCreateLocalProvider(token: CompileTokenMetadata, eager: boolean): ProviderAst|null {\n    const resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider) {\n      return null;\n    }\n    let transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (this._seenProviders.get(tokenReference(token)) != null) {\n      this._errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`,\n          resolvedProvider.sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const transformedProviders = resolvedProvider.providers.map((provider) => {\n      let transformedUseValue = provider.useValue;\n      let transformedUseExisting = provider.useExisting !;\n      let transformedDeps: CompileDiDependencyMetadata[] = undefined !;\n      if (provider.useExisting != null) {\n        const existingDiDep =\n            this._getDependency({token: provider.useExisting}, eager, resolvedProvider.sourceSpan);\n        if (existingDiDep.token != null) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = null !;\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      } else if (provider.useClass) {\n        const deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n\n  private _getDependency(\n      dep: CompileDiDependencyMetadata, eager: boolean = false,\n      requestorSourceSpan: ParseSourceSpan): CompileDiDependencyMetadata {\n    let foundLocal = false;\n    if (!dep.isSkipSelf && dep.token != null) {\n      // access the injector\n      if (tokenReference(dep.token) ===\n              this.reflector.resolveExternalReference(Identifiers.Injector) ||\n          tokenReference(dep.token) ===\n              this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n        foundLocal = true;\n        // access providers\n      } else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n        foundLocal = true;\n      }\n    }\n    return dep;\n  }\n}\n\nfunction _transformProvider(\n    provider: CompileProviderMetadata,\n    {useExisting, useValue, deps}:\n        {useExisting: CompileTokenMetadata, useValue: any, deps: CompileDiDependencyMetadata[]}) {\n  return {\n    token: provider.token,\n    useClass: provider.useClass,\n    useExisting: useExisting,\n    useFactory: provider.useFactory,\n    useValue: useValue,\n    deps: deps,\n    multi: provider.multi\n  };\n}\n\nfunction _transformProviderAst(\n    provider: ProviderAst,\n    {eager, providers}: {eager: boolean, providers: CompileProviderMetadata[]}): ProviderAst {\n  return new ProviderAst(\n      provider.token, provider.multiProvider, provider.eager || eager, providers,\n      provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\n\nfunction _resolveProvidersFromDirectives(\n    directives: CompileDirectiveSummary[], sourceSpan: ParseSourceSpan,\n    targetErrors: ParseError[]): Map<any, ProviderAst> {\n  const providersByToken = new Map<any, ProviderAst>();\n  directives.forEach((directive) => {\n    const dirProvider:\n        CompileProviderMetadata = {token: {identifier: directive.type}, useClass: directive.type};\n    _resolveProviders(\n        [dirProvider],\n        directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true,\n        sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n  });\n\n  // Note: directives need to be able to overwrite providers of a component!\n  const directivesWithComponentFirst =\n      directives.filter(dir => dir.isComponent).concat(directives.filter(dir => !dir.isComponent));\n  directivesWithComponentFirst.forEach((directive) => {\n    _resolveProviders(\n        directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors,\n        providersByToken, /* isModule */ false);\n    _resolveProviders(\n        directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors,\n        providersByToken, /* isModule */ false);\n  });\n  return providersByToken;\n}\n\nfunction _resolveProviders(\n    providers: CompileProviderMetadata[], providerType: ProviderAstType, eager: boolean,\n    sourceSpan: ParseSourceSpan, targetErrors: ParseError[],\n    targetProvidersByToken: Map<any, ProviderAst>, isModule: boolean) {\n  providers.forEach((provider) => {\n    let resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n    if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n      targetErrors.push(new ProviderError(\n          `Mixing multi and non multi provider is not possible for token ${tokenName(resolvedProvider.token)}`,\n          sourceSpan));\n    }\n    if (!resolvedProvider) {\n      const lifecycleHooks = provider.token.identifier &&\n              (<CompileTypeMetadata>provider.token.identifier).lifecycleHooks ?\n          (<CompileTypeMetadata>provider.token.identifier).lifecycleHooks :\n          [];\n      const isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n      resolvedProvider = new ProviderAst(\n          provider.token, !!provider.multi, eager || isUseValue, [provider], providerType,\n          lifecycleHooks, sourceSpan, isModule);\n      targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n    } else {\n      if (!provider.multi) {\n        resolvedProvider.providers.length = 0;\n      }\n      resolvedProvider.providers.push(provider);\n    }\n  });\n}\n\n\nfunction _getViewQueries(component: CompileDirectiveMetadata): Map<any, QueryWithId[]> {\n  // Note: queries start with id 1 so we can use the number in a Bloom filter!\n  let viewQueryId = 1;\n  const viewQueries = new Map<any, QueryWithId[]>();\n  if (component.viewQueries) {\n    component.viewQueries.forEach(\n        (query) => _addQueryToTokenMap(viewQueries, {meta: query, queryId: viewQueryId++}));\n  }\n  return viewQueries;\n}\n\nfunction _getContentQueries(\n    contentQueryStartId: number, directives: CompileDirectiveSummary[]): Map<any, QueryWithId[]> {\n  let contentQueryId = contentQueryStartId;\n  const contentQueries = new Map<any, QueryWithId[]>();\n  directives.forEach((directive, directiveIndex) => {\n    if (directive.queries) {\n      directive.queries.forEach(\n          (query) => _addQueryToTokenMap(contentQueries, {meta: query, queryId: contentQueryId++}));\n    }\n  });\n  return contentQueries;\n}\n\nfunction _addQueryToTokenMap(map: Map<any, QueryWithId[]>, query: QueryWithId) {\n  query.meta.selectors.forEach((token: CompileTokenMetadata) => {\n    let entry = map.get(tokenReference(token));\n    if (!entry) {\n      entry = [];\n      map.set(tokenReference(token), entry);\n    }\n    entry.push(query);\n  });\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {UrlResolver} from './url_resolver';\n\nexport class StyleWithImports {\n  constructor(public style: string, public styleUrls: string[]) {}\n}\n\nexport function isStyleUrlResolvable(url: string): boolean {\n  if (url == null || url.length === 0 || url[0] == '/') return false;\n  const schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n  return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n\n/**\n * Rewrites stylesheets by resolving and removing the @import urls that\n * are either relative or don't have a `package:` scheme\n */\nexport function extractStyleUrls(\n    resolver: UrlResolver, baseUrl: string, cssText: string): StyleWithImports {\n  const foundUrls: string[] = [];\n\n  const modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n                              .replace(CSS_IMPORT_REGEXP, (...m: string[]) => {\n                                const url = m[1] || m[2];\n                                if (!isStyleUrlResolvable(url)) {\n                                  // Do not attempt to resolve non-package absolute URLs with URI\n                                  // scheme\n                                  return m[0];\n                                }\n                                foundUrls.push(resolver.resolve(baseUrl, url));\n                                return '';\n                              });\n  return new StyleWithImports(modifiedCssText, foundUrls);\n}\n\nconst CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nconst CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nconst URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveSummary, CompilePipeSummary} from '../compile_metadata';\nimport {SecurityContext} from '../core';\nimport {ASTWithSource, BindingPipe, BindingType, BoundElementProperty, EmptyExpr, ParsedEvent, ParsedEventType, ParsedProperty, ParsedPropertyType, ParsedVariable, ParserError, RecursiveAstVisitor, TemplateBinding} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {mergeNsAndName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector} from '../selector';\nimport {splitAtColon, splitAtPeriod} from '../util';\n\nconst PROPERTY_PARTS_SEPARATOR = '.';\nconst ATTRIBUTE_PREFIX = 'attr';\nconst CLASS_PREFIX = 'class';\nconst STYLE_PREFIX = 'style';\n\nconst ANIMATE_PROP_PREFIX = 'animate-';\n\n/**\n * Parses bindings in templates and in the directive host area.\n */\nexport class BindingParser {\n  pipesByName: Map<string, CompilePipeSummary>|null = null;\n\n  private _usedPipes: Map<string, CompilePipeSummary> = new Map();\n\n  constructor(\n      private _exprParser: Parser, private _interpolationConfig: InterpolationConfig,\n      private _schemaRegistry: ElementSchemaRegistry, pipes: CompilePipeSummary[]|null,\n      public errors: ParseError[]) {\n    // When the `pipes` parameter is `null`, do not check for used pipes\n    // This is used in IVY when we might not know the available pipes at compile time\n    if (pipes) {\n      const pipesByName: Map<string, CompilePipeSummary> = new Map();\n      pipes.forEach(pipe => pipesByName.set(pipe.name, pipe));\n      this.pipesByName = pipesByName;\n    }\n  }\n\n  get interpolationConfig(): InterpolationConfig { return this._interpolationConfig; }\n\n  getUsedPipes(): CompilePipeSummary[] { return Array.from(this._usedPipes.values()); }\n\n  createBoundHostProperties(dirMeta: CompileDirectiveSummary, sourceSpan: ParseSourceSpan):\n      ParsedProperty[]|null {\n    if (dirMeta.hostProperties) {\n      const boundProps: ParsedProperty[] = [];\n      Object.keys(dirMeta.hostProperties).forEach(propName => {\n        const expression = dirMeta.hostProperties[propName];\n        if (typeof expression === 'string') {\n          this.parsePropertyBinding(\n              propName, expression, true, sourceSpan, sourceSpan.start.offset, undefined, [],\n              boundProps);\n        } else {\n          this._reportError(\n              `Value of the host property binding \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n      return boundProps;\n    }\n    return null;\n  }\n\n  createDirectiveHostPropertyAsts(\n      dirMeta: CompileDirectiveSummary, elementSelector: string,\n      sourceSpan: ParseSourceSpan): BoundElementProperty[]|null {\n    const boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n    return boundProps &&\n        boundProps.map((prop) => this.createBoundElementProperty(elementSelector, prop));\n  }\n\n  createDirectiveHostEventAsts(dirMeta: CompileDirectiveSummary, sourceSpan: ParseSourceSpan):\n      ParsedEvent[]|null {\n    if (dirMeta.hostListeners) {\n      const targetEvents: ParsedEvent[] = [];\n      Object.keys(dirMeta.hostListeners).forEach(propName => {\n        const expression = dirMeta.hostListeners[propName];\n        if (typeof expression === 'string') {\n          // TODO: pass a more accurate handlerSpan for this event.\n          this.parseEvent(propName, expression, sourceSpan, sourceSpan, [], targetEvents);\n        } else {\n          this._reportError(\n              `Value of the host listener \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n      return targetEvents;\n    }\n    return null;\n  }\n\n  parseInterpolation(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const ast = this._exprParser.parseInterpolation(\n          value, sourceInfo, sourceSpan.start.offset, this._interpolationConfig) !;\n      if (ast) this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo, sourceSpan.start.offset);\n    }\n  }\n\n  // Parse an inline template binding. ie `<tag *tplKey=\"<tplValue>\">`\n  parseInlineTemplateBinding(\n      tplKey: string, tplValue: string, sourceSpan: ParseSourceSpan, absoluteOffset: number,\n      targetMatchableAttrs: string[][], targetProps: ParsedProperty[],\n      targetVars: ParsedVariable[]) {\n    const bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n\n    for (let i = 0; i < bindings.length; i++) {\n      const binding = bindings[i];\n      if (binding.keyIsVar) {\n        targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n      } else if (binding.expression) {\n        this._parsePropertyAst(\n            binding.key, binding.expression, sourceSpan, undefined, targetMatchableAttrs,\n            targetProps);\n      } else {\n        targetMatchableAttrs.push([binding.key, '']);\n        this.parseLiteralAttr(\n            binding.key, null, sourceSpan, absoluteOffset, undefined, targetMatchableAttrs,\n            targetProps);\n      }\n    }\n  }\n\n  private _parseTemplateBindings(tplKey: string, tplValue: string, sourceSpan: ParseSourceSpan):\n      TemplateBinding[] {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const bindingsResult = this._exprParser.parseTemplateBindings(\n          tplKey, tplValue, sourceInfo, sourceSpan.start.offset);\n      this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n      bindingsResult.templateBindings.forEach((binding) => {\n        if (binding.expression) {\n          this._checkPipes(binding.expression, sourceSpan);\n        }\n      });\n      bindingsResult.warnings.forEach(\n          (warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n      return bindingsResult.templateBindings;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return [];\n    }\n  }\n\n  parseLiteralAttr(\n      name: string, value: string|null, sourceSpan: ParseSourceSpan, absoluteOffset: number,\n      valueSpan: ParseSourceSpan|undefined, targetMatchableAttrs: string[][],\n      targetProps: ParsedProperty[]) {\n    if (isAnimationLabel(name)) {\n      name = name.substring(1);\n      if (value) {\n        this._reportError(\n            `Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid.` +\n                ` Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.`,\n            sourceSpan, ParseErrorLevel.ERROR);\n      }\n      this._parseAnimation(\n          name, value, sourceSpan, absoluteOffset, valueSpan, targetMatchableAttrs, targetProps);\n    } else {\n      targetProps.push(new ParsedProperty(\n          name, this._exprParser.wrapLiteralPrimitive(value, '', absoluteOffset),\n          ParsedPropertyType.LITERAL_ATTR, sourceSpan, valueSpan));\n    }\n  }\n\n  parsePropertyBinding(\n      name: string, expression: string, isHost: boolean, sourceSpan: ParseSourceSpan,\n      absoluteOffset: number, valueSpan: ParseSourceSpan|undefined,\n      targetMatchableAttrs: string[][], targetProps: ParsedProperty[]) {\n    let isAnimationProp = false;\n    if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n      isAnimationProp = true;\n      name = name.substring(ANIMATE_PROP_PREFIX.length);\n    } else if (isAnimationLabel(name)) {\n      isAnimationProp = true;\n      name = name.substring(1);\n    }\n\n    if (isAnimationProp) {\n      this._parseAnimation(\n          name, expression, sourceSpan, absoluteOffset, valueSpan, targetMatchableAttrs,\n          targetProps);\n    } else {\n      this._parsePropertyAst(\n          name, this._parseBinding(expression, isHost, valueSpan || sourceSpan, absoluteOffset),\n          sourceSpan, valueSpan, targetMatchableAttrs, targetProps);\n    }\n  }\n\n  parsePropertyInterpolation(\n      name: string, value: string, sourceSpan: ParseSourceSpan,\n      valueSpan: ParseSourceSpan|undefined, targetMatchableAttrs: string[][],\n      targetProps: ParsedProperty[]): boolean {\n    const expr = this.parseInterpolation(value, valueSpan || sourceSpan);\n    if (expr) {\n      this._parsePropertyAst(name, expr, sourceSpan, valueSpan, targetMatchableAttrs, targetProps);\n      return true;\n    }\n    return false;\n  }\n\n  private _parsePropertyAst(\n      name: string, ast: ASTWithSource, sourceSpan: ParseSourceSpan,\n      valueSpan: ParseSourceSpan|undefined, targetMatchableAttrs: string[][],\n      targetProps: ParsedProperty[]) {\n    targetMatchableAttrs.push([name, ast.source !]);\n    targetProps.push(\n        new ParsedProperty(name, ast, ParsedPropertyType.DEFAULT, sourceSpan, valueSpan));\n  }\n\n  private _parseAnimation(\n      name: string, expression: string|null, sourceSpan: ParseSourceSpan, absoluteOffset: number,\n      valueSpan: ParseSourceSpan|undefined, targetMatchableAttrs: string[][],\n      targetProps: ParsedProperty[]) {\n    // This will occur when a @trigger is not paired with an expression.\n    // For animations it is valid to not have an expression since */void\n    // states will be applied by angular when the element is attached/detached\n    const ast = this._parseBinding(\n        expression || 'undefined', false, valueSpan || sourceSpan, absoluteOffset);\n    targetMatchableAttrs.push([name, ast.source !]);\n    targetProps.push(\n        new ParsedProperty(name, ast, ParsedPropertyType.ANIMATION, sourceSpan, valueSpan));\n  }\n\n  private _parseBinding(\n      value: string, isHostBinding: boolean, sourceSpan: ParseSourceSpan,\n      absoluteOffset: number): ASTWithSource {\n    const sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n\n    try {\n      const ast = isHostBinding ?\n          this._exprParser.parseSimpleBinding(\n              value, sourceInfo, absoluteOffset, this._interpolationConfig) :\n          this._exprParser.parseBinding(\n              value, sourceInfo, absoluteOffset, this._interpolationConfig);\n      if (ast) this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo, absoluteOffset);\n    }\n  }\n\n  createBoundElementProperty(\n      elementSelector: string, boundProp: ParsedProperty, skipValidation: boolean = false,\n      mapPropertyName: boolean = true): BoundElementProperty {\n    if (boundProp.isAnimation) {\n      return new BoundElementProperty(\n          boundProp.name, BindingType.Animation, SecurityContext.NONE, boundProp.expression, null,\n          boundProp.sourceSpan, boundProp.valueSpan);\n    }\n\n    let unit: string|null = null;\n    let bindingType: BindingType = undefined !;\n    let boundPropertyName: string|null = null;\n    const parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n    let securityContexts: SecurityContext[] = undefined !;\n\n    // Check for special cases (prefix style, attr, class)\n    if (parts.length > 1) {\n      if (parts[0] == ATTRIBUTE_PREFIX) {\n        boundPropertyName = parts[1];\n        if (!skipValidation) {\n          this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n        }\n        securityContexts = calcPossibleSecurityContexts(\n            this._schemaRegistry, elementSelector, boundPropertyName, true);\n\n        const nsSeparatorIdx = boundPropertyName.indexOf(':');\n        if (nsSeparatorIdx > -1) {\n          const ns = boundPropertyName.substring(0, nsSeparatorIdx);\n          const name = boundPropertyName.substring(nsSeparatorIdx + 1);\n          boundPropertyName = mergeNsAndName(ns, name);\n        }\n\n        bindingType = BindingType.Attribute;\n      } else if (parts[0] == CLASS_PREFIX) {\n        boundPropertyName = parts[1];\n        bindingType = BindingType.Class;\n        securityContexts = [SecurityContext.NONE];\n      } else if (parts[0] == STYLE_PREFIX) {\n        unit = parts.length > 2 ? parts[2] : null;\n        boundPropertyName = parts[1];\n        bindingType = BindingType.Style;\n        securityContexts = [SecurityContext.STYLE];\n      }\n    }\n\n    // If not a special case, use the full property name\n    if (boundPropertyName === null) {\n      const mappedPropName = this._schemaRegistry.getMappedPropName(boundProp.name);\n      boundPropertyName = mapPropertyName ? mappedPropName : boundProp.name;\n      securityContexts = calcPossibleSecurityContexts(\n          this._schemaRegistry, elementSelector, mappedPropName, false);\n      bindingType = BindingType.Property;\n      if (!skipValidation) {\n        this._validatePropertyOrAttributeName(mappedPropName, boundProp.sourceSpan, false);\n      }\n    }\n\n    return new BoundElementProperty(\n        boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit,\n        boundProp.sourceSpan, boundProp.valueSpan);\n  }\n\n  parseEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan, handlerSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: ParsedEvent[]) {\n    if (isAnimationLabel(name)) {\n      name = name.substr(1);\n      this._parseAnimationEvent(name, expression, sourceSpan, handlerSpan, targetEvents);\n    } else {\n      this._parseRegularEvent(\n          name, expression, sourceSpan, handlerSpan, targetMatchableAttrs, targetEvents);\n    }\n  }\n\n  calcPossibleSecurityContexts(selector: string, propName: string, isAttribute: boolean):\n      SecurityContext[] {\n    const prop = this._schemaRegistry.getMappedPropName(propName);\n    return calcPossibleSecurityContexts(this._schemaRegistry, selector, prop, isAttribute);\n  }\n\n  private _parseAnimationEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan, handlerSpan: ParseSourceSpan,\n      targetEvents: ParsedEvent[]) {\n    const matches = splitAtPeriod(name, [name, '']);\n    const eventName = matches[0];\n    const phase = matches[1].toLowerCase();\n    if (phase) {\n      switch (phase) {\n        case 'start':\n        case 'done':\n          const ast = this._parseAction(expression, handlerSpan);\n          targetEvents.push(new ParsedEvent(\n              eventName, phase, ParsedEventType.Animation, ast, sourceSpan, handlerSpan));\n          break;\n\n        default:\n          this._reportError(\n              `The provided animation output phase value \"${phase}\" for \"@${eventName}\" is not supported (use start or done)`,\n              sourceSpan);\n          break;\n      }\n    } else {\n      this._reportError(\n          `The animation trigger output event (@${eventName}) is missing its phase value name (start or done are currently supported)`,\n          sourceSpan);\n    }\n  }\n\n  private _parseRegularEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan, handlerSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: ParsedEvent[]) {\n    // long format: 'target: eventName'\n    const [target, eventName] = splitAtColon(name, [null !, name]);\n    const ast = this._parseAction(expression, handlerSpan);\n    targetMatchableAttrs.push([name !, ast.source !]);\n    targetEvents.push(\n        new ParsedEvent(eventName, target, ParsedEventType.Regular, ast, sourceSpan, handlerSpan));\n    // Don't detect directives for event names for now,\n    // so don't add the event name to the matchableAttrs\n  }\n\n  private _parseAction(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n    const absoluteOffset = (sourceSpan && sourceSpan.start) ? sourceSpan.start.offset : 0;\n\n    try {\n      const ast = this._exprParser.parseAction(\n          value, sourceInfo, absoluteOffset, this._interpolationConfig);\n      if (ast) {\n        this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      }\n      if (!ast || ast.ast instanceof EmptyExpr) {\n        this._reportError(`Empty expressions are not allowed`, sourceSpan);\n        return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo, absoluteOffset);\n      }\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo, absoluteOffset);\n    }\n  }\n\n  private _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this.errors.push(new ParseError(sourceSpan, message, level));\n  }\n\n  private _reportExpressionParserErrors(errors: ParserError[], sourceSpan: ParseSourceSpan) {\n    for (const error of errors) {\n      this._reportError(error.message, sourceSpan);\n    }\n  }\n\n  // Make sure all the used pipes are known in `this.pipesByName`\n  private _checkPipes(ast: ASTWithSource, sourceSpan: ParseSourceSpan): void {\n    if (ast && this.pipesByName) {\n      const collector = new PipeCollector();\n      ast.visit(collector);\n      collector.pipes.forEach((ast, pipeName) => {\n        const pipeMeta = this.pipesByName !.get(pipeName);\n        if (!pipeMeta) {\n          this._reportError(\n              `The pipe '${pipeName}' could not be found`,\n              new ParseSourceSpan(\n                  sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n        } else {\n          this._usedPipes.set(pipeName, pipeMeta);\n        }\n      });\n    }\n  }\n\n  /**\n   * @param propName the name of the property / attribute\n   * @param sourceSpan\n   * @param isAttr true when binding to an attribute\n   */\n  private _validatePropertyOrAttributeName(\n      propName: string, sourceSpan: ParseSourceSpan, isAttr: boolean): void {\n    const report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n                            this._schemaRegistry.validateProperty(propName);\n    if (report.error) {\n      this._reportError(report.msg !, sourceSpan, ParseErrorLevel.ERROR);\n    }\n  }\n}\n\nexport class PipeCollector extends RecursiveAstVisitor {\n  pipes = new Map<string, BindingPipe>();\n  visitPipe(ast: BindingPipe, context: any): any {\n    this.pipes.set(ast.name, ast);\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n}\n\nfunction isAnimationLabel(name: string): boolean {\n  return name[0] == '@';\n}\n\nexport function calcPossibleSecurityContexts(\n    registry: ElementSchemaRegistry, selector: string, propName: string,\n    isAttribute: boolean): SecurityContext[] {\n  const ctxs: SecurityContext[] = [];\n  CssSelector.parse(selector).forEach((selector) => {\n    const elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n    const notElementNames =\n        new Set(selector.notSelectors.filter(selector => selector.isElementSelector())\n                    .map((selector) => selector.element));\n    const possibleElementNames =\n        elementNames.filter(elementName => !notElementNames.has(elementName));\n\n    ctxs.push(...possibleElementNames.map(\n        elementName => registry.securityContext(elementName, propName, isAttribute)));\n  });\n  return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../ml_parser/ast';\nimport {isNgContent} from '../ml_parser/tags';\n\nconst NG_CONTENT_SELECT_ATTR = 'select';\nconst LINK_ELEMENT = 'link';\nconst LINK_STYLE_REL_ATTR = 'rel';\nconst LINK_STYLE_HREF_ATTR = 'href';\nconst LINK_STYLE_REL_VALUE = 'stylesheet';\nconst STYLE_ELEMENT = 'style';\nconst SCRIPT_ELEMENT = 'script';\nconst NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nconst NG_PROJECT_AS = 'ngProjectAs';\n\nexport function preparseElement(ast: html.Element): PreparsedElement {\n  let selectAttr: string = null !;\n  let hrefAttr: string = null !;\n  let relAttr: string = null !;\n  let nonBindable = false;\n  let projectAs = '';\n  ast.attrs.forEach(attr => {\n    const lcAttrName = attr.name.toLowerCase();\n    if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n      selectAttr = attr.value;\n    } else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n      hrefAttr = attr.value;\n    } else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n      relAttr = attr.value;\n    } else if (attr.name == NG_NON_BINDABLE_ATTR) {\n      nonBindable = true;\n    } else if (attr.name == NG_PROJECT_AS) {\n      if (attr.value.length > 0) {\n        projectAs = attr.value;\n      }\n    }\n  });\n  selectAttr = normalizeNgContentSelect(selectAttr);\n  const nodeName = ast.name.toLowerCase();\n  let type = PreparsedElementType.OTHER;\n  if (isNgContent(nodeName)) {\n    type = PreparsedElementType.NG_CONTENT;\n  } else if (nodeName == STYLE_ELEMENT) {\n    type = PreparsedElementType.STYLE;\n  } else if (nodeName == SCRIPT_ELEMENT) {\n    type = PreparsedElementType.SCRIPT;\n  } else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n    type = PreparsedElementType.STYLESHEET;\n  }\n  return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n\nexport enum PreparsedElementType {\n  NG_CONTENT,\n  STYLE,\n  STYLESHEET,\n  SCRIPT,\n  OTHER\n}\n\nexport class PreparsedElement {\n  constructor(\n      public type: PreparsedElementType, public selectAttr: string, public hrefAttr: string,\n      public nonBindable: boolean, public projectAs: string) {}\n}\n\n\nfunction normalizeNgContentSelect(selectAttr: string): string {\n  if (selectAttr === null || selectAttr.length === 0) {\n    return '*';\n  }\n  return selectAttr;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {SchemaMetadata} from '../core';\nimport {AST, ASTWithSource, EmptyExpr, ParsedEvent, ParsedProperty, ParsedVariable} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {Identifiers, createTokenForExternalReference, createTokenForReference} from '../identifiers';\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser, ParseTreeResult} from '../ml_parser/html_parser';\nimport {removeWhitespaces, replaceNgsp} from '../ml_parser/html_whitespaces';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {isNgTemplate, splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {Console, syntaxError} from '../util';\n\nimport {BindingParser} from './binding_parser';\nimport * as t from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\nconst BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst IDENT_EVENT_IDX = 10;\n\nconst TEMPLATE_ATTR_PREFIX = '*';\nconst CLASS_ATTR = 'class';\n\nlet _TEXT_CSS_SELECTOR !: CssSelector;\nfunction TEXT_CSS_SELECTOR(): CssSelector {\n  if (!_TEXT_CSS_SELECTOR) {\n    _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n  }\n  return _TEXT_CSS_SELECTOR;\n}\n\nexport class TemplateParseError extends ParseError {\n  constructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\n\nexport class TemplateParseResult {\n  constructor(\n      public templateAst?: t.TemplateAst[], public usedPipes?: CompilePipeSummary[],\n      public errors?: ParseError[]) {}\n}\n\nexport class TemplateParser {\n  constructor(\n      private _config: CompilerConfig, private _reflector: CompileReflector,\n      private _exprParser: Parser, private _schemaRegistry: ElementSchemaRegistry,\n      private _htmlParser: HtmlParser, private _console: Console,\n      public transforms: t.TemplateAstVisitor[]) {}\n\n  public get expressionParser() { return this._exprParser; }\n\n  parse(\n      component: CompileDirectiveMetadata, template: string|ParseTreeResult,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string,\n      preserveWhitespaces: boolean): {template: t.TemplateAst[], pipes: CompilePipeSummary[]} {\n    const result = this.tryParse(\n        component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n    const warnings = result.errors !.filter(error => error.level === ParseErrorLevel.WARNING);\n\n    const errors = result.errors !.filter(error => error.level === ParseErrorLevel.ERROR);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const errorString = errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n    }\n\n    return {template: result.templateAst !, pipes: result.usedPipes !};\n  }\n\n  tryParse(\n      component: CompileDirectiveMetadata, template: string|ParseTreeResult,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string, preserveWhitespaces: boolean): TemplateParseResult {\n    let htmlParseResult = typeof template === 'string' ?\n        this._htmlParser !.parse(template, templateUrl, {\n          tokenizeExpansionForms: true,\n          interpolationConfig: this.getInterpolationConfig(component)\n        }) :\n        template;\n\n    if (!preserveWhitespaces) {\n      htmlParseResult = removeWhitespaces(htmlParseResult);\n    }\n\n    return this.tryParseHtml(\n        this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n  }\n\n  tryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[],\n      schemas: SchemaMetadata[]): TemplateParseResult {\n    let result: t.TemplateAst[];\n    const errors = htmlAstWithErrors.errors;\n    const usedPipes: CompilePipeSummary[] = [];\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const uniqDirectives = removeSummaryDuplicates(directives);\n      const uniqPipes = removeSummaryDuplicates(pipes);\n      const providerViewContext = new ProviderViewContext(this._reflector, component);\n      let interpolationConfig: InterpolationConfig = undefined !;\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const bindingParser = new BindingParser(\n          this._exprParser, interpolationConfig !, this._schemaRegistry, uniqPipes, errors);\n      const parseVisitor = new TemplateParseVisitor(\n          this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser,\n          this._schemaRegistry, schemas, errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n      usedPipes.push(...bindingParser.getUsedPipes());\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, usedPipes, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: t.TemplateAstVisitor) => { result = t.templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, usedPipes, errors);\n  }\n\n  expandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n\n  getInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig|undefined {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n    return undefined;\n  }\n\n  /** @internal */\n  _assertNoReferenceDuplicationOnTemplate(result: t.TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const existingReferences: string[] = [];\n\n    result.filter(element => !!(<any>element).references)\n        .forEach(element => (<any>element).references.forEach((reference: t.ReferenceAst) => {\n          const name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.ERROR);\n            errors.push(error);\n          }\n        }));\n  }\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount = 0;\n  contentQueryStartId: number;\n\n  constructor(\n      private reflector: CompileReflector, private config: CompilerConfig,\n      public providerViewContext: ProviderViewContext, directives: CompileDirectiveSummary[],\n      private _bindingParser: BindingParser, private _schemaRegistry: ElementSchemaRegistry,\n      private _schemas: SchemaMetadata[], private _targetErrors: TemplateParseError[]) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n    directives.forEach((directive, index) => {\n      const selector = CssSelector.parse(directive.selector !);\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n\n  visitExpansion(expansion: html.Expansion, context: any): any { return null; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n\n  visitText(text: html.Text, parent: ElementContext): any {\n    const ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR()) !;\n    const valueNoNgsp = replaceNgsp(text.value);\n    const expr = this._bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan !);\n    return expr ? new t.BoundTextAst(expr, ngContentIndex, text.sourceSpan !) :\n                  new t.TextAst(valueNoNgsp, ngContentIndex, text.sourceSpan !);\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): any {\n    return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n\n  visitComment(comment: html.Comment, context: any): any { return null; }\n\n  visitElement(element: html.Element, parent: ElementContext): any {\n    const queryStartIndex = this.contentQueryStartId;\n    const elName = element.name;\n    const preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const matchableAttrs: [string, string][] = [];\n    const elementOrDirectiveProps: ParsedProperty[] = [];\n    const elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const elementVars: t.VariableAst[] = [];\n    const events: t.BoundEventAst[] = [];\n\n    const templateElementOrDirectiveProps: ParsedProperty[] = [];\n    const templateMatchableAttrs: [string, string][] = [];\n    const templateElementVars: t.VariableAst[] = [];\n\n    let hasInlineTemplates = false;\n    const attrs: t.AttrAst[] = [];\n    const isTemplateElement = isNgTemplate(element.name);\n\n    element.attrs.forEach(attr => {\n      const parsedVariables: ParsedVariable[] = [];\n      const hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n      elementVars.push(...parsedVariables.map(v => t.VariableAst.fromParsedVariable(v)));\n\n      let templateValue: string|undefined;\n      let templateKey: string|undefined;\n      const normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateValue = attr.value;\n        templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n      }\n\n      const hasTemplateBinding = templateValue != null;\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        const parsedVariables: ParsedVariable[] = [];\n        this._bindingParser.parseInlineTemplateBinding(\n            templateKey !, templateValue !, attr.sourceSpan, attr.sourceSpan.start.offset,\n            templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables);\n        templateElementVars.push(...parsedVariables.map(v => t.VariableAst.fromParsedVariable(v)));\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const references: t.ReferenceAst[] = [];\n    const boundDirectivePropNames = new Set<string>();\n    const directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, element.sourceSpan !, references, boundDirectivePropNames);\n    const elementProps: t.BoundElementPropertyAst[] = this._createElementPropertyAsts(\n        element.name, elementOrDirectiveProps, boundDirectivePropNames);\n    const isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const providerContext = new ProviderElementContext(\n        this.providerViewContext, parent.providerContext !, isViewRoot, directiveAsts, attrs,\n        references, isTemplateElement, queryStartIndex, element.sourceSpan !);\n\n    const children: t.TemplateAst[] = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? parent.providerContext ! : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const projectionSelector = preparsedElement.projectAs != '' ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const ngContentIndex = parent.findNgContentIndex(projectionSelector) !;\n    let parsedElement: t.TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      // `<ng-content>` element\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, element.sourceSpan !);\n      }\n\n      parsedElement = new t.NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null ! : ngContentIndex,\n          element.sourceSpan !);\n    } else if (isTemplateElement) {\n      // `<ng-template>` element\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, element.sourceSpan !);\n\n      parsedElement = new t.EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? null ! : ngContentIndex,\n          element.sourceSpan !);\n    } else {\n      // element other than `<ng-content>` and `<ng-template>`\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan !);\n\n      const ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new t.ElementAst(\n          elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex,\n          element.sourceSpan, element.endSourceSpan || null);\n    }\n\n    if (hasInlineTemplates) {\n      // The element as a *-attribute\n      const templateQueryStartIndex = this.contentQueryStartId;\n      const templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n      const {directives} = this._parseDirectives(this.selectorMatcher, templateSelector);\n      const templateBoundDirectivePropNames = new Set<string>();\n      const templateDirectiveAsts = this._createDirectiveAsts(\n          true, elName, directives, templateElementOrDirectiveProps, [], element.sourceSpan !, [],\n          templateBoundDirectivePropNames);\n      const templateElementProps: t.BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan !);\n      const templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext !, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan !);\n      templateProviderContext.afterElement();\n\n      parsedElement = new t.EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches,\n          [parsedElement], ngContentIndex, element.sourceSpan !);\n    }\n\n    return parsedElement;\n  }\n\n  private _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: ParsedProperty[], targetEvents: t.BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: t.VariableAst[]): boolean {\n    const name = this._normalizeAttributeName(attr.name);\n    const value = attr.value;\n    const srcSpan = attr.sourceSpan;\n    const absoluteOffset = attr.valueSpan ? attr.valueSpan.start.offset : srcSpan.start.offset;\n\n    const boundEvents: ParsedEvent[] = [];\n    const bindParts = name.match(BIND_NAME_REGEXP);\n    let hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (bindParts[KW_BIND_IDX] != null) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, absoluteOffset, attr.valueSpan,\n            targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, attr.valueSpan || srcSpan,\n            targetMatchableAttrs, boundEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, absoluteOffset, attr.valueSpan,\n            targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, attr.valueSpan || srcSpan,\n            targetMatchableAttrs, boundEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, absoluteOffset, attr.valueSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, absoluteOffset, attr.valueSpan,\n            targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, attr.valueSpan || srcSpan,\n            targetMatchableAttrs, boundEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, absoluteOffset, attr.valueSpan,\n            targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, attr.valueSpan || srcSpan,\n            targetMatchableAttrs, boundEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, attr.valueSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(\n          name, value, srcSpan, absoluteOffset, attr.valueSpan, targetMatchableAttrs, targetProps);\n    }\n\n    targetEvents.push(...boundEvents.map(e => t.BoundEventAst.fromParsedEvent(e)));\n\n    return hasBinding;\n  }\n\n  private _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n\n  private _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: t.VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new t.VariableAst(identifier, value, sourceSpan));\n  }\n\n  private _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n\n  private _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan, valueSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: ParsedEvent[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, valueSpan, targetMatchableAttrs,\n        targetEvents);\n  }\n\n  private _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive) !] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n\n  private _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: ParsedProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: t.ReferenceAst[],\n      targetBoundDirectivePropNames: Set<string>): t.DirectiveAst[] {\n    const matchedReferences = new Set<string>();\n    let component: CompileDirectiveSummary = null !;\n\n    const directiveAsts = directives.map((directive) => {\n      const sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const directiveProperties: t.BoundDirectivePropertyAst[] = [];\n      const boundProperties =\n          this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan) !;\n\n      let hostProperties =\n          boundProperties.map(prop => t.BoundElementPropertyAst.fromBoundProperty(prop));\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n      const parsedEvents =\n          this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan) !;\n      this._createDirectivePropertyAsts(\n          directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (elOrDirRef.isReferenceToDirective(directive))) {\n          targetReferences.push(new t.ReferenceAst(\n              elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value,\n              elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      const hostEvents = parsedEvents.map(e => t.BoundEventAst.fromParsedEvent(e));\n      const contentQueryStartId = this.contentQueryStartId;\n      this.contentQueryStartId += directive.queries.length;\n      return new t.DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId,\n          sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let refToken: CompileTokenMetadata = null !;\n        if (isTemplateElement) {\n          refToken = createTokenForExternalReference(this.reflector, Identifiers.TemplateRef);\n        }\n        targetReferences.push(\n            new t.ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n\n  private _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: ParsedProperty[],\n      targetBoundDirectiveProps: t.BoundDirectivePropertyAst[],\n      targetBoundDirectivePropNames: Set<string>) {\n    if (directiveProperties) {\n      const boundPropsByName = new Map<string, ParsedProperty>();\n      boundProps.forEach(boundProp => {\n        const prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const elProp = directiveProperties[dirProp];\n        const boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectivePropNames.add(boundProp.name);\n          if (!isEmptyExpression(boundProp.expression)) {\n            targetBoundDirectiveProps.push(new t.BoundDirectivePropertyAst(\n                dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n          }\n        }\n      });\n    }\n  }\n\n  private _createElementPropertyAsts(\n      elementName: string, props: ParsedProperty[],\n      boundDirectivePropNames: Set<string>): t.BoundElementPropertyAst[] {\n    const boundElementProps: t.BoundElementPropertyAst[] = [];\n\n    props.forEach((prop: ParsedProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n        const boundProp = this._bindingParser.createBoundElementProperty(elementName, prop);\n        boundElementProps.push(t.BoundElementPropertyAst.fromBoundProperty(boundProp));\n      }\n    });\n    return this._checkPropertiesInSchema(elementName, boundElementProps);\n  }\n\n  private _findComponentDirectives(directives: t.DirectiveAst[]): t.DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n\n  private _findComponentDirectiveNames(directives: t.DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => identifierName(directive.directive.type) !);\n  }\n\n  private _assertOnlyOneComponent(directives: t.DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n\n  /**\n   * Make sure that non-angular tags conform to the schemas.\n   *\n   * Note: An element is considered an angular tag when at least one directive selector matches the\n   * tag name.\n   *\n   * @param matchElement Whether any directive has matched on the tag name\n   * @param element the html element\n   */\n  private _assertElementExists(matchElement: boolean, element: html.Element) {\n    const elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      let errorMsg = `'${elName}' is not a known element:\\n`;\n      errorMsg +=\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n      if (elName.indexOf('-') > -1) {\n        errorMsg +=\n            `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n      } else {\n        errorMsg +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n      }\n      this._reportError(errorMsg, element.sourceSpan !);\n    }\n  }\n\n  private _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: t.DirectiveAst[], elementProps: t.BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n\n  private _assertAllEventsPublishedByDirectives(\n      directives: t.DirectiveAst[], events: t.BoundEventAst[]) {\n    const allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (event.target != null || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n\n  private _checkPropertiesInSchema(elementName: string, boundProps: t.BoundElementPropertyAst[]):\n      t.BoundElementPropertyAst[] {\n    // Note: We can't filter out empty expressions before this method,\n    // as we still want to validate them!\n    return boundProps.filter((boundProp) => {\n      if (boundProp.type === t.PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.startsWith('ng-')) {\n          errorMsg +=\n              `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n              `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        } else if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n              `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n      return !isEmptyExpression(boundProp.value);\n    });\n  }\n\n  private _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nclass NonBindableVisitor implements html.Visitor {\n  visitElement(ast: html.Element, parent: ElementContext): t.ElementAst|null {\n    const preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const ngContentIndex = parent.findNgContentIndex(selector);\n    const children: t.TemplateAst[] = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new t.ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n  visitComment(comment: html.Comment, context: any): any { return null; }\n\n  visitAttribute(attribute: html.Attribute, context: any): t.AttrAst {\n    return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n\n  visitText(text: html.Text, parent: ElementContext): t.TextAst {\n    const ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR()) !;\n    return new t.TextAst(text.value, ngContentIndex, text.sourceSpan !);\n  }\n\n  visitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\n\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nclass ElementOrDirectiveRef {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n\n  /** Gets whether this is a reference to the given directive. */\n  isReferenceToDirective(directive: CompileDirectiveSummary) {\n    return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n  }\n}\n\n/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */\nfunction splitExportAs(exportAs: string | null): string[] {\n  return exportAs ? exportAs.split(',').map(e => e.trim()) : [];\n}\n\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\n\nclass ElementContext {\n  static create(\n      isTemplateElement: boolean, directives: t.DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const matcher = new SelectorMatcher();\n    let wildcardNgContentIndex: number = null !;\n    const component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const ngContentSelectors = component.directive.template !.ngContentSelectors;\n      for (let i = 0; i < ngContentSelectors.length; i++) {\n        const selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n  constructor(\n      public isTemplateElement: boolean, private _ngContentIndexMatcher: SelectorMatcher,\n      private _wildcardNgContentIndex: number|null,\n      public providerContext: ProviderElementContext|null) {}\n\n  findNgContentIndex(selector: CssSelector): number|null {\n    const ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (this._wildcardNgContentIndex != null) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const cssSelector = new CssSelector();\n  const elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let i = 0; i < attributes.length; i++) {\n    const attrName = attributes[i][0];\n    const attrNameNoNs = splitNsName(attrName)[1];\n    const attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n\nexport function isEmptyExpression(ast: AST): boolean {\n  if (ast instanceof ASTWithSource) {\n    ast = ast.ast;\n  }\n  return ast instanceof EmptyExpr;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst enum Char {\n  OpenParen = 40,\n  CloseParen = 41,\n  Colon = 58,\n  Semicolon = 59,\n  BackSlash = 92,\n  QuoteNone = 0,  // indicating we are not inside a quote\n  QuoteDouble = 34,\n  QuoteSingle = 39,\n}\n\n\n/**\n * Parses string representation of a style and converts it into object literal.\n *\n * @param value string representation of style as used in the `style` attribute in HTML.\n *   Example: `color: red; height: auto`.\n * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',\n * 'auto']`\n */\nexport function parse(value: string): string[] {\n  // we use a string array here instead of a string map\n  // because a string-map is not guaranteed to retain the\n  // order of the entries whereas a string array can be\n  // construted in a [key, value, key, value] format.\n  const styles: string[] = [];\n\n  let i = 0;\n  let parenDepth = 0;\n  let quote: Char = Char.QuoteNone;\n  let valueStart = 0;\n  let propStart = 0;\n  let currentProp: string|null = null;\n  let valueHasQuotes = false;\n  while (i < value.length) {\n    const token = value.charCodeAt(i++) as Char;\n    switch (token) {\n      case Char.OpenParen:\n        parenDepth++;\n        break;\n      case Char.CloseParen:\n        parenDepth--;\n        break;\n      case Char.QuoteSingle:\n        // valueStart needs to be there since prop values don't\n        // have quotes in CSS\n        valueHasQuotes = valueHasQuotes || valueStart > 0;\n        if (quote === Char.QuoteNone) {\n          quote = Char.QuoteSingle;\n        } else if (quote === Char.QuoteSingle && value.charCodeAt(i - 1) !== Char.BackSlash) {\n          quote = Char.QuoteNone;\n        }\n        break;\n      case Char.QuoteDouble:\n        // same logic as above\n        valueHasQuotes = valueHasQuotes || valueStart > 0;\n        if (quote === Char.QuoteNone) {\n          quote = Char.QuoteDouble;\n        } else if (quote === Char.QuoteDouble && value.charCodeAt(i - 1) !== Char.BackSlash) {\n          quote = Char.QuoteNone;\n        }\n        break;\n      case Char.Colon:\n        if (!currentProp && parenDepth === 0 && quote === Char.QuoteNone) {\n          currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n          valueStart = i;\n        }\n        break;\n      case Char.Semicolon:\n        if (currentProp && valueStart > 0 && parenDepth === 0 && quote === Char.QuoteNone) {\n          const styleVal = value.substring(valueStart, i - 1).trim();\n          styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n          propStart = i;\n          valueStart = 0;\n          currentProp = null;\n          valueHasQuotes = false;\n        }\n        break;\n    }\n  }\n\n  if (currentProp && valueStart) {\n    const styleVal = value.substr(valueStart).trim();\n    styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n  }\n\n  return styles;\n}\n\nexport function stripUnnecessaryQuotes(value: string): string {\n  const qS = value.charCodeAt(0);\n  const qE = value.charCodeAt(value.length - 1);\n  if (qS == qE && (qS == Char.QuoteSingle || qS == Char.QuoteDouble)) {\n    const tempValue = value.substring(1, value.length - 1);\n    // special case to avoid using a multi-quoted string that was just chomped\n    // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n    if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n      value = tempValue;\n    }\n  }\n  return value;\n}\n\nexport function hyphenate(value: string): string {\n  return value.replace(/[a-z][A-Z]/g, v => {\n                return v.charAt(0) + '-' + v.charAt(1);\n              }).toLowerCase();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ConstantPool} from '../../constant_pool';\nimport {AttributeMarker} from '../../core';\nimport {AST, BindingType, Interpolation} from '../../expression_parser/ast';\nimport * as o from '../../output/output_ast';\nimport {ParseSourceSpan} from '../../parse_util';\nimport {isEmptyExpression} from '../../template_parser/template_parser';\nimport {error} from '../../util';\nimport * as t from '../r3_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\n\nimport {hyphenate, parse as parseStyle} from './style_parser';\nimport {ValueConverter} from './template';\nimport {getInterpolationArgsLength} from './util';\n\nconst IMPORTANT_FLAG = '!important';\n\n/**\n * A styling expression summary that is to be processed by the compiler\n */\nexport interface StylingInstruction {\n  sourceSpan: ParseSourceSpan|null;\n  reference: o.ExternalReference;\n  allocateBindingSlots: number;\n  supportsInterpolation?: boolean;\n  params: ((convertFn: (value: any) => o.Expression | o.Expression[]) => o.Expression[]);\n}\n\n/**\n * An internal record of the input data for a styling binding\n */\ninterface BoundStylingEntry {\n  hasOverrideFlag: boolean;\n  name: string|null;\n  unit: string|null;\n  sourceSpan: ParseSourceSpan;\n  value: AST;\n}\n\n/**\n * Produces creation/update instructions for all styling bindings (class and style)\n *\n * It also produces the creation instruction to register all initial styling values\n * (which are all the static class=\"...\" and style=\"...\" attribute values that exist\n * on an element within a template).\n *\n * The builder class below handles producing instructions for the following cases:\n *\n * - Static style/class attributes (style=\"...\" and class=\"...\")\n * - Dynamic style/class map bindings ([style]=\"map\" and [class]=\"map|string\")\n * - Dynamic style/class property bindings ([style.prop]=\"exp\" and [class.name]=\"exp\")\n *\n * Due to the complex relationship of all of these cases, the instructions generated\n * for these attributes/properties/bindings must be done so in the correct order. The\n * order which these must be generated is as follows:\n *\n * if (createMode) {\n *   styling(...)\n * }\n * if (updateMode) {\n *   styleMap(...)\n *   classMap(...)\n *   styleProp(...)\n *   classProp(...)\n *   stylingApply(...)\n * }\n *\n * The creation/update methods within the builder class produce these instructions.\n */\nexport class StylingBuilder {\n  /** Whether or not there are any static styling values present */\n  private _hasInitialValues = false;\n  /**\n   *  Whether or not there are any styling bindings present\n   *  (i.e. `[style]`, `[class]`, `[style.prop]` or `[class.name]`)\n   */\n  public hasBindings = false;\n\n  /** the input for [class] (if it exists) */\n  private _classMapInput: BoundStylingEntry|null = null;\n  /** the input for [style] (if it exists) */\n  private _styleMapInput: BoundStylingEntry|null = null;\n  /** an array of each [style.prop] input */\n  private _singleStyleInputs: BoundStylingEntry[]|null = null;\n  /** an array of each [class.name] input */\n  private _singleClassInputs: BoundStylingEntry[]|null = null;\n  private _lastStylingInput: BoundStylingEntry|null = null;\n  private _firstStylingInput: BoundStylingEntry|null = null;\n\n  // maps are used instead of hash maps because a Map will\n  // retain the ordering of the keys\n\n  /**\n   * Represents the location of each style binding in the template\n   * (e.g. `<div [style.width]=\"w\" [style.height]=\"h\">` implies\n   * that `width=0` and `height=1`)\n   */\n  private _stylesIndex = new Map<string, number>();\n\n  /**\n   * Represents the location of each class binding in the template\n   * (e.g. `<div [class.big]=\"b\" [class.hidden]=\"h\">` implies\n   * that `big=0` and `hidden=1`)\n   */\n  private _classesIndex = new Map<string, number>();\n  private _initialStyleValues: string[] = [];\n  private _initialClassValues: string[] = [];\n\n  // certain style properties ALWAYS need sanitization\n  // this is checked each time new styles are encountered\n  private _useDefaultSanitizer = false;\n\n  constructor(private _elementIndexExpr: o.Expression, private _directiveExpr: o.Expression|null) {}\n\n  /**\n   * Registers a given input to the styling builder to be later used when producing AOT code.\n   *\n   * The code below will only accept the input if it is somehow tied to styling (whether it be\n   * style/class bindings or static style/class attributes).\n   */\n  registerBoundInput(input: t.BoundAttribute): boolean {\n    // [attr.style] or [attr.class] are skipped in the code below,\n    // they should not be treated as styling-based bindings since\n    // they are intended to be written directly to the attr and\n    // will therefore skip all style/class resolution that is present\n    // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n    // [class.prop]=\"\". [class]=\"\" assignments\n    let binding: BoundStylingEntry|null = null;\n    let name = input.name;\n    switch (input.type) {\n      case BindingType.Property:\n        binding = this.registerInputBasedOnName(name, input.value, input.sourceSpan);\n        break;\n      case BindingType.Style:\n        binding = this.registerStyleInput(name, false, input.value, input.sourceSpan, input.unit);\n        break;\n      case BindingType.Class:\n        binding = this.registerClassInput(name, false, input.value, input.sourceSpan);\n        break;\n    }\n    return binding ? true : false;\n  }\n\n  registerInputBasedOnName(name: string, expression: AST, sourceSpan: ParseSourceSpan) {\n    let binding: BoundStylingEntry|null = null;\n    const nameToMatch = name.substring(0, 5);  // class | style\n    const isStyle = nameToMatch === 'style';\n    const isClass = isStyle ? false : (nameToMatch === 'class');\n    if (isStyle || isClass) {\n      const isMapBased = name.charAt(5) !== '.';         // style.prop or class.prop makes this a no\n      const property = name.substr(isMapBased ? 5 : 6);  // the dot explains why there's a +1\n      if (isStyle) {\n        binding = this.registerStyleInput(property, isMapBased, expression, sourceSpan);\n      } else {\n        binding = this.registerClassInput(property, isMapBased, expression, sourceSpan);\n      }\n    }\n    return binding;\n  }\n\n  registerStyleInput(\n      name: string, isMapBased: boolean, value: AST, sourceSpan: ParseSourceSpan,\n      unit?: string|null): BoundStylingEntry|null {\n    if (isEmptyExpression(value)) {\n      return null;\n    }\n    name = normalizePropName(name);\n    const {property, hasOverrideFlag, unit: bindingUnit} = parseProperty(name);\n    const entry: BoundStylingEntry = {\n      name: property,\n      unit: unit || bindingUnit, value, sourceSpan, hasOverrideFlag\n    };\n    if (isMapBased) {\n      this._useDefaultSanitizer = true;\n      this._styleMapInput = entry;\n    } else {\n      (this._singleStyleInputs = this._singleStyleInputs || []).push(entry);\n      this._useDefaultSanitizer = this._useDefaultSanitizer || isStyleSanitizable(name);\n      registerIntoMap(this._stylesIndex, property);\n    }\n    this._lastStylingInput = entry;\n    this._firstStylingInput = this._firstStylingInput || entry;\n    this.hasBindings = true;\n    return entry;\n  }\n\n  registerClassInput(name: string, isMapBased: boolean, value: AST, sourceSpan: ParseSourceSpan):\n      BoundStylingEntry|null {\n    if (isEmptyExpression(value)) {\n      return null;\n    }\n    const {property, hasOverrideFlag} = parseProperty(name);\n    const entry:\n        BoundStylingEntry = {name: property, value, sourceSpan, hasOverrideFlag, unit: null};\n    if (isMapBased) {\n      this._classMapInput = entry;\n    } else {\n      (this._singleClassInputs = this._singleClassInputs || []).push(entry);\n      registerIntoMap(this._classesIndex, property);\n    }\n    this._lastStylingInput = entry;\n    this._firstStylingInput = this._firstStylingInput || entry;\n    this.hasBindings = true;\n    return entry;\n  }\n\n  /**\n   * Registers the element's static style string value to the builder.\n   *\n   * @param value the style string (e.g. `width:100px; height:200px;`)\n   */\n  registerStyleAttr(value: string) {\n    this._initialStyleValues = parseStyle(value);\n    this._hasInitialValues = true;\n  }\n\n  /**\n   * Registers the element's static class string value to the builder.\n   *\n   * @param value the className string (e.g. `disabled gold zoom`)\n   */\n  registerClassAttr(value: string) {\n    this._initialClassValues = value.trim().split(/\\s+/g);\n    this._hasInitialValues = true;\n  }\n\n  /**\n   * Appends all styling-related expressions to the provided attrs array.\n   *\n   * @param attrs an existing array where each of the styling expressions\n   * will be inserted into.\n   */\n  populateInitialStylingAttrs(attrs: o.Expression[]): void {\n    // [CLASS_MARKER, 'foo', 'bar', 'baz' ...]\n    if (this._initialClassValues.length) {\n      attrs.push(o.literal(AttributeMarker.Classes));\n      for (let i = 0; i < this._initialClassValues.length; i++) {\n        attrs.push(o.literal(this._initialClassValues[i]));\n      }\n    }\n\n    // [STYLE_MARKER, 'width', '200px', 'height', '100px', ...]\n    if (this._initialStyleValues.length) {\n      attrs.push(o.literal(AttributeMarker.Styles));\n      for (let i = 0; i < this._initialStyleValues.length; i += 2) {\n        attrs.push(\n            o.literal(this._initialStyleValues[i]), o.literal(this._initialStyleValues[i + 1]));\n      }\n    }\n  }\n\n  /**\n   * Builds an instruction with all the expressions and parameters for `elementHostAttrs`.\n   *\n   * The instruction generation code below is used for producing the AOT statement code which is\n   * responsible for registering initial styles (within a directive hostBindings' creation block),\n   * as well as any of the provided attribute values, to the directive host element.\n   */\n  buildHostAttrsInstruction(\n      sourceSpan: ParseSourceSpan|null, attrs: o.Expression[],\n      constantPool: ConstantPool): StylingInstruction|null {\n    if (this._directiveExpr && (attrs.length || this._hasInitialValues)) {\n      return {\n        sourceSpan,\n        reference: R3.elementHostAttrs,\n        allocateBindingSlots: 0,\n        params: () => {\n          // params => elementHostAttrs(attrs)\n          this.populateInitialStylingAttrs(attrs);\n          const attrArray = !attrs.some(attr => attr instanceof o.WrappedNodeExpr) ?\n              getConstantLiteralFromArray(constantPool, attrs) :\n              o.literalArr(attrs);\n          return [attrArray];\n        }\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Builds an instruction with all the expressions and parameters for `styling`.\n   *\n   * The instruction generation code below is used for producing the AOT statement code which is\n   * responsible for registering style/class bindings to an element.\n   */\n  buildStylingInstruction(sourceSpan: ParseSourceSpan|null, constantPool: ConstantPool):\n      StylingInstruction|null {\n    if (this.hasBindings) {\n      return {\n        sourceSpan,\n        allocateBindingSlots: 0,\n        reference: R3.styling,\n        params: () => [],\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Builds an instruction with all the expressions and parameters for `classMap`.\n   *\n   * The instruction data will contain all expressions for `classMap` to function\n   * which includes the `[class]` expression params.\n   */\n  buildClassMapInstruction(valueConverter: ValueConverter): StylingInstruction|null {\n    if (this._classMapInput) {\n      return this._buildMapBasedInstruction(valueConverter, true, this._classMapInput);\n    }\n    return null;\n  }\n\n  /**\n   * Builds an instruction with all the expressions and parameters for `styleMap`.\n   *\n   * The instruction data will contain all expressions for `styleMap` to function\n   * which includes the `[style]` expression params.\n   */\n  buildStyleMapInstruction(valueConverter: ValueConverter): StylingInstruction|null {\n    if (this._styleMapInput) {\n      return this._buildMapBasedInstruction(valueConverter, false, this._styleMapInput);\n    }\n    return null;\n  }\n\n  private _buildMapBasedInstruction(\n      valueConverter: ValueConverter, isClassBased: boolean,\n      stylingInput: BoundStylingEntry): StylingInstruction {\n    // each styling binding value is stored in the LView\n    let totalBindingSlotsRequired = 1;\n\n    // these values must be outside of the update block so that they can\n    // be evaluated (the AST visit call) during creation time so that any\n    // pipes can be picked up in time before the template is built\n    const mapValue = stylingInput.value.visit(valueConverter);\n    let reference: o.ExternalReference;\n    if (mapValue instanceof Interpolation && isClassBased) {\n      totalBindingSlotsRequired += mapValue.expressions.length;\n      reference = getClassMapInterpolationExpression(mapValue);\n    } else {\n      reference = isClassBased ? R3.classMap : R3.styleMap;\n    }\n\n    return {\n      sourceSpan: stylingInput.sourceSpan,\n      reference,\n      allocateBindingSlots: totalBindingSlotsRequired,\n      supportsInterpolation: isClassBased,\n      params: (convertFn: (value: any) => o.Expression | o.Expression[]) => {\n        const convertResult = convertFn(mapValue);\n        return Array.isArray(convertResult) ? convertResult : [convertResult];\n      }\n    };\n  }\n\n  private _buildSingleInputs(\n      reference: o.ExternalReference, inputs: BoundStylingEntry[], mapIndex: Map<string, number>,\n      allowUnits: boolean, valueConverter: ValueConverter,\n      getInterpolationExpressionFn?: (value: Interpolation) => o.ExternalReference):\n      StylingInstruction[] {\n    let totalBindingSlotsRequired = 0;\n    return inputs.map(input => {\n      const value = input.value.visit(valueConverter);\n\n      // each styling binding value is stored in the LView\n      let totalBindingSlotsRequired = 1;\n\n      if (value instanceof Interpolation) {\n        totalBindingSlotsRequired += value.expressions.length;\n\n        if (getInterpolationExpressionFn) {\n          reference = getInterpolationExpressionFn(value);\n        }\n      }\n\n      return {\n        sourceSpan: input.sourceSpan,\n        supportsInterpolation: !!getInterpolationExpressionFn,\n        allocateBindingSlots: totalBindingSlotsRequired, reference,\n        params: (convertFn: (value: any) => o.Expression | o.Expression[]) => {\n          // params => stylingProp(propName, value)\n          const params: o.Expression[] = [];\n          params.push(o.literal(input.name));\n\n          const convertResult = convertFn(value);\n          if (Array.isArray(convertResult)) {\n            params.push(...convertResult);\n          } else {\n            params.push(convertResult);\n          }\n\n          if (allowUnits && input.unit) {\n            params.push(o.literal(input.unit));\n          }\n\n          return params;\n        }\n      };\n    });\n  }\n\n  private _buildClassInputs(valueConverter: ValueConverter): StylingInstruction[] {\n    if (this._singleClassInputs) {\n      return this._buildSingleInputs(\n          R3.classProp, this._singleClassInputs, this._classesIndex, false, valueConverter);\n    }\n    return [];\n  }\n\n  private _buildStyleInputs(valueConverter: ValueConverter): StylingInstruction[] {\n    if (this._singleStyleInputs) {\n      return this._buildSingleInputs(\n          R3.styleProp, this._singleStyleInputs, this._stylesIndex, true, valueConverter,\n          getStylePropInterpolationExpression);\n    }\n    return [];\n  }\n\n  private _buildApplyFn(): StylingInstruction {\n    return {\n      sourceSpan: this._lastStylingInput ? this._lastStylingInput.sourceSpan : null,\n      reference: R3.stylingApply,\n      allocateBindingSlots: 0,\n      params: () => { return []; }\n    };\n  }\n\n  private _buildSanitizerFn(): StylingInstruction {\n    return {\n      sourceSpan: this._firstStylingInput ? this._firstStylingInput.sourceSpan : null,\n      reference: R3.styleSanitizer,\n      allocateBindingSlots: 0,\n      params: () => [o.importExpr(R3.defaultStyleSanitizer)]\n    };\n  }\n\n  /**\n   * Constructs all instructions which contain the expressions that will be placed\n   * into the update block of a template function or a directive hostBindings function.\n   */\n  buildUpdateLevelInstructions(valueConverter: ValueConverter) {\n    const instructions: StylingInstruction[] = [];\n    if (this.hasBindings) {\n      if (this._useDefaultSanitizer) {\n        instructions.push(this._buildSanitizerFn());\n      }\n      const styleMapInstruction = this.buildStyleMapInstruction(valueConverter);\n      if (styleMapInstruction) {\n        instructions.push(styleMapInstruction);\n      }\n      const classMapInstruction = this.buildClassMapInstruction(valueConverter);\n      if (classMapInstruction) {\n        instructions.push(classMapInstruction);\n      }\n      instructions.push(...this._buildStyleInputs(valueConverter));\n      instructions.push(...this._buildClassInputs(valueConverter));\n      instructions.push(this._buildApplyFn());\n    }\n    return instructions;\n  }\n}\n\nfunction registerIntoMap(map: Map<string, number>, key: string) {\n  if (!map.has(key)) {\n    map.set(key, map.size);\n  }\n}\n\nfunction isStyleSanitizable(prop: string): boolean {\n  // Note that browsers support both the dash case and\n  // camel case property names when setting through JS.\n  return prop === 'background-image' || prop === 'backgroundImage' || prop === 'background' ||\n      prop === 'border-image' || prop === 'borderImage' || prop === 'filter' ||\n      prop === 'list-style' || prop === 'listStyle' || prop === 'list-style-image' ||\n      prop === 'listStyleImage' || prop === 'clip-path' || prop === 'clipPath';\n}\n\n/**\n * Simple helper function to either provide the constant literal that will house the value\n * here or a null value if the provided values are empty.\n */\nfunction getConstantLiteralFromArray(\n    constantPool: ConstantPool, values: o.Expression[]): o.Expression {\n  return values.length ? constantPool.getConstLiteral(o.literalArr(values), true) : o.NULL_EXPR;\n}\n\n/**\n * Simple helper function that adds a parameter or does nothing at all depending on the provided\n * predicate and totalExpectedArgs values\n */\nfunction addParam(\n    params: o.Expression[], predicate: any, value: o.Expression | null, argNumber: number,\n    totalExpectedArgs: number) {\n  if (predicate && value) {\n    params.push(value);\n  } else if (argNumber < totalExpectedArgs) {\n    params.push(o.NULL_EXPR);\n  }\n}\n\nexport function parseProperty(name: string):\n    {property: string, unit: string, hasOverrideFlag: boolean} {\n  let hasOverrideFlag = false;\n  const overrideIndex = name.indexOf(IMPORTANT_FLAG);\n  if (overrideIndex !== -1) {\n    name = overrideIndex > 0 ? name.substring(0, overrideIndex) : '';\n    hasOverrideFlag = true;\n  }\n\n  let unit = '';\n  let property = name;\n  const unitIndex = name.lastIndexOf('.');\n  if (unitIndex > 0) {\n    unit = name.substr(unitIndex + 1);\n    property = name.substring(0, unitIndex);\n  }\n\n  return {property, unit, hasOverrideFlag};\n}\n\n/**\n * Gets the instruction to generate for an interpolated class map.\n * @param interpolation An Interpolation AST\n */\nfunction getClassMapInterpolationExpression(interpolation: Interpolation): o.ExternalReference {\n  switch (getInterpolationArgsLength(interpolation)) {\n    case 1:\n      return R3.classMap;\n    case 3:\n      return R3.classMapInterpolate1;\n    case 5:\n      return R3.classMapInterpolate2;\n    case 7:\n      return R3.classMapInterpolate3;\n    case 9:\n      return R3.classMapInterpolate4;\n    case 11:\n      return R3.classMapInterpolate5;\n    case 13:\n      return R3.classMapInterpolate6;\n    case 15:\n      return R3.classMapInterpolate7;\n    case 17:\n      return R3.classMapInterpolate8;\n    default:\n      return R3.classMapInterpolateV;\n  }\n}\n\n/**\n * Gets the instruction to generate for an interpolated style prop.\n * @param interpolation An Interpolation AST\n */\nfunction getStylePropInterpolationExpression(interpolation: Interpolation) {\n  switch (getInterpolationArgsLength(interpolation)) {\n    case 1:\n      return R3.styleProp;\n    case 3:\n      return R3.stylePropInterpolate1;\n    case 5:\n      return R3.stylePropInterpolate2;\n    case 7:\n      return R3.stylePropInterpolate3;\n    case 9:\n      return R3.stylePropInterpolate4;\n    case 11:\n      return R3.stylePropInterpolate5;\n    case 13:\n      return R3.stylePropInterpolate6;\n    case 15:\n      return R3.stylePropInterpolate7;\n    case 17:\n      return R3.stylePropInterpolate8;\n    default:\n      return R3.stylePropInterpolateV;\n  }\n}\n\nfunction normalizePropName(prop: string): string {\n  return hyphenate(prop);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\n\nexport enum TokenType {\n  Character,\n  Identifier,\n  Keyword,\n  String,\n  Operator,\n  Number,\n  Error\n}\n\nconst KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n\nexport class Lexer {\n  tokenize(text: string): Token[] {\n    const scanner = new _Scanner(text);\n    const tokens: Token[] = [];\n    let token = scanner.scanToken();\n    while (token != null) {\n      tokens.push(token);\n      token = scanner.scanToken();\n    }\n    return tokens;\n  }\n}\n\nexport class Token {\n  constructor(\n      public index: number, public type: TokenType, public numValue: number,\n      public strValue: string) {}\n\n  isCharacter(code: number): boolean {\n    return this.type == TokenType.Character && this.numValue == code;\n  }\n\n  isNumber(): boolean { return this.type == TokenType.Number; }\n\n  isString(): boolean { return this.type == TokenType.String; }\n\n  isOperator(operator: string): boolean {\n    return this.type == TokenType.Operator && this.strValue == operator;\n  }\n\n  isIdentifier(): boolean { return this.type == TokenType.Identifier; }\n\n  isKeyword(): boolean { return this.type == TokenType.Keyword; }\n\n  isKeywordLet(): boolean { return this.type == TokenType.Keyword && this.strValue == 'let'; }\n\n  isKeywordAs(): boolean { return this.type == TokenType.Keyword && this.strValue == 'as'; }\n\n  isKeywordNull(): boolean { return this.type == TokenType.Keyword && this.strValue == 'null'; }\n\n  isKeywordUndefined(): boolean {\n    return this.type == TokenType.Keyword && this.strValue == 'undefined';\n  }\n\n  isKeywordTrue(): boolean { return this.type == TokenType.Keyword && this.strValue == 'true'; }\n\n  isKeywordFalse(): boolean { return this.type == TokenType.Keyword && this.strValue == 'false'; }\n\n  isKeywordThis(): boolean { return this.type == TokenType.Keyword && this.strValue == 'this'; }\n\n  isError(): boolean { return this.type == TokenType.Error; }\n\n  toNumber(): number { return this.type == TokenType.Number ? this.numValue : -1; }\n\n  toString(): string|null {\n    switch (this.type) {\n      case TokenType.Character:\n      case TokenType.Identifier:\n      case TokenType.Keyword:\n      case TokenType.Operator:\n      case TokenType.String:\n      case TokenType.Error:\n        return this.strValue;\n      case TokenType.Number:\n        return this.numValue.toString();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction newCharacterToken(index: number, code: number): Token {\n  return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n\nfunction newIdentifierToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Identifier, 0, text);\n}\n\nfunction newKeywordToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Keyword, 0, text);\n}\n\nfunction newOperatorToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Operator, 0, text);\n}\n\nfunction newStringToken(index: number, text: string): Token {\n  return new Token(index, TokenType.String, 0, text);\n}\n\nfunction newNumberToken(index: number, n: number): Token {\n  return new Token(index, TokenType.Number, n, '');\n}\n\nfunction newErrorToken(index: number, message: string): Token {\n  return new Token(index, TokenType.Error, 0, message);\n}\n\nexport const EOF: Token = new Token(-1, TokenType.Character, 0, '');\n\nclass _Scanner {\n  length: number;\n  peek: number = 0;\n  index: number = -1;\n\n  constructor(public input: string) {\n    this.length = input.length;\n    this.advance();\n  }\n\n  advance() {\n    this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n  }\n\n  scanToken(): Token|null {\n    const input = this.input, length = this.length;\n    let peek = this.peek, index = this.index;\n\n    // Skip whitespace.\n    while (peek <= chars.$SPACE) {\n      if (++index >= length) {\n        peek = chars.$EOF;\n        break;\n      } else {\n        peek = input.charCodeAt(index);\n      }\n    }\n\n    this.peek = peek;\n    this.index = index;\n\n    if (index >= length) {\n      return null;\n    }\n\n    // Handle identifiers and numbers.\n    if (isIdentifierStart(peek)) return this.scanIdentifier();\n    if (chars.isDigit(peek)) return this.scanNumber(index);\n\n    const start: number = index;\n    switch (peek) {\n      case chars.$PERIOD:\n        this.advance();\n        return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                                          newCharacterToken(start, chars.$PERIOD);\n      case chars.$LPAREN:\n      case chars.$RPAREN:\n      case chars.$LBRACE:\n      case chars.$RBRACE:\n      case chars.$LBRACKET:\n      case chars.$RBRACKET:\n      case chars.$COMMA:\n      case chars.$COLON:\n      case chars.$SEMICOLON:\n        return this.scanCharacter(start, peek);\n      case chars.$SQ:\n      case chars.$DQ:\n        return this.scanString();\n      case chars.$HASH:\n      case chars.$PLUS:\n      case chars.$MINUS:\n      case chars.$STAR:\n      case chars.$SLASH:\n      case chars.$PERCENT:\n      case chars.$CARET:\n        return this.scanOperator(start, String.fromCharCode(peek));\n      case chars.$QUESTION:\n        return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n      case chars.$LT:\n      case chars.$GT:\n        return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n      case chars.$BANG:\n      case chars.$EQ:\n        return this.scanComplexOperator(\n            start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n      case chars.$AMPERSAND:\n        return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n      case chars.$BAR:\n        return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n      case chars.$NBSP:\n        while (chars.isWhitespace(this.peek)) this.advance();\n        return this.scanToken();\n    }\n\n    this.advance();\n    return this.error(`Unexpected character [${String.fromCharCode(peek)}]`, 0);\n  }\n\n  scanCharacter(start: number, code: number): Token {\n    this.advance();\n    return newCharacterToken(start, code);\n  }\n\n\n  scanOperator(start: number, str: string): Token {\n    this.advance();\n    return newOperatorToken(start, str);\n  }\n\n  /**\n   * Tokenize a 2/3 char long operator\n   *\n   * @param start start index in the expression\n   * @param one first symbol (always part of the operator)\n   * @param twoCode code point for the second symbol\n   * @param two second symbol (part of the operator when the second code point matches)\n   * @param threeCode code point for the third symbol\n   * @param three third symbol (part of the operator when provided and matches source expression)\n   */\n  scanComplexOperator(\n      start: number, one: string, twoCode: number, two: string, threeCode?: number,\n      three?: string): Token {\n    this.advance();\n    let str: string = one;\n    if (this.peek == twoCode) {\n      this.advance();\n      str += two;\n    }\n    if (threeCode != null && this.peek == threeCode) {\n      this.advance();\n      str += three;\n    }\n    return newOperatorToken(start, str);\n  }\n\n  scanIdentifier(): Token {\n    const start: number = this.index;\n    this.advance();\n    while (isIdentifierPart(this.peek)) this.advance();\n    const str: string = this.input.substring(start, this.index);\n    return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n                                        newIdentifierToken(start, str);\n  }\n\n  scanNumber(start: number): Token {\n    let simple: boolean = (this.index === start);\n    this.advance();  // Skip initial digit.\n    while (true) {\n      if (chars.isDigit(this.peek)) {\n        // Do nothing.\n      } else if (this.peek == chars.$PERIOD) {\n        simple = false;\n      } else if (isExponentStart(this.peek)) {\n        this.advance();\n        if (isExponentSign(this.peek)) this.advance();\n        if (!chars.isDigit(this.peek)) return this.error('Invalid exponent', -1);\n        simple = false;\n      } else {\n        break;\n      }\n      this.advance();\n    }\n    const str: string = this.input.substring(start, this.index);\n    const value: number = simple ? parseIntAutoRadix(str) : parseFloat(str);\n    return newNumberToken(start, value);\n  }\n\n  scanString(): Token {\n    const start: number = this.index;\n    const quote: number = this.peek;\n    this.advance();  // Skip initial quote.\n\n    let buffer: string = '';\n    let marker: number = this.index;\n    const input: string = this.input;\n\n    while (this.peek != quote) {\n      if (this.peek == chars.$BACKSLASH) {\n        buffer += input.substring(marker, this.index);\n        this.advance();\n        let unescapedCode: number;\n        // Workaround for TS2.1-introduced type strictness\n        this.peek = this.peek;\n        if (this.peek == chars.$u) {\n          // 4 character hex code for unicode character.\n          const hex: string = input.substring(this.index + 1, this.index + 5);\n          if (/^[0-9a-f]+$/i.test(hex)) {\n            unescapedCode = parseInt(hex, 16);\n          } else {\n            return this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n          }\n          for (let i: number = 0; i < 5; i++) {\n            this.advance();\n          }\n        } else {\n          unescapedCode = unescape(this.peek);\n          this.advance();\n        }\n        buffer += String.fromCharCode(unescapedCode);\n        marker = this.index;\n      } else if (this.peek == chars.$EOF) {\n        return this.error('Unterminated quote', 0);\n      } else {\n        this.advance();\n      }\n    }\n\n    const last: string = input.substring(marker, this.index);\n    this.advance();  // Skip terminating quote.\n\n    return newStringToken(start, buffer + last);\n  }\n\n  error(message: string, offset: number): Token {\n    const position: number = this.index + offset;\n    return newErrorToken(\n        position, `Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n  }\n}\n\nfunction isIdentifierStart(code: number): boolean {\n  return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n      (code == chars.$_) || (code == chars.$$);\n}\n\nexport function isIdentifier(input: string): boolean {\n  if (input.length == 0) return false;\n  const scanner = new _Scanner(input);\n  if (!isIdentifierStart(scanner.peek)) return false;\n  scanner.advance();\n  while (scanner.peek !== chars.$EOF) {\n    if (!isIdentifierPart(scanner.peek)) return false;\n    scanner.advance();\n  }\n  return true;\n}\n\nfunction isIdentifierPart(code: number): boolean {\n  return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n      (code == chars.$$);\n}\n\nfunction isExponentStart(code: number): boolean {\n  return code == chars.$e || code == chars.$E;\n}\n\nfunction isExponentSign(code: number): boolean {\n  return code == chars.$MINUS || code == chars.$PLUS;\n}\n\nexport function isQuote(code: number): boolean {\n  return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\n\nfunction unescape(code: number): number {\n  switch (code) {\n    case chars.$n:\n      return chars.$LF;\n    case chars.$f:\n      return chars.$FF;\n    case chars.$r:\n      return chars.$CR;\n    case chars.$t:\n      return chars.$TAB;\n    case chars.$v:\n      return chars.$VTAB;\n    default:\n      return code;\n  }\n}\n\nfunction parseIntAutoRadix(text: string): number {\n  const result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {escapeRegExp} from '../util';\n\nimport {AST, ASTWithSource, AstVisitor, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralMapKey, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding} from './ast';\nimport {EOF, Lexer, Token, TokenType, isIdentifier, isQuote} from './lexer';\n\nexport class SplitInterpolation {\n  constructor(public strings: string[], public expressions: string[], public offsets: number[]) {}\n}\n\nexport class TemplateBindingParseResult {\n  constructor(\n      public templateBindings: TemplateBinding[], public warnings: string[],\n      public errors: ParserError[]) {}\n}\n\nfunction _createInterpolateRegExp(config: InterpolationConfig): RegExp {\n  const pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n  return new RegExp(pattern, 'g');\n}\n\nexport class Parser {\n  private errors: ParserError[] = [];\n\n  constructor(private _lexer: Lexer) {}\n\n  parseAction(\n      input: string, location: any, absoluteOffset: number,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    this._checkNoInterpolation(input, location, interpolationConfig);\n    const sourceToLex = this._stripComments(input);\n    const tokens = this._lexer.tokenize(this._stripComments(input));\n    const ast = new _ParseAST(\n                    input, location, absoluteOffset, tokens, sourceToLex.length, true, this.errors,\n                    input.length - sourceToLex.length)\n                    .parseChain();\n    return new ASTWithSource(ast, input, location, absoluteOffset, this.errors);\n  }\n\n  parseBinding(\n      input: string, location: any, absoluteOffset: number,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    const ast = this._parseBindingAst(input, location, absoluteOffset, interpolationConfig);\n    return new ASTWithSource(ast, input, location, absoluteOffset, this.errors);\n  }\n\n  parseSimpleBinding(\n      input: string, location: string, absoluteOffset: number,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    const ast = this._parseBindingAst(input, location, absoluteOffset, interpolationConfig);\n    const errors = SimpleExpressionChecker.check(ast);\n    if (errors.length > 0) {\n      this._reportError(\n          `Host binding expression cannot contain ${errors.join(' ')}`, input, location);\n    }\n    return new ASTWithSource(ast, input, location, absoluteOffset, this.errors);\n  }\n\n  private _reportError(message: string, input: string, errLocation: string, ctxLocation?: any) {\n    this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n  }\n\n  private _parseBindingAst(\n      input: string, location: string, absoluteOffset: number,\n      interpolationConfig: InterpolationConfig): AST {\n    // Quotes expressions use 3rd-party expression language. We don't want to use\n    // our lexer or parser for that, so we check for that ahead of time.\n    const quote = this._parseQuote(input, location);\n\n    if (quote != null) {\n      return quote;\n    }\n\n    this._checkNoInterpolation(input, location, interpolationConfig);\n    const sourceToLex = this._stripComments(input);\n    const tokens = this._lexer.tokenize(sourceToLex);\n    return new _ParseAST(\n               input, location, absoluteOffset, tokens, sourceToLex.length, false, this.errors,\n               input.length - sourceToLex.length)\n        .parseChain();\n  }\n\n  private _parseQuote(input: string|null, location: any): AST|null {\n    if (input == null) return null;\n    const prefixSeparatorIndex = input.indexOf(':');\n    if (prefixSeparatorIndex == -1) return null;\n    const prefix = input.substring(0, prefixSeparatorIndex).trim();\n    if (!isIdentifier(prefix)) return null;\n    const uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n    return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n  }\n\n  parseTemplateBindings(tplKey: string, tplValue: string, location: any, absoluteOffset: number):\n      TemplateBindingParseResult {\n    const tokens = this._lexer.tokenize(tplValue);\n    return new _ParseAST(\n               tplValue, location, absoluteOffset, tokens, tplValue.length, false, this.errors, 0)\n        .parseTemplateBindings(tplKey);\n  }\n\n  parseInterpolation(\n      input: string, location: any, absoluteOffset: number,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource|null {\n    const split = this.splitInterpolation(input, location, interpolationConfig);\n    if (split == null) return null;\n\n    const expressions: AST[] = [];\n\n    for (let i = 0; i < split.expressions.length; ++i) {\n      const expressionText = split.expressions[i];\n      const sourceToLex = this._stripComments(expressionText);\n      const tokens = this._lexer.tokenize(sourceToLex);\n      const ast = new _ParseAST(\n                      input, location, absoluteOffset, tokens, sourceToLex.length, false,\n                      this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                      .parseChain();\n      expressions.push(ast);\n    }\n\n    return new ASTWithSource(\n        new Interpolation(\n            new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions),\n        input, location, absoluteOffset, this.errors);\n  }\n\n  splitInterpolation(\n      input: string, location: string,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): SplitInterpolation\n      |null {\n    const regexp = _createInterpolateRegExp(interpolationConfig);\n    const parts = input.split(regexp);\n    if (parts.length <= 1) {\n      return null;\n    }\n    const strings: string[] = [];\n    const expressions: string[] = [];\n    const offsets: number[] = [];\n    let offset = 0;\n    for (let i = 0; i < parts.length; i++) {\n      const part: string = parts[i];\n      if (i % 2 === 0) {\n        // fixed string\n        strings.push(part);\n        offset += part.length;\n      } else if (part.trim().length > 0) {\n        offset += interpolationConfig.start.length;\n        expressions.push(part);\n        offsets.push(offset);\n        offset += part.length + interpolationConfig.end.length;\n      } else {\n        this._reportError(\n            'Blank expressions are not allowed in interpolated strings', input,\n            `at column ${this._findInterpolationErrorColumn(parts, i, interpolationConfig)} in`,\n            location);\n        expressions.push('$implict');\n        offsets.push(offset);\n      }\n    }\n    return new SplitInterpolation(strings, expressions, offsets);\n  }\n\n  wrapLiteralPrimitive(input: string|null, location: any, absoluteOffset: number): ASTWithSource {\n    return new ASTWithSource(\n        new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input,\n        location, absoluteOffset, this.errors);\n  }\n\n  private _stripComments(input: string): string {\n    const i = this._commentStart(input);\n    return i != null ? input.substring(0, i).trim() : input;\n  }\n\n  private _commentStart(input: string): number|null {\n    let outerQuote: number|null = null;\n    for (let i = 0; i < input.length - 1; i++) {\n      const char = input.charCodeAt(i);\n      const nextChar = input.charCodeAt(i + 1);\n\n      if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null) return i;\n\n      if (outerQuote === char) {\n        outerQuote = null;\n      } else if (outerQuote == null && isQuote(char)) {\n        outerQuote = char;\n      }\n    }\n    return null;\n  }\n\n  private _checkNoInterpolation(\n      input: string, location: any, interpolationConfig: InterpolationConfig): void {\n    const regexp = _createInterpolateRegExp(interpolationConfig);\n    const parts = input.split(regexp);\n    if (parts.length > 1) {\n      this._reportError(\n          `Got interpolation (${interpolationConfig.start}${interpolationConfig.end}) where expression was expected`,\n          input,\n          `at column ${this._findInterpolationErrorColumn(parts, 1, interpolationConfig)} in`,\n          location);\n    }\n  }\n\n  private _findInterpolationErrorColumn(\n      parts: string[], partInErrIdx: number, interpolationConfig: InterpolationConfig): number {\n    let errLocation = '';\n    for (let j = 0; j < partInErrIdx; j++) {\n      errLocation += j % 2 === 0 ?\n          parts[j] :\n          `${interpolationConfig.start}${parts[j]}${interpolationConfig.end}`;\n    }\n\n    return errLocation.length;\n  }\n}\n\nexport class _ParseAST {\n  private rparensExpected = 0;\n  private rbracketsExpected = 0;\n  private rbracesExpected = 0;\n\n  index: number = 0;\n\n  constructor(\n      public input: string, public location: any, public absoluteOffset: number,\n      public tokens: Token[], public inputLength: number, public parseAction: boolean,\n      private errors: ParserError[], private offset: number) {}\n\n  peek(offset: number): Token {\n    const i = this.index + offset;\n    return i < this.tokens.length ? this.tokens[i] : EOF;\n  }\n\n  get next(): Token { return this.peek(0); }\n\n  get inputIndex(): number {\n    return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                                               this.inputLength + this.offset;\n  }\n\n  span(start: number) { return new ParseSpan(start, this.inputIndex); }\n\n  advance() { this.index++; }\n\n  optionalCharacter(code: number): boolean {\n    if (this.next.isCharacter(code)) {\n      this.advance();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  peekKeywordLet(): boolean { return this.next.isKeywordLet(); }\n  peekKeywordAs(): boolean { return this.next.isKeywordAs(); }\n\n  expectCharacter(code: number) {\n    if (this.optionalCharacter(code)) return;\n    this.error(`Missing expected ${String.fromCharCode(code)}`);\n  }\n\n  optionalOperator(op: string): boolean {\n    if (this.next.isOperator(op)) {\n      this.advance();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  expectOperator(operator: string) {\n    if (this.optionalOperator(operator)) return;\n    this.error(`Missing expected operator ${operator}`);\n  }\n\n  expectIdentifierOrKeyword(): string {\n    const n = this.next;\n    if (!n.isIdentifier() && !n.isKeyword()) {\n      this.error(`Unexpected token ${n}, expected identifier or keyword`);\n      return '';\n    }\n    this.advance();\n    return n.toString() as string;\n  }\n\n  expectIdentifierOrKeywordOrString(): string {\n    const n = this.next;\n    if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n      this.error(`Unexpected token ${n}, expected identifier, keyword, or string`);\n      return '';\n    }\n    this.advance();\n    return n.toString() as string;\n  }\n\n  parseChain(): AST {\n    const exprs: AST[] = [];\n    const start = this.inputIndex;\n    while (this.index < this.tokens.length) {\n      const expr = this.parsePipe();\n      exprs.push(expr);\n\n      if (this.optionalCharacter(chars.$SEMICOLON)) {\n        if (!this.parseAction) {\n          this.error('Binding expression cannot contain chained expression');\n        }\n        while (this.optionalCharacter(chars.$SEMICOLON)) {\n        }  // read all semicolons\n      } else if (this.index < this.tokens.length) {\n        this.error(`Unexpected token '${this.next}'`);\n      }\n    }\n    if (exprs.length == 0) return new EmptyExpr(this.span(start));\n    if (exprs.length == 1) return exprs[0];\n    return new Chain(this.span(start), exprs);\n  }\n\n  parsePipe(): AST {\n    let result = this.parseExpression();\n    if (this.optionalOperator('|')) {\n      if (this.parseAction) {\n        this.error('Cannot have a pipe in an action expression');\n      }\n\n      do {\n        const name = this.expectIdentifierOrKeyword();\n        const args: AST[] = [];\n        while (this.optionalCharacter(chars.$COLON)) {\n          args.push(this.parseExpression());\n        }\n        result = new BindingPipe(this.span(result.span.start), result, name, args);\n      } while (this.optionalOperator('|'));\n    }\n\n    return result;\n  }\n\n  parseExpression(): AST { return this.parseConditional(); }\n\n  parseConditional(): AST {\n    const start = this.inputIndex;\n    const result = this.parseLogicalOr();\n\n    if (this.optionalOperator('?')) {\n      const yes = this.parsePipe();\n      let no: AST;\n      if (!this.optionalCharacter(chars.$COLON)) {\n        const end = this.inputIndex;\n        const expression = this.input.substring(start, end);\n        this.error(`Conditional expression ${expression} requires all 3 expressions`);\n        no = new EmptyExpr(this.span(start));\n      } else {\n        no = this.parsePipe();\n      }\n      return new Conditional(this.span(start), result, yes, no);\n    } else {\n      return result;\n    }\n  }\n\n  parseLogicalOr(): AST {\n    // '||'\n    let result = this.parseLogicalAnd();\n    while (this.optionalOperator('||')) {\n      const right = this.parseLogicalAnd();\n      result = new Binary(this.span(result.span.start), '||', result, right);\n    }\n    return result;\n  }\n\n  parseLogicalAnd(): AST {\n    // '&&'\n    let result = this.parseEquality();\n    while (this.optionalOperator('&&')) {\n      const right = this.parseEquality();\n      result = new Binary(this.span(result.span.start), '&&', result, right);\n    }\n    return result;\n  }\n\n  parseEquality(): AST {\n    // '==','!=','===','!=='\n    let result = this.parseRelational();\n    while (this.next.type == TokenType.Operator) {\n      const operator = this.next.strValue;\n      switch (operator) {\n        case '==':\n        case '===':\n        case '!=':\n        case '!==':\n          this.advance();\n          const right = this.parseRelational();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n\n  parseRelational(): AST {\n    // '<', '>', '<=', '>='\n    let result = this.parseAdditive();\n    while (this.next.type == TokenType.Operator) {\n      const operator = this.next.strValue;\n      switch (operator) {\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n          this.advance();\n          const right = this.parseAdditive();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n\n  parseAdditive(): AST {\n    // '+', '-'\n    let result = this.parseMultiplicative();\n    while (this.next.type == TokenType.Operator) {\n      const operator = this.next.strValue;\n      switch (operator) {\n        case '+':\n        case '-':\n          this.advance();\n          let right = this.parseMultiplicative();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n\n  parseMultiplicative(): AST {\n    // '*', '%', '/'\n    let result = this.parsePrefix();\n    while (this.next.type == TokenType.Operator) {\n      const operator = this.next.strValue;\n      switch (operator) {\n        case '*':\n        case '%':\n        case '/':\n          this.advance();\n          let right = this.parsePrefix();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n\n  parsePrefix(): AST {\n    if (this.next.type == TokenType.Operator) {\n      const start = this.inputIndex;\n      const operator = this.next.strValue;\n      let result: AST;\n      switch (operator) {\n        case '+':\n          this.advance();\n          result = this.parsePrefix();\n          return new Binary(\n              this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n        case '-':\n          this.advance();\n          result = this.parsePrefix();\n          return new Binary(\n              this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0),\n              result);\n        case '!':\n          this.advance();\n          result = this.parsePrefix();\n          return new PrefixNot(this.span(start), result);\n      }\n    }\n    return this.parseCallChain();\n  }\n\n  parseCallChain(): AST {\n    let result = this.parsePrimary();\n    while (true) {\n      if (this.optionalCharacter(chars.$PERIOD)) {\n        result = this.parseAccessMemberOrMethodCall(result, false);\n\n      } else if (this.optionalOperator('?.')) {\n        result = this.parseAccessMemberOrMethodCall(result, true);\n\n      } else if (this.optionalCharacter(chars.$LBRACKET)) {\n        this.rbracketsExpected++;\n        const key = this.parsePipe();\n        this.rbracketsExpected--;\n        this.expectCharacter(chars.$RBRACKET);\n        if (this.optionalOperator('=')) {\n          const value = this.parseConditional();\n          result = new KeyedWrite(this.span(result.span.start), result, key, value);\n        } else {\n          result = new KeyedRead(this.span(result.span.start), result, key);\n        }\n\n      } else if (this.optionalCharacter(chars.$LPAREN)) {\n        this.rparensExpected++;\n        const args = this.parseCallArguments();\n        this.rparensExpected--;\n        this.expectCharacter(chars.$RPAREN);\n        result = new FunctionCall(this.span(result.span.start), result, args);\n\n      } else if (this.optionalOperator('!')) {\n        result = new NonNullAssert(this.span(result.span.start), result);\n\n      } else {\n        return result;\n      }\n    }\n  }\n\n  parsePrimary(): AST {\n    const start = this.inputIndex;\n    if (this.optionalCharacter(chars.$LPAREN)) {\n      this.rparensExpected++;\n      const result = this.parsePipe();\n      this.rparensExpected--;\n      this.expectCharacter(chars.$RPAREN);\n      return result;\n\n    } else if (this.next.isKeywordNull()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), null);\n\n    } else if (this.next.isKeywordUndefined()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), void 0);\n\n    } else if (this.next.isKeywordTrue()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), true);\n\n    } else if (this.next.isKeywordFalse()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), false);\n\n    } else if (this.next.isKeywordThis()) {\n      this.advance();\n      return new ImplicitReceiver(this.span(start));\n\n    } else if (this.optionalCharacter(chars.$LBRACKET)) {\n      this.rbracketsExpected++;\n      const elements = this.parseExpressionList(chars.$RBRACKET);\n      this.rbracketsExpected--;\n      this.expectCharacter(chars.$RBRACKET);\n      return new LiteralArray(this.span(start), elements);\n\n    } else if (this.next.isCharacter(chars.$LBRACE)) {\n      return this.parseLiteralMap();\n\n    } else if (this.next.isIdentifier()) {\n      return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n\n    } else if (this.next.isNumber()) {\n      const value = this.next.toNumber();\n      this.advance();\n      return new LiteralPrimitive(this.span(start), value);\n\n    } else if (this.next.isString()) {\n      const literalValue = this.next.toString();\n      this.advance();\n      return new LiteralPrimitive(this.span(start), literalValue);\n\n    } else if (this.index >= this.tokens.length) {\n      this.error(`Unexpected end of expression: ${this.input}`);\n      return new EmptyExpr(this.span(start));\n    } else {\n      this.error(`Unexpected token ${this.next}`);\n      return new EmptyExpr(this.span(start));\n    }\n  }\n\n  parseExpressionList(terminator: number): AST[] {\n    const result: AST[] = [];\n    if (!this.next.isCharacter(terminator)) {\n      do {\n        result.push(this.parsePipe());\n      } while (this.optionalCharacter(chars.$COMMA));\n    }\n    return result;\n  }\n\n  parseLiteralMap(): LiteralMap {\n    const keys: LiteralMapKey[] = [];\n    const values: AST[] = [];\n    const start = this.inputIndex;\n    this.expectCharacter(chars.$LBRACE);\n    if (!this.optionalCharacter(chars.$RBRACE)) {\n      this.rbracesExpected++;\n      do {\n        const quoted = this.next.isString();\n        const key = this.expectIdentifierOrKeywordOrString();\n        keys.push({key, quoted});\n        this.expectCharacter(chars.$COLON);\n        values.push(this.parsePipe());\n      } while (this.optionalCharacter(chars.$COMMA));\n      this.rbracesExpected--;\n      this.expectCharacter(chars.$RBRACE);\n    }\n    return new LiteralMap(this.span(start), keys, values);\n  }\n\n  parseAccessMemberOrMethodCall(receiver: AST, isSafe: boolean = false): AST {\n    const start = receiver.span.start;\n    const id = this.expectIdentifierOrKeyword();\n\n    if (this.optionalCharacter(chars.$LPAREN)) {\n      this.rparensExpected++;\n      const args = this.parseCallArguments();\n      this.expectCharacter(chars.$RPAREN);\n      this.rparensExpected--;\n      const span = this.span(start);\n      return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                      new MethodCall(span, receiver, id, args);\n\n    } else {\n      if (isSafe) {\n        if (this.optionalOperator('=')) {\n          this.error('The \\'?.\\' operator cannot be used in the assignment');\n          return new EmptyExpr(this.span(start));\n        } else {\n          return new SafePropertyRead(this.span(start), receiver, id);\n        }\n      } else {\n        if (this.optionalOperator('=')) {\n          if (!this.parseAction) {\n            this.error('Bindings cannot contain assignments');\n            return new EmptyExpr(this.span(start));\n          }\n\n          const value = this.parseConditional();\n          return new PropertyWrite(this.span(start), receiver, id, value);\n        } else {\n          return new PropertyRead(this.span(start), receiver, id);\n        }\n      }\n    }\n  }\n\n  parseCallArguments(): BindingPipe[] {\n    if (this.next.isCharacter(chars.$RPAREN)) return [];\n    const positionals: AST[] = [];\n    do {\n      positionals.push(this.parsePipe());\n    } while (this.optionalCharacter(chars.$COMMA));\n    return positionals as BindingPipe[];\n  }\n\n  /**\n   * An identifier, a keyword, a string with an optional `-` in between.\n   */\n  expectTemplateBindingKey(): string {\n    let result = '';\n    let operatorFound = false;\n    do {\n      result += this.expectIdentifierOrKeywordOrString();\n      operatorFound = this.optionalOperator('-');\n      if (operatorFound) {\n        result += '-';\n      }\n    } while (operatorFound);\n\n    return result.toString();\n  }\n\n  // Parses the AST for `<some-tag *tplKey=AST>`\n  parseTemplateBindings(tplKey: string): TemplateBindingParseResult {\n    let firstBinding = true;\n    const bindings: TemplateBinding[] = [];\n    const warnings: string[] = [];\n    do {\n      const start = this.inputIndex;\n      let rawKey: string;\n      let key: string;\n      let isVar: boolean = false;\n      if (firstBinding) {\n        rawKey = key = tplKey;\n        firstBinding = false;\n      } else {\n        isVar = this.peekKeywordLet();\n        if (isVar) this.advance();\n        rawKey = this.expectTemplateBindingKey();\n        key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n        this.optionalCharacter(chars.$COLON);\n      }\n\n      let name: string = null !;\n      let expression: ASTWithSource|null = null;\n      if (isVar) {\n        if (this.optionalOperator('=')) {\n          name = this.expectTemplateBindingKey();\n        } else {\n          name = '\\$implicit';\n        }\n      } else if (this.peekKeywordAs()) {\n        this.advance();  // consume `as`\n        name = rawKey;\n        key = this.expectTemplateBindingKey();  // read local var name\n        isVar = true;\n      } else if (this.next !== EOF && !this.peekKeywordLet()) {\n        const start = this.inputIndex;\n        const ast = this.parsePipe();\n        const source = this.input.substring(start - this.offset, this.inputIndex - this.offset);\n        expression =\n            new ASTWithSource(ast, source, this.location, this.absoluteOffset, this.errors);\n      }\n\n      bindings.push(new TemplateBinding(this.span(start), key, isVar, name, expression));\n      if (this.peekKeywordAs() && !isVar) {\n        const letStart = this.inputIndex;\n        this.advance();                                   // consume `as`\n        const letName = this.expectTemplateBindingKey();  // read local var name\n        bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null !));\n      }\n      if (!this.optionalCharacter(chars.$SEMICOLON)) {\n        this.optionalCharacter(chars.$COMMA);\n      }\n    } while (this.index < this.tokens.length);\n\n    return new TemplateBindingParseResult(bindings, warnings, this.errors);\n  }\n\n  error(message: string, index: number|null = null) {\n    this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n    this.skip();\n  }\n\n  private locationText(index: number|null = null) {\n    if (index == null) index = this.index;\n    return (index < this.tokens.length) ? `at column ${this.tokens[index].index + 1} in` :\n                                          `at the end of the expression`;\n  }\n\n  // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n  // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n  // '}' and ']' as conditional recovery points if one of calling productions is expecting\n  // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n  // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n  // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n  // must be conditional as they must be skipped if none of the calling productions are not\n  // expecting the closing token else we will never make progress in the case of an\n  // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n  // parseChain() is always the root production and it expects a ';'.\n\n  // If a production expects one of these token it increments the corresponding nesting count,\n  // and then decrements it just prior to checking if the token is in the input.\n  private skip() {\n    let n = this.next;\n    while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n           (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n           (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n           (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n      if (this.next.isError()) {\n        this.errors.push(new ParserError(\n            this.next.toString() !, this.input, this.locationText(), this.location));\n      }\n      this.advance();\n      n = this.next;\n    }\n  }\n}\n\nclass SimpleExpressionChecker implements AstVisitor {\n  static check(ast: AST): string[] {\n    const s = new SimpleExpressionChecker();\n    ast.visit(s);\n    return s.errors;\n  }\n\n  errors: string[] = [];\n\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any) {}\n\n  visitInterpolation(ast: Interpolation, context: any) {}\n\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any) {}\n\n  visitPropertyRead(ast: PropertyRead, context: any) {}\n\n  visitPropertyWrite(ast: PropertyWrite, context: any) {}\n\n  visitSafePropertyRead(ast: SafePropertyRead, context: any) {}\n\n  visitMethodCall(ast: MethodCall, context: any) {}\n\n  visitSafeMethodCall(ast: SafeMethodCall, context: any) {}\n\n  visitFunctionCall(ast: FunctionCall, context: any) {}\n\n  visitLiteralArray(ast: LiteralArray, context: any) { this.visitAll(ast.expressions); }\n\n  visitLiteralMap(ast: LiteralMap, context: any) { this.visitAll(ast.values); }\n\n  visitBinary(ast: Binary, context: any) {}\n\n  visitPrefixNot(ast: PrefixNot, context: any) {}\n\n  visitNonNullAssert(ast: NonNullAssert, context: any) {}\n\n  visitConditional(ast: Conditional, context: any) {}\n\n  visitPipe(ast: BindingPipe, context: any) { this.errors.push('pipes'); }\n\n  visitKeyedRead(ast: KeyedRead, context: any) {}\n\n  visitKeyedWrite(ast: KeyedWrite, context: any) {}\n\n  visitAll(asts: any[]): any[] { return asts.map(node => node.visit(this)); }\n\n  visitChain(ast: Chain, context: any) {}\n\n  visitQuote(ast: Quote, context: any) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '../core';\n\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nlet _SECURITY_SCHEMA !: {[k: string]: SecurityContext};\n\nexport function SECURITY_SCHEMA(): {[k: string]: SecurityContext} {\n  if (!_SECURITY_SCHEMA) {\n    _SECURITY_SCHEMA = {};\n    // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\n    registerContext(SecurityContext.HTML, [\n      'iframe|srcdoc',\n      '*|innerHTML',\n      '*|outerHTML',\n    ]);\n    registerContext(SecurityContext.STYLE, ['*|style']);\n    // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n    registerContext(SecurityContext.URL, [\n      '*|formAction', 'area|href',       'area|ping',       'audio|src',    'a|href',\n      'a|ping',       'blockquote|cite', 'body|background', 'del|cite',     'form|action',\n      'img|src',      'img|srcset',      'input|src',       'ins|cite',     'q|cite',\n      'source|src',   'source|srcset',   'track|src',       'video|poster', 'video|src',\n    ]);\n    registerContext(SecurityContext.RESOURCE_URL, [\n      'applet|code',\n      'applet|codebase',\n      'base|href',\n      'embed|src',\n      'frame|src',\n      'head|profile',\n      'html|manifest',\n      'iframe|src',\n      'link|href',\n      'media|src',\n      'object|codebase',\n      'object|data',\n      'script|src',\n    ]);\n  }\n  return _SECURITY_SCHEMA;\n}\n\nfunction registerContext(ctx: SecurityContext, specs: string[]) {\n  for (const spec of specs) _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SchemaMetadata, SecurityContext} from '../core';\n\nexport abstract class ElementSchemaRegistry {\n  abstract hasProperty(tagName: string, propName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract hasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract securityContext(elementName: string, propName: string, isAttribute: boolean):\n      SecurityContext;\n  abstract allKnownElementNames(): string[];\n  abstract getMappedPropName(propName: string): string;\n  abstract getDefaultComponentElementName(): string;\n  abstract validateProperty(name: string): {error: boolean, msg?: string};\n  abstract validateAttribute(name: string): {error: boolean, msg?: string};\n  abstract normalizeAnimationStyleProperty(propName: string): string;\n  abstract normalizeAnimationStyleValue(\n      camelCaseProp: string, userProvidedProp: string,\n      val: string|number): {error: string, value: string};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SchemaMetadata, SecurityContext} from '../core';\n\nimport {isNgContainer, isNgContent} from '../ml_parser/tags';\nimport {dashCaseToCamelCase} from '../util';\n\nimport {SECURITY_SCHEMA} from './dom_security_schema';\nimport {ElementSchemaRegistry} from './element_schema_registry';\n\nconst BOOLEAN = 'boolean';\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst OBJECT = 'object';\n\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\n\nconst SCHEMA: string[] = [\n  '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n      /* added manually to avoid breaking changes */\n      ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n  '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n  ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n  ':svg:graphics^:svg:|',\n  ':svg:animation^:svg:|*begin,*end,*repeat',\n  ':svg:geometry^:svg:|',\n  ':svg:componentTransferFunction^:svg:|',\n  ':svg:gradient^:svg:|',\n  ':svg:textContent^:svg:graphics|',\n  ':svg:textPositioning^:svg:textContent|',\n  'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n  'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n  'audio^media|',\n  'br^[HTMLElement]|clear',\n  'base^[HTMLElement]|href,target',\n  'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n  'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n  'canvas^[HTMLElement]|#height,#width',\n  'content^[HTMLElement]|select',\n  'dl^[HTMLElement]|!compact',\n  'datalist^[HTMLElement]|',\n  'details^[HTMLElement]|!open',\n  'dialog^[HTMLElement]|!open,returnValue',\n  'dir^[HTMLElement]|!compact',\n  'div^[HTMLElement]|align',\n  'embed^[HTMLElement]|align,height,name,src,type,width',\n  'fieldset^[HTMLElement]|!disabled,name',\n  'font^[HTMLElement]|color,face,size',\n  'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n  'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n  'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n  'hr^[HTMLElement]|align,color,!noShade,size,width',\n  'head^[HTMLElement]|',\n  'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n  'html^[HTMLElement]|version',\n  'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n  'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n  'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n  'li^[HTMLElement]|type,#value',\n  'label^[HTMLElement]|htmlFor',\n  'legend^[HTMLElement]|align',\n  'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n  'map^[HTMLElement]|name',\n  'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n  'menu^[HTMLElement]|!compact',\n  'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n  'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n  'ins,del^[HTMLElement]|cite,dateTime',\n  'ol^[HTMLElement]|!compact,!reversed,#start,type',\n  'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n  'optgroup^[HTMLElement]|!disabled,label',\n  'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n  'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n  'p^[HTMLElement]|align',\n  'param^[HTMLElement]|name,type,value,valueType',\n  'picture^[HTMLElement]|',\n  'pre^[HTMLElement]|#width',\n  'progress^[HTMLElement]|#max,#value',\n  'q,blockquote,cite^[HTMLElement]|',\n  'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n  'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n  'shadow^[HTMLElement]|',\n  'slot^[HTMLElement]|name',\n  'source^[HTMLElement]|media,sizes,src,srcset,type',\n  'span^[HTMLElement]|',\n  'style^[HTMLElement]|!disabled,media,type',\n  'caption^[HTMLElement]|align',\n  'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n  'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n  'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n  'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n  'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n  'template^[HTMLElement]|',\n  'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n  'title^[HTMLElement]|text',\n  'track^[HTMLElement]|!default,kind,label,src,srclang',\n  'ul^[HTMLElement]|!compact,type',\n  'unknown^[HTMLElement]|',\n  'video^media|#height,poster,#width',\n  ':svg:a^:svg:graphics|',\n  ':svg:animate^:svg:animation|',\n  ':svg:animateMotion^:svg:animation|',\n  ':svg:animateTransform^:svg:animation|',\n  ':svg:circle^:svg:geometry|',\n  ':svg:clipPath^:svg:graphics|',\n  ':svg:defs^:svg:graphics|',\n  ':svg:desc^:svg:|',\n  ':svg:discard^:svg:|',\n  ':svg:ellipse^:svg:geometry|',\n  ':svg:feBlend^:svg:|',\n  ':svg:feColorMatrix^:svg:|',\n  ':svg:feComponentTransfer^:svg:|',\n  ':svg:feComposite^:svg:|',\n  ':svg:feConvolveMatrix^:svg:|',\n  ':svg:feDiffuseLighting^:svg:|',\n  ':svg:feDisplacementMap^:svg:|',\n  ':svg:feDistantLight^:svg:|',\n  ':svg:feDropShadow^:svg:|',\n  ':svg:feFlood^:svg:|',\n  ':svg:feFuncA^:svg:componentTransferFunction|',\n  ':svg:feFuncB^:svg:componentTransferFunction|',\n  ':svg:feFuncG^:svg:componentTransferFunction|',\n  ':svg:feFuncR^:svg:componentTransferFunction|',\n  ':svg:feGaussianBlur^:svg:|',\n  ':svg:feImage^:svg:|',\n  ':svg:feMerge^:svg:|',\n  ':svg:feMergeNode^:svg:|',\n  ':svg:feMorphology^:svg:|',\n  ':svg:feOffset^:svg:|',\n  ':svg:fePointLight^:svg:|',\n  ':svg:feSpecularLighting^:svg:|',\n  ':svg:feSpotLight^:svg:|',\n  ':svg:feTile^:svg:|',\n  ':svg:feTurbulence^:svg:|',\n  ':svg:filter^:svg:|',\n  ':svg:foreignObject^:svg:graphics|',\n  ':svg:g^:svg:graphics|',\n  ':svg:image^:svg:graphics|',\n  ':svg:line^:svg:geometry|',\n  ':svg:linearGradient^:svg:gradient|',\n  ':svg:mpath^:svg:|',\n  ':svg:marker^:svg:|',\n  ':svg:mask^:svg:|',\n  ':svg:metadata^:svg:|',\n  ':svg:path^:svg:geometry|',\n  ':svg:pattern^:svg:|',\n  ':svg:polygon^:svg:geometry|',\n  ':svg:polyline^:svg:geometry|',\n  ':svg:radialGradient^:svg:gradient|',\n  ':svg:rect^:svg:geometry|',\n  ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n  ':svg:script^:svg:|type',\n  ':svg:set^:svg:animation|',\n  ':svg:stop^:svg:|',\n  ':svg:style^:svg:|!disabled,media,title,type',\n  ':svg:switch^:svg:graphics|',\n  ':svg:symbol^:svg:|',\n  ':svg:tspan^:svg:textPositioning|',\n  ':svg:text^:svg:textPositioning|',\n  ':svg:textPath^:svg:textContent|',\n  ':svg:title^:svg:|',\n  ':svg:use^:svg:graphics|',\n  ':svg:view^:svg:|#zoomAndPan',\n  'data^[HTMLElement]|value',\n  'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n  'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n  'summary^[HTMLElement]|',\n  'time^[HTMLElement]|dateTime',\n  ':svg:cursor^:svg:|',\n];\n\nconst _ATTR_TO_PROP: {[name: string]: string} = {\n  'class': 'className',\n  'for': 'htmlFor',\n  'formaction': 'formAction',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nexport class DomElementSchemaRegistry extends ElementSchemaRegistry {\n  private _schema: {[element: string]: {[property: string]: string}} = {};\n\n  constructor() {\n    super();\n    SCHEMA.forEach(encodedType => {\n      const type: {[property: string]: string} = {};\n      const [strType, strProperties] = encodedType.split('|');\n      const properties = strProperties.split(',');\n      const [typeNames, superName] = strType.split('^');\n      typeNames.split(',').forEach(tag => this._schema[tag.toLowerCase()] = type);\n      const superType = superName && this._schema[superName.toLowerCase()];\n      if (superType) {\n        Object.keys(superType).forEach((prop: string) => { type[prop] = superType[prop]; });\n      }\n      properties.forEach((property: string) => {\n        if (property.length > 0) {\n          switch (property[0]) {\n            case '*':\n              // We don't yet support events.\n              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n              // will\n              // almost certainly introduce bad XSS vulnerabilities.\n              // type[property.substring(1)] = EVENT;\n              break;\n            case '!':\n              type[property.substring(1)] = BOOLEAN;\n              break;\n            case '#':\n              type[property.substring(1)] = NUMBER;\n              break;\n            case '%':\n              type[property.substring(1)] = OBJECT;\n              break;\n            default:\n              type[property] = STRING;\n          }\n        }\n      });\n    });\n  }\n\n  hasProperty(tagName: string, propName: string, schemaMetas: SchemaMetadata[]): boolean {\n    if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n      return true;\n    }\n\n    if (tagName.indexOf('-') > -1) {\n      if (isNgContainer(tagName) || isNgContent(tagName)) {\n        return false;\n      }\n\n      if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n        // Can't tell now as we don't know which properties a custom element will get\n        // once it is instantiated\n        return true;\n      }\n    }\n\n    const elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n    return !!elementProperties[propName];\n  }\n\n  hasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean {\n    if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n      return true;\n    }\n\n    if (tagName.indexOf('-') > -1) {\n      if (isNgContainer(tagName) || isNgContent(tagName)) {\n        return true;\n      }\n\n      if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n        // Allow any custom elements\n        return true;\n      }\n    }\n\n    return !!this._schema[tagName.toLowerCase()];\n  }\n\n  /**\n   * securityContext returns the security context for the given property on the given DOM tag.\n   *\n   * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n   * possible to bind a value into a changing attribute or tag name.\n   *\n   * The filtering is based on a list of allowed tags|attributes. All attributes in the schema\n   * above are assumed to have the 'NONE' security context, i.e. that they are safe inert\n   * string values. Only specific well known attack vectors are assigned their appropriate context.\n   */\n  securityContext(tagName: string, propName: string, isAttribute: boolean): SecurityContext {\n    if (isAttribute) {\n      // NB: For security purposes, use the mapped property name, not the attribute name.\n      propName = this.getMappedPropName(propName);\n    }\n\n    // Make sure comparisons are case insensitive, so that case differences between attribute and\n    // property names do not have a security impact.\n    tagName = tagName.toLowerCase();\n    propName = propName.toLowerCase();\n    let ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n    if (ctx) {\n      return ctx;\n    }\n    ctx = SECURITY_SCHEMA()['*|' + propName];\n    return ctx ? ctx : SecurityContext.NONE;\n  }\n\n  getMappedPropName(propName: string): string { return _ATTR_TO_PROP[propName] || propName; }\n\n  getDefaultComponentElementName(): string { return 'ng-component'; }\n\n  validateProperty(name: string): {error: boolean, msg?: string} {\n    if (name.toLowerCase().startsWith('on')) {\n      const msg = `Binding to event property '${name}' is disallowed for security reasons, ` +\n          `please use (${name.slice(2)})=...` +\n          `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n          ` current module.`;\n      return {error: true, msg: msg};\n    } else {\n      return {error: false};\n    }\n  }\n\n  validateAttribute(name: string): {error: boolean, msg?: string} {\n    if (name.toLowerCase().startsWith('on')) {\n      const msg = `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n          `please use (${name.slice(2)})=...`;\n      return {error: true, msg: msg};\n    } else {\n      return {error: false};\n    }\n  }\n\n  allKnownElementNames(): string[] { return Object.keys(this._schema); }\n\n  normalizeAnimationStyleProperty(propName: string): string {\n    return dashCaseToCamelCase(propName);\n  }\n\n  normalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    let unit: string = '';\n    const strVal = val.toString().trim();\n    let errorMsg: string = null !;\n\n    if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n      if (typeof val === 'number') {\n        unit = 'px';\n      } else {\n        const valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errorMsg = `Please provide a CSS unit value for ${userProvidedProp}:${val}`;\n        }\n      }\n    }\n    return {error: errorMsg, value: strVal + unit};\n  }\n}\n\nfunction _isPixelDimensionStyle(prop: string): boolean {\n  switch (prop) {\n    case 'width':\n    case 'height':\n    case 'minWidth':\n    case 'minHeight':\n    case 'maxWidth':\n    case 'maxHeight':\n    case 'left':\n    case 'top':\n    case 'bottom':\n    case 'right':\n    case 'fontSize':\n    case 'outlineWidth':\n    case 'outlineOffset':\n    case 'paddingTop':\n    case 'paddingLeft':\n    case 'paddingBottom':\n    case 'paddingRight':\n    case 'marginTop':\n    case 'marginLeft':\n    case 'marginBottom':\n    case 'marginRight':\n    case 'borderRadius':\n    case 'borderWidth':\n    case 'borderTopWidth':\n    case 'borderLeftWidth':\n    case 'borderRightWidth':\n    case 'borderBottomWidth':\n    case 'textIndent':\n      return true;\n\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParsedEvent, ParsedProperty, ParsedVariable} from '../expression_parser/ast';\nimport * as i18n from '../i18n/i18n_ast';\nimport * as html from '../ml_parser/ast';\nimport {replaceNgsp} from '../ml_parser/html_whitespaces';\nimport {isNgTemplate} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {PreparsedElementType, preparseElement} from '../template_parser/template_preparser';\nimport {syntaxError} from '../util';\n\nimport * as t from './r3_ast';\nimport {I18N_ICU_VAR_PREFIX} from './view/i18n/util';\n\nconst BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst IDENT_EVENT_IDX = 10;\n\nconst TEMPLATE_ATTR_PREFIX = '*';\n\n// Result of the html AST to Ivy AST transformation\nexport interface Render3ParseResult {\n  nodes: t.Node[];\n  errors: ParseError[];\n  styles: string[];\n  styleUrls: string[];\n}\n\nexport function htmlAstToRender3Ast(\n    htmlNodes: html.Node[], bindingParser: BindingParser): Render3ParseResult {\n  const transformer = new HtmlAstToIvyAst(bindingParser);\n  const ivyNodes = html.visitAll(transformer, htmlNodes);\n\n  // Errors might originate in either the binding parser or the html to ivy transformer\n  const allErrors = bindingParser.errors.concat(transformer.errors);\n  const errors: ParseError[] = allErrors.filter(e => e.level === ParseErrorLevel.ERROR);\n\n  if (errors.length > 0) {\n    const errorString = errors.join('\\n');\n    throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n  }\n\n  return {\n    nodes: ivyNodes,\n    errors: allErrors,\n    styleUrls: transformer.styleUrls,\n    styles: transformer.styles,\n  };\n}\n\nclass HtmlAstToIvyAst implements html.Visitor {\n  errors: ParseError[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n\n  constructor(private bindingParser: BindingParser) {}\n\n  // HTML visitor\n  visitElement(element: html.Element): t.Node|null {\n    const preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT) {\n      return null;\n    } else if (preparsedElement.type === PreparsedElementType.STYLE) {\n      const contents = textContents(element);\n      if (contents !== null) {\n        this.styles.push(contents);\n      }\n      return null;\n    } else if (\n        preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      this.styleUrls.push(preparsedElement.hrefAttr);\n      return null;\n    }\n\n    // Whether the element is a `<ng-template>`\n    const isTemplateElement = isNgTemplate(element.name);\n\n    const parsedProperties: ParsedProperty[] = [];\n    const boundEvents: t.BoundEvent[] = [];\n    const variables: t.Variable[] = [];\n    const references: t.Reference[] = [];\n    const attributes: t.TextAttribute[] = [];\n    const i18nAttrsMeta: {[key: string]: i18n.AST} = {};\n\n    const templateParsedProperties: ParsedProperty[] = [];\n    const templateVariables: t.Variable[] = [];\n\n    // Whether the element has any *-attribute\n    let elementHasInlineTemplate = false;\n\n    for (const attribute of element.attrs) {\n      let hasBinding = false;\n      const normalizedName = normalizeAttributeName(attribute.name);\n\n      // `*attr` defines template bindings\n      let isTemplateBinding = false;\n\n      if (attribute.i18n) {\n        i18nAttrsMeta[attribute.name] = attribute.i18n;\n      }\n\n      if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        // *-attributes\n        if (elementHasInlineTemplate) {\n          this.reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute prefixed with *`,\n              attribute.sourceSpan);\n        }\n        isTemplateBinding = true;\n        elementHasInlineTemplate = true;\n        const templateValue = attribute.value;\n        const templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n\n        const parsedVariables: ParsedVariable[] = [];\n        const absoluteOffset = attribute.valueSpan ? attribute.valueSpan.start.offset :\n                                                     attribute.sourceSpan.start.offset;\n        this.bindingParser.parseInlineTemplateBinding(\n            templateKey, templateValue, attribute.sourceSpan, absoluteOffset, [],\n            templateParsedProperties, parsedVariables);\n        templateVariables.push(\n            ...parsedVariables.map(v => new t.Variable(v.name, v.value, v.sourceSpan)));\n      } else {\n        // Check for variables, events, property bindings, interpolation\n        hasBinding = this.parseAttribute(\n            isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n      }\n\n      if (!hasBinding && !isTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attributes.push(this.visitAttribute(attribute) as t.TextAttribute);\n      }\n    }\n\n    const children: t.Node[] =\n        html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n\n    let parsedElement: t.Node|undefined;\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      // `<ng-content>`\n      if (element.children &&\n          !element.children.every(\n              (node: html.Node) => isEmptyTextNode(node) || isCommentNode(node))) {\n        this.reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n      const selector = preparsedElement.selectAttr;\n      const attrs: t.TextAttribute[] = element.attrs.map(attr => this.visitAttribute(attr));\n      parsedElement = new t.Content(selector, attrs, element.sourceSpan, element.i18n);\n    } else if (isTemplateElement) {\n      // `<ng-template>`\n      const attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n\n      parsedElement = new t.Template(\n          element.name, attributes, attrs.bound, boundEvents, [/* no template attributes */],\n          children, references, variables, element.sourceSpan, element.startSourceSpan,\n          element.endSourceSpan, element.i18n);\n    } else {\n      const attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n      parsedElement = new t.Element(\n          element.name, attributes, attrs.bound, boundEvents, children, references,\n          element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n    }\n\n    if (elementHasInlineTemplate) {\n      // If this node is an inline-template (e.g. has *ngFor) then we need to create a template\n      // node that contains this node.\n      // Moreover, if the node is an element, then we need to hoist its attributes to the template\n      // node for matching against content projection selectors.\n      const attrs = this.extractAttributes('ng-template', templateParsedProperties, i18nAttrsMeta);\n      const templateAttrs: (t.TextAttribute | t.BoundAttribute)[] = [];\n      attrs.literal.forEach(attr => templateAttrs.push(attr));\n      attrs.bound.forEach(attr => templateAttrs.push(attr));\n      const hoistedAttrs = parsedElement instanceof t.Element ?\n          {\n            attributes: parsedElement.attributes,\n            inputs: parsedElement.inputs,\n            outputs: parsedElement.outputs,\n          } :\n          {attributes: [], inputs: [], outputs: []};\n      // TODO(pk): test for this case\n      parsedElement = new t.Template(\n          (parsedElement as t.Element).name, hoistedAttrs.attributes, hoistedAttrs.inputs,\n          hoistedAttrs.outputs, templateAttrs, [parsedElement], [/* no references */],\n          templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan,\n          element.i18n);\n    }\n    return parsedElement;\n  }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(\n        attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan, attribute.i18n);\n  }\n\n  visitText(text: html.Text): t.Node {\n    return this._visitTextWithInterpolation(text.value, text.sourceSpan, text.i18n);\n  }\n\n  visitExpansion(expansion: html.Expansion): t.Icu|null {\n    const meta = expansion.i18n as i18n.Message;\n    // do not generate Icu in case it was created\n    // outside of i18n block in a template\n    if (!meta) {\n      return null;\n    }\n    const vars: {[name: string]: t.BoundText} = {};\n    const placeholders: {[name: string]: t.Text | t.BoundText} = {};\n    // extract VARs from ICUs - we process them separately while\n    // assembling resulting message via goog.getMsg function, since\n    // we need to pass them to top-level goog.getMsg call\n    Object.keys(meta.placeholders).forEach(key => {\n      const value = meta.placeholders[key];\n      if (key.startsWith(I18N_ICU_VAR_PREFIX)) {\n        const config = this.bindingParser.interpolationConfig;\n        // ICU expression is a plain string, not wrapped into start\n        // and end tags, so we wrap it before passing to binding parser\n        const wrapped = `${config.start}${value}${config.end}`;\n        vars[key] = this._visitTextWithInterpolation(wrapped, expansion.sourceSpan) as t.BoundText;\n      } else {\n        placeholders[key] = this._visitTextWithInterpolation(value, expansion.sourceSpan);\n      }\n    });\n    return new t.Icu(vars, placeholders, expansion.sourceSpan, meta);\n  }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): null { return null; }\n\n  visitComment(comment: html.Comment): null { return null; }\n\n  // convert view engine `ParsedProperty` to a format suitable for IVY\n  private extractAttributes(\n      elementName: string, properties: ParsedProperty[], i18nPropsMeta: {[key: string]: i18n.AST}):\n      {bound: t.BoundAttribute[], literal: t.TextAttribute[]} {\n    const bound: t.BoundAttribute[] = [];\n    const literal: t.TextAttribute[] = [];\n\n    properties.forEach(prop => {\n      const i18n = i18nPropsMeta[prop.name];\n      if (prop.isLiteral) {\n        literal.push(new t.TextAttribute(\n            prop.name, prop.expression.source || '', prop.sourceSpan, undefined, i18n));\n      } else {\n        // Note that validation is skipped and property mapping is disabled\n        // due to the fact that we need to make sure a given prop is not an\n        // input of a directive and directive matching happens at runtime.\n        const bep = this.bindingParser.createBoundElementProperty(\n            elementName, prop, /* skipValidation */ true, /* mapPropertyName */ false);\n        bound.push(t.BoundAttribute.fromBoundElementProperty(bep, i18n));\n      }\n    });\n\n    return {bound, literal};\n  }\n\n  private parseAttribute(\n      isTemplateElement: boolean, attribute: html.Attribute, matchableAttributes: string[][],\n      parsedProperties: ParsedProperty[], boundEvents: t.BoundEvent[], variables: t.Variable[],\n      references: t.Reference[]) {\n    const name = normalizeAttributeName(attribute.name);\n    const value = attribute.value;\n    const srcSpan = attribute.sourceSpan;\n    const absoluteOffset =\n        attribute.valueSpan ? attribute.valueSpan.start.offset : srcSpan.start.offset;\n\n    const bindParts = name.match(BIND_NAME_REGEXP);\n    let hasBinding = false;\n\n    if (bindParts) {\n      hasBinding = true;\n      if (bindParts[KW_BIND_IDX] != null) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, absoluteOffset, attribute.valueSpan,\n            matchableAttributes, parsedProperties);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const identifier = bindParts[IDENT_KW_IDX];\n          this.parseVariable(identifier, value, srcSpan, attribute.valueSpan, variables);\n        } else {\n          this.reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        this.parseReference(identifier, value, srcSpan, attribute.valueSpan, references);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        const events: ParsedEvent[] = [];\n        this.bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, attribute.valueSpan || srcSpan,\n            matchableAttributes, events);\n        addEvents(events, boundEvents);\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, absoluteOffset, attribute.valueSpan,\n            matchableAttributes, parsedProperties);\n        this.parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, attribute.valueSpan, matchableAttributes,\n            boundEvents);\n      } else if (bindParts[KW_AT_IDX]) {\n        this.bindingParser.parseLiteralAttr(\n            name, value, srcSpan, absoluteOffset, attribute.valueSpan, matchableAttributes,\n            parsedProperties);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, absoluteOffset,\n            attribute.valueSpan, matchableAttributes, parsedProperties);\n        this.parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, attribute.valueSpan,\n            matchableAttributes, boundEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, absoluteOffset,\n            attribute.valueSpan, matchableAttributes, parsedProperties);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        const events: ParsedEvent[] = [];\n        this.bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, attribute.valueSpan || srcSpan,\n            matchableAttributes, events);\n        addEvents(events, boundEvents);\n      }\n    } else {\n      hasBinding = this.bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, attribute.valueSpan, matchableAttributes, parsedProperties);\n    }\n\n    return hasBinding;\n  }\n\n  private _visitTextWithInterpolation(value: string, sourceSpan: ParseSourceSpan, i18n?: i18n.AST):\n      t.Text|t.BoundText {\n    const valueNoNgsp = replaceNgsp(value);\n    const expr = this.bindingParser.parseInterpolation(valueNoNgsp, sourceSpan);\n    return expr ? new t.BoundText(expr, sourceSpan, i18n) : new t.Text(valueNoNgsp, sourceSpan);\n  }\n\n  private parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      valueSpan: ParseSourceSpan|undefined, variables: t.Variable[]) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n    variables.push(new t.Variable(identifier, value, sourceSpan, valueSpan));\n  }\n\n  private parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      valueSpan: ParseSourceSpan|undefined, references: t.Reference[]) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    references.push(new t.Reference(identifier, value, sourceSpan, valueSpan));\n  }\n\n  private parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      valueSpan: ParseSourceSpan|undefined, targetMatchableAttrs: string[][],\n      boundEvents: t.BoundEvent[]) {\n    const events: ParsedEvent[] = [];\n    this.bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, valueSpan || sourceSpan,\n        targetMatchableAttrs, events);\n    addEvents(events, boundEvents);\n  }\n\n  private reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this.errors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nclass NonBindableVisitor implements html.Visitor {\n  visitElement(ast: html.Element): t.Element|null {\n    const preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const children: t.Node[] = html.visitAll(this, ast.children, null);\n    return new t.Element(\n        ast.name, html.visitAll(this, ast.attrs) as t.TextAttribute[],\n        /* inputs */[], /* outputs */[], children,Â  /* references */[], ast.sourceSpan,\n        ast.startSourceSpan, ast.endSourceSpan);\n  }\n\n  visitComment(comment: html.Comment): any { return null; }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(\n        attribute.name, attribute.value, attribute.sourceSpan, undefined, attribute.i18n);\n  }\n\n  visitText(text: html.Text): t.Text { return new t.Text(text.value, text.sourceSpan); }\n\n  visitExpansion(expansion: html.Expansion): any { return null; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): any { return null; }\n}\n\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\nfunction normalizeAttributeName(attrName: string): string {\n  return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\n\nfunction addEvents(events: ParsedEvent[], boundEvents: t.BoundEvent[]) {\n  boundEvents.push(...events.map(e => t.BoundEvent.fromParsedEvent(e)));\n}\n\nfunction isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n\nfunction isCommentNode(node: html.Node): boolean {\n  return node instanceof html.Comment;\n}\n\nfunction textContents(node: html.Element): string|null {\n  if (node.children.length !== 1 || !(node.children[0] instanceof html.Text)) {\n    return null;\n  } else {\n    return (node.children[0] as html.Text).value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST} from '../../../expression_parser/ast';\nimport * as i18n from '../../../i18n/i18n_ast';\nimport * as o from '../../../output/output_ast';\n\nimport {assembleBoundTextPlaceholders, findIndex, getSeqNumberGenerator, updatePlaceholderMap, wrapI18nPlaceholder} from './util';\n\nenum TagType {\n  ELEMENT,\n  TEMPLATE,\n  PROJECTION\n}\n\n/**\n * Generates an object that is used as a shared state between parent and all child contexts.\n */\nfunction setupRegistry() {\n  return {getUniqueId: getSeqNumberGenerator(), icus: new Map<string, any[]>()};\n}\n\n/**\n * I18nContext is a helper class which keeps track of all i18n-related aspects\n * (accumulates placeholders, bindings, etc) between i18nStart and i18nEnd instructions.\n *\n * When we enter a nested template, the top-level context is being passed down\n * to the nested component, which uses this context to generate a child instance\n * of I18nContext class (to handle nested template) and at the end, reconciles it back\n * with the parent context.\n *\n * @param index Instruction index of i18nStart, which initiates this context\n * @param ref Reference to a translation const that represents the content if thus context\n * @param level Nestng level defined for child contexts\n * @param templateIndex Instruction index of a template which this context belongs to\n * @param meta Meta information (id, meaning, description, etc) associated with this context\n */\nexport class I18nContext {\n  public readonly id: number;\n  public bindings = new Set<AST>();\n  public placeholders = new Map<string, any[]>();\n  public isEmitted: boolean = false;\n\n  private _registry !: any;\n  private _unresolvedCtxCount: number = 0;\n\n  constructor(\n      readonly index: number, readonly ref: o.ReadVarExpr, readonly level: number = 0,\n      readonly templateIndex: number|null = null, readonly meta: i18n.AST, private registry?: any) {\n    this._registry = registry || setupRegistry();\n    this.id = this._registry.getUniqueId();\n  }\n\n  private appendTag(type: TagType, node: i18n.TagPlaceholder, index: number, closed?: boolean) {\n    if (node.isVoid && closed) {\n      return;  // ignore \"close\" for void tags\n    }\n    const ph = node.isVoid || !closed ? node.startName : node.closeName;\n    const content = {type, index, ctx: this.id, isVoid: node.isVoid, closed};\n    updatePlaceholderMap(this.placeholders, ph, content);\n  }\n\n  get icus() { return this._registry.icus; }\n  get isRoot() { return this.level === 0; }\n  get isResolved() { return this._unresolvedCtxCount === 0; }\n\n  getSerializedPlaceholders() {\n    const result = new Map<string, any[]>();\n    this.placeholders.forEach(\n        (values, key) => result.set(key, values.map(serializePlaceholderValue)));\n    return result;\n  }\n\n  // public API to accumulate i18n-related content\n  appendBinding(binding: AST) { this.bindings.add(binding); }\n  appendIcu(name: string, ref: o.Expression) {\n    updatePlaceholderMap(this._registry.icus, name, ref);\n  }\n  appendBoundText(node: i18n.AST) {\n    const phs = assembleBoundTextPlaceholders(node, this.bindings.size, this.id);\n    phs.forEach((values, key) => updatePlaceholderMap(this.placeholders, key, ...values));\n  }\n  appendTemplate(node: i18n.AST, index: number) {\n    // add open and close tags at the same time,\n    // since we process nested templates separately\n    this.appendTag(TagType.TEMPLATE, node as i18n.TagPlaceholder, index, false);\n    this.appendTag(TagType.TEMPLATE, node as i18n.TagPlaceholder, index, true);\n    this._unresolvedCtxCount++;\n  }\n  appendElement(node: i18n.AST, index: number, closed?: boolean) {\n    this.appendTag(TagType.ELEMENT, node as i18n.TagPlaceholder, index, closed);\n  }\n  appendProjection(node: i18n.AST, index: number) {\n    // add open and close tags at the same time,\n    // since we process projected content separately\n    this.appendTag(TagType.PROJECTION, node as i18n.TagPlaceholder, index, false);\n    this.appendTag(TagType.PROJECTION, node as i18n.TagPlaceholder, index, true);\n  }\n\n  /**\n   * Generates an instance of a child context based on the root one,\n   * when we enter a nested template within I18n section.\n   *\n   * @param index Instruction index of corresponding i18nStart, which initiates this context\n   * @param templateIndex Instruction index of a template which this context belongs to\n   * @param meta Meta information (id, meaning, description, etc) associated with this context\n   *\n   * @returns I18nContext instance\n   */\n  forkChildContext(index: number, templateIndex: number, meta: i18n.AST) {\n    return new I18nContext(index, this.ref, this.level + 1, templateIndex, meta, this._registry);\n  }\n\n  /**\n   * Reconciles child context into parent one once the end of the i18n block is reached (i18nEnd).\n   *\n   * @param context Child I18nContext instance to be reconciled with parent context.\n   */\n  reconcileChildContext(context: I18nContext) {\n    // set the right context id for open and close\n    // template tags, so we can use it as sub-block ids\n    ['start', 'close'].forEach((op: string) => {\n      const key = (context.meta as any)[`${op}Name`];\n      const phs = this.placeholders.get(key) || [];\n      const tag = phs.find(findTemplateFn(this.id, context.templateIndex));\n      if (tag) {\n        tag.ctx = context.id;\n      }\n    });\n\n    // reconcile placeholders\n    const childPhs = context.placeholders;\n    childPhs.forEach((values: any[], key: string) => {\n      const phs = this.placeholders.get(key);\n      if (!phs) {\n        this.placeholders.set(key, values);\n        return;\n      }\n      // try to find matching template...\n      const tmplIdx = findIndex(phs, findTemplateFn(context.id, context.templateIndex));\n      if (tmplIdx >= 0) {\n        // ... if found - replace it with nested template content\n        const isCloseTag = key.startsWith('CLOSE');\n        const isTemplateTag = key.endsWith('NG-TEMPLATE');\n        if (isTemplateTag) {\n          // current template's content is placed before or after\n          // parent template tag, depending on the open/close atrribute\n          phs.splice(tmplIdx + (isCloseTag ? 0 : 1), 0, ...values);\n        } else {\n          const idx = isCloseTag ? values.length - 1 : 0;\n          values[idx].tmpl = phs[tmplIdx];\n          phs.splice(tmplIdx, 1, ...values);\n        }\n      } else {\n        // ... otherwise just append content to placeholder value\n        phs.push(...values);\n      }\n      this.placeholders.set(key, phs);\n    });\n    this._unresolvedCtxCount--;\n  }\n}\n\n//\n// Helper methods\n//\n\nfunction wrap(symbol: string, index: number, contextId: number, closed?: boolean): string {\n  const state = closed ? '/' : '';\n  return wrapI18nPlaceholder(`${state}${symbol}${index}`, contextId);\n}\n\nfunction wrapTag(symbol: string, {index, ctx, isVoid}: any, closed?: boolean): string {\n  return isVoid ? wrap(symbol, index, ctx) + wrap(symbol, index, ctx, true) :\n                  wrap(symbol, index, ctx, closed);\n}\n\nfunction findTemplateFn(ctx: number, templateIndex: number | null) {\n  return (token: any) => typeof token === 'object' && token.type === TagType.TEMPLATE &&\n      token.index === templateIndex && token.ctx === ctx;\n}\n\nfunction serializePlaceholderValue(value: any): string {\n  const element = (data: any, closed?: boolean) => wrapTag('#', data, closed);\n  const template = (data: any, closed?: boolean) => wrapTag('*', data, closed);\n  const projection = (data: any, closed?: boolean) => wrapTag('!', data, closed);\n\n  switch (value.type) {\n    case TagType.ELEMENT:\n      // close element tag\n      if (value.closed) {\n        return element(value, true) + (value.tmpl ? template(value.tmpl, true) : '');\n      }\n      // open element tag that also initiates a template\n      if (value.tmpl) {\n        return template(value.tmpl) + element(value) +\n            (value.isVoid ? template(value.tmpl, true) : '');\n      }\n      return element(value);\n\n    case TagType.TEMPLATE:\n      return template(value, value.closed);\n\n    case TagType.PROJECTION:\n      return projection(value, value.closed);\n\n    default:\n      return value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst TAG_TO_PLACEHOLDER_NAMES: {[k: string]: string} = {\n  'A': 'LINK',\n  'B': 'BOLD_TEXT',\n  'BR': 'LINE_BREAK',\n  'EM': 'EMPHASISED_TEXT',\n  'H1': 'HEADING_LEVEL1',\n  'H2': 'HEADING_LEVEL2',\n  'H3': 'HEADING_LEVEL3',\n  'H4': 'HEADING_LEVEL4',\n  'H5': 'HEADING_LEVEL5',\n  'H6': 'HEADING_LEVEL6',\n  'HR': 'HORIZONTAL_RULE',\n  'I': 'ITALIC_TEXT',\n  'LI': 'LIST_ITEM',\n  'LINK': 'MEDIA_LINK',\n  'OL': 'ORDERED_LIST',\n  'P': 'PARAGRAPH',\n  'Q': 'QUOTATION',\n  'S': 'STRIKETHROUGH_TEXT',\n  'SMALL': 'SMALL_TEXT',\n  'SUB': 'SUBSTRIPT',\n  'SUP': 'SUPERSCRIPT',\n  'TBODY': 'TABLE_BODY',\n  'TD': 'TABLE_CELL',\n  'TFOOT': 'TABLE_FOOTER',\n  'TH': 'TABLE_HEADER_CELL',\n  'THEAD': 'TABLE_HEADER',\n  'TR': 'TABLE_ROW',\n  'TT': 'MONOSPACED_TEXT',\n  'U': 'UNDERLINED_TEXT',\n  'UL': 'UNORDERED_LIST',\n};\n\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nexport class PlaceholderRegistry {\n  // Count the occurrence of the base name top generate a unique name\n  private _placeHolderNameCounts: {[k: string]: number} = {};\n  // Maps signature to placeholder names\n  private _signatureToName: {[k: string]: string} = {};\n\n  getStartTagPlaceholderName(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const signature = this._hashTag(tag, attrs, isVoid);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const upperTag = tag.toUpperCase();\n    const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const name = this._generateUniqueName(isVoid ? baseName : `START_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n\n  getCloseTagPlaceholderName(tag: string): string {\n    const signature = this._hashClosingTag(tag);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const upperTag = tag.toUpperCase();\n    const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const name = this._generateUniqueName(`CLOSE_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n\n  getPlaceholderName(name: string, content: string): string {\n    const upperName = name.toUpperCase();\n    const signature = `PH: ${upperName}=${content}`;\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const uniqueName = this._generateUniqueName(upperName);\n    this._signatureToName[signature] = uniqueName;\n\n    return uniqueName;\n  }\n\n  getUniquePlaceholder(name: string): string {\n    return this._generateUniqueName(name.toUpperCase());\n  }\n\n  // Generate a hash for a tag - does not take attribute order into account\n  private _hashTag(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const start = `<${tag}`;\n    const strAttrs = Object.keys(attrs).sort().map((name) => ` ${name}=${attrs[name]}`).join('');\n    const end = isVoid ? '/>' : `></${tag}>`;\n\n    return start + strAttrs + end;\n  }\n\n  private _hashClosingTag(tag: string): string { return this._hashTag(`/${tag}`, {}, false); }\n\n  private _generateUniqueName(base: string): string {\n    const seen = this._placeHolderNameCounts.hasOwnProperty(base);\n    if (!seen) {\n      this._placeHolderNameCounts[base] = 1;\n      return base;\n    }\n\n    const id = this._placeHolderNameCounts[base];\n    this._placeHolderNameCounts[base] = id + 1;\n    return `${base}_${id}`;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Lexer as ExpressionLexer} from '../expression_parser/lexer';\nimport {Parser as ExpressionParser} from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport {getHtmlTagDefinition} from '../ml_parser/html_tags';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseSourceSpan} from '../parse_util';\n\nimport * as i18n from './i18n_ast';\nimport {PlaceholderRegistry} from './serializers/placeholder';\n\nconst _expParser = new ExpressionParser(new ExpressionLexer());\n\ntype VisitNodeFn = (html: html.Node, i18n: i18n.Node) => void;\n\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n */\nexport function createI18nMessageFactory(interpolationConfig: InterpolationConfig): (\n    nodes: html.Node[], meaning: string, description: string, id: string,\n    visitNodeFn?: VisitNodeFn) => i18n.Message {\n  const visitor = new _I18nVisitor(_expParser, interpolationConfig);\n\n  return (nodes: html.Node[], meaning: string, description: string, id: string,\n          visitNodeFn?: VisitNodeFn) =>\n             visitor.toI18nMessage(nodes, meaning, description, id, visitNodeFn);\n}\n\nclass _I18nVisitor implements html.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _isIcu !: boolean;\n  // TODO(issue/24571): remove '!'.\n  private _icuDepth !: number;\n  // TODO(issue/24571): remove '!'.\n  private _placeholderRegistry !: PlaceholderRegistry;\n  // TODO(issue/24571): remove '!'.\n  private _placeholderToContent !: {[phName: string]: string};\n  // TODO(issue/24571): remove '!'.\n  private _placeholderToMessage !: {[phName: string]: i18n.Message};\n  private _visitNodeFn: VisitNodeFn|undefined;\n\n  constructor(\n      private _expressionParser: ExpressionParser,\n      private _interpolationConfig: InterpolationConfig) {}\n\n  public toI18nMessage(\n      nodes: html.Node[], meaning: string, description: string, id: string,\n      visitNodeFn?: VisitNodeFn): i18n.Message {\n    this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n    this._icuDepth = 0;\n    this._placeholderRegistry = new PlaceholderRegistry();\n    this._placeholderToContent = {};\n    this._placeholderToMessage = {};\n    this._visitNodeFn = visitNodeFn;\n\n    const i18nodes: i18n.Node[] = html.visitAll(this, nodes, {});\n\n    return new i18n.Message(\n        i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n  }\n\n  private _visitNode(html: html.Node, i18n: i18n.Node): i18n.Node {\n    if (this._visitNodeFn) {\n      this._visitNodeFn(html, i18n);\n    }\n    return i18n;\n  }\n\n  visitElement(el: html.Element, context: any): i18n.Node {\n    const children = html.visitAll(this, el.children);\n    const attrs: {[k: string]: string} = {};\n    el.attrs.forEach(attr => {\n      // Do not visit the attributes, translatable ones are top-level ASTs\n      attrs[attr.name] = attr.value;\n    });\n\n    const isVoid: boolean = getHtmlTagDefinition(el.name).isVoid;\n    const startPhName =\n        this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n    this._placeholderToContent[startPhName] = el.sourceSpan !.toString();\n\n    let closePhName = '';\n\n    if (!isVoid) {\n      closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n      this._placeholderToContent[closePhName] = `</${el.name}>`;\n    }\n\n    const node = new i18n.TagPlaceholder(\n        el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan !);\n    return this._visitNode(el, node);\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): i18n.Node {\n    const node = this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    return this._visitNode(attribute, node);\n  }\n\n  visitText(text: html.Text, context: any): i18n.Node {\n    const node = this._visitTextWithInterpolation(text.value, text.sourceSpan !);\n    return this._visitNode(text, node);\n  }\n\n  visitComment(comment: html.Comment, context: any): i18n.Node|null { return null; }\n\n  visitExpansion(icu: html.Expansion, context: any): i18n.Node {\n    this._icuDepth++;\n    const i18nIcuCases: {[k: string]: i18n.Node} = {};\n    const i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n    icu.cases.forEach((caze): void => {\n      i18nIcuCases[caze.value] = new i18n.Container(\n          caze.expression.map((node) => node.visit(this, {})), caze.expSourceSpan);\n    });\n    this._icuDepth--;\n\n    if (this._isIcu || this._icuDepth > 0) {\n      // Returns an ICU node when:\n      // - the message (vs a part of the message) is an ICU message, or\n      // - the ICU message is nested.\n      const expPh = this._placeholderRegistry.getUniquePlaceholder(`VAR_${icu.type}`);\n      i18nIcu.expressionPlaceholder = expPh;\n      this._placeholderToContent[expPh] = icu.switchValue;\n      return this._visitNode(icu, i18nIcu);\n    }\n\n    // Else returns a placeholder\n    // ICU placeholders should not be replaced with their original content but with the their\n    // translations. We need to create a new visitor (they are not re-entrant) to compute the\n    // message id.\n    // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n    const phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n    const visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n    this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n    const node = new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    return this._visitNode(icu, node);\n  }\n\n  visitExpansionCase(icuCase: html.ExpansionCase, context: any): i18n.Node {\n    throw new Error('Unreachable code');\n  }\n\n  private _visitTextWithInterpolation(text: string, sourceSpan: ParseSourceSpan): i18n.Node {\n    const splitInterpolation = this._expressionParser.splitInterpolation(\n        text, sourceSpan.start.toString(), this._interpolationConfig);\n\n    if (!splitInterpolation) {\n      // No expression, return a single text\n      return new i18n.Text(text, sourceSpan);\n    }\n\n    // Return a group of text + expressions\n    const nodes: i18n.Node[] = [];\n    const container = new i18n.Container(nodes, sourceSpan);\n    const {start: sDelimiter, end: eDelimiter} = this._interpolationConfig;\n\n    for (let i = 0; i < splitInterpolation.strings.length - 1; i++) {\n      const expression = splitInterpolation.expressions[i];\n      const baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n      const phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n\n      if (splitInterpolation.strings[i].length) {\n        // No need to add empty strings\n        nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n      }\n\n      nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n      this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n    }\n\n    // The last index contains no expression\n    const lastStringIdx = splitInterpolation.strings.length - 1;\n    if (splitInterpolation.strings[lastStringIdx].length) {\n      nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n    }\n    return container;\n  }\n}\n\nconst _CUSTOM_PH_EXP =\n    /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n\nfunction _extractPlaceholderName(input: string): string {\n  return input.split(_CUSTOM_PH_EXP)[2];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../../../i18n/digest';\nimport * as i18n from '../../../i18n/i18n_ast';\nimport {createI18nMessageFactory} from '../../../i18n/i18n_parser';\nimport * as html from '../../../ml_parser/ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../../../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../../../ml_parser/parser';\n\nimport {I18N_ATTR, I18N_ATTR_PREFIX, I18nMeta, hasI18nAttrs, icuFromI18nMessage, metaFromI18nMessage, parseI18nMeta} from './util';\n\nfunction setI18nRefs(html: html.Node & {i18n?: i18n.AST}, i18n: i18n.Node) {\n  html.i18n = i18n;\n}\n\n/**\n * This visitor walks over HTML parse tree and converts information stored in\n * i18n-related attributes (\"i18n\" and \"i18n-*\") into i18n meta object that is\n * stored with other element's and attribute's information.\n */\nexport class I18nMetaVisitor implements html.Visitor {\n  private _createI18nMessage: any;\n\n  constructor(\n      private interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG,\n      private keepI18nAttrs: boolean = false) {\n    // i18n message generation factory\n    this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n  }\n\n  private _generateI18nMessage(\n      nodes: html.Node[], meta: string|i18n.AST = '',\n      visitNodeFn?: (html: html.Node, i18n: i18n.Node) => void): i18n.Message {\n    const parsed: I18nMeta =\n        typeof meta === 'string' ? parseI18nMeta(meta) : metaFromI18nMessage(meta as i18n.Message);\n    const message = this._createI18nMessage(\n        nodes, parsed.meaning || '', parsed.description || '', parsed.id || '', visitNodeFn);\n    if (!message.id) {\n      // generate (or restore) message id if not specified in template\n      message.id = typeof meta !== 'string' && (meta as i18n.Message).id || decimalDigest(message);\n    }\n    return message;\n  }\n\n  visitElement(element: html.Element, context: any): any {\n    if (hasI18nAttrs(element)) {\n      const attrs: html.Attribute[] = [];\n      const attrsMeta: {[key: string]: string} = {};\n\n      for (const attr of element.attrs) {\n        if (attr.name === I18N_ATTR) {\n          // root 'i18n' node attribute\n          const i18n = element.i18n || attr.value;\n          const message = this._generateI18nMessage(element.children, i18n, setI18nRefs);\n          // do not assign empty i18n meta\n          if (message.nodes.length) {\n            element.i18n = message;\n          }\n\n        } else if (attr.name.startsWith(I18N_ATTR_PREFIX)) {\n          // 'i18n-*' attributes\n          const key = attr.name.slice(I18N_ATTR_PREFIX.length);\n          attrsMeta[key] = attr.value;\n\n        } else {\n          // non-i18n attributes\n          attrs.push(attr);\n        }\n      }\n\n      // set i18n meta for attributes\n      if (Object.keys(attrsMeta).length) {\n        for (const attr of attrs) {\n          const meta = attrsMeta[attr.name];\n          // do not create translation for empty attributes\n          if (meta !== undefined && attr.value) {\n            attr.i18n = this._generateI18nMessage([attr], attr.i18n || meta);\n          }\n        }\n      }\n\n      if (!this.keepI18nAttrs) {\n        // update element's attributes,\n        // keeping only non-i18n related ones\n        element.attrs = attrs;\n      }\n    }\n    html.visitAll(this, element.children);\n    return element;\n  }\n\n  visitExpansion(expansion: html.Expansion, context: any): any {\n    let message;\n    const meta = expansion.i18n;\n    if (meta instanceof i18n.IcuPlaceholder) {\n      // set ICU placeholder name (e.g. \"ICU_1\"),\n      // generated while processing root element contents,\n      // so we can reference it when we output translation\n      const name = meta.name;\n      message = this._generateI18nMessage([expansion], meta);\n      const icu = icuFromI18nMessage(message);\n      icu.name = name;\n    } else {\n      // when ICU is a root level translation\n      message = this._generateI18nMessage([expansion], meta);\n    }\n    expansion.i18n = message;\n    return expansion;\n  }\n\n  visitText(text: html.Text, context: any): any { return text; }\n  visitAttribute(attribute: html.Attribute, context: any): any { return attribute; }\n  visitComment(comment: html.Comment, context: any): any { return comment; }\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\n\nexport function processI18nMeta(\n    htmlAstWithErrors: ParseTreeResult,\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n  return new ParseTreeResult(\n      html.visitAll(\n          new I18nMetaVisitor(interpolationConfig, /* keepI18nAttrs */ false),\n          htmlAstWithErrors.rootNodes),\n      htmlAstWithErrors.errors);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as i18n from '../../../i18n/i18n_ast';\n\nimport {formatI18nPlaceholderName} from './util';\n\n/**\n * This visitor walks over i18n tree and generates its string representation, including ICUs and\n * placeholders in `{$placeholder}` (for plain messages) or `{PLACEHOLDER}` (inside ICUs) format.\n */\nclass SerializerVisitor implements i18n.Visitor {\n  /**\n   * Keeps track of ICU nesting level, allowing to detect that we are processing elements of an ICU.\n   *\n   * This is needed due to the fact that placeholders in ICUs and in other messages are represented\n   * differently in Closure:\n   * - {$placeholder} in non-ICU case\n   * - {PLACEHOLDER} inside ICU\n   */\n  private icuNestingLevel = 0;\n\n  private formatPh(value: string): string {\n    const isInsideIcu = this.icuNestingLevel > 0;\n    const formatted = formatI18nPlaceholderName(value, /* useCamelCase */ !isInsideIcu);\n    return isInsideIcu ? `{${formatted}}` : `{$${formatted}}`;\n  }\n\n  visitText(text: i18n.Text, context: any): any { return text.value; }\n\n  visitContainer(container: i18n.Container, context: any): any {\n    return container.children.map(child => child.visit(this)).join('');\n  }\n\n  visitIcu(icu: i18n.Icu, context: any): any {\n    this.icuNestingLevel++;\n    const strCases =\n        Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    const result = `{${icu.expressionPlaceholder}, ${icu.type}, ${strCases.join(' ')}}`;\n    this.icuNestingLevel--;\n    return result;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context: any): any {\n    return ph.isVoid ?\n        this.formatPh(ph.startName) :\n        `${this.formatPh(ph.startName)}${ph.children.map(child => child.visit(this)).join('')}${this.formatPh(ph.closeName)}`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context: any): any { return this.formatPh(ph.name); }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return this.formatPh(ph.name);\n  }\n}\n\nconst serializerVisitor = new SerializerVisitor();\n\nexport function getSerializedI18nContent(message: i18n.Message): string {\n  return message.nodes.map(node => node.visit(serializerVisitor, null)).join('');\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {flatten, sanitizeIdentifier} from '../../compile_metadata';\nimport {BindingForm, BuiltinFunctionCall, LocalResolver, convertActionBinding, convertPropertyBinding, convertUpdateArguments} from '../../compiler_util/expression_converter';\nimport {ConstantPool} from '../../constant_pool';\nimport * as core from '../../core';\nimport {AST, AstMemoryEfficientTransformer, BindingPipe, BindingType, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralMap, LiteralPrimitive, ParsedEventType, PropertyRead} from '../../expression_parser/ast';\nimport {Lexer} from '../../expression_parser/lexer';\nimport {Parser} from '../../expression_parser/parser';\nimport * as i18n from '../../i18n/i18n_ast';\nimport * as html from '../../ml_parser/ast';\nimport {HtmlParser} from '../../ml_parser/html_parser';\nimport {WhitespaceVisitor} from '../../ml_parser/html_whitespaces';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../../ml_parser/interpolation_config';\nimport {LexerRange} from '../../ml_parser/lexer';\nimport {isNgContainer as checkIsNgContainer, splitNsName} from '../../ml_parser/tags';\nimport {mapLiteral} from '../../output/map_util';\nimport * as o from '../../output/output_ast';\nimport {ParseError, ParseSourceSpan} from '../../parse_util';\nimport {DomElementSchemaRegistry} from '../../schema/dom_element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {error} from '../../util';\nimport * as t from '../r3_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {htmlAstToRender3Ast} from '../r3_template_transform';\nimport {prepareSyntheticListenerFunctionName, prepareSyntheticListenerName, prepareSyntheticPropertyName} from '../util';\n\nimport {I18nContext} from './i18n/context';\nimport {I18nMetaVisitor} from './i18n/meta';\nimport {getSerializedI18nContent} from './i18n/serializer';\nimport {I18N_ICU_MAPPING_PREFIX, TRANSLATION_PREFIX, assembleBoundTextPlaceholders, assembleI18nBoundString, formatI18nPlaceholderName, getTranslationConstPrefix, getTranslationDeclStmts, icuFromI18nMessage, isI18nRootNode, isSingleI18nIcu, metaFromI18nMessage, placeholdersToParams, wrapI18nPlaceholder} from './i18n/util';\nimport {StylingBuilder, StylingInstruction} from './styling_builder';\nimport {CONTEXT_NAME, IMPLICIT_REFERENCE, NON_BINDABLE_ATTR, REFERENCE_PREFIX, RENDER_FLAGS, asLiteral, chainedInstruction, getAttrsForDirectiveMatching, getInterpolationArgsLength, invalid, trimTrailingNulls, unsupported} from './util';\n\n\n\n// Selector attribute name of `<ng-content>`\nconst NG_CONTENT_SELECT_ATTR = 'select';\n\n// Attribute name of `ngProjectAs`.\nconst NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n// List of supported global targets for event listeners\nconst GLOBAL_TARGET_RESOLVERS = new Map<string, o.ExternalReference>(\n    [['window', R3.resolveWindow], ['document', R3.resolveDocument], ['body', R3.resolveBody]]);\n\nconst LEADING_TRIVIA_CHARS = [' ', '\\n', '\\r', '\\t'];\n\n//  if (rf & flags) { .. }\nexport function renderFlagCheckIfStmt(\n    flags: core.RenderFlags, statements: o.Statement[]): o.IfStmt {\n  return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\n\nexport function prepareEventListenerParameters(\n    eventAst: t.BoundEvent, handlerName: string | null = null,\n    scope: BindingScope | null = null): o.Expression[] {\n  const {type, name, target, phase, handler} = eventAst;\n  if (target && !GLOBAL_TARGET_RESOLVERS.has(target)) {\n    throw new Error(`Unexpected global target '${target}' defined for '${name}' event.\n        Supported list of global targets: ${Array.from(GLOBAL_TARGET_RESOLVERS.keys())}.`);\n  }\n\n  const implicitReceiverExpr = (scope === null || scope.bindingLevel === 0) ?\n      o.variable(CONTEXT_NAME) :\n      scope.getOrCreateSharedContextVar(0);\n  const bindingExpr = convertActionBinding(\n      scope, implicitReceiverExpr, handler, 'b', () => error('Unexpected interpolation'),\n      eventAst.handlerSpan);\n\n  const statements = [];\n  if (scope) {\n    statements.push(...scope.restoreViewStatement());\n    statements.push(...scope.variableDeclarations());\n  }\n  statements.push(...bindingExpr.render3Stmts);\n\n  const eventName: string =\n      type === ParsedEventType.Animation ? prepareSyntheticListenerName(name, phase !) : name;\n  const fnName = handlerName && sanitizeIdentifier(handlerName);\n  const fnArgs = [new o.FnParam('$event', o.DYNAMIC_TYPE)];\n  const handlerFn = o.fn(fnArgs, statements, o.INFERRED_TYPE, null, fnName);\n\n  const params: o.Expression[] = [o.literal(eventName), handlerFn];\n  if (target) {\n    params.push(\n        o.literal(false),  // `useCapture` flag, defaults to `false`\n        o.importExpr(GLOBAL_TARGET_RESOLVERS.get(target) !));\n  }\n  return params;\n}\n\nexport class TemplateDefinitionBuilder implements t.Visitor<void>, LocalResolver {\n  private _dataIndex = 0;\n  private _bindingContext = 0;\n  private _prefixCode: o.Statement[] = [];\n  /**\n   * List of callbacks to generate creation mode instructions. We store them here as we process\n   * the template so bindings in listeners are resolved only once all nodes have been visited.\n   * This ensures all local refs and context variables are available for matching.\n   */\n  private _creationCodeFns: (() => o.Statement)[] = [];\n  /**\n   * List of callbacks to generate update mode instructions. We store them here as we process\n   * the template so bindings are resolved only once all nodes have been visited. This ensures\n   * all local refs and context variables are available for matching.\n   */\n  private _updateCodeFns: (() => o.Statement)[] = [];\n  /**\n   * Memorizes the last node index for which a select instruction has been generated.\n   * We're initializing this to -1 to ensure the `select(0)` instruction is generated before any\n   * relevant update instructions.\n   */\n  private _lastNodeIndexWithFlush: number = -1;\n  /** Temporary variable declarations generated from visiting pipes, literals, etc. */\n  private _tempVariables: o.Statement[] = [];\n  /**\n   * List of callbacks to build nested templates. Nested templates must not be visited until\n   * after the parent template has finished visiting all of its nodes. This ensures that all\n   * local ref bindings in nested templates are able to find local ref values if the refs\n   * are defined after the template declaration.\n   */\n  private _nestedTemplateFns: (() => void)[] = [];\n  /**\n   * This scope contains local variables declared in the update mode block of the template.\n   * (e.g. refs and context vars in bindings)\n   */\n  private _bindingScope: BindingScope;\n  private _valueConverter: ValueConverter;\n  private _unsupported = unsupported;\n\n  // i18n context local to this template\n  private i18n: I18nContext|null = null;\n\n  // Number of slots to reserve for pureFunctions\n  private _pureFunctionSlots = 0;\n\n  // Number of binding slots\n  private _bindingSlots = 0;\n\n  private fileBasedI18nSuffix: string;\n\n  // Projection slots found in the template. Projection slots can distribute projected\n  // nodes based on a selector, or can just use the wildcard selector to match\n  // all nodes which aren't matching any selector.\n  private _ngContentReservedSlots: (string|'*')[] = [];\n\n  // Number of non-default selectors found in all parent templates of this template. We need to\n  // track it to properly adjust projection slot index in the `projection` instruction.\n  private _ngContentSelectorsOffset = 0;\n\n  // Expression that should be used as implicit receiver when converting template\n  // expressions to output AST.\n  private _implicitReceiverExpr: o.ReadVarExpr|null = null;\n\n  constructor(\n      private constantPool: ConstantPool, parentBindingScope: BindingScope, private level = 0,\n      private contextName: string|null, private i18nContext: I18nContext|null,\n      private templateIndex: number|null, private templateName: string|null,\n      private directiveMatcher: SelectorMatcher|null, private directives: Set<o.Expression>,\n      private pipeTypeByName: Map<string, o.Expression>, private pipes: Set<o.Expression>,\n      private _namespace: o.ExternalReference, private relativeContextFilePath: string,\n      private i18nUseExternalIds: boolean) {\n    this._bindingScope = parentBindingScope.nestedScope(level);\n\n    // Turn the relative context file path into an identifier by replacing non-alphanumeric\n    // characters with underscores.\n    this.fileBasedI18nSuffix = relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_') + '_';\n\n    this._valueConverter = new ValueConverter(\n        constantPool, () => this.allocateDataSlot(),\n        (numSlots: number) => this.allocatePureFunctionSlots(numSlots),\n        (name, localName, slot, value: o.Expression) => {\n          const pipeType = pipeTypeByName.get(name);\n          if (pipeType) {\n            this.pipes.add(pipeType);\n          }\n          this._bindingScope.set(this.level, localName, value);\n          this.creationInstruction(null, R3.pipe, [o.literal(slot), o.literal(name)]);\n        });\n  }\n\n  registerContextVariables(variable: t.Variable) {\n    const scopedName = this._bindingScope.freshReferenceName();\n    const retrievalLevel = this.level;\n    const lhs = o.variable(variable.name + scopedName);\n    this._bindingScope.set(\n        retrievalLevel, variable.name, lhs, DeclarationPriority.CONTEXT,\n        (scope: BindingScope, relativeLevel: number) => {\n          let rhs: o.Expression;\n          if (scope.bindingLevel === retrievalLevel) {\n            // e.g. ctx\n            rhs = o.variable(CONTEXT_NAME);\n          } else {\n            const sharedCtxVar = scope.getSharedContextName(retrievalLevel);\n            // e.g. ctx_r0   OR  x(2);\n            rhs = sharedCtxVar ? sharedCtxVar : generateNextContextExpr(relativeLevel);\n          }\n          // e.g. const $item$ = x(2).$implicit;\n          return [lhs.set(rhs.prop(variable.value || IMPLICIT_REFERENCE)).toConstDecl()];\n        });\n  }\n\n  buildTemplateFunction(\n      nodes: t.Node[], variables: t.Variable[], ngContentSelectorsOffset: number = 0,\n      i18n?: i18n.AST): o.FunctionExpr {\n    this._ngContentSelectorsOffset = ngContentSelectorsOffset;\n\n    if (this._namespace !== R3.namespaceHTML) {\n      this.creationInstruction(null, this._namespace);\n    }\n\n    // Create variable bindings\n    variables.forEach(v => this.registerContextVariables(v));\n\n    // Initiate i18n context in case:\n    // - this template has parent i18n context\n    // - or the template has i18n meta associated with it,\n    //   but it's not initiated by the Element (e.g. <ng-template i18n>)\n    const initI18nContext =\n        this.i18nContext || (isI18nRootNode(i18n) && !isSingleI18nIcu(i18n) &&\n                             !(isSingleElementTemplate(nodes) && nodes[0].i18n === i18n));\n    const selfClosingI18nInstruction = hasTextChildrenOnly(nodes);\n    if (initI18nContext) {\n      this.i18nStart(null, i18n !, selfClosingI18nInstruction);\n    }\n\n    // This is the initial pass through the nodes of this template. In this pass, we\n    // queue all creation mode and update mode instructions for generation in the second\n    // pass. It's necessary to separate the passes to ensure local refs are defined before\n    // resolving bindings. We also count bindings in this pass as we walk bound expressions.\n    t.visitAll(this, nodes);\n\n    // Add total binding count to pure function count so pure function instructions are\n    // generated with the correct slot offset when update instructions are processed.\n    this._pureFunctionSlots += this._bindingSlots;\n\n    // Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and\n    // `pipeBind` update instructions), so we have to update the slot offsets manually\n    // to account for bindings.\n    this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);\n\n    // Nested templates must be processed before creation instructions so template()\n    // instructions can be generated with the correct internal const count.\n    this._nestedTemplateFns.forEach(buildTemplateFn => buildTemplateFn());\n\n    // Output the `projectionDef` instruction when some `<ng-content>` tags are present.\n    // The `projectionDef` instruction is only emitted for the component template and\n    // is skipped for nested templates (<ng-template> tags).\n    if (this.level === 0 && this._ngContentReservedSlots.length) {\n      const parameters: o.Expression[] = [];\n\n      // By default the `projectionDef` instructions creates one slot for the wildcard\n      // selector if no parameters are passed. Therefore we only want to allocate a new\n      // array for the projection slots if the default projection slot is not sufficient.\n      if (this._ngContentReservedSlots.length > 1 || this._ngContentReservedSlots[0] !== '*') {\n        const r3ReservedSlots = this._ngContentReservedSlots.map(\n            s => s !== '*' ? core.parseSelectorToR3Selector(s) : s);\n        parameters.push(this.constantPool.getConstLiteral(asLiteral(r3ReservedSlots), true));\n      }\n\n      // Since we accumulate ngContent selectors while processing template elements,\n      // we *prepend* `projectionDef` to creation instructions block, to put it before\n      // any `projection` instructions\n      this.creationInstruction(null, R3.projectionDef, parameters, /* prepend */ true);\n    }\n\n    if (initI18nContext) {\n      this.i18nEnd(null, selfClosingI18nInstruction);\n    }\n\n    // Generate all the creation mode instructions (e.g. resolve bindings in listeners)\n    const creationStatements = this._creationCodeFns.map((fn: () => o.Statement) => fn());\n\n    // Generate all the update mode instructions (e.g. resolve property or text bindings)\n    const updateStatements = this._updateCodeFns.map((fn: () => o.Statement) => fn());\n\n    //  Variable declaration must occur after binding resolution so we can generate context\n    //  instructions that build on each other.\n    // e.g. const b = nextContext().$implicit(); const b = nextContext();\n    const creationVariables = this._bindingScope.viewSnapshotStatements();\n    const updateVariables = this._bindingScope.variableDeclarations().concat(this._tempVariables);\n\n    const creationBlock = creationStatements.length > 0 ?\n        [renderFlagCheckIfStmt(\n            core.RenderFlags.Create, creationVariables.concat(creationStatements))] :\n        [];\n\n    const updateBlock = updateStatements.length > 0 ?\n        [renderFlagCheckIfStmt(core.RenderFlags.Update, updateVariables.concat(updateStatements))] :\n        [];\n\n    return o.fn(\n        // i.e. (rf: RenderFlags, ctx: any)\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)],\n        [\n          // Temporary variable declarations for query refresh (i.e. let _t: any;)\n          ...this._prefixCode,\n          // Creating mode (i.e. if (rf & RenderFlags.Create) { ... })\n          ...creationBlock,\n          // Binding and refresh mode (i.e. if (rf & RenderFlags.Update) {...})\n          ...updateBlock,\n        ],\n        o.INFERRED_TYPE, null, this.templateName);\n  }\n\n  // LocalResolver\n  getLocal(name: string): o.Expression|null { return this._bindingScope.get(name); }\n\n  // LocalResolver\n  notifyImplicitReceiverUse(): void { this._bindingScope.notifyImplicitReceiverUse(); }\n\n  i18nTranslate(\n      message: i18n.Message, params: {[name: string]: o.Expression} = {}, ref?: o.ReadVarExpr,\n      transformFn?: (raw: o.ReadVarExpr) => o.Expression): o.ReadVarExpr {\n    const _ref = ref || o.variable(this.constantPool.uniqueName(TRANSLATION_PREFIX));\n    // Closure Compiler requires const names to start with `MSG_` but disallows any other const to\n    // start with `MSG_`. We define a variable starting with `MSG_` just for the `goog.getMsg` call\n    const closureVar = this.i18nGenerateClosureVar(message.id);\n    const formattedParams = this.i18nFormatPlaceholderNames(params, /* useCamelCase */ true);\n    const meta = metaFromI18nMessage(message);\n    const content = getSerializedI18nContent(message);\n    const statements =\n        getTranslationDeclStmts(_ref, closureVar, content, meta, formattedParams, transformFn);\n    this.constantPool.statements.push(...statements);\n    return _ref;\n  }\n\n  i18nFormatPlaceholderNames(params: {[name: string]: o.Expression} = {}, useCamelCase: boolean) {\n    const _params: {[key: string]: o.Expression} = {};\n    if (params && Object.keys(params).length) {\n      Object.keys(params).forEach(\n          key => _params[formatI18nPlaceholderName(key, useCamelCase)] = params[key]);\n    }\n    return _params;\n  }\n\n  i18nAppendBindings(expressions: AST[]) {\n    if (expressions.length > 0) {\n      expressions.forEach(expression => this.i18n !.appendBinding(expression));\n    }\n  }\n\n  i18nBindProps(props: {[key: string]: t.Text | t.BoundText}): {[key: string]: o.Expression} {\n    const bound: {[key: string]: o.Expression} = {};\n    Object.keys(props).forEach(key => {\n      const prop = props[key];\n      if (prop instanceof t.Text) {\n        bound[key] = o.literal(prop.value);\n      } else {\n        const value = prop.value.visit(this._valueConverter);\n        this.allocateBindingSlots(value);\n        if (value instanceof Interpolation) {\n          const {strings, expressions} = value;\n          const {id, bindings} = this.i18n !;\n          const label = assembleI18nBoundString(strings, bindings.size, id);\n          this.i18nAppendBindings(expressions);\n          bound[key] = o.literal(label);\n        }\n      }\n    });\n    return bound;\n  }\n\n  i18nGenerateClosureVar(messageId: string): o.ReadVarExpr {\n    let name: string;\n    const suffix = this.fileBasedI18nSuffix.toUpperCase();\n    if (this.i18nUseExternalIds) {\n      const prefix = getTranslationConstPrefix(`EXTERNAL_`);\n      const uniqueSuffix = this.constantPool.uniqueName(suffix);\n      name = `${prefix}${sanitizeIdentifier(messageId)}$$${uniqueSuffix}`;\n    } else {\n      const prefix = getTranslationConstPrefix(suffix);\n      name = this.constantPool.uniqueName(prefix);\n    }\n    return o.variable(name);\n  }\n\n  i18nUpdateRef(context: I18nContext): void {\n    const {icus, meta, isRoot, isResolved, isEmitted} = context;\n    if (isRoot && isResolved && !isEmitted && !isSingleI18nIcu(meta)) {\n      context.isEmitted = true;\n      const placeholders = context.getSerializedPlaceholders();\n      let icuMapping: {[name: string]: o.Expression} = {};\n      let params: {[name: string]: o.Expression} =\n          placeholders.size ? placeholdersToParams(placeholders) : {};\n      if (icus.size) {\n        icus.forEach((refs: o.Expression[], key: string) => {\n          if (refs.length === 1) {\n            // if we have one ICU defined for a given\n            // placeholder - just output its reference\n            params[key] = refs[0];\n          } else {\n            // ... otherwise we need to activate post-processing\n            // to replace ICU placeholders with proper values\n            const placeholder: string = wrapI18nPlaceholder(`${I18N_ICU_MAPPING_PREFIX}${key}`);\n            params[key] = o.literal(placeholder);\n            icuMapping[key] = o.literalArr(refs);\n          }\n        });\n      }\n\n      // translation requires post processing in 2 cases:\n      // - if we have placeholders with multiple values (ex. `START_DIV`: [ï¿½#1ï¿½, ï¿½#2ï¿½, ...])\n      // - if we have multiple ICUs that refer to the same placeholder name\n      const needsPostprocessing =\n          Array.from(placeholders.values()).some((value: string[]) => value.length > 1) ||\n          Object.keys(icuMapping).length;\n\n      let transformFn;\n      if (needsPostprocessing) {\n        transformFn = (raw: o.ReadVarExpr) => {\n          const args: o.Expression[] = [raw];\n          if (Object.keys(icuMapping).length) {\n            args.push(mapLiteral(icuMapping, true));\n          }\n          return instruction(null, R3.i18nPostprocess, args);\n        };\n      }\n      this.i18nTranslate(meta as i18n.Message, params, context.ref, transformFn);\n    }\n  }\n\n  i18nStart(span: ParseSourceSpan|null = null, meta: i18n.AST, selfClosing?: boolean): void {\n    const index = this.allocateDataSlot();\n    if (this.i18nContext) {\n      this.i18n = this.i18nContext.forkChildContext(index, this.templateIndex !, meta);\n    } else {\n      const ref = o.variable(this.constantPool.uniqueName(TRANSLATION_PREFIX));\n      this.i18n = new I18nContext(index, ref, 0, this.templateIndex, meta);\n    }\n\n    // generate i18nStart instruction\n    const {id, ref} = this.i18n;\n    const params: o.Expression[] = [o.literal(index), ref];\n    if (id > 0) {\n      // do not push 3rd argument (sub-block id)\n      // into i18nStart call for top level i18n context\n      params.push(o.literal(id));\n    }\n    this.creationInstruction(span, selfClosing ? R3.i18n : R3.i18nStart, params);\n  }\n\n  i18nEnd(span: ParseSourceSpan|null = null, selfClosing?: boolean): void {\n    if (!this.i18n) {\n      throw new Error('i18nEnd is executed with no i18n context present');\n    }\n\n    if (this.i18nContext) {\n      this.i18nContext.reconcileChildContext(this.i18n);\n      this.i18nUpdateRef(this.i18nContext);\n    } else {\n      this.i18nUpdateRef(this.i18n);\n    }\n\n    // setup accumulated bindings\n    const {index, bindings} = this.i18n;\n    if (bindings.size) {\n      const chainBindings: ChainableBindingInstruction[] = [];\n      bindings.forEach(binding => {\n        chainBindings.push({sourceSpan: span, value: () => this.convertPropertyBinding(binding)});\n      });\n      this.updateInstructionChain(index, R3.i18nExp, chainBindings);\n      this.updateInstruction(index, span, R3.i18nApply, [o.literal(index)]);\n    }\n    if (!selfClosing) {\n      this.creationInstruction(span, R3.i18nEnd);\n    }\n    this.i18n = null;  // reset local i18n context\n  }\n\n  visitContent(ngContent: t.Content) {\n    const slot = this.allocateDataSlot();\n    const projectionSlotIdx = this._ngContentSelectorsOffset + this._ngContentReservedSlots.length;\n    const parameters: o.Expression[] = [o.literal(slot)];\n    const attributes: o.Expression[] = [];\n\n    this._ngContentReservedSlots.push(ngContent.selector);\n\n    ngContent.attributes.forEach((attribute) => {\n      const {name, value} = attribute;\n      if (name === NG_PROJECT_AS_ATTR_NAME) {\n        attributes.push(...getNgProjectAsLiteral(attribute));\n      } else if (name.toLowerCase() !== NG_CONTENT_SELECT_ATTR) {\n        attributes.push(o.literal(name), o.literal(value));\n      }\n    });\n\n    if (attributes.length > 0) {\n      parameters.push(o.literal(projectionSlotIdx), o.literalArr(attributes));\n    } else if (projectionSlotIdx !== 0) {\n      parameters.push(o.literal(projectionSlotIdx));\n    }\n\n    this.creationInstruction(ngContent.sourceSpan, R3.projection, parameters);\n    if (this.i18n) {\n      this.i18n.appendProjection(ngContent.i18n !, slot);\n    }\n  }\n\n\n  getNamespaceInstruction(namespaceKey: string|null) {\n    switch (namespaceKey) {\n      case 'math':\n        return R3.namespaceMathML;\n      case 'svg':\n        return R3.namespaceSVG;\n      default:\n        return R3.namespaceHTML;\n    }\n  }\n\n  addNamespaceInstruction(nsInstruction: o.ExternalReference, element: t.Element) {\n    this._namespace = nsInstruction;\n    this.creationInstruction(element.sourceSpan, nsInstruction);\n  }\n\n  visitElement(element: t.Element) {\n    const elementIndex = this.allocateDataSlot();\n    const stylingBuilder = new StylingBuilder(o.literal(elementIndex), null);\n\n    let isNonBindableMode: boolean = false;\n    const isI18nRootElement: boolean =\n        isI18nRootNode(element.i18n) && !isSingleI18nIcu(element.i18n);\n\n    if (isI18nRootElement && this.i18n) {\n      throw new Error(`Could not mark an element as translatable inside of a translatable section`);\n    }\n\n    const i18nAttrs: (t.TextAttribute | t.BoundAttribute)[] = [];\n    const outputAttrs: t.TextAttribute[] = [];\n\n    const [namespaceKey, elementName] = splitNsName(element.name);\n    const isNgContainer = checkIsNgContainer(element.name);\n\n    // Handle styling, i18n, ngNonBindable attributes\n    for (const attr of element.attributes) {\n      const {name, value} = attr;\n      if (name === NON_BINDABLE_ATTR) {\n        isNonBindableMode = true;\n      } else if (name === 'style') {\n        stylingBuilder.registerStyleAttr(value);\n      } else if (name === 'class') {\n        stylingBuilder.registerClassAttr(value);\n      } else {\n        if (attr.i18n) {\n          // Place attributes into a separate array for i18n processing, but also keep such\n          // attributes in the main list to make them available for directive matching at runtime.\n          // TODO(FW-1248): prevent attributes duplication in `i18nAttributes` and `elementStart`\n          // arguments\n          i18nAttrs.push(attr);\n        } else {\n          outputAttrs.push(attr);\n        }\n      }\n    }\n\n    // Match directives on non i18n attributes\n    this.matchDirectives(element.name, element);\n\n    // Regular element or ng-container creation mode\n    const parameters: o.Expression[] = [o.literal(elementIndex)];\n    if (!isNgContainer) {\n      parameters.push(o.literal(elementName));\n    }\n\n    // Add the attributes\n    const attributes: o.Expression[] = [];\n    const allOtherInputs: t.BoundAttribute[] = [];\n\n    element.inputs.forEach((input: t.BoundAttribute) => {\n      const stylingInputWasSet = stylingBuilder.registerBoundInput(input);\n      if (!stylingInputWasSet) {\n        if (input.type === BindingType.Property && input.i18n) {\n          // Place attributes into a separate array for i18n processing, but also keep such\n          // attributes in the main list to make them available for directive matching at runtime.\n          // TODO(FW-1248): prevent attributes duplication in `i18nAttributes` and `elementStart`\n          // arguments\n          i18nAttrs.push(input);\n        } else {\n          allOtherInputs.push(input);\n        }\n      }\n    });\n\n    outputAttrs.forEach(attr => {\n      if (attr.name === NG_PROJECT_AS_ATTR_NAME) {\n        attributes.push(...getNgProjectAsLiteral(attr));\n      } else {\n        attributes.push(...getAttributeNameLiterals(attr.name), o.literal(attr.value));\n      }\n    });\n\n    // add attributes for directive and projection matching purposes\n    attributes.push(...this.prepareNonRenderAttrs(\n        allOtherInputs, element.outputs, stylingBuilder, [], i18nAttrs));\n    parameters.push(this.toAttrsParam(attributes));\n\n    // local refs (ex.: <div #foo #bar=\"baz\">)\n    parameters.push(this.prepareRefsParameter(element.references));\n\n    const wasInNamespace = this._namespace;\n    const currentNamespace = this.getNamespaceInstruction(namespaceKey);\n\n    // If the namespace is changing now, include an instruction to change it\n    // during element creation.\n    if (currentNamespace !== wasInNamespace) {\n      this.addNamespaceInstruction(currentNamespace, element);\n    }\n\n    if (this.i18n) {\n      this.i18n.appendElement(element.i18n !, elementIndex);\n    }\n\n    // Note that we do not append text node instructions and ICUs inside i18n section,\n    // so we exclude them while calculating whether current element has children\n    const hasChildren = (!isI18nRootElement && this.i18n) ? !hasTextChildrenOnly(element.children) :\n                                                            element.children.length > 0;\n\n    const createSelfClosingInstruction = !stylingBuilder.hasBindings &&\n        element.outputs.length === 0 && i18nAttrs.length === 0 && !hasChildren;\n\n    const createSelfClosingI18nInstruction = !createSelfClosingInstruction &&\n        !stylingBuilder.hasBindings && hasTextChildrenOnly(element.children);\n\n    if (createSelfClosingInstruction) {\n      this.creationInstruction(\n          element.sourceSpan, isNgContainer ? R3.elementContainer : R3.element,\n          trimTrailingNulls(parameters));\n    } else {\n      this.creationInstruction(\n          element.sourceSpan, isNgContainer ? R3.elementContainerStart : R3.elementStart,\n          trimTrailingNulls(parameters));\n\n      if (isNonBindableMode) {\n        this.creationInstruction(element.sourceSpan, R3.disableBindings);\n      }\n\n      // process i18n element attributes\n      if (i18nAttrs.length) {\n        let hasBindings: boolean = false;\n        const i18nAttrArgs: o.Expression[] = [];\n        const bindings: ChainableBindingInstruction[] = [];\n        i18nAttrs.forEach(attr => {\n          const message = attr.i18n !as i18n.Message;\n          if (attr instanceof t.TextAttribute) {\n            i18nAttrArgs.push(o.literal(attr.name), this.i18nTranslate(message));\n          } else {\n            const converted = attr.value.visit(this._valueConverter);\n            this.allocateBindingSlots(converted);\n            if (converted instanceof Interpolation) {\n              const placeholders = assembleBoundTextPlaceholders(message);\n              const params = placeholdersToParams(placeholders);\n              i18nAttrArgs.push(o.literal(attr.name), this.i18nTranslate(message, params));\n              converted.expressions.forEach(expression => {\n                hasBindings = true;\n                bindings.push({\n                  sourceSpan: element.sourceSpan,\n                  value: () => this.convertExpressionBinding(expression)\n                });\n              });\n            }\n          }\n        });\n        if (bindings.length) {\n          this.updateInstructionChain(elementIndex, R3.i18nExp, bindings);\n        }\n        if (i18nAttrArgs.length) {\n          const index: o.Expression = o.literal(this.allocateDataSlot());\n          const args = this.constantPool.getConstLiteral(o.literalArr(i18nAttrArgs), true);\n          this.creationInstruction(element.sourceSpan, R3.i18nAttributes, [index, args]);\n          if (hasBindings) {\n            this.updateInstruction(elementIndex, element.sourceSpan, R3.i18nApply, [index]);\n          }\n        }\n      }\n\n      // The style bindings code is placed into two distinct blocks within the template function AOT\n      // code: creation and update. The creation code contains the `styling` instructions\n      // which will apply the collected binding values to the element. `styling` is\n      // designed to run inside of `elementStart` and `elementEnd`. The update instructions\n      // (things like `styleProp`, `classProp`, etc..) are applied later on in this\n      // file\n      this.processStylingInstruction(\n          elementIndex,\n          stylingBuilder.buildStylingInstruction(element.sourceSpan, this.constantPool), true);\n\n      // Generate Listeners (outputs)\n      element.outputs.forEach((outputAst: t.BoundEvent) => {\n        this.creationInstruction(\n            outputAst.sourceSpan, R3.listener,\n            this.prepareListenerParameter(element.name, outputAst, elementIndex));\n      });\n\n      // Note: it's important to keep i18n/i18nStart instructions after i18nAttributes and\n      // listeners, to make sure i18nAttributes instruction targets current element at runtime.\n      if (isI18nRootElement) {\n        this.i18nStart(element.sourceSpan, element.i18n !, createSelfClosingI18nInstruction);\n      }\n    }\n\n    // the code here will collect all update-level styling instructions and add them to the\n    // update block of the template function AOT code. Instructions like `styleProp`,\n    // `styleMap`, `classMap`, `classProp` and `stylingApply`\n    // are all generated and assigned in the code below.\n    const stylingInstructions = stylingBuilder.buildUpdateLevelInstructions(this._valueConverter);\n    const limit = stylingInstructions.length - 1;\n    for (let i = 0; i <= limit; i++) {\n      const instruction = stylingInstructions[i];\n      this._bindingSlots += instruction.allocateBindingSlots;\n      this.processStylingInstruction(elementIndex, instruction, false);\n    }\n\n    // the reason why `undefined` is used is because the renderer understands this as a\n    // special value to symbolize that there is no RHS to this binding\n    // TODO (matsko): revisit this once FW-959 is approached\n    const emptyValueBindInstruction = o.literal(undefined);\n    const propertyBindings: ChainableBindingInstruction[] = [];\n    const attributeBindings: ChainableBindingInstruction[] = [];\n\n    // Generate element input bindings\n    allOtherInputs.forEach((input: t.BoundAttribute) => {\n      const inputType = input.type;\n      if (inputType === BindingType.Animation) {\n        const value = input.value.visit(this._valueConverter);\n        // animation bindings can be presented in the following formats:\n        // 1. [@binding]=\"fooExp\"\n        // 2. [@binding]=\"{value:fooExp, params:{...}}\"\n        // 3. [@binding]\n        // 4. @binding\n        // All formats will be valid for when a synthetic binding is created.\n        // The reasoning for this is because the renderer should get each\n        // synthetic binding value in the order of the array that they are\n        // defined in...\n        const hasValue = value instanceof LiteralPrimitive ? !!value.value : true;\n        this.allocateBindingSlots(value);\n\n        propertyBindings.push({\n          name: prepareSyntheticPropertyName(input.name),\n          sourceSpan: input.sourceSpan,\n          value: () => hasValue ? this.convertPropertyBinding(value) : emptyValueBindInstruction\n        });\n      } else {\n        // we must skip attributes with associated i18n context, since these attributes are handled\n        // separately and corresponding `i18nExp` and `i18nApply` instructions will be generated\n        if (input.i18n) return;\n\n        const value = input.value.visit(this._valueConverter);\n        if (value !== undefined) {\n          const params: any[] = [];\n          const [attrNamespace, attrName] = splitNsName(input.name);\n          const isAttributeBinding = inputType === BindingType.Attribute;\n          const sanitizationRef = resolveSanitizationFn(input.securityContext, isAttributeBinding);\n          if (sanitizationRef) params.push(sanitizationRef);\n          if (attrNamespace) {\n            const namespaceLiteral = o.literal(attrNamespace);\n\n            if (sanitizationRef) {\n              params.push(namespaceLiteral);\n            } else {\n              // If there wasn't a sanitization ref, we need to add\n              // an extra param so that we can pass in the namespace.\n              params.push(o.literal(null), namespaceLiteral);\n            }\n          }\n          this.allocateBindingSlots(value);\n\n          if (inputType === BindingType.Property) {\n            if (value instanceof Interpolation) {\n              // prop=\"{{value}}\" and friends\n              this.interpolatedUpdateInstruction(\n                  getPropertyInterpolationExpression(value), elementIndex, attrName, input, value,\n                  params);\n            } else {\n              // [prop]=\"value\"\n              // Collect all the properties so that we can chain into a single function at the end.\n              propertyBindings.push({\n                name: attrName,\n                sourceSpan: input.sourceSpan,\n                value: () => this.convertPropertyBinding(value), params\n              });\n            }\n          } else if (inputType === BindingType.Attribute) {\n            if (value instanceof Interpolation && getInterpolationArgsLength(value) > 1) {\n              // attr.name=\"text{{value}}\" and friends\n              this.interpolatedUpdateInstruction(\n                  getAttributeInterpolationExpression(value), elementIndex, attrName, input, value,\n                  params);\n            } else {\n              const boundValue = value instanceof Interpolation ? value.expressions[0] : value;\n              // [attr.name]=\"value\" or attr.name=\"{{value}}\"\n              // Collect the attribute bindings so that they can be chained at the end.\n              attributeBindings.push({\n                name: attrName,\n                sourceSpan: input.sourceSpan,\n                value: () => this.convertPropertyBinding(boundValue), params\n              });\n            }\n          } else {\n            // class prop\n            this.updateInstruction(elementIndex, input.sourceSpan, R3.classProp, () => {\n              return [\n                o.literal(elementIndex), o.literal(attrName), this.convertPropertyBinding(value),\n                ...params\n              ];\n            });\n          }\n        }\n      }\n    });\n\n    if (propertyBindings.length > 0) {\n      this.updateInstructionChain(elementIndex, R3.property, propertyBindings);\n    }\n\n    if (attributeBindings.length > 0) {\n      this.updateInstructionChain(elementIndex, R3.attribute, attributeBindings);\n    }\n\n    // Traverse element child nodes\n    t.visitAll(this, element.children);\n\n    if (!isI18nRootElement && this.i18n) {\n      this.i18n.appendElement(element.i18n !, elementIndex, true);\n    }\n\n    if (!createSelfClosingInstruction) {\n      // Finish element construction mode.\n      const span = element.endSourceSpan || element.sourceSpan;\n      if (isI18nRootElement) {\n        this.i18nEnd(span, createSelfClosingI18nInstruction);\n      }\n      if (isNonBindableMode) {\n        this.creationInstruction(span, R3.enableBindings);\n      }\n      this.creationInstruction(span, isNgContainer ? R3.elementContainerEnd : R3.elementEnd);\n    }\n  }\n\n  /**\n   * Adds an update instruction for an interpolated property or attribute, such as\n   * `prop=\"{{value}}\"` or `attr.title=\"{{value}}\"`\n   */\n  interpolatedUpdateInstruction(\n      instruction: o.ExternalReference, elementIndex: number, attrName: string,\n      input: t.BoundAttribute, value: any, params: any[]) {\n    this.updateInstruction(\n        elementIndex, input.sourceSpan, instruction,\n        () => [o.literal(attrName), ...this.getUpdateInstructionArguments(value), ...params]);\n  }\n\n  visitTemplate(template: t.Template) {\n    const NG_TEMPLATE_TAG_NAME = 'ng-template';\n    const templateIndex = this.allocateDataSlot();\n\n    if (this.i18n) {\n      this.i18n.appendTemplate(template.i18n !, templateIndex);\n    }\n\n    const tagName = sanitizeIdentifier(template.tagName || '');\n    const contextName = `${this.contextName}${tagName ? '_' + tagName : ''}_${templateIndex}`;\n    const templateName = `${contextName}_Template`;\n\n    const parameters: o.Expression[] = [\n      o.literal(templateIndex),\n      o.variable(templateName),\n\n      // We don't care about the tag's namespace here, because we infer\n      // it based on the parent nodes inside the template instruction.\n      o.literal(template.tagName ? splitNsName(template.tagName)[1] : template.tagName),\n    ];\n\n    // find directives matching on a given <ng-template> node\n    this.matchDirectives(NG_TEMPLATE_TAG_NAME, template);\n\n    // prepare attributes parameter (including attributes used for directive matching)\n    const attrsExprs: o.Expression[] = [];\n    template.attributes.forEach(\n        (a: t.TextAttribute) => { attrsExprs.push(asLiteral(a.name), asLiteral(a.value)); });\n    attrsExprs.push(...this.prepareNonRenderAttrs(\n        template.inputs, template.outputs, undefined, template.templateAttrs));\n    parameters.push(this.toAttrsParam(attrsExprs));\n\n    // local refs (ex.: <ng-template #foo>)\n    if (template.references && template.references.length) {\n      parameters.push(this.prepareRefsParameter(template.references));\n      parameters.push(o.importExpr(R3.templateRefExtractor));\n    }\n\n    // Create the template function\n    const templateVisitor = new TemplateDefinitionBuilder(\n        this.constantPool, this._bindingScope, this.level + 1, contextName, this.i18n,\n        templateIndex, templateName, this.directiveMatcher, this.directives, this.pipeTypeByName,\n        this.pipes, this._namespace, this.fileBasedI18nSuffix, this.i18nUseExternalIds);\n\n    // Nested templates must not be visited until after their parent templates have completed\n    // processing, so they are queued here until after the initial pass. Otherwise, we wouldn't\n    // be able to support bindings in nested templates to local refs that occur after the\n    // template definition. e.g. <div *ngIf=\"showing\">{{ foo }}</div>  <div #foo></div>\n    this._nestedTemplateFns.push(() => {\n      const templateFunctionExpr = templateVisitor.buildTemplateFunction(\n          template.children, template.variables,\n          this._ngContentReservedSlots.length + this._ngContentSelectorsOffset, template.i18n);\n      this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName, null));\n      if (templateVisitor._ngContentReservedSlots.length) {\n        this._ngContentReservedSlots.push(...templateVisitor._ngContentReservedSlots);\n      }\n    });\n\n    // e.g. template(1, MyComp_Template_1)\n    this.creationInstruction(template.sourceSpan, R3.templateCreate, () => {\n      parameters.splice(\n          2, 0, o.literal(templateVisitor.getConstCount()),\n          o.literal(templateVisitor.getVarCount()));\n      return trimTrailingNulls(parameters);\n    });\n\n    // handle property bindings e.g. ÉµÉµproperty('ngForOf', ctx.items), et al;\n    this.templatePropertyBindings(templateIndex, template.templateAttrs);\n\n    // Only add normal input/output binding instructions on explicit ng-template elements.\n    if (template.tagName === NG_TEMPLATE_TAG_NAME) {\n      // Add the input bindings\n      this.templatePropertyBindings(templateIndex, template.inputs);\n      // Generate listeners for directive output\n      template.outputs.forEach((outputAst: t.BoundEvent) => {\n        this.creationInstruction(\n            outputAst.sourceSpan, R3.listener,\n            this.prepareListenerParameter('ng_template', outputAst, templateIndex));\n      });\n    }\n  }\n\n  // These should be handled in the template or element directly.\n  readonly visitReference = invalid;\n  readonly visitVariable = invalid;\n  readonly visitTextAttribute = invalid;\n  readonly visitBoundAttribute = invalid;\n  readonly visitBoundEvent = invalid;\n\n  visitBoundText(text: t.BoundText) {\n    if (this.i18n) {\n      const value = text.value.visit(this._valueConverter);\n      this.allocateBindingSlots(value);\n      if (value instanceof Interpolation) {\n        this.i18n.appendBoundText(text.i18n !);\n        this.i18nAppendBindings(value.expressions);\n      }\n      return;\n    }\n\n    const nodeIndex = this.allocateDataSlot();\n\n    this.creationInstruction(text.sourceSpan, R3.text, [o.literal(nodeIndex)]);\n\n    const value = text.value.visit(this._valueConverter);\n    this.allocateBindingSlots(value);\n\n    if (value instanceof Interpolation) {\n      this.updateInstruction(\n          nodeIndex, text.sourceSpan, getTextInterpolationExpression(value),\n          () => this.getUpdateInstructionArguments(value));\n    } else {\n      this.updateInstruction(\n          nodeIndex, text.sourceSpan, R3.textBinding, () => [this.convertPropertyBinding(value)]);\n    }\n  }\n\n  visitText(text: t.Text) {\n    // when a text element is located within a translatable\n    // block, we exclude this text element from instructions set,\n    // since it will be captured in i18n content and processed at runtime\n    if (!this.i18n) {\n      this.creationInstruction(\n          text.sourceSpan, R3.text, [o.literal(this.allocateDataSlot()), o.literal(text.value)]);\n    }\n  }\n\n  visitIcu(icu: t.Icu) {\n    let initWasInvoked = false;\n\n    // if an ICU was created outside of i18n block, we still treat\n    // it as a translatable entity and invoke i18nStart and i18nEnd\n    // to generate i18n context and the necessary instructions\n    if (!this.i18n) {\n      initWasInvoked = true;\n      this.i18nStart(null, icu.i18n !, true);\n    }\n\n    const i18n = this.i18n !;\n    const vars = this.i18nBindProps(icu.vars);\n    const placeholders = this.i18nBindProps(icu.placeholders);\n\n    // output ICU directly and keep ICU reference in context\n    const message = icu.i18n !as i18n.Message;\n\n    // we always need post-processing function for ICUs, to make sure that:\n    // - all placeholders in a form of {PLACEHOLDER} are replaced with actual values (note:\n    // `goog.getMsg` does not process ICUs and uses the `{PLACEHOLDER}` format for placeholders\n    // inside ICUs)\n    // - all ICU vars (such as `VAR_SELECT` or `VAR_PLURAL`) are replaced with correct values\n    const transformFn = (raw: o.ReadVarExpr) => {\n      const params = {...vars, ...placeholders};\n      const formatted = this.i18nFormatPlaceholderNames(params, /* useCamelCase */ false);\n      return instruction(null, R3.i18nPostprocess, [raw, mapLiteral(formatted, true)]);\n    };\n\n    // in case the whole i18n message is a single ICU - we do not need to\n    // create a separate top-level translation, we can use the root ref instead\n    // and make this ICU a top-level translation\n    // note: ICU placeholders are replaced with actual values in `i18nPostprocess` function\n    // separately, so we do not pass placeholders into `i18nTranslate` function.\n    if (isSingleI18nIcu(i18n.meta)) {\n      this.i18nTranslate(message, /* placeholders */ {}, i18n.ref, transformFn);\n    } else {\n      // output ICU directly and keep ICU reference in context\n      const ref =\n          this.i18nTranslate(message, /* placeholders */ {}, /* ref */ undefined, transformFn);\n      i18n.appendIcu(icuFromI18nMessage(message).name, ref);\n    }\n\n    if (initWasInvoked) {\n      this.i18nEnd(null, true);\n    }\n    return null;\n  }\n\n  private allocateDataSlot() { return this._dataIndex++; }\n\n  getConstCount() { return this._dataIndex; }\n\n  getVarCount() { return this._pureFunctionSlots; }\n\n  getNgContentSelectors(): o.Expression|null {\n    return this._ngContentReservedSlots.length ?\n        this.constantPool.getConstLiteral(asLiteral(this._ngContentReservedSlots), true) :\n        null;\n  }\n\n  private bindingContext() { return `${this._bindingContext++}`; }\n\n  private templatePropertyBindings(\n      templateIndex: number, attrs: (t.BoundAttribute|t.TextAttribute)[]) {\n    const propertyBindings: ChainableBindingInstruction[] = [];\n    attrs.forEach(input => {\n      if (input instanceof t.BoundAttribute) {\n        const value = input.value.visit(this._valueConverter);\n\n        if (value !== undefined) {\n          this.allocateBindingSlots(value);\n          propertyBindings.push({\n            name: input.name,\n            sourceSpan: input.sourceSpan,\n            value: () => this.convertPropertyBinding(value)\n          });\n        }\n      }\n    });\n\n    if (propertyBindings.length > 0) {\n      this.updateInstructionChain(templateIndex, R3.property, propertyBindings);\n    }\n  }\n\n  // Bindings must only be resolved after all local refs have been visited, so all\n  // instructions are queued in callbacks that execute once the initial pass has completed.\n  // Otherwise, we wouldn't be able to support local refs that are defined after their\n  // bindings. e.g. {{ foo }} <div #foo></div>\n  private instructionFn(\n      fns: (() => o.Statement)[], span: ParseSourceSpan|null, reference: o.ExternalReference,\n      paramsOrFn: o.Expression[]|(() => o.Expression[]), prepend: boolean = false): void {\n    fns[prepend ? 'unshift' : 'push'](() => {\n      const params = Array.isArray(paramsOrFn) ? paramsOrFn : paramsOrFn();\n      return instruction(span, reference, params).toStmt();\n    });\n  }\n\n  private processStylingInstruction(\n      elementIndex: number, instruction: StylingInstruction|null, createMode: boolean) {\n    if (instruction) {\n      if (createMode) {\n        this.creationInstruction(instruction.sourceSpan, instruction.reference, () => {\n          return instruction.params(value => this.convertPropertyBinding(value)) as o.Expression[];\n        });\n      } else {\n        this.updateInstruction(elementIndex, instruction.sourceSpan, instruction.reference, () => {\n          return instruction\n              .params(value => {\n                return (instruction.supportsInterpolation && value instanceof Interpolation) ?\n                    this.getUpdateInstructionArguments(value) :\n                    this.convertPropertyBinding(value);\n              }) as o.Expression[];\n        });\n      }\n    }\n  }\n\n  private creationInstruction(\n      span: ParseSourceSpan|null, reference: o.ExternalReference,\n      paramsOrFn?: o.Expression[]|(() => o.Expression[]), prepend?: boolean) {\n    this.instructionFn(this._creationCodeFns, span, reference, paramsOrFn || [], prepend);\n  }\n\n  private updateInstruction(\n      nodeIndex: number, span: ParseSourceSpan|null, reference: o.ExternalReference,\n      paramsOrFn?: o.Expression[]|(() => o.Expression[])) {\n    this.addSelectInstructionIfNecessary(nodeIndex, span);\n    this.instructionFn(this._updateCodeFns, span, reference, paramsOrFn || []);\n  }\n\n  private updateInstructionChain(\n      nodeIndex: number, reference: o.ExternalReference, bindings: ChainableBindingInstruction[]) {\n    const span = bindings.length ? bindings[0].sourceSpan : null;\n\n    this.addSelectInstructionIfNecessary(nodeIndex, span);\n    this._updateCodeFns.push(() => {\n      const calls = bindings.map(property => {\n        const fnParams = [property.value(), ...(property.params || [])];\n        if (property.name) {\n          fnParams.unshift(o.literal(property.name));\n        }\n        return fnParams;\n      });\n\n      return chainedInstruction(reference, calls, span).toStmt();\n    });\n  }\n\n  private addSelectInstructionIfNecessary(nodeIndex: number, span: ParseSourceSpan|null) {\n    if (this._lastNodeIndexWithFlush < nodeIndex) {\n      if (nodeIndex > 0) {\n        this.instructionFn(this._updateCodeFns, span, R3.select, [o.literal(nodeIndex)]);\n      }\n      this._lastNodeIndexWithFlush = nodeIndex;\n    }\n  }\n\n  private allocatePureFunctionSlots(numSlots: number): number {\n    const originalSlots = this._pureFunctionSlots;\n    this._pureFunctionSlots += numSlots;\n    return originalSlots;\n  }\n\n  private allocateBindingSlots(value: AST|null) {\n    this._bindingSlots += value instanceof Interpolation ? value.expressions.length : 1;\n  }\n\n  /**\n   * Gets an expression that refers to the implicit receiver. The implicit\n   * receiver is always the root level context.\n   */\n  private getImplicitReceiverExpr(): o.ReadVarExpr {\n    if (this._implicitReceiverExpr) {\n      return this._implicitReceiverExpr;\n    }\n\n    return this._implicitReceiverExpr = this.level === 0 ?\n        o.variable(CONTEXT_NAME) :\n        this._bindingScope.getOrCreateSharedContextVar(0);\n  }\n\n  private convertExpressionBinding(value: AST): o.Expression {\n    const convertedPropertyBinding = convertPropertyBinding(\n        this, this.getImplicitReceiverExpr(), value, this.bindingContext(), BindingForm.TrySimple);\n    return convertedPropertyBinding.currValExpr;\n  }\n\n  private convertPropertyBinding(value: AST): o.Expression {\n    const convertedPropertyBinding = convertPropertyBinding(\n        this, this.getImplicitReceiverExpr(), value, this.bindingContext(), BindingForm.TrySimple,\n        () => error('Unexpected interpolation'));\n    const valExpr = convertedPropertyBinding.currValExpr;\n    this._tempVariables.push(...convertedPropertyBinding.stmts);\n\n    return valExpr;\n  }\n\n  /**\n   * Gets a list of argument expressions to pass to an update instruction expression. Also updates\n   * the temp variables state with temp variables that were identified as needing to be created\n   * while visiting the arguments.\n   * @param value The original expression we will be resolving an arguments list from.\n   */\n  private getUpdateInstructionArguments(value: AST): o.Expression[] {\n    const {args, stmts} =\n        convertUpdateArguments(this, this.getImplicitReceiverExpr(), value, this.bindingContext());\n\n    this._tempVariables.push(...stmts);\n    return args;\n  }\n\n  private matchDirectives(tagName: string, elOrTpl: t.Element|t.Template) {\n    if (this.directiveMatcher) {\n      const selector = createCssSelector(tagName, getAttrsForDirectiveMatching(elOrTpl));\n      this.directiveMatcher.match(\n          selector, (cssSelector, staticType) => { this.directives.add(staticType); });\n    }\n  }\n\n  /**\n   * Prepares all attribute expression values for the `TAttributes` array.\n   *\n   * The purpose of this function is to properly construct an attributes array that\n   * is passed into the `elementStart` (or just `element`) functions. Because there\n   * are many different types of attributes, the array needs to be constructed in a\n   * special way so that `elementStart` can properly evaluate them.\n   *\n   * The format looks like this:\n   *\n   * ```\n   * attrs = [prop, value, prop2, value2,\n   *   CLASSES, class1, class2,\n   *   STYLES, style1, value1, style2, value2,\n   *   BINDINGS, name1, name2, name3,\n   *   TEMPLATE, name4, name5, name6,\n   *   I18N, name7, name8, ...]\n   * ```\n   *\n   * Note that this function will fully ignore all synthetic (@foo) attribute values\n   * because those values are intended to always be generated as property instructions.\n   */\n  private prepareNonRenderAttrs(\n      inputs: t.BoundAttribute[], outputs: t.BoundEvent[], styles?: StylingBuilder,\n      templateAttrs: (t.BoundAttribute|t.TextAttribute)[] = [],\n      i18nAttrs: (t.BoundAttribute|t.TextAttribute)[] = []): o.Expression[] {\n    const alreadySeen = new Set<string>();\n    const attrExprs: o.Expression[] = [];\n\n    function addAttrExpr(key: string | number, value?: o.Expression): void {\n      if (typeof key === 'string') {\n        if (!alreadySeen.has(key)) {\n          attrExprs.push(...getAttributeNameLiterals(key));\n          value !== undefined && attrExprs.push(value);\n          alreadySeen.add(key);\n        }\n      } else {\n        attrExprs.push(o.literal(key));\n      }\n    }\n\n    // it's important that this occurs before BINDINGS and TEMPLATE because once `elementStart`\n    // comes across the BINDINGS or TEMPLATE markers then it will continue reading each value as\n    // as single property value cell by cell.\n    if (styles) {\n      styles.populateInitialStylingAttrs(attrExprs);\n    }\n\n    if (inputs.length || outputs.length) {\n      const attrsLengthBeforeInputs = attrExprs.length;\n\n      for (let i = 0; i < inputs.length; i++) {\n        const input = inputs[i];\n        // We don't want the animation and attribute bindings in the\n        // attributes array since they aren't used for directive matching.\n        if (input.type !== BindingType.Animation && input.type !== BindingType.Attribute) {\n          addAttrExpr(input.name);\n        }\n      }\n\n      for (let i = 0; i < outputs.length; i++) {\n        const output = outputs[i];\n        if (output.type !== ParsedEventType.Animation) {\n          addAttrExpr(output.name);\n        }\n      }\n\n      // this is a cheap way of adding the marker only after all the input/output\n      // values have been filtered (by not including the animation ones) and added\n      // to the expressions. The marker is important because it tells the runtime\n      // code that this is where attributes without values start...\n      if (attrExprs.length !== attrsLengthBeforeInputs) {\n        attrExprs.splice(attrsLengthBeforeInputs, 0, o.literal(core.AttributeMarker.Bindings));\n      }\n    }\n\n    if (templateAttrs.length) {\n      attrExprs.push(o.literal(core.AttributeMarker.Template));\n      templateAttrs.forEach(attr => addAttrExpr(attr.name));\n    }\n\n    if (i18nAttrs.length) {\n      attrExprs.push(o.literal(core.AttributeMarker.I18n));\n      i18nAttrs.forEach(attr => addAttrExpr(attr.name));\n    }\n\n    return attrExprs;\n  }\n\n  private toAttrsParam(attrsExprs: o.Expression[]): o.Expression {\n    return attrsExprs.length > 0 ?\n        this.constantPool.getConstLiteral(o.literalArr(attrsExprs), true) :\n        o.TYPED_NULL_EXPR;\n  }\n\n  private prepareRefsParameter(references: t.Reference[]): o.Expression {\n    if (!references || references.length === 0) {\n      return o.TYPED_NULL_EXPR;\n    }\n\n    const refsParam = flatten(references.map(reference => {\n      const slot = this.allocateDataSlot();\n      // Generate the update temporary.\n      const variableName = this._bindingScope.freshReferenceName();\n      const retrievalLevel = this.level;\n      const lhs = o.variable(variableName);\n      this._bindingScope.set(\n          retrievalLevel, reference.name, lhs,\n          DeclarationPriority.DEFAULT, (scope: BindingScope, relativeLevel: number) => {\n            // e.g. nextContext(2);\n            const nextContextStmt =\n                relativeLevel > 0 ? [generateNextContextExpr(relativeLevel).toStmt()] : [];\n\n            // e.g. const $foo$ = reference(1);\n            const refExpr = lhs.set(o.importExpr(R3.reference).callFn([o.literal(slot)]));\n            return nextContextStmt.concat(refExpr.toConstDecl());\n          }, true);\n      return [reference.name, reference.value];\n    }));\n\n    return this.constantPool.getConstLiteral(asLiteral(refsParam), true);\n  }\n\n  private prepareListenerParameter(tagName: string, outputAst: t.BoundEvent, index: number):\n      () => o.Expression[] {\n    return () => {\n      const eventName: string = outputAst.name;\n      const bindingFnName = outputAst.type === ParsedEventType.Animation ?\n          // synthetic @listener.foo values are treated the exact same as are standard listeners\n          prepareSyntheticListenerFunctionName(eventName, outputAst.phase !) :\n          sanitizeIdentifier(eventName);\n      const handlerName = `${this.templateName}_${tagName}_${bindingFnName}_${index}_listener`;\n      const scope = this._bindingScope.nestedScope(this._bindingScope.bindingLevel);\n      return prepareEventListenerParameters(outputAst, handlerName, scope);\n    };\n  }\n}\n\nexport class ValueConverter extends AstMemoryEfficientTransformer {\n  private _pipeBindExprs: FunctionCall[] = [];\n\n  constructor(\n      private constantPool: ConstantPool, private allocateSlot: () => number,\n      private allocatePureFunctionSlots: (numSlots: number) => number,\n      private definePipe:\n          (name: string, localName: string, slot: number, value: o.Expression) => void) {\n    super();\n  }\n\n  // AstMemoryEfficientTransformer\n  visitPipe(pipe: BindingPipe, context: any): AST {\n    // Allocate a slot to create the pipe\n    const slot = this.allocateSlot();\n    const slotPseudoLocal = `PIPE:${slot}`;\n    // Allocate one slot for the result plus one slot per pipe argument\n    const pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n    const target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n    const {identifier, isVarLength} = pipeBindingCallInfo(pipe.args);\n    this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n    const args: AST[] = [pipe.exp, ...pipe.args];\n    const convertedArgs: AST[] =\n        isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n\n    const pipeBindExpr = new FunctionCall(pipe.span, target, [\n      new LiteralPrimitive(pipe.span, slot),\n      new LiteralPrimitive(pipe.span, pureFunctionSlot),\n      ...convertedArgs,\n    ]);\n    this._pipeBindExprs.push(pipeBindExpr);\n    return pipeBindExpr;\n  }\n\n  updatePipeSlotOffsets(bindingSlots: number) {\n    this._pipeBindExprs.forEach((pipe: FunctionCall) => {\n      // update the slot offset arg (index 1) to account for binding slots\n      const slotOffset = pipe.args[1] as LiteralPrimitive;\n      (slotOffset.value as number) += bindingSlots;\n    });\n  }\n\n  visitLiteralArray(array: LiteralArray, context: any): AST {\n    return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), values => {\n      // If the literal has calculated (non-literal) elements transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalArr(values);\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n\n  visitLiteralMap(map: LiteralMap, context: any): AST {\n    return new BuiltinFunctionCall(map.span, this.visitAll(map.values), values => {\n      // If the literal has calculated (non-literal) elements  transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalMap(values.map(\n          (value, index) => ({key: map.keys[index].key, value, quoted: map.keys[index].quoted})));\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n}\n\n// Pipes always have at least one parameter, the value they operate on\nconst pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\n\nfunction pipeBindingCallInfo(args: o.Expression[]) {\n  const identifier = pipeBindingIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pipeBindV,\n    isVarLength: !identifier,\n  };\n}\n\nconst pureFunctionIdentifiers = [\n  R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n  R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\n\nfunction pureFunctionCallInfo(args: o.Expression[]) {\n  const identifier = pureFunctionIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pureFunctionV,\n    isVarLength: !identifier,\n  };\n}\n\nfunction instruction(\n    span: ParseSourceSpan | null, reference: o.ExternalReference,\n    params: o.Expression[]): o.Expression {\n  return o.importExpr(reference, null, span).callFn(params, span);\n}\n\n// e.g. x(2);\nfunction generateNextContextExpr(relativeLevelDiff: number): o.Expression {\n  return o.importExpr(R3.nextContext)\n      .callFn(relativeLevelDiff > 1 ? [o.literal(relativeLevelDiff)] : []);\n}\n\nfunction getLiteralFactory(\n    constantPool: ConstantPool, literal: o.LiteralArrayExpr | o.LiteralMapExpr,\n    allocateSlots: (numSlots: number) => number): o.Expression {\n  const {literalFactory, literalFactoryArguments} = constantPool.getLiteralFactory(literal);\n  // Allocate 1 slot for the result plus 1 per argument\n  const startSlot = allocateSlots(1 + literalFactoryArguments.length);\n  literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n  const {identifier, isVarLength} = pureFunctionCallInfo(literalFactoryArguments);\n\n  // Literal factories are pure functions that only need to be re-invoked when the parameters\n  // change.\n  const args = [\n    o.literal(startSlot),\n    literalFactory,\n  ];\n\n  if (isVarLength) {\n    args.push(o.literalArr(literalFactoryArguments));\n  } else {\n    args.push(...literalFactoryArguments);\n  }\n\n  return o.importExpr(identifier).callFn(args);\n}\n\n/**\n * Gets an array of literals that can be added to an expression\n * to represent the name and namespace of an attribute. E.g.\n * `:xlink:href` turns into `[AttributeMarker.NamespaceURI, 'xlink', 'href']`.\n *\n * @param name Name of the attribute, including the namespace.\n */\nfunction getAttributeNameLiterals(name: string): o.LiteralExpr[] {\n  const [attributeNamespace, attributeName] = splitNsName(name);\n  const nameLiteral = o.literal(attributeName);\n\n  if (attributeNamespace) {\n    return [\n      o.literal(core.AttributeMarker.NamespaceURI), o.literal(attributeNamespace), nameLiteral\n    ];\n  }\n\n  return [nameLiteral];\n}\n\n/**\n * Function which is executed whenever a variable is referenced for the first time in a given\n * scope.\n *\n * It is expected that the function creates the `const localName = expression`; statement.\n */\nexport type DeclareLocalVarCallback = (scope: BindingScope, relativeLevel: number) => o.Statement[];\n\n/** The prefix used to get a shared context in BindingScope's map. */\nconst SHARED_CONTEXT_KEY = '$$shared_ctx$$';\n\n/**\n * This is used when one refers to variable such as: 'let abc = nextContext(2).$implicit`.\n * - key to the map is the string literal `\"abc\"`.\n * - value `retrievalLevel` is the level from which this value can be retrieved, which is 2 levels\n * up in example.\n * - value `lhs` is the left hand side which is an AST representing `abc`.\n * - value `declareLocalCallback` is a callback that is invoked when declaring the local.\n * - value `declare` is true if this value needs to be declared.\n * - value `localRef` is true if we are storing a local reference\n * - value `priority` dictates the sorting priority of this var declaration compared\n * to other var declarations on the same retrieval level. For example, if there is a\n * context variable and a local ref accessing the same parent view, the context var\n * declaration should always come before the local ref declaration.\n */\ntype BindingData = {\n  retrievalLevel: number; lhs: o.Expression; declareLocalCallback?: DeclareLocalVarCallback;\n  declare: boolean;\n  priority: number;\n  localRef: boolean;\n};\n\n/**\n * The sorting priority of a local variable declaration. Higher numbers\n * mean the declaration will appear first in the generated code.\n */\nconst enum DeclarationPriority { DEFAULT = 0, CONTEXT = 1, SHARED_CONTEXT = 2 }\n\nexport class BindingScope implements LocalResolver {\n  /** Keeps a map from local variables to their BindingData. */\n  private map = new Map<string, BindingData>();\n  private referenceNameIndex = 0;\n  private restoreViewVariable: o.ReadVarExpr|null = null;\n  private static _ROOT_SCOPE: BindingScope;\n\n  static get ROOT_SCOPE(): BindingScope {\n    if (!BindingScope._ROOT_SCOPE) {\n      BindingScope._ROOT_SCOPE = new BindingScope().set(0, '$event', o.variable('$event'));\n    }\n    return BindingScope._ROOT_SCOPE;\n  }\n\n  private constructor(public bindingLevel: number = 0, private parent: BindingScope|null = null) {}\n\n  get(name: string): o.Expression|null {\n    let current: BindingScope|null = this;\n    while (current) {\n      let value = current.map.get(name);\n      if (value != null) {\n        if (current !== this) {\n          // make a local copy and reset the `declare` state\n          value = {\n            retrievalLevel: value.retrievalLevel,\n            lhs: value.lhs,\n            declareLocalCallback: value.declareLocalCallback,\n            declare: false,\n            priority: value.priority,\n            localRef: value.localRef\n          };\n\n          // Cache the value locally.\n          this.map.set(name, value);\n          // Possibly generate a shared context var\n          this.maybeGenerateSharedContextVar(value);\n          this.maybeRestoreView(value.retrievalLevel, value.localRef);\n        }\n\n        if (value.declareLocalCallback && !value.declare) {\n          value.declare = true;\n        }\n        return value.lhs;\n      }\n      current = current.parent;\n    }\n\n    // If we get to this point, we are looking for a property on the top level component\n    // - If level === 0, we are on the top and don't need to re-declare `ctx`.\n    // - If level > 0, we are in an embedded view. We need to retrieve the name of the\n    // local var we used to store the component context, e.g. const $comp$ = x();\n    return this.bindingLevel === 0 ? null : this.getComponentProperty(name);\n  }\n\n  /**\n   * Create a local variable for later reference.\n   *\n   * @param retrievalLevel The level from which this value can be retrieved\n   * @param name Name of the variable.\n   * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n   * @param priority The sorting priority of this var\n   * @param declareLocalCallback The callback to invoke when declaring this local var\n   * @param localRef Whether or not this is a local ref\n   */\n  set(retrievalLevel: number, name: string, lhs: o.Expression,\n      priority: number = DeclarationPriority.DEFAULT,\n      declareLocalCallback?: DeclareLocalVarCallback, localRef?: true): BindingScope {\n    if (this.map.has(name)) {\n      if (localRef) {\n        // Do not throw an error if it's a local ref and do not update existing value,\n        // so the first defined ref is always returned.\n        return this;\n      }\n      error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n    }\n    this.map.set(name, {\n      retrievalLevel: retrievalLevel,\n      lhs: lhs,\n      declare: false,\n      declareLocalCallback: declareLocalCallback,\n      priority: priority,\n      localRef: localRef || false\n    });\n    return this;\n  }\n\n  // Implemented as part of LocalResolver.\n  getLocal(name: string): (o.Expression|null) { return this.get(name); }\n\n  // Implemented as part of LocalResolver.\n  notifyImplicitReceiverUse(): void {\n    if (this.bindingLevel !== 0) {\n      // Since the implicit receiver is accessed in an embedded view, we need to\n      // ensure that we declare a shared context variable for the current template\n      // in the update variables.\n      this.map.get(SHARED_CONTEXT_KEY + 0) !.declare = true;\n    }\n  }\n\n  nestedScope(level: number): BindingScope {\n    const newScope = new BindingScope(level, this);\n    if (level > 0) newScope.generateSharedContextVar(0);\n    return newScope;\n  }\n\n  /**\n   * Gets or creates a shared context variable and returns its expression. Note that\n   * this does not mean that the shared variable will be declared. Variables in the\n   * binding scope will be only declared if they are used.\n   */\n  getOrCreateSharedContextVar(retrievalLevel: number): o.ReadVarExpr {\n    const bindingKey = SHARED_CONTEXT_KEY + retrievalLevel;\n    if (!this.map.has(bindingKey)) {\n      this.generateSharedContextVar(retrievalLevel);\n    }\n    // Shared context variables are always generated as \"ReadVarExpr\".\n    return this.map.get(bindingKey) !.lhs as o.ReadVarExpr;\n  }\n\n  getSharedContextName(retrievalLevel: number): o.ReadVarExpr|null {\n    const sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + retrievalLevel);\n    // Shared context variables are always generated as \"ReadVarExpr\".\n    return sharedCtxObj && sharedCtxObj.declare ? sharedCtxObj.lhs as o.ReadVarExpr : null;\n  }\n\n  maybeGenerateSharedContextVar(value: BindingData) {\n    if (value.priority === DeclarationPriority.CONTEXT &&\n        value.retrievalLevel < this.bindingLevel) {\n      const sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + value.retrievalLevel);\n      if (sharedCtxObj) {\n        sharedCtxObj.declare = true;\n      } else {\n        this.generateSharedContextVar(value.retrievalLevel);\n      }\n    }\n  }\n\n  generateSharedContextVar(retrievalLevel: number) {\n    const lhs = o.variable(CONTEXT_NAME + this.freshReferenceName());\n    this.map.set(SHARED_CONTEXT_KEY + retrievalLevel, {\n      retrievalLevel: retrievalLevel,\n      lhs: lhs,\n      declareLocalCallback: (scope: BindingScope, relativeLevel: number) => {\n        // const ctx_r0 = nextContext(2);\n        return [lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];\n      },\n      declare: false,\n      priority: DeclarationPriority.SHARED_CONTEXT,\n      localRef: false\n    });\n  }\n\n  getComponentProperty(name: string): o.Expression {\n    const componentValue = this.map.get(SHARED_CONTEXT_KEY + 0) !;\n    componentValue.declare = true;\n    this.maybeRestoreView(0, false);\n    return componentValue.lhs.prop(name);\n  }\n\n  maybeRestoreView(retrievalLevel: number, localRefLookup: boolean) {\n    // We want to restore the current view in listener fns if:\n    // 1 - we are accessing a value in a parent view, which requires walking the view tree rather\n    // than using the ctx arg. In this case, the retrieval and binding level will be different.\n    // 2 - we are looking up a local ref, which requires restoring the view where the local\n    // ref is stored\n    if (this.isListenerScope() && (retrievalLevel < this.bindingLevel || localRefLookup)) {\n      if (!this.parent !.restoreViewVariable) {\n        // parent saves variable to generate a shared `const $s$ = getCurrentView();` instruction\n        this.parent !.restoreViewVariable = o.variable(this.parent !.freshReferenceName());\n      }\n      this.restoreViewVariable = this.parent !.restoreViewVariable;\n    }\n  }\n\n  restoreViewStatement(): o.Statement[] {\n    // restoreView($state$);\n    return this.restoreViewVariable ?\n        [instruction(null, R3.restoreView, [this.restoreViewVariable]).toStmt()] :\n        [];\n  }\n\n  viewSnapshotStatements(): o.Statement[] {\n    // const $state$ = getCurrentView();\n    const getCurrentViewInstruction = instruction(null, R3.getCurrentView, []);\n    return this.restoreViewVariable ?\n        [this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()] :\n        [];\n  }\n\n  isListenerScope() { return this.parent && this.parent.bindingLevel === this.bindingLevel; }\n\n  variableDeclarations(): o.Statement[] {\n    let currentContextLevel = 0;\n    return Array.from(this.map.values())\n        .filter(value => value.declare)\n        .sort((a, b) => b.retrievalLevel - a.retrievalLevel || b.priority - a.priority)\n        .reduce((stmts: o.Statement[], value: BindingData) => {\n          const levelDiff = this.bindingLevel - value.retrievalLevel;\n          const currStmts = value.declareLocalCallback !(this, levelDiff - currentContextLevel);\n          currentContextLevel = levelDiff;\n          return stmts.concat(currStmts);\n        }, []) as o.Statement[];\n  }\n\n\n  freshReferenceName(): string {\n    let current: BindingScope = this;\n    // Find the top scope as it maintains the global reference count\n    while (current.parent) current = current.parent;\n    const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n    return ref;\n  }\n}\n\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag: string, attributes: {[name: string]: string}): CssSelector {\n  const cssSelector = new CssSelector();\n\n  cssSelector.setElement(tag);\n\n  Object.getOwnPropertyNames(attributes).forEach((name) => {\n    const value = attributes[name];\n\n    cssSelector.addAttribute(name, value);\n    if (name.toLowerCase() === 'class') {\n      const classes = value.trim().split(/\\s+/);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  });\n\n  return cssSelector;\n}\n\n/**\n * Creates an array of expressions out of an `ngProjectAs` attributes\n * which can be added to the instruction parameters.\n */\nfunction getNgProjectAsLiteral(attribute: t.TextAttribute): o.Expression[] {\n  // Parse the attribute value into a CssSelectorList. Note that we only take the\n  // first selector, because we don't support multiple selectors in ngProjectAs.\n  const parsedR3Selector = core.parseSelectorToR3Selector(attribute.value)[0];\n  return [o.literal(core.AttributeMarker.ProjectAs), asLiteral(parsedR3Selector)];\n}\n\n/**\n * Gets the instruction to generate for an interpolated property\n * @param interpolation An Interpolation AST\n */\nfunction getPropertyInterpolationExpression(interpolation: Interpolation) {\n  switch (getInterpolationArgsLength(interpolation)) {\n    case 1:\n      return R3.propertyInterpolate;\n    case 3:\n      return R3.propertyInterpolate1;\n    case 5:\n      return R3.propertyInterpolate2;\n    case 7:\n      return R3.propertyInterpolate3;\n    case 9:\n      return R3.propertyInterpolate4;\n    case 11:\n      return R3.propertyInterpolate5;\n    case 13:\n      return R3.propertyInterpolate6;\n    case 15:\n      return R3.propertyInterpolate7;\n    case 17:\n      return R3.propertyInterpolate8;\n    default:\n      return R3.propertyInterpolateV;\n  }\n}\n\n/**\n * Gets the instruction to generate for an interpolated attribute\n * @param interpolation An Interpolation AST\n */\nfunction getAttributeInterpolationExpression(interpolation: Interpolation) {\n  switch (getInterpolationArgsLength(interpolation)) {\n    case 3:\n      return R3.attributeInterpolate1;\n    case 5:\n      return R3.attributeInterpolate2;\n    case 7:\n      return R3.attributeInterpolate3;\n    case 9:\n      return R3.attributeInterpolate4;\n    case 11:\n      return R3.attributeInterpolate5;\n    case 13:\n      return R3.attributeInterpolate6;\n    case 15:\n      return R3.attributeInterpolate7;\n    case 17:\n      return R3.attributeInterpolate8;\n    default:\n      return R3.attributeInterpolateV;\n  }\n}\n\n/**\n * Gets the instruction to generate for interpolated text.\n * @param interpolation An Interpolation AST\n */\nfunction getTextInterpolationExpression(interpolation: Interpolation): o.ExternalReference {\n  switch (getInterpolationArgsLength(interpolation)) {\n    case 1:\n      return R3.textInterpolate;\n    case 3:\n      return R3.textInterpolate1;\n    case 5:\n      return R3.textInterpolate2;\n    case 7:\n      return R3.textInterpolate3;\n    case 9:\n      return R3.textInterpolate4;\n    case 11:\n      return R3.textInterpolate5;\n    case 13:\n      return R3.textInterpolate6;\n    case 15:\n      return R3.textInterpolate7;\n    case 17:\n      return R3.textInterpolate8;\n    default:\n      return R3.textInterpolateV;\n  }\n}\n\n/**\n * Options that can be used to modify how a template is parsed by `parseTemplate()`.\n */\nexport interface ParseTemplateOptions {\n  /**\n   * Include whitespace nodes in the parsed output.\n   */\n  preserveWhitespaces?: boolean;\n  /**\n   * How to parse interpolation markers.\n   */\n  interpolationConfig?: InterpolationConfig;\n  /**\n   * The start and end point of the text to parse within the `source` string.\n   * The entire `source` string is parsed if this is not provided.\n   * */\n  range?: LexerRange;\n  /**\n   * If this text is stored in a JavaScript string, then we have to deal with escape sequences.\n   *\n   * **Example 1:**\n   *\n   * ```\n   * \"abc\\\"def\\nghi\"\n   * ```\n   *\n   * - The `\\\"` must be converted to `\"`.\n   * - The `\\n` must be converted to a new line character in a token,\n   *   but it should not increment the current line for source mapping.\n   *\n   * **Example 2:**\n   *\n   * ```\n   * \"abc\\\n   *  def\"\n   * ```\n   *\n   * The line continuation (`\\` followed by a newline) should be removed from a token\n   * but the new line should increment the current line for source mapping.\n   */\n  escapedString?: boolean;\n  /**\n   * An array of characters that should be considered as leading trivia.\n   * Leading trivia are characters that are not important to the developer, and so should not be\n   * included in source-map segments.  A common example is whitespace.\n   */\n  leadingTriviaChars?: string[];\n}\n\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n * @param options options to modify how the template is parsed\n */\nexport function parseTemplate(\n    template: string, templateUrl: string, options: ParseTemplateOptions = {}):\n    {errors?: ParseError[], nodes: t.Node[], styleUrls: string[], styles: string[]} {\n  const {interpolationConfig, preserveWhitespaces} = options;\n  const bindingParser = makeBindingParser(interpolationConfig);\n  const htmlParser = new HtmlParser();\n  const parseResult = htmlParser.parse(\n      template, templateUrl,\n      {leadingTriviaChars: LEADING_TRIVIA_CHARS, ...options, tokenizeExpansionForms: true});\n\n  if (parseResult.errors && parseResult.errors.length > 0) {\n    return {errors: parseResult.errors, nodes: [], styleUrls: [], styles: []};\n  }\n\n  let rootNodes: html.Node[] = parseResult.rootNodes;\n\n  // process i18n meta information (scan attributes, generate ids)\n  // before we run whitespace removal process, because existing i18n\n  // extraction process (ng xi18n) relies on a raw content to generate\n  // message ids\n  rootNodes =\n      html.visitAll(new I18nMetaVisitor(interpolationConfig, !preserveWhitespaces), rootNodes);\n\n  if (!preserveWhitespaces) {\n    rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n\n    // run i18n meta visitor again in case we remove whitespaces, because\n    // that might affect generated i18n message content. During this pass\n    // i18n IDs generated at the first pass will be preserved, so we can mimic\n    // existing extraction process (ng xi18n)\n    rootNodes = html.visitAll(\n        new I18nMetaVisitor(interpolationConfig, /* keepI18nAttrs */ false), rootNodes);\n  }\n\n  const {nodes, errors, styleUrls, styles} = htmlAstToRender3Ast(rootNodes, bindingParser);\n  if (errors && errors.length > 0) {\n    return {errors, nodes: [], styleUrls: [], styles: []};\n  }\n\n  return {nodes, styleUrls, styles};\n}\n\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nexport function makeBindingParser(\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): BindingParser {\n  return new BindingParser(\n      new Parser(new Lexer()), interpolationConfig, new DomElementSchemaRegistry(), null, []);\n}\n\nexport function resolveSanitizationFn(context: core.SecurityContext, isAttribute?: boolean) {\n  switch (context) {\n    case core.SecurityContext.HTML:\n      return o.importExpr(R3.sanitizeHtml);\n    case core.SecurityContext.SCRIPT:\n      return o.importExpr(R3.sanitizeScript);\n    case core.SecurityContext.STYLE:\n      // the compiler does not fill in an instruction for [style.prop?] binding\n      // values because the style algorithm knows internally what props are subject\n      // to sanitization (only [attr.style] values are explicitly sanitized)\n      return isAttribute ? o.importExpr(R3.sanitizeStyle) : null;\n    case core.SecurityContext.URL:\n      return o.importExpr(R3.sanitizeUrl);\n    case core.SecurityContext.RESOURCE_URL:\n      return o.importExpr(R3.sanitizeResourceUrl);\n    default:\n      return null;\n  }\n}\n\nfunction isSingleElementTemplate(children: t.Node[]): children is[t.Element] {\n  return children.length === 1 && children[0] instanceof t.Element;\n}\n\nfunction isTextNode(node: t.Node): boolean {\n  return node instanceof t.Text || node instanceof t.BoundText || node instanceof t.Icu;\n}\n\nfunction hasTextChildrenOnly(children: t.Node[]): boolean {\n  return children.every(isTextNode);\n}\n\ninterface ChainableBindingInstruction {\n  name?: string;\n  sourceSpan: ParseSourceSpan|null;\n  value: () => o.Expression;\n  params?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '../../aot/static_symbol';\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileQueryMetadata, CompileTokenMetadata, identifierName, sanitizeIdentifier} from '../../compile_metadata';\nimport {CompileReflector} from '../../compile_reflector';\nimport {BindingForm, convertPropertyBinding} from '../../compiler_util/expression_converter';\nimport {ConstantPool, DefinitionKind} from '../../constant_pool';\nimport * as core from '../../core';\nimport {AST, Interpolation, ParsedEvent, ParsedEventType, ParsedProperty} from '../../expression_parser/ast';\nimport {DEFAULT_INTERPOLATION_CONFIG} from '../../ml_parser/interpolation_config';\nimport * as o from '../../output/output_ast';\nimport {ParseError, ParseSourceSpan, typeSourceSpan} from '../../parse_util';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {ShadowCss} from '../../shadow_css';\nimport {CONTENT_ATTR, HOST_ATTR} from '../../style_compiler';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {OutputContext, error} from '../../util';\nimport {BoundEvent} from '../r3_ast';\nimport {compileFactoryFunction, dependenciesFromGlobalMetadata} from '../r3_factory';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {Render3ParseResult} from '../r3_template_transform';\nimport {prepareSyntheticListenerFunctionName, prepareSyntheticPropertyName, typeWithParameters} from '../util';\n\nimport {R3ComponentDef, R3ComponentMetadata, R3DirectiveDef, R3DirectiveMetadata, R3HostMetadata, R3QueryMetadata} from './api';\nimport {StylingBuilder, StylingInstruction} from './styling_builder';\nimport {BindingScope, TemplateDefinitionBuilder, ValueConverter, makeBindingParser, prepareEventListenerParameters, renderFlagCheckIfStmt, resolveSanitizationFn} from './template';\nimport {CONTEXT_NAME, DefinitionMap, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, chainedInstruction, conditionallyCreateMapObjectLiteral, getQueryPredicate, temporaryAllocator} from './util';\n\nconst EMPTY_ARRAY: any[] = [];\n\n// This regex matches any binding names that contain the \"attr.\" prefix, e.g. \"attr.required\"\n// If there is a match, the first matching group will contain the attribute name to bind.\nconst ATTR_REGEX = /attr\\.([^\\]]+)/;\n\nfunction getStylingPrefix(name: string): string {\n  return name.substring(0, 5);  // style or class\n}\n\nfunction baseDirectiveFields(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): {definitionMap: DefinitionMap, statements: o.Statement[]} {\n  const definitionMap = new DefinitionMap();\n\n  // e.g. `type: MyDirective`\n  definitionMap.set('type', meta.type);\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  definitionMap.set('selectors', createDirectiveSelector(meta.selector));\n\n\n  // e.g. `factory: () => new MyApp(directiveInject(ElementRef))`\n  const result = compileFactoryFunction({\n    name: meta.name,\n    type: meta.type,\n    deps: meta.deps,\n    injectFn: R3.directiveInject,\n  });\n  definitionMap.set('factory', result.factory);\n\n  if (meta.queries.length > 0) {\n    // e.g. `contentQueries: (rf, ctx, dirIndex) => { ... }\n    definitionMap.set(\n        'contentQueries', createContentQueriesFunction(meta.queries, constantPool, meta.name));\n  }\n\n  if (meta.viewQueries.length) {\n    definitionMap.set(\n        'viewQuery', createViewQueriesFunction(meta.viewQueries, constantPool, meta.name));\n  }\n\n  // e.g. `hostBindings: (rf, ctx, elIndex) => { ... }\n  definitionMap.set(\n      'hostBindings', createHostBindingsFunction(\n                          meta.host, meta.typeSourceSpan, bindingParser, constantPool,\n                          meta.selector || '', meta.name));\n\n  // e.g 'inputs: {a: 'a'}`\n  definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs, true));\n\n  // e.g 'outputs: {a: 'a'}`\n  definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n\n  if (meta.exportAs !== null) {\n    definitionMap.set('exportAs', o.literalArr(meta.exportAs.map(e => o.literal(e))));\n  }\n\n  return {definitionMap, statements: result.statements};\n}\n\n/**\n * Add features to the definition map.\n */\nfunction addFeatures(\n    definitionMap: DefinitionMap, meta: R3DirectiveMetadata | R3ComponentMetadata) {\n  // e.g. `features: [NgOnChangesFeature()]`\n  const features: o.Expression[] = [];\n\n  const providers = meta.providers;\n  const viewProviders = (meta as R3ComponentMetadata).viewProviders;\n  if (providers || viewProviders) {\n    const args = [providers || new o.LiteralArrayExpr([])];\n    if (viewProviders) {\n      args.push(viewProviders);\n    }\n    features.push(o.importExpr(R3.ProvidersFeature).callFn(args));\n  }\n\n  if (meta.usesInheritance) {\n    features.push(o.importExpr(R3.InheritDefinitionFeature));\n  }\n  if (meta.lifecycle.usesOnChanges) {\n    features.push(o.importExpr(R3.NgOnChangesFeature).callFn(EMPTY_ARRAY));\n  }\n  if (features.length) {\n    definitionMap.set('features', o.literalArr(features));\n  }\n}\n\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3DirectiveDef {\n  const {definitionMap, statements} = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n  const expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n\n  if (!meta.selector) {\n    throw new Error(`Directive ${meta.name} has no selector, please add it!`);\n  }\n\n  const type = createTypeForDef(meta, R3.DirectiveDefWithMeta);\n  return {expression, type, statements};\n}\n\nexport interface R3BaseRefMetaData {\n  name: string;\n  type: o.Expression;\n  typeSourceSpan: ParseSourceSpan;\n  inputs?: {[key: string]: string | [string, string]};\n  outputs?: {[key: string]: string};\n  viewQueries?: R3QueryMetadata[];\n  queries?: R3QueryMetadata[];\n  host?: R3HostMetadata;\n}\n\n/**\n * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n * @param meta the metadata used for compilation.\n */\nexport function compileBaseDefFromMetadata(\n    meta: R3BaseRefMetaData, constantPool: ConstantPool, bindingParser: BindingParser) {\n  const definitionMap = new DefinitionMap();\n  if (meta.inputs) {\n    const inputs = meta.inputs;\n    const inputsMap = Object.keys(inputs).map(key => {\n      const v = inputs[key];\n      const value = Array.isArray(v) ? o.literalArr(v.map(vx => o.literal(vx))) : o.literal(v);\n      return {key, value, quoted: false};\n    });\n    definitionMap.set('inputs', o.literalMap(inputsMap));\n  }\n  if (meta.outputs) {\n    const outputs = meta.outputs;\n    const outputsMap = Object.keys(outputs).map(key => {\n      const value = o.literal(outputs[key]);\n      return {key, value, quoted: false};\n    });\n    definitionMap.set('outputs', o.literalMap(outputsMap));\n  }\n  if (meta.viewQueries && meta.viewQueries.length > 0) {\n    definitionMap.set('viewQuery', createViewQueriesFunction(meta.viewQueries, constantPool));\n  }\n  if (meta.queries && meta.queries.length > 0) {\n    definitionMap.set('contentQueries', createContentQueriesFunction(meta.queries, constantPool));\n  }\n  if (meta.host) {\n    definitionMap.set(\n        'hostBindings',\n        createHostBindingsFunction(\n            meta.host, meta.typeSourceSpan, bindingParser, constantPool, meta.name));\n  }\n\n  const expression = o.importExpr(R3.defineBase).callFn([definitionMap.toLiteralMap()]);\n  const type = new o.ExpressionType(\n      o.importExpr(R3.BaseDef), /* modifiers */ null, [o.expressionType(meta.type)]);\n\n  return {expression, type};\n}\n\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(\n    meta: R3ComponentMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3ComponentDef {\n  const {definitionMap, statements} = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n\n  const selector = meta.selector && CssSelector.parse(meta.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]`\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      definitionMap.set(\n          'attrs', constantPool.getConstLiteral(\n                       o.literalArr(selectorAttributes.map(\n                           value => value != null ? o.literal(value) : o.literal(undefined))),\n                       /* forceShared */ true));\n    }\n  }\n\n  // Generate the CSS matcher that recognize directive\n  let directiveMatcher: SelectorMatcher|null = null;\n\n  if (meta.directives.length > 0) {\n    const matcher = new SelectorMatcher();\n    for (const {selector, expression} of meta.directives) {\n      matcher.addSelectables(CssSelector.parse(selector), expression);\n    }\n    directiveMatcher = matcher;\n  }\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = meta.name;\n  const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n\n  const directivesUsed = new Set<o.Expression>();\n  const pipesUsed = new Set<o.Expression>();\n  const changeDetection = meta.changeDetection;\n\n  const template = meta.template;\n  const templateBuilder = new TemplateDefinitionBuilder(\n      constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, null, null, templateName,\n      directiveMatcher, directivesUsed, meta.pipes, pipesUsed, R3.namespaceHTML,\n      meta.relativeContextFilePath, meta.i18nUseExternalIds);\n\n  const templateFunctionExpression = templateBuilder.buildTemplateFunction(template.nodes, []);\n\n  // We need to provide this so that dynamically generated components know what\n  // projected content blocks to pass through to the component when it is instantiated.\n  const ngContentSelectors = templateBuilder.getNgContentSelectors();\n  if (ngContentSelectors) {\n    definitionMap.set('ngContentSelectors', ngContentSelectors);\n  }\n\n  // e.g. `consts: 2`\n  definitionMap.set('consts', o.literal(templateBuilder.getConstCount()));\n\n  // e.g. `vars: 2`\n  definitionMap.set('vars', o.literal(templateBuilder.getVarCount()));\n\n  definitionMap.set('template', templateFunctionExpression);\n\n  // e.g. `directives: [MyDirective]`\n  if (directivesUsed.size) {\n    let directivesExpr: o.Expression = o.literalArr(Array.from(directivesUsed));\n    if (meta.wrapDirectivesAndPipesInClosure) {\n      directivesExpr = o.fn([], [new o.ReturnStatement(directivesExpr)]);\n    }\n    definitionMap.set('directives', directivesExpr);\n  }\n\n  // e.g. `pipes: [MyPipe]`\n  if (pipesUsed.size) {\n    let pipesExpr: o.Expression = o.literalArr(Array.from(pipesUsed));\n    if (meta.wrapDirectivesAndPipesInClosure) {\n      pipesExpr = o.fn([], [new o.ReturnStatement(pipesExpr)]);\n    }\n    definitionMap.set('pipes', pipesExpr);\n  }\n\n  if (meta.encapsulation === null) {\n    meta.encapsulation = core.ViewEncapsulation.Emulated;\n  }\n\n  // e.g. `styles: [str1, str2]`\n  if (meta.styles && meta.styles.length) {\n    const styleValues = meta.encapsulation == core.ViewEncapsulation.Emulated ?\n        compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n        meta.styles;\n    const strings = styleValues.map(str => o.literal(str));\n    definitionMap.set('styles', o.literalArr(strings));\n  } else if (meta.encapsulation === core.ViewEncapsulation.Emulated) {\n    // If there is no style, don't generate css selectors on elements\n    meta.encapsulation = core.ViewEncapsulation.None;\n  }\n\n  // Only set view encapsulation if it's not the default value\n  if (meta.encapsulation !== core.ViewEncapsulation.Emulated) {\n    definitionMap.set('encapsulation', o.literal(meta.encapsulation));\n  }\n\n  // e.g. `animation: [trigger('123', [])]`\n  if (meta.animations !== null) {\n    definitionMap.set(\n        'data', o.literalMap([{key: 'animation', value: meta.animations, quoted: false}]));\n  }\n\n  // Only set the change detection flag if it's defined and it's not the default.\n  if (changeDetection != null && changeDetection !== core.ChangeDetectionStrategy.Default) {\n    definitionMap.set('changeDetection', o.literal(changeDetection));\n  }\n\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  const expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n  const type = createTypeForDef(meta, R3.ComponentDefWithMeta);\n\n  return {expression, type, statements};\n}\n\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileDirectiveFromRender2(\n    outputCtx: OutputContext, directive: CompileDirectiveMetadata, reflector: CompileReflector,\n    bindingParser: BindingParser) {\n  const name = identifierName(directive.type) !;\n  name || error(`Cannot resolver the name of ${directive.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Directive);\n\n  const meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n  const res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileComponentFromRender2(\n    outputCtx: OutputContext, component: CompileDirectiveMetadata, render3Ast: Render3ParseResult,\n    reflector: CompileReflector, bindingParser: BindingParser, directiveTypeBySel: Map<string, any>,\n    pipeTypeByName: Map<string, any>) {\n  const name = identifierName(component.type) !;\n  name || error(`Cannot resolver the name of ${component.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Component);\n\n  const summary = component.toSummary();\n\n  // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n  const meta: R3ComponentMetadata = {\n    ...directiveMetadataFromGlobalMetadata(component, outputCtx, reflector),\n    selector: component.selector,\n    template: {nodes: render3Ast.nodes},\n    directives: [],\n    pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx),\n    viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx),\n    wrapDirectivesAndPipesInClosure: false,\n    styles: (summary.template && summary.template.styles) || EMPTY_ARRAY,\n    encapsulation:\n        (summary.template && summary.template.encapsulation) || core.ViewEncapsulation.Emulated,\n    interpolation: DEFAULT_INTERPOLATION_CONFIG,\n    animations: null,\n    viewProviders:\n        component.viewProviders.length > 0 ? new o.WrappedNodeExpr(component.viewProviders) : null,\n    relativeContextFilePath: '',\n    i18nUseExternalIds: true,\n  };\n  const res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(\n    directive: CompileDirectiveMetadata, outputCtx: OutputContext,\n    reflector: CompileReflector): R3DirectiveMetadata {\n  // The global-analysis based Ivy mode in ngc is no longer utilized/supported.\n  throw new Error('unsupported');\n}\n\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(\n    queries: CompileQueryMetadata[], outputCtx: OutputContext): R3QueryMetadata[] {\n  return queries.map(query => {\n    let read: o.Expression|null = null;\n    if (query.read && query.read.identifier) {\n      read = outputCtx.importExpr(query.read.identifier.reference);\n    }\n    return {\n      propertyName: query.propertyName,\n      first: query.first,\n      predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n      descendants: query.descendants, read,\n      static: !!query.static\n    };\n  });\n}\n\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(\n    selectors: CompileTokenMetadata[], outputCtx: OutputContext): o.Expression|string[] {\n  if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n    const selectorStrings = selectors.map(value => value.value as string);\n    selectorStrings.some(value => !value) &&\n        error('Found a type among the string selectors expected');\n    return outputCtx.constantPool.getConstLiteral(\n        o.literalArr(selectorStrings.map(value => o.literal(value))));\n  }\n\n  if (selectors.length == 1) {\n    const first = selectors[0];\n    if (first.identifier) {\n      return outputCtx.importExpr(first.identifier.reference);\n    }\n  }\n\n  error('Unexpected query form');\n  return o.NULL_EXPR;\n}\n\nfunction prepareQueryParams(query: R3QueryMetadata, constantPool: ConstantPool): o.Expression[] {\n  const parameters = [getQueryPredicate(query, constantPool), o.literal(query.descendants)];\n  if (query.read) {\n    parameters.push(query.read);\n  }\n  return parameters;\n}\n\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector: string | null): o.Expression {\n  return asLiteral(core.parseSelectorToR3Selector(selector));\n}\n\nfunction convertAttributesToExpressions(attributes: {[name: string]: o.Expression}):\n    o.Expression[] {\n  const values: o.Expression[] = [];\n  for (let key of Object.getOwnPropertyNames(attributes)) {\n    const value = attributes[key];\n    values.push(o.literal(key), value);\n  }\n  return values;\n}\n\n// Define and update any content queries\nfunction createContentQueriesFunction(\n    queries: R3QueryMetadata[], constantPool: ConstantPool, name?: string): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: o.Statement[] = [];\n  const tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n\n  for (const query of queries) {\n    const queryInstruction = query.static ? R3.staticContentQuery : R3.contentQuery;\n\n    // creation, e.g. r3.contentQuery(dirIndex, somePredicate, true, null);\n    createStatements.push(\n        o.importExpr(queryInstruction)\n            .callFn([o.variable('dirIndex'), ...prepareQueryParams(query, constantPool) as any])\n            .toStmt());\n\n    // update, e.g. (r3.queryRefresh(tmp = r3.loadContentQuery()) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.loadContentQuery).callFn([]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o.variable(CONTEXT_NAME)\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  }\n\n  const contentQueriesFnName = name ? `${name}_ContentQueries` : null;\n  return o.fn(\n      [\n        new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null),\n        new o.FnParam('dirIndex', null)\n      ],\n      [\n        renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n        renderFlagCheckIfStmt(core.RenderFlags.Update, updateStatements)\n      ],\n      o.INFERRED_TYPE, null, contentQueriesFnName);\n}\n\nfunction stringAsType(str: string): o.Type {\n  return o.expressionType(o.literal(str));\n}\n\nfunction stringMapAsType(map: {[key: string]: string | string[]}): o.Type {\n  const mapValues = Object.keys(map).map(key => {\n    const value = Array.isArray(map[key]) ? map[key][0] : map[key];\n    return {\n      key,\n      value: o.literal(value),\n      quoted: true,\n    };\n  });\n  return o.expressionType(o.literalMap(mapValues));\n}\n\nfunction stringArrayAsType(arr: string[]): o.Type {\n  return arr.length > 0 ? o.expressionType(o.literalArr(arr.map(value => o.literal(value)))) :\n                          o.NONE_TYPE;\n}\n\nfunction createTypeForDef(meta: R3DirectiveMetadata, typeBase: o.ExternalReference): o.Type {\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  return o.expressionType(o.importExpr(typeBase, [\n    typeWithParameters(meta.type, meta.typeArgumentCount),\n    stringAsType(selectorForType),\n    meta.exportAs !== null ? stringArrayAsType(meta.exportAs) : o.NONE_TYPE,\n    stringMapAsType(meta.inputs),\n    stringMapAsType(meta.outputs),\n    stringArrayAsType(meta.queries.map(q => q.propertyName)),\n  ]));\n}\n\n// Define and update any view queries\nfunction createViewQueriesFunction(\n    viewQueries: R3QueryMetadata[], constantPool: ConstantPool, name?: string): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: o.Statement[] = [];\n  const tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n\n  viewQueries.forEach((query: R3QueryMetadata) => {\n    const queryInstruction = query.static ? R3.staticViewQuery : R3.viewQuery;\n\n    // creation, e.g. r3.viewQuery(somePredicate, true);\n    const queryDefinition =\n        o.importExpr(queryInstruction).callFn(prepareQueryParams(query, constantPool));\n    createStatements.push(queryDefinition.toStmt());\n\n    // update, e.g. (r3.queryRefresh(tmp = r3.loadViewQuery()) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.loadViewQuery).callFn([]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o.variable(CONTEXT_NAME)\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  });\n\n  const viewQueryFnName = name ? `${name}_Query` : null;\n  return o.fn(\n      [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)],\n      [\n        renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n        renderFlagCheckIfStmt(core.RenderFlags.Update, updateStatements)\n      ],\n      o.INFERRED_TYPE, null, viewQueryFnName);\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n    hostBindingsMetadata: R3HostMetadata, typeSourceSpan: ParseSourceSpan,\n    bindingParser: BindingParser, constantPool: ConstantPool, selector: string,\n    name?: string): o.Expression|null {\n  // Initialize hostVarsCount to number of bound host properties (interpolations illegal)\n  const hostVarsCount = Object.keys(hostBindingsMetadata.properties).length;\n  const elVarExp = o.variable('elIndex');\n  const bindingContext = o.variable(CONTEXT_NAME);\n  const styleBuilder = new StylingBuilder(elVarExp, bindingContext);\n\n  const {styleAttr, classAttr} = hostBindingsMetadata.specialAttributes;\n  if (styleAttr !== undefined) {\n    styleBuilder.registerStyleAttr(styleAttr);\n  }\n  if (classAttr !== undefined) {\n    styleBuilder.registerClassAttr(classAttr);\n  }\n\n  const createStatements: o.Statement[] = [];\n  const updateStatements: o.Statement[] = [];\n\n  let totalHostVarsCount = hostVarsCount;\n  const hostBindingSourceSpan = typeSourceSpan;\n  const directiveSummary = metadataAsSummary(hostBindingsMetadata);\n\n  let valueConverter: ValueConverter;\n  const getValueConverter = () => {\n    if (!valueConverter) {\n      const hostVarsCountFn = (numSlots: number): number => {\n        const originalVarsCount = totalHostVarsCount;\n        totalHostVarsCount += numSlots;\n        return originalVarsCount;\n      };\n      valueConverter = new ValueConverter(\n          constantPool,\n          () => error('Unexpected node'),  // new nodes are illegal here\n          hostVarsCountFn,\n          () => error('Unexpected pipe'));  // pipes are illegal here\n    }\n    return valueConverter;\n  };\n\n  // Calculate host event bindings\n  const eventBindings =\n      bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n  if (eventBindings && eventBindings.length) {\n    const listeners = createHostListeners(eventBindings, name);\n    createStatements.push(...listeners);\n  }\n\n  // Calculate the host property bindings\n  const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n  const propertyBindings: o.Expression[][] = [];\n  const attributeBindings: o.Expression[][] = [];\n  const syntheticHostBindings: o.Expression[][] = [];\n\n  bindings && bindings.forEach((binding: ParsedProperty) => {\n    const name = binding.name;\n    const stylingInputWasSet =\n        styleBuilder.registerInputBasedOnName(name, binding.expression, binding.sourceSpan);\n    if (!stylingInputWasSet) {\n      // resolve literal arrays and literal objects\n      const value = binding.expression.visit(getValueConverter());\n      const bindingExpr = bindingFn(bindingContext, value);\n\n      const {bindingName, instruction, isAttribute} = getBindingNameAndInstruction(binding);\n\n      const securityContexts =\n          bindingParser.calcPossibleSecurityContexts(selector, bindingName, isAttribute)\n              .filter(context => context !== core.SecurityContext.NONE);\n\n      let sanitizerFn: o.ExternalExpr|null = null;\n      if (securityContexts.length) {\n        if (securityContexts.length === 2 &&\n            securityContexts.indexOf(core.SecurityContext.URL) > -1 &&\n            securityContexts.indexOf(core.SecurityContext.RESOURCE_URL) > -1) {\n          // Special case for some URL attributes (such as \"src\" and \"href\") that may be a part\n          // of different security contexts. In this case we use special santitization function and\n          // select the actual sanitizer at runtime based on a tag name that is provided while\n          // invoking sanitization function.\n          sanitizerFn = o.importExpr(R3.sanitizeUrlOrResourceUrl);\n        } else {\n          sanitizerFn = resolveSanitizationFn(securityContexts[0], isAttribute);\n        }\n      }\n      const instructionParams = [o.literal(bindingName), bindingExpr.currValExpr];\n      if (sanitizerFn) {\n        instructionParams.push(sanitizerFn);\n      }\n\n      updateStatements.push(...bindingExpr.stmts);\n\n      if (instruction === R3.hostProperty) {\n        propertyBindings.push(instructionParams);\n      } else if (instruction === R3.attribute) {\n        attributeBindings.push(instructionParams);\n      } else if (instruction === R3.updateSyntheticHostBinding) {\n        syntheticHostBindings.push(instructionParams);\n      } else {\n        updateStatements.push(o.importExpr(instruction).callFn(instructionParams).toStmt());\n      }\n    }\n  });\n\n  if (propertyBindings.length > 0) {\n    updateStatements.push(chainedInstruction(R3.hostProperty, propertyBindings).toStmt());\n  }\n\n  if (attributeBindings.length > 0) {\n    updateStatements.push(chainedInstruction(R3.attribute, attributeBindings).toStmt());\n  }\n\n  if (syntheticHostBindings.length > 0) {\n    updateStatements.push(\n        chainedInstruction(R3.updateSyntheticHostBinding, syntheticHostBindings).toStmt());\n  }\n\n  // since we're dealing with directives/components and both have hostBinding\n  // functions, we need to generate a special hostAttrs instruction that deals\n  // with both the assignment of styling as well as static attributes to the host\n  // element. The instruction below will instruct all initial styling (styling\n  // that is inside of a host binding within a directive/component) to be attached\n  // to the host element alongside any of the provided host attributes that were\n  // collected earlier.\n  const hostAttrs = convertAttributesToExpressions(hostBindingsMetadata.attributes);\n  const hostInstruction = styleBuilder.buildHostAttrsInstruction(null, hostAttrs, constantPool);\n  if (hostInstruction) {\n    createStatements.push(createStylingStmt(hostInstruction, bindingContext, bindingFn));\n  }\n\n  if (styleBuilder.hasBindings) {\n    // singular style/class bindings (things like `[style.prop]` and `[class.name]`)\n    // MUST be registered on a given element within the component/directive\n    // templateFn/hostBindingsFn functions. The instruction below will figure out\n    // what all the bindings are and then generate the statements required to register\n    // those bindings to the element via `styling`.\n    const stylingInstruction = styleBuilder.buildStylingInstruction(null, constantPool);\n    if (stylingInstruction) {\n      createStatements.push(createStylingStmt(stylingInstruction, bindingContext, bindingFn));\n    }\n\n    // finally each binding that was registered in the statement above will need to be added to\n    // the update block of a component/directive templateFn/hostBindingsFn so that the bindings\n    // are evaluated and updated for the element.\n    styleBuilder.buildUpdateLevelInstructions(getValueConverter()).forEach(instruction => {\n      // we subtract a value of `1` here because the binding slot was already\n      // allocated at the top of this method when all the input bindings were\n      // counted.\n      totalHostVarsCount += Math.max(instruction.allocateBindingSlots - 1, 0);\n      updateStatements.push(createStylingStmt(instruction, bindingContext, bindingFn));\n    });\n  }\n\n  if (totalHostVarsCount) {\n    createStatements.unshift(\n        o.importExpr(R3.allocHostVars).callFn([o.literal(totalHostVarsCount)]).toStmt());\n  }\n\n  if (createStatements.length > 0 || updateStatements.length > 0) {\n    const hostBindingsFnName = name ? `${name}_HostBindings` : null;\n    const statements: o.Statement[] = [];\n    if (createStatements.length > 0) {\n      statements.push(renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements));\n    }\n    if (updateStatements.length > 0) {\n      statements.push(renderFlagCheckIfStmt(core.RenderFlags.Update, updateStatements));\n    }\n    return o.fn(\n        [\n          new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null),\n          new o.FnParam(elVarExp.name !, o.NUMBER_TYPE)\n        ],\n        statements, o.INFERRED_TYPE, null, hostBindingsFnName);\n  }\n\n  return null;\n}\n\nfunction bindingFn(implicit: any, value: AST) {\n  return convertPropertyBinding(\n      null, implicit, value, 'b', BindingForm.TrySimple, () => error('Unexpected interpolation'));\n}\n\nfunction createStylingStmt(\n    instruction: StylingInstruction, bindingContext: any, bindingFn: Function): o.Statement {\n  const params = instruction.params(value => bindingFn(bindingContext, value).currValExpr);\n  return o.importExpr(instruction.reference, null, instruction.sourceSpan)\n      .callFn(params, instruction.sourceSpan)\n      .toStmt();\n}\n\nfunction getBindingNameAndInstruction(binding: ParsedProperty):\n    {bindingName: string, instruction: o.ExternalReference, isAttribute: boolean} {\n  let bindingName = binding.name;\n  let instruction !: o.ExternalReference;\n\n  // Check to see if this is an attr binding or a property binding\n  const attrMatches = bindingName.match(ATTR_REGEX);\n  if (attrMatches) {\n    bindingName = attrMatches[1];\n    instruction = R3.attribute;\n  } else {\n    if (binding.isAnimation) {\n      bindingName = prepareSyntheticPropertyName(bindingName);\n      // host bindings that have a synthetic property (e.g. @foo) should always be rendered\n      // in the context of the component and not the parent. Therefore there is a special\n      // compatibility instruction available for this purpose.\n      instruction = R3.updateSyntheticHostBinding;\n    } else {\n      instruction = R3.hostProperty;\n    }\n  }\n\n  return {bindingName, instruction, isAttribute: !!attrMatches};\n}\n\nfunction createHostListeners(eventBindings: ParsedEvent[], name?: string): o.Statement[] {\n  return eventBindings.map(binding => {\n    let bindingName = binding.name && sanitizeIdentifier(binding.name);\n    const bindingFnName = binding.type === ParsedEventType.Animation ?\n        prepareSyntheticListenerFunctionName(bindingName, binding.targetOrPhase) :\n        bindingName;\n    const handlerName = name && bindingName ? `${name}_${bindingFnName}_HostBindingHandler` : null;\n    const params = prepareEventListenerParameters(BoundEvent.fromParsedEvent(binding), handlerName);\n    const instruction =\n        binding.type == ParsedEventType.Animation ? R3.componentHostSyntheticListener : R3.listener;\n    return o.importExpr(instruction).callFn(params).toStmt();\n  });\n}\n\nfunction metadataAsSummary(meta: R3HostMetadata): CompileDirectiveSummary {\n  // clang-format off\n  return {\n    // This is used by the BindingParser, which only deals with listeners and properties. There's no\n    // need to pass attributes to it.\n    hostAttributes: {},\n    hostListeners: meta.listeners,\n    hostProperties: meta.properties,\n  } as CompileDirectiveSummary;\n  // clang-format on\n}\n\n\nfunction typeMapToExpressionMap(\n    map: Map<string, StaticSymbol>, outputCtx: OutputContext): Map<string, o.Expression> {\n  // Convert each map entry into another entry where the value is an expression importing the type.\n  const entries = Array.from(map).map(\n      ([key, type]): [string, o.Expression] => [key, outputCtx.importExpr(type)]);\n  return new Map(entries);\n}\n\nconst HOST_REG_EXP = /^(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\))$/;\n// Represents the groups in the above regex.\nconst enum HostBindingGroup {\n  // group 1: \"prop\" from \"[prop]\", or \"attr.role\" from \"[attr.role]\", or @anim from [@anim]\n  Binding = 1,\n\n  // group 2: \"event\" from \"(event)\"\n  Event = 2,\n}\n\n// Defines Host Bindings structure that contains attributes, listeners, and properties,\n// parsed from the `host` object defined for a Type.\nexport interface ParsedHostBindings {\n  attributes: {[key: string]: o.Expression};\n  listeners: {[key: string]: string};\n  properties: {[key: string]: string};\n  specialAttributes: {styleAttr?: string; classAttr?: string;};\n}\n\nexport function parseHostBindings(host: {[key: string]: string | o.Expression}):\n    ParsedHostBindings {\n  const attributes: {[key: string]: o.Expression} = {};\n  const listeners: {[key: string]: string} = {};\n  const properties: {[key: string]: string} = {};\n  const specialAttributes: {styleAttr?: string; classAttr?: string;} = {};\n\n  for (const key of Object.keys(host)) {\n    const value = host[key];\n    const matches = key.match(HOST_REG_EXP);\n\n    if (matches === null) {\n      switch (key) {\n        case 'class':\n          if (typeof value !== 'string') {\n            // TODO(alxhub): make this a diagnostic.\n            throw new Error(`Class binding must be string`);\n          }\n          specialAttributes.classAttr = value;\n          break;\n        case 'style':\n          if (typeof value !== 'string') {\n            // TODO(alxhub): make this a diagnostic.\n            throw new Error(`Style binding must be string`);\n          }\n          specialAttributes.styleAttr = value;\n          break;\n        default:\n          if (typeof value === 'string') {\n            attributes[key] = o.literal(value);\n          } else {\n            attributes[key] = value;\n          }\n      }\n    } else if (matches[HostBindingGroup.Binding] != null) {\n      if (typeof value !== 'string') {\n        // TODO(alxhub): make this a diagnostic.\n        throw new Error(`Property binding must be string`);\n      }\n      // synthetic properties (the ones that have a `@` as a prefix)\n      // are still treated the same as regular properties. Therefore\n      // there is no point in storing them in a separate map.\n      properties[matches[HostBindingGroup.Binding]] = value;\n    } else if (matches[HostBindingGroup.Event] != null) {\n      if (typeof value !== 'string') {\n        // TODO(alxhub): make this a diagnostic.\n        throw new Error(`Event binding must be string`);\n      }\n      listeners[matches[HostBindingGroup.Event]] = value;\n    }\n  }\n\n  return {attributes, listeners, properties, specialAttributes};\n}\n\n/**\n * Verifies host bindings and returns the list of errors (if any). Empty array indicates that a\n * given set of host bindings has no errors.\n *\n * @param bindings set of host bindings to verify.\n * @param sourceSpan source span where host bindings were defined.\n * @returns array of errors associated with a given set of host bindings.\n */\nexport function verifyHostBindings(\n    bindings: ParsedHostBindings, sourceSpan: ParseSourceSpan): ParseError[] {\n  const summary = metadataAsSummary(bindings);\n  // TODO: abstract out host bindings verification logic and use it instead of\n  // creating events and properties ASTs to detect errors (FW-996)\n  const bindingParser = makeBindingParser();\n  bindingParser.createDirectiveHostEventAsts(summary, sourceSpan);\n  bindingParser.createBoundHostProperties(summary, sourceSpan);\n  return bindingParser.errors;\n}\n\nfunction compileStyles(styles: string[], selector: string, hostSelector: string): string[] {\n  const shadowCss = new ShadowCss();\n  return styles.map(style => { return shadowCss !.shimCssText(style, selector, hostSelector); });\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nexport class ResourceLoader {\n  get(url: string): Promise<string>|string { return ''; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompilerFacade, CoreEnvironment, ExportedCompilerFacade, R3BaseMetadataFacade, R3ComponentMetadataFacade, R3DependencyMetadataFacade, R3DirectiveMetadataFacade, R3InjectableMetadataFacade, R3InjectorMetadataFacade, R3NgModuleMetadataFacade, R3PipeMetadataFacade, R3QueryMetadataFacade, StringMap, StringMapWithRename} from './compiler_facade_interface';\nimport {ConstantPool} from './constant_pool';\nimport {HostBinding, HostListener, Input, Output, Type} from './core';\nimport {compileInjectable} from './injectable_compiler_2';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './ml_parser/interpolation_config';\nimport {DeclareVarStmt, Expression, LiteralExpr, Statement, StmtModifier, WrappedNodeExpr} from './output/output_ast';\nimport {JitEvaluator} from './output/output_jit';\nimport {ParseError, ParseSourceSpan, r3JitTypeSourceSpan} from './parse_util';\nimport {R3DependencyMetadata, R3ResolvedDependencyType} from './render3/r3_factory';\nimport {R3JitReflector} from './render3/r3_jit';\nimport {R3InjectorMetadata, R3NgModuleMetadata, compileInjector, compileNgModule} from './render3/r3_module_compiler';\nimport {compilePipeFromMetadata} from './render3/r3_pipe_compiler';\nimport {R3Reference} from './render3/util';\nimport {R3DirectiveMetadata, R3QueryMetadata} from './render3/view/api';\nimport {ParsedHostBindings, compileBaseDefFromMetadata, compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings, verifyHostBindings} from './render3/view/compiler';\nimport {makeBindingParser, parseTemplate} from './render3/view/template';\nimport {ResourceLoader} from './resource_loader';\nimport {DomElementSchemaRegistry} from './schema/dom_element_schema_registry';\n\nexport class CompilerFacadeImpl implements CompilerFacade {\n  R3ResolvedDependencyType = R3ResolvedDependencyType as any;\n  ResourceLoader = ResourceLoader;\n  private elementSchemaRegistry = new DomElementSchemaRegistry();\n\n  constructor(private jitEvaluator = new JitEvaluator()) {}\n\n  compilePipe(angularCoreEnv: CoreEnvironment, sourceMapUrl: string, facade: R3PipeMetadataFacade):\n      any {\n    const res = compilePipeFromMetadata({\n      name: facade.name,\n      type: new WrappedNodeExpr(facade.type),\n      typeArgumentCount: facade.typeArgumentCount,\n      deps: convertR3DependencyMetadataArray(facade.deps),\n      pipeName: facade.pipeName,\n      pure: facade.pure,\n    });\n    return this.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n  }\n\n  compileInjectable(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      facade: R3InjectableMetadataFacade): any {\n    const {expression, statements} = compileInjectable({\n      name: facade.name,\n      type: new WrappedNodeExpr(facade.type),\n      typeArgumentCount: facade.typeArgumentCount,\n      providedIn: computeProvidedIn(facade.providedIn),\n      useClass: wrapExpression(facade, USE_CLASS),\n      useFactory: wrapExpression(facade, USE_FACTORY),\n      useValue: wrapExpression(facade, USE_VALUE),\n      useExisting: wrapExpression(facade, USE_EXISTING),\n      ctorDeps: convertR3DependencyMetadataArray(facade.ctorDeps),\n      userDeps: convertR3DependencyMetadataArray(facade.userDeps) || undefined,\n    });\n\n    return this.jitExpression(expression, angularCoreEnv, sourceMapUrl, statements);\n  }\n\n  compileInjector(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      facade: R3InjectorMetadataFacade): any {\n    const meta: R3InjectorMetadata = {\n      name: facade.name,\n      type: new WrappedNodeExpr(facade.type),\n      deps: convertR3DependencyMetadataArray(facade.deps),\n      providers: new WrappedNodeExpr(facade.providers),\n      imports: facade.imports.map(i => new WrappedNodeExpr(i)),\n    };\n    const res = compileInjector(meta);\n    return this.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n  }\n\n  compileNgModule(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      facade: R3NgModuleMetadataFacade): any {\n    const meta: R3NgModuleMetadata = {\n      type: new WrappedNodeExpr(facade.type),\n      bootstrap: facade.bootstrap.map(wrapReference),\n      declarations: facade.declarations.map(wrapReference),\n      imports: facade.imports.map(wrapReference),\n      exports: facade.exports.map(wrapReference),\n      emitInline: true,\n      containsForwardDecls: false,\n      schemas: facade.schemas ? facade.schemas.map(wrapReference) : null,\n      id: facade.id ? new WrappedNodeExpr(facade.id) : null,\n    };\n    const res = compileNgModule(meta);\n    return this.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, []);\n  }\n\n  compileDirective(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      facade: R3DirectiveMetadataFacade): any {\n    const constantPool = new ConstantPool();\n    const bindingParser = makeBindingParser();\n\n    const meta: R3DirectiveMetadata = convertDirectiveFacadeToMetadata(facade);\n    const res = compileDirectiveFromMetadata(meta, constantPool, bindingParser);\n    const preStatements = [...constantPool.statements, ...res.statements];\n    return this.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n  }\n\n  compileComponent(\n      angularCoreEnv: CoreEnvironment, sourceMapUrl: string,\n      facade: R3ComponentMetadataFacade): any {\n    // The ConstantPool is a requirement of the JIT'er.\n    const constantPool = new ConstantPool();\n\n    const interpolationConfig = facade.interpolation ?\n        InterpolationConfig.fromArray(facade.interpolation) :\n        DEFAULT_INTERPOLATION_CONFIG;\n    // Parse the template and check for errors.\n    const template = parseTemplate(\n        facade.template, sourceMapUrl,\n        {preserveWhitespaces: facade.preserveWhitespaces, interpolationConfig});\n    if (template.errors !== undefined) {\n      const errors = template.errors.map(err => err.toString()).join(', ');\n      throw new Error(`Errors during JIT compilation of template for ${facade.name}: ${errors}`);\n    }\n\n    // Compile the component metadata, including template, into an expression.\n    // TODO(alxhub): implement inputs, outputs, queries, etc.\n    const res = compileComponentFromMetadata(\n        {\n          ...facade as R3ComponentMetadataFacadeNoPropAndWhitespace,\n          ...convertDirectiveFacadeToMetadata(facade),\n          selector: facade.selector || this.elementSchemaRegistry.getDefaultComponentElementName(),\n          template,\n          wrapDirectivesAndPipesInClosure: false,\n          styles: facade.styles || [],\n          encapsulation: facade.encapsulation as any,\n          interpolation: interpolationConfig,\n          changeDetection: facade.changeDetection,\n          animations: facade.animations != null ? new WrappedNodeExpr(facade.animations) : null,\n          viewProviders: facade.viewProviders != null ? new WrappedNodeExpr(facade.viewProviders) :\n                                                        null,\n          relativeContextFilePath: '',\n          i18nUseExternalIds: true,\n        },\n        constantPool, makeBindingParser(interpolationConfig));\n    const preStatements = [...constantPool.statements, ...res.statements];\n    return this.jitExpression(\n        res.expression, angularCoreEnv, `ng:///${facade.name}.js`, preStatements);\n  }\n\n  compileBase(angularCoreEnv: CoreEnvironment, sourceMapUrl: string, facade: R3BaseMetadataFacade):\n      any {\n    const constantPool = new ConstantPool();\n    const typeSourceSpan =\n        this.createParseSourceSpan('Base', facade.name, `ng:///${facade.name}.js`);\n    const meta = {\n      ...facade,\n      typeSourceSpan,\n      viewQueries: facade.viewQueries ? facade.viewQueries.map(convertToR3QueryMetadata) :\n                                        facade.viewQueries,\n      queries: facade.queries ? facade.queries.map(convertToR3QueryMetadata) : facade.queries,\n      host: extractHostBindings(facade.propMetadata, typeSourceSpan)\n    };\n    const res = compileBaseDefFromMetadata(meta, constantPool, makeBindingParser());\n    return this.jitExpression(\n        res.expression, angularCoreEnv, sourceMapUrl, constantPool.statements);\n  }\n\n  createParseSourceSpan(kind: string, typeName: string, sourceUrl: string): ParseSourceSpan {\n    return r3JitTypeSourceSpan(kind, typeName, sourceUrl);\n  }\n\n  /**\n   * JIT compiles an expression and returns the result of executing that expression.\n   *\n   * @param def the definition which will be compiled and executed to get the value to patch\n   * @param context an object map of @angular/core symbol names to symbols which will be available\n   * in the context of the compiled expression\n   * @param sourceUrl a URL to use for the source map of the compiled expression\n   * @param preStatements a collection of statements that should be evaluated before the expression.\n   */\n  private jitExpression(\n      def: Expression, context: {[key: string]: any}, sourceUrl: string,\n      preStatements: Statement[]): any {\n    // The ConstantPool may contain Statements which declare variables used in the final expression.\n    // Therefore, its statements need to precede the actual JIT operation. The final statement is a\n    // declaration of $def which is set to the expression being compiled.\n    const statements: Statement[] = [\n      ...preStatements,\n      new DeclareVarStmt('$def', def, undefined, [StmtModifier.Exported]),\n    ];\n\n    const res = this.jitEvaluator.evaluateStatements(\n        sourceUrl, statements, new R3JitReflector(context), /* enableSourceMaps */ true);\n    return res['$def'];\n  }\n}\n\n// This seems to be needed to placate TS v3.0 only\ntype R3ComponentMetadataFacadeNoPropAndWhitespace = Pick<\n    R3ComponentMetadataFacade,\n    Exclude<Exclude<keyof R3ComponentMetadataFacade, 'preserveWhitespaces'>, 'propMetadata'>>;\n\nconst USE_CLASS = Object.keys({useClass: null})[0];\nconst USE_FACTORY = Object.keys({useFactory: null})[0];\nconst USE_VALUE = Object.keys({useValue: null})[0];\nconst USE_EXISTING = Object.keys({useExisting: null})[0];\n\nconst wrapReference = function(value: any): R3Reference {\n  const wrapped = new WrappedNodeExpr(value);\n  return {value: wrapped, type: wrapped};\n};\n\nfunction convertToR3QueryMetadata(facade: R3QueryMetadataFacade): R3QueryMetadata {\n  return {\n    ...facade,\n    predicate: Array.isArray(facade.predicate) ? facade.predicate :\n                                                 new WrappedNodeExpr(facade.predicate),\n    read: facade.read ? new WrappedNodeExpr(facade.read) : null,\n    static: facade.static\n  };\n}\n\nfunction convertDirectiveFacadeToMetadata(facade: R3DirectiveMetadataFacade): R3DirectiveMetadata {\n  const inputsFromMetadata = parseInputOutputs(facade.inputs || []);\n  const outputsFromMetadata = parseInputOutputs(facade.outputs || []);\n  const propMetadata = facade.propMetadata;\n  const inputsFromType: StringMapWithRename = {};\n  const outputsFromType: StringMap = {};\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isInput(ann)) {\n          inputsFromType[field] =\n              ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n        } else if (isOutput(ann)) {\n          outputsFromType[field] = ann.bindingPropertyName || field;\n        }\n      });\n    }\n  }\n\n  return {\n    ...facade as R3DirectiveMetadataFacadeNoPropAndWhitespace,\n    typeSourceSpan: facade.typeSourceSpan,\n    type: new WrappedNodeExpr(facade.type),\n    deps: convertR3DependencyMetadataArray(facade.deps),\n    host: extractHostBindings(facade.propMetadata, facade.typeSourceSpan, facade.host),\n    inputs: {...inputsFromMetadata, ...inputsFromType},\n    outputs: {...outputsFromMetadata, ...outputsFromType},\n    queries: facade.queries.map(convertToR3QueryMetadata),\n    providers: facade.providers != null ? new WrappedNodeExpr(facade.providers) : null,\n    viewQueries: facade.viewQueries.map(convertToR3QueryMetadata),\n  };\n}\n\n// This seems to be needed to placate TS v3.0 only\ntype R3DirectiveMetadataFacadeNoPropAndWhitespace =\n    Pick<R3DirectiveMetadataFacade, Exclude<keyof R3DirectiveMetadataFacade, 'propMetadata'>>;\n\nfunction wrapExpression(obj: any, property: string): WrappedNodeExpr<any>|undefined {\n  if (obj.hasOwnProperty(property)) {\n    return new WrappedNodeExpr(obj[property]);\n  } else {\n    return undefined;\n  }\n}\n\nfunction computeProvidedIn(providedIn: Type | string | null | undefined): Expression {\n  if (providedIn == null || typeof providedIn === 'string') {\n    return new LiteralExpr(providedIn);\n  } else {\n    return new WrappedNodeExpr(providedIn);\n  }\n}\n\nfunction convertR3DependencyMetadata(facade: R3DependencyMetadataFacade): R3DependencyMetadata {\n  let tokenExpr;\n  if (facade.token === null) {\n    tokenExpr = new LiteralExpr(null);\n  } else if (facade.resolved === R3ResolvedDependencyType.Attribute) {\n    tokenExpr = new LiteralExpr(facade.token);\n  } else {\n    tokenExpr = new WrappedNodeExpr(facade.token);\n  }\n  return {\n    token: tokenExpr,\n    resolved: facade.resolved,\n    host: facade.host,\n    optional: facade.optional,\n    self: facade.self,\n    skipSelf: facade.skipSelf\n  };\n}\n\nfunction convertR3DependencyMetadataArray(facades: R3DependencyMetadataFacade[] | null | undefined):\n    R3DependencyMetadata[]|null {\n  return facades == null ? null : facades.map(convertR3DependencyMetadata);\n}\n\nfunction extractHostBindings(\n    propMetadata: {[key: string]: any[]}, sourceSpan: ParseSourceSpan,\n    host?: {[key: string]: string}): ParsedHostBindings {\n  // First parse the declarations from the metadata.\n  const bindings = parseHostBindings(host || {});\n\n  // After that check host bindings for errors\n  const errors = verifyHostBindings(bindings, sourceSpan);\n  if (errors.length) {\n    throw new Error(errors.map((error: ParseError) => error.msg).join('\\n'));\n  }\n\n  // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isHostBinding(ann)) {\n          bindings.properties[ann.hostPropertyName || field] = field;\n        } else if (isHostListener(ann)) {\n          bindings.listeners[ann.eventName || field] = `${field}(${(ann.args || []).join(',')})`;\n        }\n      });\n    }\n  }\n\n  return bindings;\n}\n\nfunction isHostBinding(value: any): value is HostBinding {\n  return value.ngMetadataName === 'HostBinding';\n}\n\nfunction isHostListener(value: any): value is HostListener {\n  return value.ngMetadataName === 'HostListener';\n}\n\n\nfunction isInput(value: any): value is Input {\n  return value.ngMetadataName === 'Input';\n}\n\nfunction isOutput(value: any): value is Output {\n  return value.ngMetadataName === 'Output';\n}\n\nfunction parseInputOutputs(values: string[]): StringMap {\n  return values.reduce(\n      (map, value) => {\n        const [field, property] = value.split(',').map(piece => piece.trim());\n        map[field] = property || field;\n        return map;\n      },\n      {} as StringMap);\n}\n\nexport function publishFacade(global: any) {\n  const ng: ExportedCompilerFacade = global.ng || (global.ng = {});\n  ng.ÉµcompilerFacade = new CompilerFacadeImpl();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from './util';\n\nexport const VERSION = new Version('8.2.14');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {MissingTranslationStrategy, ViewEncapsulation} from './core';\nimport {Identifiers} from './identifiers';\nimport * as o from './output/output_ast';\nimport {noUndefined} from './util';\n\nexport class CompilerConfig {\n  public defaultEncapsulation: ViewEncapsulation|null;\n  public useJit: boolean;\n  public jitDevMode: boolean;\n  public missingTranslation: MissingTranslationStrategy|null;\n  public preserveWhitespaces: boolean;\n  public strictInjectionParameters: boolean;\n\n  constructor(\n      {defaultEncapsulation = ViewEncapsulation.Emulated, useJit = true, jitDevMode = false,\n       missingTranslation = null, preserveWhitespaces, strictInjectionParameters}: {\n        defaultEncapsulation?: ViewEncapsulation,\n        useJit?: boolean,\n        jitDevMode?: boolean,\n        missingTranslation?: MissingTranslationStrategy|null,\n        preserveWhitespaces?: boolean,\n        strictInjectionParameters?: boolean,\n      } = {}) {\n    this.defaultEncapsulation = defaultEncapsulation;\n    this.useJit = !!useJit;\n    this.jitDevMode = !!jitDevMode;\n    this.missingTranslation = missingTranslation;\n    this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    this.strictInjectionParameters = strictInjectionParameters === true;\n  }\n}\n\nexport function preserveWhitespacesDefault(\n    preserveWhitespacesOption: boolean | null, defaultSetting = false): boolean {\n  return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl} from './compile_metadata';\nimport {CompilerConfig, preserveWhitespacesDefault} from './config';\nimport {ViewEncapsulation} from './core';\nimport * as html from './ml_parser/ast';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {InterpolationConfig} from './ml_parser/interpolation_config';\nimport {ParseTreeResult as HtmlParseTreeResult} from './ml_parser/parser';\nimport {ResourceLoader} from './resource_loader';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\nimport {PreparsedElementType, preparseElement} from './template_parser/template_preparser';\nimport {UrlResolver} from './url_resolver';\nimport {SyncAsync, isDefined, stringify, syntaxError} from './util';\n\nexport interface PrenormalizedTemplateMetadata {\n  ngModuleType: any;\n  componentType: any;\n  moduleUrl: string;\n  template: string|null;\n  templateUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n  interpolation: [string, string]|null;\n  encapsulation: ViewEncapsulation|null;\n  animations: any[];\n  preserveWhitespaces: boolean|null;\n}\n\nexport class DirectiveNormalizer {\n  private _resourceLoaderCache = new Map<string, SyncAsync<string>>();\n\n  constructor(\n      private _resourceLoader: ResourceLoader, private _urlResolver: UrlResolver,\n      private _htmlParser: HtmlParser, private _config: CompilerConfig) {}\n\n  clearCache(): void { this._resourceLoaderCache.clear(); }\n\n  clearCacheFor(normalizedDirective: CompileDirectiveMetadata): void {\n    if (!normalizedDirective.isComponent) {\n      return;\n    }\n    const template = normalizedDirective.template !;\n    this._resourceLoaderCache.delete(template.templateUrl !);\n    template.externalStylesheets.forEach(\n        (stylesheet) => { this._resourceLoaderCache.delete(stylesheet.moduleUrl !); });\n  }\n\n  private _fetch(url: string): SyncAsync<string> {\n    let result = this._resourceLoaderCache.get(url);\n    if (!result) {\n      result = this._resourceLoader.get(url);\n      this._resourceLoaderCache.set(url, result);\n    }\n    return result;\n  }\n\n  normalizeTemplate(prenormData: PrenormalizedTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    if (isDefined(prenormData.template)) {\n      if (isDefined(prenormData.templateUrl)) {\n        throw syntaxError(\n            `'${stringify(prenormData.componentType)}' component cannot define both template and templateUrl`);\n      }\n      if (typeof prenormData.template !== 'string') {\n        throw syntaxError(\n            `The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else if (isDefined(prenormData.templateUrl)) {\n      if (typeof prenormData.templateUrl !== 'string') {\n        throw syntaxError(\n            `The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else {\n      throw syntaxError(\n          `No template specified for component ${stringify(prenormData.componentType)}`);\n    }\n\n    if (isDefined(prenormData.preserveWhitespaces) &&\n        typeof prenormData.preserveWhitespaces !== 'boolean') {\n      throw syntaxError(\n          `The preserveWhitespaces option for component ${stringify(prenormData.componentType)} must be a boolean`);\n    }\n\n    return SyncAsync.then(\n        this._preParseTemplate(prenormData),\n        (preparsedTemplate) => this._normalizeTemplateMetadata(prenormData, preparsedTemplate));\n  }\n\n  private _preParseTemplate(prenomData: PrenormalizedTemplateMetadata):\n      SyncAsync<PreparsedTemplate> {\n    let template: SyncAsync<string>;\n    let templateUrl: string;\n    if (prenomData.template != null) {\n      template = prenomData.template;\n      templateUrl = prenomData.moduleUrl;\n    } else {\n      templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl !);\n      template = this._fetch(templateUrl);\n    }\n    return SyncAsync.then(\n        template, (template) => this._preparseLoadedTemplate(prenomData, template, templateUrl));\n  }\n\n  private _preparseLoadedTemplate(\n      prenormData: PrenormalizedTemplateMetadata, template: string,\n      templateAbsUrl: string): PreparsedTemplate {\n    const isInline = !!prenormData.template;\n    const interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation !);\n    const templateUrl = templateSourceUrl(\n        {reference: prenormData.ngModuleType}, {type: {reference: prenormData.componentType}},\n        {isInline, templateUrl: templateAbsUrl});\n    const rootNodesAndErrors = this._htmlParser.parse(\n        template, templateUrl, {tokenizeExpansionForms: true, interpolationConfig});\n    if (rootNodesAndErrors.errors.length > 0) {\n      const errorString = rootNodesAndErrors.errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    const templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: prenormData.styles, moduleUrl: prenormData.moduleUrl}));\n\n    const visitor = new TemplatePreparseVisitor();\n    html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n    const templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl}));\n\n    const styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n\n    const inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n    const styleUrls = this\n                          ._normalizeStylesheet(new CompileStylesheetMetadata(\n                              {styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl}))\n                          .styleUrls;\n    return {\n      template,\n      templateUrl: templateAbsUrl, isInline,\n      htmlAst: rootNodesAndErrors, styles, inlineStyleUrls, styleUrls,\n      ngContentSelectors: visitor.ngContentSelectors,\n    };\n  }\n\n  private _normalizeTemplateMetadata(\n      prenormData: PrenormalizedTemplateMetadata,\n      preparsedTemplate: PreparsedTemplate): SyncAsync<CompileTemplateMetadata> {\n    return SyncAsync.then(\n        this._loadMissingExternalStylesheets(\n            preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)),\n        (externalStylesheets) => this._normalizeLoadedTemplateMetadata(\n            prenormData, preparsedTemplate, externalStylesheets));\n  }\n\n  private _normalizeLoadedTemplateMetadata(\n      prenormData: PrenormalizedTemplateMetadata, preparsedTemplate: PreparsedTemplate,\n      stylesheets: Map<string, CompileStylesheetMetadata>): CompileTemplateMetadata {\n    // Algorithm:\n    // - produce exactly 1 entry per original styleUrl in\n    // CompileTemplateMetadata.externalStylesheets with all styles inlined\n    // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n    // Reason: be able to determine how many stylesheets there are even without loading\n    // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n    // (as resource loading may be async)\n\n    const styles = [...preparsedTemplate.styles];\n    this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n    const styleUrls = preparsedTemplate.styleUrls;\n\n    const externalStylesheets = styleUrls.map(styleUrl => {\n      const stylesheet = stylesheets.get(styleUrl) !;\n      const styles = [...stylesheet.styles];\n      this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n      return new CompileStylesheetMetadata({moduleUrl: styleUrl, styles: styles});\n    });\n\n    let encapsulation = prenormData.encapsulation;\n    if (encapsulation == null) {\n      encapsulation = this._config.defaultEncapsulation;\n    }\n    if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n        styleUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n    return new CompileTemplateMetadata({\n      encapsulation,\n      template: preparsedTemplate.template,\n      templateUrl: preparsedTemplate.templateUrl,\n      htmlAst: preparsedTemplate.htmlAst, styles, styleUrls,\n      ngContentSelectors: preparsedTemplate.ngContentSelectors,\n      animations: prenormData.animations,\n      interpolation: prenormData.interpolation,\n      isInline: preparsedTemplate.isInline, externalStylesheets,\n      preserveWhitespaces: preserveWhitespacesDefault(\n          prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n    });\n  }\n\n  private _inlineStyles(\n      styleUrls: string[], stylesheets: Map<string, CompileStylesheetMetadata>,\n      targetStyles: string[]) {\n    styleUrls.forEach(styleUrl => {\n      const stylesheet = stylesheets.get(styleUrl) !;\n      stylesheet.styles.forEach(style => targetStyles.push(style));\n      this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n    });\n  }\n\n  private _loadMissingExternalStylesheets(\n      styleUrls: string[],\n      loadedStylesheets:\n          Map<string, CompileStylesheetMetadata> = new Map<string, CompileStylesheetMetadata>()):\n      SyncAsync<Map<string, CompileStylesheetMetadata>> {\n    return SyncAsync.then(\n        SyncAsync.all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n                          .map(\n                              styleUrl => SyncAsync.then(\n                                  this._fetch(styleUrl),\n                                  (loadedStyle) => {\n                                    const stylesheet =\n                                        this._normalizeStylesheet(new CompileStylesheetMetadata(\n                                            {styles: [loadedStyle], moduleUrl: styleUrl}));\n                                    loadedStylesheets.set(styleUrl, stylesheet);\n                                    return this._loadMissingExternalStylesheets(\n                                        stylesheet.styleUrls, loadedStylesheets);\n                                  }))),\n        (_) => loadedStylesheets);\n  }\n\n  private _normalizeStylesheet(stylesheet: CompileStylesheetMetadata): CompileStylesheetMetadata {\n    const moduleUrl = stylesheet.moduleUrl !;\n    const allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                             .map(url => this._urlResolver.resolve(moduleUrl, url));\n\n    const allStyles = stylesheet.styles.map(style => {\n      const styleWithImports = extractStyleUrls(this._urlResolver, moduleUrl, style);\n      allStyleUrls.push(...styleWithImports.styleUrls);\n      return styleWithImports.style;\n    });\n\n    return new CompileStylesheetMetadata(\n        {styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl});\n  }\n}\n\ninterface PreparsedTemplate {\n  template: string;\n  templateUrl: string;\n  isInline: boolean;\n  htmlAst: HtmlParseTreeResult;\n  styles: string[];\n  inlineStyleUrls: string[];\n  styleUrls: string[];\n  ngContentSelectors: string[];\n}\n\nclass TemplatePreparseVisitor implements html.Visitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n\n  visitElement(ast: html.Element, context: any): any {\n    const preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        let textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof html.Text) {\n            textContent += child.value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    html.visitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n\n  visitExpansion(ast: html.Expansion, context: any): any { html.visitAll(this, ast.cases); }\n\n  visitExpansionCase(ast: html.ExpansionCase, context: any): any {\n    html.visitAll(this, ast.expression);\n  }\n\n  visitComment(ast: html.Comment, context: any): any { return null; }\n  visitAttribute(ast: html.Attribute, context: any): any { return null; }\n  visitText(ast: html.Text, context: any): any { return null; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\nimport {Component, Directive, Type, createComponent, createContentChild, createContentChildren, createDirective, createHostBinding, createHostListener, createInput, createOutput, createViewChild, createViewChildren} from './core';\nimport {resolveForwardRef, splitAtColon, stringify} from './util';\n\nconst QUERY_METADATA_IDENTIFIERS = [\n  createViewChild,\n  createViewChildren,\n  createContentChild,\n  createContentChildren,\n];\n\n/*\n * Resolve a `Type` for {@link Directive}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nexport class DirectiveResolver {\n  constructor(private _reflector: CompileReflector) {}\n\n  isDirective(type: Type) {\n    const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n  }\n\n  /**\n   * Return {@link Directive} for a given `Type`.\n   */\n  resolve(type: Type): Directive;\n  resolve(type: Type, throwIfNotFound: true): Directive;\n  resolve(type: Type, throwIfNotFound: boolean): Directive|null;\n  resolve(type: Type, throwIfNotFound = true): Directive|null {\n    const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    if (typeMetadata) {\n      const metadata = findLast(typeMetadata, isDirectiveMetadata);\n      if (metadata) {\n        const propertyMetadata = this._reflector.propMetadata(type);\n        const guards = this._reflector.guards(type);\n        return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n      }\n    }\n\n    if (throwIfNotFound) {\n      throw new Error(`No Directive annotation found on ${stringify(type)}`);\n    }\n\n    return null;\n  }\n\n  private _mergeWithPropertyMetadata(\n      dm: Directive, propertyMetadata: {[key: string]: any[]}, guards: {[key: string]: any},\n      directiveType: Type): Directive {\n    const inputs: string[] = [];\n    const outputs: string[] = [];\n    const host: {[key: string]: string} = {};\n    const queries: {[key: string]: any} = {};\n    Object.keys(propertyMetadata).forEach((propName: string) => {\n      const input = findLast(propertyMetadata[propName], (a) => createInput.isTypeOf(a));\n      if (input) {\n        if (input.bindingPropertyName) {\n          inputs.push(`${propName}: ${input.bindingPropertyName}`);\n        } else {\n          inputs.push(propName);\n        }\n      }\n      const output = findLast(propertyMetadata[propName], (a) => createOutput.isTypeOf(a));\n      if (output) {\n        if (output.bindingPropertyName) {\n          outputs.push(`${propName}: ${output.bindingPropertyName}`);\n        } else {\n          outputs.push(propName);\n        }\n      }\n      const hostBindings = propertyMetadata[propName].filter(a => createHostBinding.isTypeOf(a));\n      hostBindings.forEach(hostBinding => {\n        if (hostBinding.hostPropertyName) {\n          const startWith = hostBinding.hostPropertyName[0];\n          if (startWith === '(') {\n            throw new Error(`@HostBinding can not bind to events. Use @HostListener instead.`);\n          } else if (startWith === '[') {\n            throw new Error(\n                `@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.`);\n          }\n          host[`[${hostBinding.hostPropertyName}]`] = propName;\n        } else {\n          host[`[${propName}]`] = propName;\n        }\n      });\n      const hostListeners = propertyMetadata[propName].filter(a => createHostListener.isTypeOf(a));\n      hostListeners.forEach(hostListener => {\n        const args = hostListener.args || [];\n        host[`(${hostListener.eventName})`] = `${propName}(${args.join(',')})`;\n      });\n      const query = findLast(\n          propertyMetadata[propName], (a) => QUERY_METADATA_IDENTIFIERS.some(i => i.isTypeOf(a)));\n      if (query) {\n        queries[propName] = query;\n      }\n    });\n    return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n  }\n\n  private _extractPublicName(def: string) { return splitAtColon(def, [null !, def])[1].trim(); }\n\n  private _dedupeBindings(bindings: string[]): string[] {\n    const names = new Set<string>();\n    const publicNames = new Set<string>();\n    const reversedResult: string[] = [];\n    // go last to first to allow later entries to overwrite previous entries\n    for (let i = bindings.length - 1; i >= 0; i--) {\n      const binding = bindings[i];\n      const name = this._extractPublicName(binding);\n      publicNames.add(name);\n      if (!names.has(name)) {\n        names.add(name);\n        reversedResult.push(binding);\n      }\n    }\n    return reversedResult.reverse();\n  }\n\n  private _merge(\n      directive: Directive, inputs: string[], outputs: string[], host: {[key: string]: string},\n      queries: {[key: string]: any}, guards: {[key: string]: any}, directiveType: Type): Directive {\n    const mergedInputs =\n        this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n    const mergedOutputs =\n        this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n    const mergedHost = directive.host ? {...directive.host, ...host} : host;\n    const mergedQueries = directive.queries ? {...directive.queries, ...queries} : queries;\n    if (createComponent.isTypeOf(directive)) {\n      const comp = directive as Component;\n      return createComponent({\n        selector: comp.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: comp.exportAs,\n        moduleId: comp.moduleId,\n        queries: mergedQueries,\n        changeDetection: comp.changeDetection,\n        providers: comp.providers,\n        viewProviders: comp.viewProviders,\n        entryComponents: comp.entryComponents,\n        template: comp.template,\n        templateUrl: comp.templateUrl,\n        styles: comp.styles,\n        styleUrls: comp.styleUrls,\n        encapsulation: comp.encapsulation,\n        animations: comp.animations,\n        interpolation: comp.interpolation,\n        preserveWhitespaces: directive.preserveWhitespaces,\n      });\n    } else {\n      return createDirective({\n        selector: directive.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: directive.exportAs,\n        queries: mergedQueries,\n        providers: directive.providers, guards\n      });\n    }\n  }\n}\n\nfunction isDirectiveMetadata(type: any): type is Directive {\n  return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n\nexport function findLast<T>(arr: T[], condition: (value: T) => boolean): T|null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (condition(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n  constructor(span: ParseSourceSpan, msg: string) { super(span, msg); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../ml_parser/ast';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\nimport * as i18n from './i18n_ast';\nimport {createI18nMessageFactory} from './i18n_parser';\nimport {I18nError} from './parse_util';\nimport {TranslationBundle} from './translation_bundle';\n\nconst _I18N_ATTR = 'i18n';\nconst _I18N_ATTR_PREFIX = 'i18n-';\nconst _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nconst MEANING_SEPARATOR = '|';\nconst ID_SEPARATOR = '@@';\nlet i18nCommentsWarned = false;\n\n/**\n * Extract translatable messages from an html AST\n */\nexport function extractMessages(\n    nodes: html.Node[], interpolationConfig: InterpolationConfig, implicitTags: string[],\n    implicitAttrs: {[k: string]: string[]}): ExtractionResult {\n  const visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.extract(nodes, interpolationConfig);\n}\n\nexport function mergeTranslations(\n    nodes: html.Node[], translations: TranslationBundle, interpolationConfig: InterpolationConfig,\n    implicitTags: string[], implicitAttrs: {[k: string]: string[]}): ParseTreeResult {\n  const visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.merge(nodes, translations, interpolationConfig);\n}\n\nexport class ExtractionResult {\n  constructor(public messages: i18n.Message[], public errors: I18nError[]) {}\n}\n\nenum _VisitorMode {\n  Extract,\n  Merge\n}\n\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * @internal\n */\nclass _Visitor implements html.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _depth !: number;\n\n  // <el i18n>...</el>\n  // TODO(issue/24571): remove '!'.\n  private _inI18nNode !: boolean;\n  // TODO(issue/24571): remove '!'.\n  private _inImplicitNode !: boolean;\n\n  // <!--i18n-->...<!--/i18n-->\n  // TODO(issue/24571): remove '!'.\n  private _inI18nBlock !: boolean;\n  // TODO(issue/24571): remove '!'.\n  private _blockMeaningAndDesc !: string;\n  // TODO(issue/24571): remove '!'.\n  private _blockChildren !: html.Node[];\n  // TODO(issue/24571): remove '!'.\n  private _blockStartDepth !: number;\n\n  // {<icu message>}\n  // TODO(issue/24571): remove '!'.\n  private _inIcu !: boolean;\n\n  // set to void 0 when not in a section\n  private _msgCountAtSectionStart: number|undefined;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _mode !: _VisitorMode;\n\n  // _VisitorMode.Extract only\n  // TODO(issue/24571): remove '!'.\n  private _messages !: i18n.Message[];\n\n  // _VisitorMode.Merge only\n  // TODO(issue/24571): remove '!'.\n  private _translations !: TranslationBundle;\n  // TODO(issue/24571): remove '!'.\n  private _createI18nMessage !: (\n      msg: html.Node[], meaning: string, description: string, id: string) => i18n.Message;\n\n\n  constructor(private _implicitTags: string[], private _implicitAttrs: {[k: string]: string[]}) {}\n\n  /**\n   * Extracts the messages from the tree\n   */\n  extract(nodes: html.Node[], interpolationConfig: InterpolationConfig): ExtractionResult {\n    this._init(_VisitorMode.Extract, interpolationConfig);\n\n    nodes.forEach(node => node.visit(this, null));\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ExtractionResult(this._messages, this._errors);\n  }\n\n  /**\n   * Returns a tree where all translatable nodes are translated\n   */\n  merge(\n      nodes: html.Node[], translations: TranslationBundle,\n      interpolationConfig: InterpolationConfig): ParseTreeResult {\n    this._init(_VisitorMode.Merge, interpolationConfig);\n    this._translations = translations;\n\n    // Construct a single fake root element\n    const wrapper = new html.Element('wrapper', [], nodes, undefined !, undefined, undefined);\n\n    const translatedNode = wrapper.visit(this, null);\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ParseTreeResult(translatedNode.children, this._errors);\n  }\n\n  visitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    // Parse cases for translatable html attributes\n    const expression = html.visitAll(this, icuCase.expression, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      return new html.ExpansionCase(\n          icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan,\n          icuCase.expSourceSpan);\n    }\n  }\n\n  visitExpansion(icu: html.Expansion, context: any): html.Expansion {\n    this._mayBeAddBlockChildren(icu);\n\n    const wasInIcu = this._inIcu;\n\n    if (!this._inIcu) {\n      // nested ICU messages should not be extracted but top-level translated as a whole\n      if (this._isInTranslatableSection) {\n        this._addMessage([icu]);\n      }\n      this._inIcu = true;\n    }\n\n    const cases = html.visitAll(this, icu.cases, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      icu = new html.Expansion(\n          icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n    }\n\n    this._inIcu = wasInIcu;\n\n    return icu;\n  }\n\n  visitComment(comment: html.Comment, context: any): any {\n    const isOpening = _isOpeningComment(comment);\n\n    if (isOpening && this._isInTranslatableSection) {\n      this._reportError(comment, 'Could not start a block inside a translatable section');\n      return;\n    }\n\n    const isClosing = _isClosingComment(comment);\n\n    if (isClosing && !this._inI18nBlock) {\n      this._reportError(comment, 'Trying to close an unopened block');\n      return;\n    }\n\n    if (!this._inI18nNode && !this._inIcu) {\n      if (!this._inI18nBlock) {\n        if (isOpening) {\n          // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n          if (!i18nCommentsWarned && <any>console && <any>console.warn) {\n            i18nCommentsWarned = true;\n            const details = comment.sourceSpan.details ? `, ${comment.sourceSpan.details}` : '';\n            // TODO(ocombe): use a log service once there is a public one available\n            console.warn(\n                `I18n comments are deprecated, use an <ng-container> element instead (${comment.sourceSpan.start}${details})`);\n          }\n          this._inI18nBlock = true;\n          this._blockStartDepth = this._depth;\n          this._blockChildren = [];\n          this._blockMeaningAndDesc =\n              comment.value !.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n          this._openTranslatableSection(comment);\n        }\n      } else {\n        if (isClosing) {\n          if (this._depth == this._blockStartDepth) {\n            this._closeTranslatableSection(comment, this._blockChildren);\n            this._inI18nBlock = false;\n            const message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc) !;\n            // merge attributes in sections\n            const nodes = this._translateMessage(comment, message);\n            return html.visitAll(this, nodes);\n          } else {\n            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  visitText(text: html.Text, context: any): html.Text {\n    if (this._isInTranslatableSection) {\n      this._mayBeAddBlockChildren(text);\n    }\n    return text;\n  }\n\n  visitElement(el: html.Element, context: any): html.Element|null {\n    this._mayBeAddBlockChildren(el);\n    this._depth++;\n    const wasInI18nNode = this._inI18nNode;\n    const wasInImplicitNode = this._inImplicitNode;\n    let childNodes: html.Node[] = [];\n    let translatedChildNodes: html.Node[] = undefined !;\n\n    // Extract:\n    // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n    // - ICU messages\n    const i18nAttr = _getI18nAttr(el);\n    const i18nMeta = i18nAttr ? i18nAttr.value : '';\n    const isImplicit = this._implicitTags.some(tag => el.name === tag) && !this._inIcu &&\n        !this._isInTranslatableSection;\n    const isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n    this._inImplicitNode = wasInImplicitNode || isImplicit;\n\n    if (!this._isInTranslatableSection && !this._inIcu) {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._inI18nNode = true;\n        const message = this._addMessage(el.children, i18nMeta) !;\n        translatedChildNodes = this._translateMessage(el, message);\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        const isTranslatable = i18nAttr || isTopLevelImplicit;\n        if (isTranslatable) this._openTranslatableSection(el);\n        html.visitAll(this, el.children);\n        if (isTranslatable) this._closeTranslatableSection(el, el.children);\n      }\n    } else {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._reportError(\n            el, 'Could not mark an element as translatable inside a translatable section');\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        // Descend into child nodes for extraction\n        html.visitAll(this, el.children);\n      }\n    }\n\n    if (this._mode === _VisitorMode.Merge) {\n      const visitNodes = translatedChildNodes || el.children;\n      visitNodes.forEach(child => {\n        const visited = child.visit(this, context);\n        if (visited && !this._isInTranslatableSection) {\n          // Do not add the children from translatable sections (= i18n blocks here)\n          // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n          childNodes = childNodes.concat(visited);\n        }\n      });\n    }\n\n    this._visitAttributesOf(el);\n\n    this._depth--;\n    this._inI18nNode = wasInI18nNode;\n    this._inImplicitNode = wasInImplicitNode;\n\n    if (this._mode === _VisitorMode.Merge) {\n      const translatedAttrs = this._translateAttributes(el);\n      return new html.Element(\n          el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan,\n          el.endSourceSpan);\n    }\n    return null;\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): any {\n    throw new Error('unreachable code');\n  }\n\n  private _init(mode: _VisitorMode, interpolationConfig: InterpolationConfig): void {\n    this._mode = mode;\n    this._inI18nBlock = false;\n    this._inI18nNode = false;\n    this._depth = 0;\n    this._inIcu = false;\n    this._msgCountAtSectionStart = undefined;\n    this._errors = [];\n    this._messages = [];\n    this._inImplicitNode = false;\n    this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n  }\n\n  // looks for translatable attributes\n  private _visitAttributesOf(el: html.Element): void {\n    const explicitAttrNameToValue: {[k: string]: string} = {};\n    const implicitAttrNames: string[] = this._implicitAttrs[el.name] || [];\n\n    el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n        .forEach(\n            attr => explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value);\n\n    el.attrs.forEach(attr => {\n      if (attr.name in explicitAttrNameToValue) {\n        this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n      } else if (implicitAttrNames.some(name => attr.name === name)) {\n        this._addMessage([attr]);\n      }\n    });\n  }\n\n  // add a translatable message\n  private _addMessage(ast: html.Node[], msgMeta?: string): i18n.Message|null {\n    if (ast.length == 0 ||\n        ast.length == 1 && ast[0] instanceof html.Attribute && !(<html.Attribute>ast[0]).value) {\n      // Do not create empty messages\n      return null;\n    }\n\n    const {meaning, description, id} = _parseMessageMeta(msgMeta);\n    const message = this._createI18nMessage(ast, meaning, description, id);\n    this._messages.push(message);\n    return message;\n  }\n\n  // Translates the given message given the `TranslationBundle`\n  // This is used for translating elements / blocks - see `_translateAttributes` for attributes\n  // no-op when called in extraction mode (returns [])\n  private _translateMessage(el: html.Node, message: i18n.Message): html.Node[] {\n    if (message && this._mode === _VisitorMode.Merge) {\n      const nodes = this._translations.get(message);\n\n      if (nodes) {\n        return nodes;\n      }\n\n      this._reportError(\n          el, `Translation unavailable for message id=\"${this._translations.digest(message)}\"`);\n    }\n\n    return [];\n  }\n\n  // translate the attributes of an element and remove i18n specific attributes\n  private _translateAttributes(el: html.Element): html.Attribute[] {\n    const attributes = el.attrs;\n    const i18nParsedMessageMeta:\n        {[name: string]: {meaning: string, description: string, id: string}} = {};\n\n    attributes.forEach(attr => {\n      if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            _parseMessageMeta(attr.value);\n      }\n    });\n\n    const translatedAttributes: html.Attribute[] = [];\n\n    attributes.forEach((attr) => {\n      if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        // strip i18n specific attributes\n        return;\n      }\n\n      if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n        const {meaning, description, id} = i18nParsedMessageMeta[attr.name];\n        const message: i18n.Message = this._createI18nMessage([attr], meaning, description, id);\n        const nodes = this._translations.get(message);\n        if (nodes) {\n          if (nodes.length == 0) {\n            translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n          } else if (nodes[0] instanceof html.Text) {\n            const value = (nodes[0] as html.Text).value;\n            translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n          } else {\n            this._reportError(\n                el,\n                `Unexpected translation for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n          }\n        } else {\n          this._reportError(\n              el,\n              `Translation unavailable for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n        }\n      } else {\n        translatedAttributes.push(attr);\n      }\n    });\n\n    return translatedAttributes;\n  }\n\n\n  /**\n   * Add the node as a child of the block when:\n   * - we are in a block,\n   * - we are not inside a ICU message (those are handled separately),\n   * - the node is a \"direct child\" of the block\n   */\n  private _mayBeAddBlockChildren(node: html.Node): void {\n    if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n      this._blockChildren.push(node);\n    }\n  }\n\n  /**\n   * Marks the start of a section, see `_closeTranslatableSection`\n   */\n  private _openTranslatableSection(node: html.Node): void {\n    if (this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section start');\n    } else {\n      this._msgCountAtSectionStart = this._messages.length;\n    }\n  }\n\n  /**\n   * A translatable section could be:\n   * - the content of translatable element,\n   * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n   */\n  private get _isInTranslatableSection(): boolean {\n    return this._msgCountAtSectionStart !== void 0;\n  }\n\n  /**\n   * Terminates a section.\n   *\n   * If a section has only one significant children (comments not significant) then we should not\n   * keep the message from this children:\n   *\n   * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n   * - one for the <p> content with meaning and description,\n   * - another one for the ICU message.\n   *\n   * In this case the last message is discarded as it contains less information (the AST is\n   * otherwise identical).\n   *\n   * Note that we should still keep messages extracted from attributes inside the section (ie in the\n   * ICU message here)\n   */\n  private _closeTranslatableSection(node: html.Node, directChildren: html.Node[]): void {\n    if (!this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section end');\n      return;\n    }\n\n    const startIndex = this._msgCountAtSectionStart;\n    const significantChildren: number = directChildren.reduce(\n        (count: number, node: html.Node): number => count + (node instanceof html.Comment ? 0 : 1),\n        0);\n\n    if (significantChildren == 1) {\n      for (let i = this._messages.length - 1; i >= startIndex !; i--) {\n        const ast = this._messages[i].nodes;\n        if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n          this._messages.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    this._msgCountAtSectionStart = undefined;\n  }\n\n  private _reportError(node: html.Node, msg: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, msg));\n  }\n}\n\nfunction _isOpeningComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\n\nfunction _isClosingComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\n\nfunction _getI18nAttr(p: html.Element): html.Attribute|null {\n  return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n\nfunction _parseMessageMeta(i18n?: string): {meaning: string, description: string, id: string} {\n  if (!i18n) return {meaning: '', description: '', id: ''};\n\n  const idIndex = i18n.indexOf(ID_SEPARATOR);\n  const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n  const [meaningAndDesc, id] =\n      (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n  const [meaning, description] = (descIndex > -1) ?\n      [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n      ['', meaningAndDesc];\n\n  return {meaning, description, id};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  // TODO(issue/24571): remove '!'.\n  requiredParents !: {[key: string]: boolean};\n  // TODO(issue/24571): remove '!'.\n  parentToAdd !: string;\n  // TODO(issue/24571): remove '!'.\n  implicitNamespacePrefix !: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n\n  requireExtraParent(currentParent: string): boolean { return false; }\n\n  isClosedByChild(name: string): boolean { return false; }\n}\n\nconst _TAG_DEFINITION = new XmlTagDefinition();\n\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TokenizeOptions} from './lexer';\nimport {ParseTreeResult, Parser} from './parser';\nimport {getXmlTagDefinition} from './xml_tags';\n\nexport {ParseTreeResult, TreeError} from './parser';\n\nexport class XmlParser extends Parser {\n  constructor() { super(getXmlTagDefinition); }\n\n  parse(source: string, url: string, options?: TokenizeOptions): ParseTreeResult {\n    return super.parse(source, url, options);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '1.2';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst _DEFAULT_SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'x';\nconst _MARKER_TAG = 'mrk';\n\nconst _FILE_TAG = 'file';\nconst _SOURCE_TAG = 'source';\nconst _SEGMENT_SOURCE_TAG = 'seg-source';\nconst _ALT_TRANS_TAG = 'alt-trans';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'trans-unit';\nconst _CONTEXT_GROUP_TAG = 'context-group';\nconst _CONTEXT_TAG = 'context';\n\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nexport class Xliff extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const visitor = new _WriteVisitor();\n    const transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      let contextTags: xml.Node[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        let contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, {purpose: 'location'});\n        contextGroupTag.children.push(\n            new xml.CR(10),\n            new xml.Tag(\n                _CONTEXT_TAG, {'context-type': 'sourcefile'}, [new xml.Text(source.filePath)]),\n            new xml.CR(10), new xml.Tag(\n                                _CONTEXT_TAG, {'context-type': 'linenumber'},\n                                [new xml.Text(`${source.startLine}`)]),\n            new xml.CR(8));\n        contextTags.push(new xml.CR(8), contextGroupTag);\n      });\n\n      const transUnit = new xml.Tag(_UNIT_TAG, {id: message.id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          ...contextTags);\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const file = new xml.Tag(\n        'file', {\n          'source-language': locale || _DEFAULT_SOURCE_LANG,\n          datatype: 'plaintext',\n          original: 'ng2.template',\n        },\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const xliffParser = new XliffParser();\n    const {locale, msgIdToHtml, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale !, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string { return digest(message); }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const ctype = getCtypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [new xml.Tag(\n          _PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}/>`})];\n    }\n\n    const startTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}>`});\n    const closeTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype, 'equiv-text': `</${ph.tag}>`});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': `{{${ph.value}}}`})];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const equivText =\n        `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`;\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': equivText})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nclass XliffParser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _unitMlString !: string | null;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml !: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const xml = new XmlParser().parse(xliff, url);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null !;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      // ignore those tags\n      case _SOURCE_TAG:\n      case _SEGMENT_SOURCE_TAG:\n      case _ALT_TRANS_TAG:\n        break;\n\n      case _TARGET_TAG:\n        const innerTextStart = element.startSourceSpan !.end.offset;\n        const innerTextEnd = element.endSourceSpan !.start.offset;\n        const content = element.startSourceSpan !.start.file.content;\n        const innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _FILE_TAG:\n        const localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, {tokenizeExpansionForms: true});\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes: i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan !); }\n\n  visitElement(el: ml.Element, context: any): i18n.Placeholder|ml.Node[]|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan !);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n      return null;\n    }\n\n    if (el.name === _MARKER_TAG) {\n      return [].concat(...ml.visitAll(this, el.children));\n    }\n\n    this._addError(el, `Unexpected tag`);\n    return null;\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '2.0';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst _DEFAULT_SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'ph';\nconst _PLACEHOLDER_SPANNING_TAG = 'pc';\nconst _MARKER_TAG = 'mrk';\n\nconst _XLIFF_TAG = 'xliff';\nconst _SOURCE_TAG = 'source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'unit';\n\n// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nexport class Xliff2 extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const visitor = new _WriteVisitor();\n    const units: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const notes = new xml.Tag('notes');\n\n      if (message.description || message.meaning) {\n        if (message.description) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'description'}, [new xml.Text(message.description)]));\n        }\n\n        if (message.meaning) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'meaning'}, [new xml.Text(message.meaning)]));\n        }\n      }\n\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        notes.children.push(new xml.CR(8), new xml.Tag('note', {category: 'location'}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      notes.children.push(new xml.CR(6));\n      unit.children.push(new xml.CR(6), notes);\n\n      const segment = new xml.Tag('segment');\n\n      segment.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(6));\n\n      unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n\n      units.push(new xml.CR(4), unit);\n    });\n\n    const file =\n        new xml.Tag('file', {'original': 'ng.template', id: 'ngi18n'}, [...units, new xml.CR(2)]);\n\n    const xliff = new xml.Tag(\n        _XLIFF_TAG, {version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG},\n        [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const xliff2Parser = new Xliff2Parser();\n    const {locale, msgIdToHtml, errors} = xliff2Parser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale !, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string { return decimalDigest(message); }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _nextPlaceholderId !: number;\n\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const type = getTypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      const tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equiv: ph.startName,\n        type: type,\n        disp: `<${ph.tag}/>`,\n      });\n      return [tagPh];\n    }\n\n    const tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n      id: (this._nextPlaceholderId++).toString(),\n      equivStart: ph.startName,\n      equivEnd: ph.closeName,\n      type: type,\n      dispStart: `<${ph.tag}>`,\n      dispEnd: `</${ph.tag}>`,\n    });\n    const nodes: xml.Node[] = [].concat(...ph.children.map(node => node.visit(this)));\n    if (nodes.length) {\n      nodes.forEach((node: xml.Node) => tagPc.children.push(node));\n    } else {\n      tagPc.children.push(new xml.Text(''));\n    }\n\n    return [tagPc];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(_PLACEHOLDER_TAG, {\n      id: idStr,\n      equiv: ph.name,\n      disp: `{{${ph.value}}}`,\n    })];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const cases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(\n        _PLACEHOLDER_TAG,\n        {id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}`})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    this._nextPlaceholderId = 0;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// Extract messages as xml nodes from the xliff file\nclass Xliff2Parser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _unitMlString !: string | null;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml !: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const xml = new XmlParser().parse(xliff, url);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const innerTextStart = element.startSourceSpan !.end.offset;\n        const innerTextEnd = element.endSourceSpan !.start.offset;\n        const content = element.startSourceSpan !.start.file.content;\n        const innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _XLIFF_TAG:\n        const localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n\n        const versionAttr = element.attrs.find((attr) => attr.name === 'version');\n        if (versionAttr) {\n          const version = versionAttr.value;\n          if (version !== '2.0') {\n            this._addError(\n                element,\n                `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n          } else {\n            ml.visitAll(this, element.children, null);\n          }\n        }\n        break;\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, {tokenizeExpansionForms: true});\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n\n  visitElement(el: ml.Element, context: any): i18n.Node[]|null {\n    switch (el.name) {\n      case _PLACEHOLDER_TAG:\n        const nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n        if (nameAttr) {\n          return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n        }\n\n        this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n        break;\n      case _PLACEHOLDER_SPANNING_TAG:\n        const startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n        const endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n\n        if (!startAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n        } else if (!endAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n        } else {\n          const startId = startAttr.value;\n          const endId = endAttr.value;\n\n          const nodes: i18n.Node[] = [];\n\n          return nodes.concat(\n              new i18n.Placeholder('', startId, el.sourceSpan),\n              ...el.children.map(node => node.visit(this, null)),\n              new i18n.Placeholder('', endId, el.sourceSpan));\n        }\n        break;\n      case _MARKER_TAG:\n        return [].concat(...ml.visitAll(this, el.children));\n      default:\n        this._addError(el, `Unexpected tag`);\n    }\n\n    return null;\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n    };\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction getTypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n    case 'b':\n    case 'i':\n    case 'u':\n      return 'fmt';\n    case 'img':\n      return 'image';\n    case 'a':\n      return 'link';\n    default:\n      return 'other';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport {digest, toPublicName} from './xmb';\n\nconst _TRANSLATIONS_TAG = 'translationbundle';\nconst _TRANSLATION_TAG = 'translation';\nconst _PLACEHOLDER_TAG = 'ph';\n\nexport class Xtb extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string { throw new Error('Unsupported'); }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xtb to xml nodes\n    const xtbParser = new XtbParser();\n    const {locale, msgIdToHtml, errors} = xtbParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    // Because we should be able to load xtb files that rely on features not supported by angular,\n    // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n    // converted\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const valueFn = function() {\n        const {i18nNodes, errors} = converter.convert(msgIdToHtml[msgId], url);\n        if (errors.length) {\n          throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return i18nNodes;\n      };\n      createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n    });\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale !, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string { return digest(message); }\n\n  createNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\n\nfunction createLazyProperty(messages: any, id: string, valueFn: () => any) {\n  Object.defineProperty(messages, id, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      const value = valueFn();\n      Object.defineProperty(messages, id, {enumerable: true, value});\n      return value;\n    },\n    set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n  });\n}\n\n// Extract messages as xml nodes from the xtb file\nclass XtbParser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _bundleDepth !: number;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml !: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xtb: string, url: string) {\n    this._bundleDepth = 0;\n    this._msgIdToHtml = {};\n\n    // We can not parse the ICU messages at this point as some messages might not originate\n    // from Angular that could not be lex'd.\n    const xml = new XmlParser().parse(xtb, url);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        const langAttr = element.attrs.find((attr) => attr.name === 'lang');\n        if (langAttr) {\n          this._locale = langAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            const innerTextStart = element.startSourceSpan !.end.offset;\n            const innerTextEnd = element.endSourceSpan !.start.offset;\n            const content = element.startSourceSpan !.start.file.content;\n            const innerText = content.slice(innerTextStart !, innerTextEnd !);\n            this._msgIdToHtml[id] = innerText;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n\n// Convert ml nodes (xtb syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, {tokenizeExpansionForms: true});\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan !); }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n\n  visitElement(el: ml.Element, context: any): i18n.Placeholder|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const nameAttr = el.attrs.find((attr) => attr.name === 'name');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan !);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '../core';\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {Console} from '../util';\n\nimport * as i18n from './i18n_ast';\nimport {I18nError} from './parse_util';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\nimport {escapeXml} from './serializers/xml_helper';\n\n\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\n  private _i18nToHtml: I18nToHtmlVisitor;\n\n  constructor(\n      private _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {}, locale: string|null,\n      public digest: (m: i18n.Message) => string,\n      public mapperFactory?: (m: i18n.Message) => PlaceholderMapper,\n      missingTranslationStrategy: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    this._i18nToHtml = new I18nToHtmlVisitor(\n        _i18nNodesByMsgId, locale, digest, mapperFactory !, missingTranslationStrategy, console);\n  }\n\n  // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n  static load(\n      content: string, url: string, serializer: Serializer,\n      missingTranslationStrategy: MissingTranslationStrategy,\n      console?: Console): TranslationBundle {\n    const {locale, i18nNodesByMsgId} = serializer.load(content, url);\n    const digestFn = (m: i18n.Message) => serializer.digest(m);\n    const mapperFactory = (m: i18n.Message) => serializer.createNameMapper(m) !;\n    return new TranslationBundle(\n        i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n  }\n\n  // Returns the translation as HTML nodes from the given source message.\n  get(srcMsg: i18n.Message): html.Node[] {\n    const html = this._i18nToHtml.convert(srcMsg);\n\n    if (html.errors.length) {\n      throw new Error(html.errors.join('\\n'));\n    }\n\n    return html.nodes;\n  }\n\n  has(srcMsg: i18n.Message): boolean { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\n\nclass I18nToHtmlVisitor implements i18n.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _srcMsg !: i18n.Message;\n  private _contextStack: {msg: i18n.Message, mapper: (name: string) => string}[] = [];\n  private _errors: I18nError[] = [];\n  // TODO(issue/24571): remove '!'.\n  private _mapper !: (name: string) => string;\n\n  constructor(\n      private _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {}, private _locale: string|null,\n      private _digest: (m: i18n.Message) => string,\n      private _mapperFactory: (m: i18n.Message) => PlaceholderMapper,\n      private _missingTranslationStrategy: MissingTranslationStrategy, private _console?: Console) {\n  }\n\n  convert(srcMsg: i18n.Message): {nodes: html.Node[], errors: I18nError[]} {\n    this._contextStack.length = 0;\n    this._errors.length = 0;\n\n    // i18n to text\n    const text = this._convertToText(srcMsg);\n\n    // text to html\n    const url = srcMsg.nodes[0].sourceSpan.start.file.url;\n    const html = new HtmlParser().parse(text, url, {tokenizeExpansionForms: true});\n\n    return {\n      nodes: html.rootNodes,\n      errors: [...this._errors, ...html.errors],\n    };\n  }\n\n  visitText(text: i18n.Text, context?: any): string {\n    // `convert()` uses an `HtmlParser` to return `html.Node`s\n    // we should then make sure that any special characters are escaped\n    return escapeXml(text.value);\n  }\n\n  visitContainer(container: i18n.Container, context?: any): any {\n    return container.children.map(n => n.visit(this)).join('');\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): any {\n    const cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n\n    // TODO(vicb): Once all format switch to using expression placeholders\n    // we should throw when the placeholder is not in the source message\n    const exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n        this._srcMsg.placeholders[icu.expression] :\n        icu.expression;\n\n    return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): string {\n    const phName = this._mapper(ph.name);\n    if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n      return this._srcMsg.placeholders[phName];\n    }\n\n    if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n      return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n    }\n\n    this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n    return '';\n  }\n\n  // Loaded message contains only placeholders (vs tag and icu placeholders).\n  // However when a translation can not be found, we need to serialize the source message\n  // which can contain tag placeholders\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): string {\n    const tag = `${ph.tag}`;\n    const attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n    if (ph.isVoid) {\n      return `<${tag} ${attrs}/>`;\n    }\n    const children = ph.children.map((c: i18n.Node) => c.visit(this)).join('');\n    return `<${tag} ${attrs}>${children}</${tag}>`;\n  }\n\n  // Loaded message contains only placeholders (vs tag and icu placeholders).\n  // However when a translation can not be found, we need to serialize the source message\n  // which can contain tag placeholders\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): string {\n    // An ICU placeholder references the source message to be serialized\n    return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n  }\n\n  /**\n   * Convert a source message to a translated text string:\n   * - text nodes are replaced with their translation,\n   * - placeholders are replaced with their content,\n   * - ICU nodes are converted to ICU expressions.\n   */\n  private _convertToText(srcMsg: i18n.Message): string {\n    const id = this._digest(srcMsg);\n    const mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n    let nodes: i18n.Node[];\n\n    this._contextStack.push({msg: this._srcMsg, mapper: this._mapper});\n    this._srcMsg = srcMsg;\n\n    if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n      // When there is a translation use its nodes as the source\n      // And create a mapper to convert serialized placeholder names to internal names\n      nodes = this._i18nNodesByMsgId[id];\n      this._mapper = (name: string) => mapper ? mapper.toInternalName(name) ! : name;\n    } else {\n      // When no translation has been found\n      // - report an error / a warning / nothing,\n      // - use the nodes from the original message\n      // - placeholders are already internal and need no mapper\n      if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n        const ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"${ctx}`);\n      } else if (\n          this._console &&\n          this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n        const ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._console.warn(`Missing translation for message \"${id}\"${ctx}`);\n      }\n      nodes = srcMsg.nodes;\n      this._mapper = (name: string) => name;\n    }\n    const text = nodes.map(node => node.visit(this)).join('');\n    const context = this._contextStack.pop() !;\n    this._srcMsg = context.msg;\n    this._mapper = context.mapper;\n    return text;\n  }\n\n  private _addError(el: i18n.Node, msg: string) {\n    this._errors.push(new I18nError(el.sourceSpan, msg));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '../core';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG} from '../ml_parser/interpolation_config';\nimport {TokenizeOptions} from '../ml_parser/lexer';\nimport {ParseTreeResult} from '../ml_parser/parser';\nimport {Console} from '../util';\n\nimport {digest} from './digest';\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xliff2} from './serializers/xliff2';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\n\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\n\n  private _translationBundle: TranslationBundle;\n\n  constructor(\n      private _htmlParser: HtmlParser, translations?: string, translationsFormat?: string,\n      missingTranslation: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    if (translations) {\n      const serializer = createSerializer(translationsFormat);\n      this._translationBundle =\n          TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n    } else {\n      this._translationBundle =\n          new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n    }\n  }\n\n  parse(source: string, url: string, options: TokenizeOptions = {}): ParseTreeResult {\n    const interpolationConfig = options.interpolationConfig || DEFAULT_INTERPOLATION_CONFIG;\n    const parseResult = this._htmlParser.parse(source, url, {interpolationConfig, ...options});\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    return mergeTranslations(\n        parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n  }\n}\n\nfunction createSerializer(format?: string): Serializer {\n  format = (format || 'xlf').toLowerCase();\n\n  switch (format) {\n    case 'xmb':\n      return new Xmb();\n    case 'xtb':\n      return new Xtb();\n    case 'xliff2':\n    case 'xlf2':\n      return new Xliff2();\n    case 'xliff':\n    case 'xlf':\n    default:\n      return new Xliff();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OutputContext, ValueTransformer, visitValue} from '../util';\n\nimport * as o from './output_ast';\n\nexport const QUOTED_KEYS = '$quoted$';\n\nexport function convertValueToOutputAst(\n    ctx: OutputContext, value: any, type: o.Type | null = null): o.Expression {\n  return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\n\nclass _ValueOutputAstTransformer implements ValueTransformer {\n  constructor(private ctx: OutputContext) {}\n  visitArray(arr: any[], type: o.Type): o.Expression {\n    return o.literalArr(arr.map(value => visitValue(value, this, null)), type);\n  }\n\n  visitStringMap(map: {[key: string]: any}, type: o.MapType): o.Expression {\n    const entries: o.LiteralMapEntry[] = [];\n    const quotedSet = new Set<string>(map && map[QUOTED_KEYS]);\n    Object.keys(map).forEach(key => {\n      entries.push(\n          new o.LiteralMapEntry(key, visitValue(map[key], this, null), quotedSet.has(key)));\n    });\n    return new o.LiteralMapExpr(entries, type);\n  }\n\n  visitPrimitive(value: any, type: o.Type): o.Expression { return o.literal(value, type); }\n\n  visitOther(value: any, type: o.Type): o.Expression {\n    if (value instanceof o.Expression) {\n      return value;\n    } else {\n      return this.ctx.importExpr(value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from './aot/static_symbol';\nimport {CompileInjectableMetadata, CompileNgModuleMetadata, CompileProviderMetadata, identifierName} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {InjectFlags, NodeFlags} from './core';\nimport {Identifiers} from './identifiers';\nimport * as o from './output/output_ast';\nimport {convertValueToOutputAst} from './output/value_util';\nimport {typeSourceSpan} from './parse_util';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {OutputContext} from './util';\nimport {componentFactoryResolverProviderDef, depDef, providerDef} from './view_compiler/provider_compiler';\n\ntype MapEntry = {\n  key: string,\n  quoted: boolean,\n  value: o.Expression\n};\ntype MapLiteral = MapEntry[];\n\nfunction mapEntry(key: string, value: o.Expression): MapEntry {\n  return {key, value, quoted: false};\n}\n\nexport class InjectableCompiler {\n  private tokenInjector: StaticSymbol;\n  constructor(private reflector: CompileReflector, private alwaysGenerateDef: boolean) {\n    this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n  }\n\n  private depsArray(deps: any[], ctx: OutputContext): o.Expression[] {\n    return deps.map(dep => {\n      let token = dep;\n      let args = [token];\n      let flags: InjectFlags = InjectFlags.Default;\n      if (Array.isArray(dep)) {\n        for (let i = 0; i < dep.length; i++) {\n          const v = dep[i];\n          if (v) {\n            if (v.ngMetadataName === 'Optional') {\n              flags |= InjectFlags.Optional;\n            } else if (v.ngMetadataName === 'SkipSelf') {\n              flags |= InjectFlags.SkipSelf;\n            } else if (v.ngMetadataName === 'Self') {\n              flags |= InjectFlags.Self;\n            } else if (v.ngMetadataName === 'Inject') {\n              token = v.token;\n            } else {\n              token = v;\n            }\n          }\n        }\n      }\n\n      let tokenExpr: o.Expression;\n      if (typeof token === 'string') {\n        tokenExpr = o.literal(token);\n      } else if (token === this.tokenInjector) {\n        tokenExpr = o.importExpr(Identifiers.INJECTOR);\n      } else {\n        tokenExpr = ctx.importExpr(token);\n      }\n\n      if (flags !== InjectFlags.Default) {\n        args = [tokenExpr, o.literal(flags)];\n      } else {\n        args = [tokenExpr];\n      }\n      return o.importExpr(Identifiers.inject).callFn(args);\n    });\n  }\n\n  factoryFor(injectable: CompileInjectableMetadata, ctx: OutputContext): o.Expression {\n    let retValue: o.Expression;\n    if (injectable.useExisting) {\n      retValue = o.importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n    } else if (injectable.useFactory) {\n      const deps = injectable.deps || [];\n      if (deps.length > 0) {\n        retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n      } else {\n        return ctx.importExpr(injectable.useFactory);\n      }\n    } else if (injectable.useValue) {\n      retValue = convertValueToOutputAst(ctx, injectable.useValue);\n    } else {\n      const clazz = injectable.useClass || injectable.symbol;\n      const depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n      retValue = new o.InstantiateExpr(ctx.importExpr(clazz), depArgs);\n    }\n    return o.fn(\n        [], [new o.ReturnStatement(retValue)], undefined, undefined,\n        injectable.symbol.name + '_Factory');\n  }\n\n  injectableDef(injectable: CompileInjectableMetadata, ctx: OutputContext): o.Expression {\n    let providedIn: o.Expression = o.NULL_EXPR;\n    if (injectable.providedIn !== undefined) {\n      if (injectable.providedIn === null) {\n        providedIn = o.NULL_EXPR;\n      } else if (typeof injectable.providedIn === 'string') {\n        providedIn = o.literal(injectable.providedIn);\n      } else {\n        providedIn = ctx.importExpr(injectable.providedIn);\n      }\n    }\n    const def: MapLiteral = [\n      mapEntry('factory', this.factoryFor(injectable, ctx)),\n      mapEntry('token', ctx.importExpr(injectable.type.reference)),\n      mapEntry('providedIn', providedIn),\n    ];\n    return o.importExpr(Identifiers.ÉµÉµdefineInjectable).callFn([o.literalMap(def)]);\n  }\n\n  compile(injectable: CompileInjectableMetadata, ctx: OutputContext): void {\n    if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n      const className = identifierName(injectable.type) !;\n      const clazz = new o.ClassStmt(\n          className, null,\n          [\n            new o.ClassField(\n                'ngInjectableDef', o.INFERRED_TYPE, [o.StmtModifier.Static],\n                this.injectableDef(injectable, ctx)),\n          ],\n          [], new o.ClassMethod(null, [], []), []);\n      ctx.statements.push(clazz);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nconst JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nconst JIT_SUMMARY_NAME = /NgSummary$/;\n\nexport function ngfactoryFilePath(filePath: string, forceSourceFile = false): string {\n  const urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n  return `${urlWithSuffix[0]}.ngfactory${normalizeGenFileSuffix(urlWithSuffix[1])}`;\n}\n\nexport function stripGeneratedFileSuffix(filePath: string): string {\n  return filePath.replace(GENERATED_FILE, '.');\n}\n\nexport function isGeneratedFile(filePath: string): boolean {\n  return GENERATED_FILE.test(filePath);\n}\n\nexport function splitTypescriptSuffix(path: string, forceSourceFile = false): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n  }\n\n  const lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n\nexport function normalizeGenFileSuffix(srcFileSuffix: string): string {\n  return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n\nexport function summaryFileName(fileName: string): string {\n  const fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n  return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n\nexport function summaryForJitFileName(fileName: string, forceSourceFile = false): string {\n  const urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n  return `${urlWithSuffix[0]}.ngsummary${urlWithSuffix[1]}`;\n}\n\nexport function stripSummaryForJitFileSuffix(filePath: string): string {\n  return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n\nexport function summaryForJitName(symbolName: string): string {\n  return `${symbolName}NgSummary`;\n}\n\nexport function stripSummaryForJitNameSuffix(symbolName: string): string {\n  return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\nconst LOWERED_SYMBOL = /\\u0275\\d+/;\n\nexport function isLoweredSymbol(name: string) {\n  return LOWERED_SYMBOL.test(name);\n}\n\nexport function createLoweredSymbol(id: number): string {\n  return `\\u0275${id}`;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\n\nexport enum LifecycleHooks {\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  OnChanges,\n  AfterContentInit,\n  AfterContentChecked,\n  AfterViewInit,\n  AfterViewChecked\n}\n\nexport const LIFECYCLE_HOOKS_VALUES = [\n  LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n  LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n  LifecycleHooks.AfterViewChecked\n];\n\nexport function hasLifecycleHook(\n    reflector: CompileReflector, hook: LifecycleHooks, token: any): boolean {\n  return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n\nexport function getAllLifecycleHooks(reflector: CompileReflector, token: any): LifecycleHooks[] {\n  return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n\nfunction getHookName(hook: LifecycleHooks): string {\n  switch (hook) {\n    case LifecycleHooks.OnInit:\n      return 'ngOnInit';\n    case LifecycleHooks.OnDestroy:\n      return 'ngOnDestroy';\n    case LifecycleHooks.DoCheck:\n      return 'ngDoCheck';\n    case LifecycleHooks.OnChanges:\n      return 'ngOnChanges';\n    case LifecycleHooks.AfterContentInit:\n      return 'ngAfterContentInit';\n    case LifecycleHooks.AfterContentChecked:\n      return 'ngAfterContentChecked';\n    case LifecycleHooks.AfterViewInit:\n      return 'ngAfterViewInit';\n    case LifecycleHooks.AfterViewChecked:\n      return 'ngAfterViewChecked';\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected: never = hook;\n      throw new Error(`unexpected ${unexpected}`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {CompilerConfig} from './config';\nimport {ChangeDetectionStrategy, Component, Directive, Injectable, ModuleWithProviders, Provider, Query, SchemaMetadata, Type, ViewEncapsulation, createAttribute, createComponent, createHost, createInject, createInjectable, createInjectionToken, createNgModule, createOptional, createSelf, createSkipSelf} from './core';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver, findLast} from './directive_resolver';\nimport {Identifiers} from './identifiers';\nimport {getAllLifecycleHooks} from './lifecycle_reflector';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {CssSelector} from './selector';\nimport {SummaryResolver} from './summary_resolver';\nimport {Console, SyncAsync, ValueTransformer, isPromise, noUndefined, resolveForwardRef, stringify, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\n\nexport const ERROR_COMPONENT_TYPE = 'ngComponentType';\n\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\nexport class CompileMetadataResolver {\n  private _nonNormalizedDirectiveCache =\n      new Map<Type, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\n  private _directiveCache = new Map<Type, cpl.CompileDirectiveMetadata>();\n  private _summaryCache = new Map<Type, cpl.CompileTypeSummary|null>();\n  private _pipeCache = new Map<Type, cpl.CompilePipeMetadata>();\n  private _ngModuleCache = new Map<Type, cpl.CompileNgModuleMetadata>();\n  private _ngModuleOfTypes = new Map<Type, Type>();\n  private _shallowModuleCache = new Map<Type, cpl.CompileShallowModuleMetadata>();\n\n  constructor(\n      private _config: CompilerConfig, private _htmlParser: HtmlParser,\n      private _ngModuleResolver: NgModuleResolver, private _directiveResolver: DirectiveResolver,\n      private _pipeResolver: PipeResolver, private _summaryResolver: SummaryResolver<any>,\n      private _schemaRegistry: ElementSchemaRegistry,\n      private _directiveNormalizer: DirectiveNormalizer, private _console: Console,\n      private _staticSymbolCache: StaticSymbolCache, private _reflector: CompileReflector,\n      private _errorCollector?: ErrorCollector) {}\n\n  getReflector(): CompileReflector { return this._reflector; }\n\n  clearCacheFor(type: Type) {\n    const dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n\n  clearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n\n  private _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let delegate: any = null;\n    const proxyClass: cpl.ProxyClass = <any>function(this: unknown) {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    };\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      (<any>proxyClass).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    (<any>proxyClass).overriddenName = name;\n    return proxyClass;\n  }\n\n  private getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n\n  private getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n\n  getHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n\n  getHostComponentType(dirType: any): StaticSymbol|cpl.ProxyClass {\n    const name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    }\n\n    return this._createProxyClass(dirType, name);\n  }\n\n  private getRendererType(dirType: any): StaticSymbol|object {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n    } else {\n      // returning an object as proxy,\n      // that we fill later during runtime compilation.\n      return <any>{};\n    }\n  }\n\n  private getComponentFactory(\n      selector: string, dirType: any, inputs: {[key: string]: string}|null,\n      outputs: {[key: string]: string}): StaticSymbol|object {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const hostView = this.getHostComponentViewClass(dirType);\n      // Note: ngContentSelectors will be filled later once the template is\n      // loaded.\n      const createComponentFactory =\n          this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n      return createComponentFactory(selector, dirType, <any>hostView, inputs, outputs, []);\n    }\n  }\n\n  private initComponentFactory(factory: StaticSymbol|object, ngContentSelectors: string[]) {\n    if (!(factory instanceof StaticSymbol)) {\n      (factory as any).ngContentSelectors.push(...ngContentSelectors);\n    }\n  }\n\n  private _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary|null {\n    let typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary || null);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n\n  getHostComponentMetadata(\n      compMeta: cpl.CompileDirectiveMetadata,\n      hostViewType?: StaticSymbol|cpl.ProxyClass): cpl.CompileDirectiveMetadata {\n    const hostType = this.getHostComponentType(compMeta.type.reference);\n    if (!hostViewType) {\n      hostViewType = this.getHostComponentViewClass(hostType);\n    }\n    // Note: ! is ok here as this method should only be called with normalized directive\n    // metadata, which always fills in the selector.\n    const template = CssSelector.parse(compMeta.selector !)[0].getMatchingElementTemplate();\n    const templateUrl = '';\n    const htmlAst = this._htmlParser.parse(template, templateUrl);\n    return cpl.CompileDirectiveMetadata.create({\n      isHost: true,\n      type: {reference: hostType, diDeps: [], lifecycleHooks: []},\n      template: new cpl.CompileTemplateMetadata({\n        encapsulation: ViewEncapsulation.None,\n        template,\n        templateUrl,\n        htmlAst,\n        styles: [],\n        styleUrls: [],\n        ngContentSelectors: [],\n        animations: [],\n        isInline: true,\n        externalStylesheets: [],\n        interpolation: null,\n        preserveWhitespaces: false,\n      }),\n      exportAs: null,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: [],\n      outputs: [],\n      host: {},\n      isComponent: true,\n      selector: '*',\n      providers: [],\n      viewProviders: [],\n      queries: [],\n      guards: {},\n      viewQueries: [],\n      componentViewType: hostViewType,\n      rendererType:\n          {id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {}} as object,\n      entryComponents: [],\n      componentFactory: null\n    });\n  }\n\n  loadDirectiveMetadata(ngModuleType: any, directiveType: any, isSync: boolean): SyncAsync<null> {\n    if (this._directiveCache.has(directiveType)) {\n      return null;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType) !;\n\n    const createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata | null) => {\n      const normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        isHost: false,\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        guards: metadata.guards,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        componentViewType: metadata.componentViewType,\n        rendererType: metadata.rendererType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      if (templateMetadata) {\n        this.initComponentFactory(metadata.componentFactory !, templateMetadata.ngContentSelectors);\n      }\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return null;\n    };\n\n    if (metadata.isComponent) {\n      const template = metadata.template !;\n      const templateMeta = this._directiveNormalizer.normalizeTemplate({\n        ngModuleType,\n        componentType: directiveType,\n        moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n        encapsulation: template.encapsulation,\n        template: template.template,\n        templateUrl: template.templateUrl,\n        styles: template.styles,\n        styleUrls: template.styleUrls,\n        animations: template.animations,\n        interpolation: template.interpolation,\n        preserveWhitespaces: template.preserveWhitespaces\n      });\n      if (isPromise(templateMeta) && isSync) {\n        this._reportError(componentStillLoadingError(directiveType), directiveType);\n        return null;\n      }\n      return SyncAsync.then(templateMeta, createDirectiveMetadata);\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n\n  getNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}|null {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata = undefined !;\n\n    if (createComponent.isTypeOf(dirMeta)) {\n      // component\n      const compMeta = dirMeta as Component;\n      assertArrayOfStrings('styles', compMeta.styles);\n      assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', compMeta.interpolation);\n\n      const animations = compMeta.animations;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: noUndefined(compMeta.encapsulation),\n        template: noUndefined(compMeta.template),\n        templateUrl: noUndefined(compMeta.templateUrl),\n        htmlAst: null,\n        styles: compMeta.styles || [],\n        styleUrls: compMeta.styleUrls || [],\n        animations: animations || [],\n        interpolation: noUndefined(compMeta.interpolation),\n        isInline: !!compMeta.template,\n        externalStylesheets: [],\n        ngContentSelectors: [],\n        preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n      });\n    }\n\n    let changeDetectionStrategy: ChangeDetectionStrategy = null !;\n    let viewProviders: cpl.CompileProviderMetadata[] = [];\n    let entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let selector = dirMeta.selector;\n\n    if (createComponent.isTypeOf(dirMeta)) {\n      // Component\n      const compMeta = dirMeta as Component;\n      changeDetectionStrategy = compMeta.changeDetection !;\n      if (compMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            compMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (compMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                                     .map((type) => this._getEntryComponentMetadata(type) !)\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let queries: cpl.CompileQueryMetadata[] = [];\n    let viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const metadata = cpl.CompileDirectiveMetadata.create({\n      isHost: false,\n      selector: selector,\n      exportAs: noUndefined(dirMeta.exportAs),\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs || [],\n      outputs: dirMeta.outputs || [],\n      host: dirMeta.host || {},\n      providers: providers || [],\n      viewProviders: viewProviders || [],\n      queries: queries || [],\n      guards: dirMeta.guards || {},\n      viewQueries: viewQueries || [],\n      entryComponents: entryComponentMetadata,\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         null,\n      rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n      componentFactory: null\n    });\n    if (nonNormalizedTemplateMetadata) {\n      metadata.componentFactory =\n          this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n    }\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n\n  /**\n   * Gets the metadata for the given directive.\n   * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n   */\n  getDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const dirMeta = this._directiveCache.get(directiveType) !;\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n\n  getDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const dirSummary =\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n\n  isDirective(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n        this._directiveResolver.isDirective(type);\n  }\n\n  isPipe(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n        this._pipeResolver.isPipe(type);\n  }\n\n  isNgModule(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n        this._ngModuleResolver.isNgModule(type);\n  }\n\n  getNgModuleSummary(moduleType: any, alreadyCollecting: Set<any>|null = null):\n      cpl.CompileNgModuleSummary|null {\n    let moduleSummary: cpl.CompileNgModuleSummary|null =\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule);\n    if (!moduleSummary) {\n      const moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n\n  /**\n   * Loads the declared directives and pipes of an NgModule.\n   */\n  loadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n\n  getShallowModuleMetadata(moduleType: any): cpl.CompileShallowModuleMetadata|null {\n    let compileMeta = this._shallowModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n\n    const ngModuleMeta =\n        findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n\n    compileMeta = {\n      type: this._getTypeMetadata(moduleType),\n      rawExports: ngModuleMeta.exports,\n      rawImports: ngModuleMeta.imports,\n      rawProviders: ngModuleMeta.providers,\n    };\n\n    this._shallowModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n\n  getNgModuleMetadata(\n      moduleType: any, throwIfNotFound = true,\n      alreadyCollecting: Set<any>|null = null): cpl.CompileNgModuleMetadata|null {\n    moduleType = resolveForwardRef(moduleType);\n    let compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const importedModules: cpl.CompileNgModuleSummary[] = [];\n    const exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const providers: cpl.CompileProviderMetadata[] = [];\n    const entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let importedModuleType: Type = undefined !;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          if (this._checkSelfImport(moduleType, importedModuleType)) return;\n          if (!alreadyCollecting) alreadyCollecting = new Set();\n          if (alreadyCollecting.has(importedModuleType)) {\n            this._reportError(\n                syntaxError(\n                    `${this._getTypeDescriptor(importedModuleType)} '${stringifyType(importedType)}' is imported recursively by the module '${stringifyType(moduleType)}'.`),\n                moduleType);\n            return;\n          }\n          alreadyCollecting.add(importedModuleType);\n          const importedModuleSummary =\n              this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n          alreadyCollecting.delete(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        if (!alreadyCollecting) alreadyCollecting = new Set();\n        if (alreadyCollecting.has(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `${this._getTypeDescriptor(exportedType)} '${stringify(exportedType)}' is exported recursively by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        alreadyCollecting.add(exportedType);\n        const exportedModuleSummary = this.getNgModuleSummary(exportedType, alreadyCollecting);\n        alreadyCollecting.delete(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n        return;\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => this._getEntryComponentMetadata(type) !));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => this._getEntryComponentMetadata(type.reference) !));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id || null,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta !.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n\n  private _checkSelfImport(moduleType: Type, importedModuleType: Type): boolean {\n    if (moduleType === importedModuleType) {\n      this._reportError(\n          syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n      return true;\n    }\n    return false;\n  }\n\n  private _getTypeDescriptor(type: Type): string {\n    if (isValidType(type)) {\n      if (this.isDirective(type)) {\n        return 'directive';\n      }\n\n      if (this.isPipe(type)) {\n        return 'pipe';\n      }\n\n      if (this.isNgModule(type)) {\n        return 'module';\n      }\n    }\n\n    if ((type as any).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n\n\n  private _addTypeToModule(type: Type, moduleType: Type) {\n    const oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n      return;\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n\n  private _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const result = new cpl.TransitiveCompileNgModuleMetadata();\n    const modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const tokenRef = cpl.tokenReference(entry.provider.token);\n        let prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n\n  private _getIdentifierMetadata(type: Type): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n\n  isInjectable(type: any): boolean {\n    const annotations = this._reflector.tryAnnotations(type);\n    return annotations.some(ann => createInjectable.isTypeOf(ann));\n  }\n\n  getInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {\n      summaryKind: cpl.CompileSummaryKind.Injectable,\n      type: this._getTypeMetadata(type, null, false)\n    };\n  }\n\n  getInjectableMetadata(\n      type: any, dependencies: any[]|null = null,\n      throwOnUnknownDeps: boolean = true): cpl.CompileInjectableMetadata|null {\n    const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    const typeMetadata = typeSummary ?\n        typeSummary.type :\n        this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n\n    const annotations: Injectable[] =\n        this._reflector.annotations(type).filter(ann => createInjectable.isTypeOf(ann));\n\n    if (annotations.length === 0) {\n      return null;\n    }\n\n    const meta = annotations[annotations.length - 1];\n    return {\n      symbol: type,\n      type: typeMetadata,\n      providedIn: meta.providedIn,\n      useValue: meta.useValue,\n      useClass: meta.useClass,\n      useExisting: meta.useExisting,\n      useFactory: meta.useFactory,\n      deps: meta.deps,\n    };\n  }\n\n  private _getTypeMetadata(type: Type, dependencies: any[]|null = null, throwOnUnknownDeps = true):\n      cpl.CompileTypeMetadata {\n    const identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n      lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n    };\n  }\n\n  private _getFactoryMetadata(factory: Function, dependencies: any[]|null = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n\n  /**\n   * Gets the metadata for the given pipe.\n   * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n   */\n  getPipeMetadata(pipeType: any): cpl.CompilePipeMetadata|null {\n    const pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta || null;\n  }\n\n  getPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const pipeSummary =\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe);\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n\n  getOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n\n  private _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const pipeAnnotation = this._pipeResolver.resolve(pipeType) !;\n\n    const pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: !!pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n\n  private _getDependenciesMetadata(\n      typeOrFunc: Type|Function, dependencies: any[]|null,\n      throwOnUnknownDeps = true): cpl.CompileDiDependencyMetadata[] {\n    let hasUnknownDeps = false;\n    const params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let isAttribute = false;\n      let isHost = false;\n      let isSelf = false;\n      let isSkipSelf = false;\n      let isOptional = false;\n      let token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry: any) => {\n          if (createHost.isTypeOf(paramEntry)) {\n            isHost = true;\n          } else if (createSelf.isTypeOf(paramEntry)) {\n            isSelf = true;\n          } else if (createSkipSelf.isTypeOf(paramEntry)) {\n            isSkipSelf = true;\n          } else if (createOptional.isTypeOf(paramEntry)) {\n            isOptional = true;\n          } else if (createAttribute.isTypeOf(paramEntry)) {\n            isAttribute = true;\n            token = (paramEntry as any).attributeName;\n          } else if (createInject.isTypeOf(paramEntry)) {\n            token = (paramEntry as any).token;\n          } else if (\n              createInjectionToken.isTypeOf(paramEntry) ||\n              (paramEntry as any) instanceof StaticSymbol) {\n            token = paramEntry;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return {};\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const depsTokens =\n          dependenciesMetadata.map((dep) => dep.token ? stringifyType(dep.token) : '?').join(', ');\n      const message =\n          `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n      if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n        this._reportError(syntaxError(message), typeOrFunc);\n      } else {\n        this._console.warn(`Warning: ${message} This will become an error in Angular v6.x`);\n      }\n    }\n\n    return dependenciesMetadata;\n  }\n\n  private _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n\n  private _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let providerMeta: cpl.ProviderMeta = undefined !;\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.`));\n          return;\n        } else {\n          const providersInfo =\n              (<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n          return;\n        }\n        if (providerMeta.token ===\n            this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n\n  private _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n\n  private _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const components: cpl.CompileEntryComponentMetadata[] = [];\n    const collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n\n  private _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata|null {\n    const dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: dirMeta.metadata.componentFactory !};\n    }\n    const dirSummary =\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n    if (dirSummary && dirSummary.isComponent) {\n      return {componentType: dirType, componentFactory: dirSummary.componentFactory !};\n    }\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n    return null;\n  }\n\n  private _getInjectableTypeMetadata(type: Type, dependencies: any[]|null = null):\n      cpl.CompileTypeMetadata {\n    const typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n\n  getProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let compileDeps: cpl.CompileDiDependencyMetadata[] = undefined !;\n    let compileTypeMetadata: cpl.CompileTypeMetadata = null !;\n    let compileFactoryMetadata: cpl.CompileFactoryMetadata = null !;\n    let token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata =\n          this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n\n  private _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type): cpl.CompileQueryMetadata[] {\n    const res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n\n  private _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n\n  private _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type|Function):\n      cpl.CompileQueryMetadata {\n    let selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n        selectors = [];\n      } else {\n        selectors = [this._getTokenMetadata(q.selector)];\n      }\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null !,\n      static: q.static\n    };\n  }\n\n  private _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let i = 0; i < tree.length; i++) {\n      const item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\n\nclass _CompileValueConverter extends ValueTransformer {\n  visitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n */\nfunction componentStillLoadingError(compType: Type) {\n  const error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  (error as any)[ERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDiDependencyMetadata, CompileEntryComponentMetadata, CompileProviderMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {DepFlags, NodeFlags} from '../core';\nimport {Identifiers, createTokenForExternalReference} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ProviderAst, ProviderAstType} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n\nexport function providerDef(ctx: OutputContext, providerAst: ProviderAst): {\n  providerExpr: o.Expression,\n  flags: NodeFlags,\n  depsExpr: o.Expression,\n  tokenExpr: o.Expression\n} {\n  let flags = NodeFlags.None;\n  if (!providerAst.eager) {\n    flags |= NodeFlags.LazyProvider;\n  }\n  if (providerAst.providerType === ProviderAstType.PrivateService) {\n    flags |= NodeFlags.PrivateProvider;\n  }\n  if (providerAst.isModule) {\n    flags |= NodeFlags.TypeModuleProvider;\n  }\n  providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n    // for regular providers, we only support ngOnDestroy\n    if (lifecycleHook === LifecycleHooks.OnDestroy ||\n        providerAst.providerType === ProviderAstType.Directive ||\n        providerAst.providerType === ProviderAstType.Component) {\n      flags |= lifecycleHookToNodeFlag(lifecycleHook);\n    }\n  });\n  const {providerExpr, flags: providerFlags, depsExpr} = providerAst.multiProvider ?\n      multiProviderDef(ctx, flags, providerAst.providers) :\n      singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]);\n  return {\n    providerExpr,\n    flags: providerFlags, depsExpr,\n    tokenExpr: tokenExpr(ctx, providerAst.token),\n  };\n}\n\nfunction multiProviderDef(\n    ctx: OutputContext, flags: NodeFlags, providers: CompileProviderMetadata[]):\n    {providerExpr: o.Expression, flags: NodeFlags, depsExpr: o.Expression} {\n  const allDepDefs: o.Expression[] = [];\n  const allParams: o.FnParam[] = [];\n  const exprs = providers.map((provider, providerIndex) => {\n    let expr: o.Expression;\n    if (provider.useClass) {\n      const depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n      expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n    } else if (provider.useFactory) {\n      const depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n      expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n    } else if (provider.useExisting) {\n      const depExprs = convertDeps(providerIndex, [{token: provider.useExisting}]);\n      expr = depExprs[0];\n    } else {\n      expr = convertValueToOutputAst(ctx, provider.useValue);\n    }\n    return expr;\n  });\n  const providerExpr =\n      o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n  return {\n    providerExpr,\n    flags: flags | NodeFlags.TypeFactoryProvider,\n    depsExpr: o.literalArr(allDepDefs)\n  };\n\n  function convertDeps(providerIndex: number, deps: CompileDiDependencyMetadata[]) {\n    return deps.map((dep, depIndex) => {\n      const paramName = `p${providerIndex}_${depIndex}`;\n      allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n      allDepDefs.push(depDef(ctx, dep));\n      return o.variable(paramName);\n    });\n  }\n}\n\nfunction singleProviderDef(\n    ctx: OutputContext, flags: NodeFlags, providerType: ProviderAstType,\n    providerMeta: CompileProviderMetadata):\n    {providerExpr: o.Expression, flags: NodeFlags, depsExpr: o.Expression} {\n  let providerExpr: o.Expression;\n  let deps: CompileDiDependencyMetadata[];\n  if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n    providerExpr = ctx.importExpr(providerMeta.useClass !.reference);\n    flags |= NodeFlags.TypeDirective;\n    deps = providerMeta.deps || providerMeta.useClass !.diDeps;\n  } else {\n    if (providerMeta.useClass) {\n      providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n      flags |= NodeFlags.TypeClassProvider;\n      deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    } else if (providerMeta.useFactory) {\n      providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n      flags |= NodeFlags.TypeFactoryProvider;\n      deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n    } else if (providerMeta.useExisting) {\n      providerExpr = o.NULL_EXPR;\n      flags |= NodeFlags.TypeUseExistingProvider;\n      deps = [{token: providerMeta.useExisting}];\n    } else {\n      providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n      flags |= NodeFlags.TypeValueProvider;\n      deps = [];\n    }\n  }\n  const depsExpr = o.literalArr(deps.map(dep => depDef(ctx, dep)));\n  return {providerExpr, flags, depsExpr};\n}\n\nfunction tokenExpr(ctx: OutputContext, tokenMeta: CompileTokenMetadata): o.Expression {\n  return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n                                o.literal(tokenMeta.value);\n}\n\nexport function depDef(ctx: OutputContext, dep: CompileDiDependencyMetadata): o.Expression {\n  // Note: the following fields have already been normalized out by provider_analyzer:\n  // - isAttribute, isHost\n  const expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, dep.token !);\n  let flags = DepFlags.None;\n  if (dep.isSkipSelf) {\n    flags |= DepFlags.SkipSelf;\n  }\n  if (dep.isOptional) {\n    flags |= DepFlags.Optional;\n  }\n  if (dep.isSelf) {\n    flags |= DepFlags.Self;\n  }\n  if (dep.isValue) {\n    flags |= DepFlags.Value;\n  }\n  return flags === DepFlags.None ? expr : o.literalArr([o.literal(flags), expr]);\n}\n\nexport function lifecycleHookToNodeFlag(lifecycleHook: LifecycleHooks): NodeFlags {\n  let nodeFlag = NodeFlags.None;\n  switch (lifecycleHook) {\n    case LifecycleHooks.AfterContentChecked:\n      nodeFlag = NodeFlags.AfterContentChecked;\n      break;\n    case LifecycleHooks.AfterContentInit:\n      nodeFlag = NodeFlags.AfterContentInit;\n      break;\n    case LifecycleHooks.AfterViewChecked:\n      nodeFlag = NodeFlags.AfterViewChecked;\n      break;\n    case LifecycleHooks.AfterViewInit:\n      nodeFlag = NodeFlags.AfterViewInit;\n      break;\n    case LifecycleHooks.DoCheck:\n      nodeFlag = NodeFlags.DoCheck;\n      break;\n    case LifecycleHooks.OnChanges:\n      nodeFlag = NodeFlags.OnChanges;\n      break;\n    case LifecycleHooks.OnDestroy:\n      nodeFlag = NodeFlags.OnDestroy;\n      break;\n    case LifecycleHooks.OnInit:\n      nodeFlag = NodeFlags.OnInit;\n      break;\n  }\n  return nodeFlag;\n}\n\nexport function componentFactoryResolverProviderDef(\n    reflector: CompileReflector, ctx: OutputContext, flags: NodeFlags,\n    entryComponents: CompileEntryComponentMetadata[]): {\n  providerExpr: o.Expression,\n  flags: NodeFlags,\n  depsExpr: o.Expression,\n  tokenExpr: o.Expression\n} {\n  const entryComponentFactories =\n      entryComponents.map((entryComponent) => ctx.importExpr(entryComponent.componentFactory));\n  const token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n  const classMeta = {\n    diDeps: [\n      {isValue: true, value: o.literalArr(entryComponentFactories)},\n      {token: token, isSkipSelf: true, isOptional: true},\n      {token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef)},\n    ],\n    lifecycleHooks: [],\n    reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n  };\n  const {providerExpr, flags: providerFlags, depsExpr} =\n      singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token,\n        multi: false,\n        useClass: classMeta,\n      });\n  return {providerExpr, flags: providerFlags, depsExpr, tokenExpr: tokenExpr(ctx, token)};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileNgModuleMetadata, CompileProviderMetadata, identifierName} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {NodeFlags} from './core';\nimport {Identifiers} from './identifiers';\nimport * as o from './output/output_ast';\nimport {typeSourceSpan} from './parse_util';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {OutputContext} from './util';\nimport {componentFactoryResolverProviderDef, depDef, providerDef} from './view_compiler/provider_compiler';\n\nexport class NgModuleCompileResult {\n  constructor(public ngModuleFactoryVar: string) {}\n}\n\nconst LOG_VAR = o.variable('_l');\n\nexport class NgModuleCompiler {\n  constructor(private reflector: CompileReflector) {}\n  compile(\n      ctx: OutputContext, ngModuleMeta: CompileNgModuleMetadata,\n      extraProviders: CompileProviderMetadata[]): NgModuleCompileResult {\n    const sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n    const entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n    const bootstrapComponents = ngModuleMeta.bootstrapComponents;\n    const providerParser =\n        new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n    const providerDefs =\n        [componentFactoryResolverProviderDef(\n             this.reflector, ctx, NodeFlags.None, entryComponentFactories)]\n            .concat(providerParser.parse().map((provider) => providerDef(ctx, provider)))\n            .map(({providerExpr, depsExpr, flags, tokenExpr}) => {\n              return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n              ]);\n            });\n\n    const ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n    const ngModuleDefFactory = o.fn(\n        [new o.FnParam(LOG_VAR.name !)], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n\n    const ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n    this._createNgModuleFactory(\n        ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n          ctx.importExpr(ngModuleMeta.type.reference),\n          o.literalArr(bootstrapComponents.map(id => ctx.importExpr(id.reference))),\n          ngModuleDefFactory\n        ]));\n\n    if (ngModuleMeta.id) {\n      const id = typeof ngModuleMeta.id === 'string' ? o.literal(ngModuleMeta.id) :\n                                                       ctx.importExpr(ngModuleMeta.id);\n      const registerFactoryStmt = o.importExpr(Identifiers.RegisterModuleFactoryFn)\n                                      .callFn([id, o.variable(ngModuleFactoryVar)])\n                                      .toStmt();\n      ctx.statements.push(registerFactoryStmt);\n    }\n\n    return new NgModuleCompileResult(ngModuleFactoryVar);\n  }\n\n  createStub(ctx: OutputContext, ngModuleReference: any) {\n    this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n  }\n\n  private _createNgModuleFactory(ctx: OutputContext, reference: any, value: o.Expression) {\n    const ngModuleFactoryVar = `${identifierName({reference: reference})}NgFactory`;\n    const ngModuleFactoryStmt =\n        o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(\n                o.importType(\n                    Identifiers.NgModuleFactory, [o.expressionType(ctx.importExpr(reference)) !],\n                    [o.TypeModifier.Const]),\n                [o.StmtModifier.Final, o.StmtModifier.Exported]);\n\n    ctx.statements.push(ngModuleFactoryStmt);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\nimport {NgModule, Type, createNgModule} from './core';\nimport {findLast} from './directive_resolver';\nimport {stringify} from './util';\n\n\n/**\n * Resolves types to {@link NgModule}.\n */\nexport class NgModuleResolver {\n  constructor(private _reflector: CompileReflector) {}\n\n  isNgModule(type: any) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); }\n\n  resolve(type: Type, throwIfNotFound = true): NgModule|null {\n    const ngModuleMeta: NgModule =\n        findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n\n    if (ngModuleMeta) {\n      return ngModuleMeta;\n    } else {\n      if (throwIfNotFound) {\n        throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n      }\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, OutputEmitter} from './abstract_emitter';\nimport * as o from './output_ast';\n\nconst _debugFilePath = '/debug/lib';\n\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type | any[]):\n    string {\n  const converter = new _TsEmitterVisitor();\n  const ctx = EmitterVisitorContext.createRoot();\n  const asts: any[] = Array.isArray(ast) ? ast : [ast];\n\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new Error(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\n\nexport type ReferenceFilter = (reference: o.ExternalReference) => boolean;\n\nexport class TypeScriptEmitter implements OutputEmitter {\n  emitStatementsAndContext(\n      genFilePath: string, stmts: o.Statement[], preamble: string = '',\n      emitSourceMaps: boolean = true, referenceFilter?: ReferenceFilter,\n      importFilter?: ReferenceFilter): {sourceText: string, context: EmitterVisitorContext} {\n    const converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n\n    const ctx = EmitterVisitorContext.createRoot();\n\n    converter.visitAllStatements(stmts, ctx);\n\n    const preambleLines = preamble ? preamble.split('\\n') : [];\n    converter.reexports.forEach((reexports, exportedModuleName) => {\n      const reexportsCode =\n          reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n      preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n    });\n\n    converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      preambleLines.push(\n          `imp` +\n          `ort * as ${prefix} from '${importedModuleName}';`);\n    });\n\n    const sm = emitSourceMaps ?\n        ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n        '';\n    const lines = [...preambleLines, ctx.toSource(), sm];\n    if (sm) {\n      // always add a newline at the end, as some tools have bugs without it.\n      lines.push('');\n    }\n    ctx.setPreambleLineCount(preambleLines.length);\n    return {sourceText: lines.join('\\n'), context: ctx};\n  }\n\n  emitStatements(genFilePath: string, stmts: o.Statement[], preamble: string = '') {\n    return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n  }\n}\n\n\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\n  private typeExpression = 0;\n\n  constructor(private referenceFilter?: ReferenceFilter, private importFilter?: ReferenceFilter) {\n    super(false);\n  }\n\n  importsWithPrefixes = new Map<string, string>();\n  reexports = new Map<string, {name: string, as: string}[]>();\n\n  visitType(t: o.Type|null, ctx: EmitterVisitorContext, defaultType: string = 'any') {\n    if (t) {\n      this.typeExpression++;\n      t.visitType(this, ctx);\n      this.typeExpression--;\n    } else {\n      ctx.print(null, defaultType);\n    }\n  }\n\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const value = ast.value;\n    if (value == null && ast.type != o.INFERRED_TYPE) {\n      ctx.print(ast, `(${value} as any)`);\n      return null;\n    }\n    return super.visitLiteralExpr(ast, ctx);\n  }\n\n\n  // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n  // In SNC mode, [] have the type never[], so we cast here to any[].\n  // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n  // start with [].concat. see https://github.com/angular/angular/pull/11846\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    if (ast.entries.length === 0) {\n      ctx.print(ast, '(');\n    }\n    const result = super.visitLiteralArrayExpr(ast, ctx);\n    if (ast.entries.length === 0) {\n      ctx.print(ast, ' as any[])');\n    }\n    return result;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n\n  visitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    const result = super.visitAssertNotNullExpr(ast, ctx);\n    ctx.print(ast, '!');\n    return result;\n  }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n        !stmt.type) {\n      // check for a reexport\n      const {name, moduleName} = stmt.value.value;\n      if (moduleName) {\n        let reexports = this.reexports.get(moduleName);\n        if (!reexports) {\n          reexports = [];\n          this.reexports.set(moduleName, reexports);\n        }\n        reexports.push({name: name !, as: stmt.name});\n        return null;\n      }\n    }\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(stmt, `const`);\n    } else {\n      ctx.print(stmt, `var`);\n    }\n    ctx.print(stmt, ` ${stmt.name}`);\n    this._printColonType(stmt.type, ctx);\n    if (stmt.value) {\n      ctx.print(stmt, ` = `);\n      stmt.value.visitExpression(this, ctx);\n    }\n    ctx.println(stmt, `;`);\n    return null;\n  }\n\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): never {\n    throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n  }\n\n  visitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(<`);\n    ast.type !.visitType(this, ctx);\n    ctx.print(ast, `>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    this.typeExpression++;\n    ast.classExpr.visitExpression(this, ctx);\n    this.typeExpression--;\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `class ${stmt.name}`);\n    if (stmt.parent != null) {\n      ctx.print(stmt, ` extends `);\n      this.typeExpression++;\n      stmt.parent.visitExpression(this, ctx);\n      this.typeExpression--;\n    }\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (stmt.constructorMethod != null) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    ctx.popClass();\n    return null;\n  }\n\n  private _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      // comment out as a workaround for #10967\n      ctx.print(null, `/*private*/ `);\n    }\n    if (field.hasModifier(o.StmtModifier.Static)) {\n      ctx.print(null, 'static ');\n    }\n    ctx.print(null, field.name);\n    this._printColonType(field.type, ctx);\n    if (field.initializer) {\n      ctx.print(null, ' = ');\n      field.initializer.visitExpression(this, ctx);\n    }\n    ctx.println(null, `;`);\n  }\n\n  private _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `get ${getter.name}()`);\n    this._printColonType(getter.type, ctx);\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n\n  private _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n\n  private _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(null, `)`);\n    this._printColonType(method.type, ctx, 'void');\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    if (ast.name) {\n      ctx.print(ast, 'function ');\n      ctx.print(ast, ast.name);\n    }\n    ctx.print(ast, `(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(ast, `)`);\n    this._printColonType(ast.type, ctx, 'void');\n    if (!ast.name) {\n      ctx.print(ast, ` => `);\n    }\n    ctx.println(ast, '{');\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n\n    return null;\n  }\n\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(stmt, `)`);\n    this._printColonType(stmt.type, ctx, 'void');\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const catchStmts =\n        [<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  visitBuiltinType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    let typeStr: string;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      case o.BuiltinTypeName.None:\n        typeStr = 'never';\n        break;\n      default:\n        throw new Error(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(null, typeStr);\n    return null;\n  }\n\n  visitExpressionType(ast: o.ExpressionType, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    if (ast.typeParams !== null) {\n      ctx.print(null, '<');\n      this.visitAllObjects(type => this.visitType(type, ctx), ast.typeParams, ctx, ',');\n      ctx.print(null, '>');\n    }\n    return null;\n  }\n\n  visitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    this.visitType(type.of, ctx);\n    ctx.print(null, `[]`);\n    return null;\n  }\n\n  visitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(null, `{[key: string]:`);\n    this.visitType(type.valueType, ctx);\n    ctx.print(null, `}`);\n    return null;\n  }\n\n  getBuiltinMethodName(method: o.BuiltinMethod): string {\n    let name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n\n  private _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => {\n      ctx.print(null, param.name);\n      this._printColonType(param.type, ctx);\n    }, params, ctx, ',');\n  }\n\n  private _visitIdentifier(\n      value: o.ExternalReference, typeParams: o.Type[]|null, ctx: EmitterVisitorContext): void {\n    const {name, moduleName} = value;\n    if (this.referenceFilter && this.referenceFilter(value)) {\n      ctx.print(null, '(null as any)');\n      return;\n    }\n    if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n      let prefix = this.importsWithPrefixes.get(moduleName);\n      if (prefix == null) {\n        prefix = `i${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(moduleName, prefix);\n      }\n      ctx.print(null, `${prefix}.`);\n    }\n    ctx.print(null, name !);\n\n    if (this.typeExpression > 0) {\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const suppliedParameters = typeParams || [];\n      if (suppliedParameters.length > 0) {\n        ctx.print(null, `<`);\n        this.visitAllObjects(type => type.visitType(this, ctx), typeParams !, ctx, ',');\n        ctx.print(null, `>`);\n      }\n    }\n  }\n\n  private _printColonType(type: o.Type|null, ctx: EmitterVisitorContext, defaultType?: string) {\n    if (type !== o.INFERRED_TYPE) {\n      ctx.print(null, ':');\n      this.visitType(type, ctx, defaultType);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\nimport {Pipe, Type, createPipe} from './core';\nimport {findLast} from './directive_resolver';\nimport {resolveForwardRef, stringify} from './util';\n\n/**\n * Resolve a `Type` for {@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nexport class PipeResolver {\n  constructor(private _reflector: CompileReflector) {}\n\n  isPipe(type: Type) {\n    const typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n  }\n\n  /**\n   * Return {@link Pipe} for a given `Type`.\n   */\n  resolve(type: Type, throwIfNotFound = true): Pipe|null {\n    const metas = this._reflector.annotations(resolveForwardRef(type));\n    if (metas) {\n      const annotation = findLast(metas, createPipe.isTypeOf);\n      if (annotation) {\n        return annotation;\n      }\n    }\n    if (throwIfNotFound) {\n      throw new Error(`No Pipe decorator found on ${stringify(type)}`);\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotCompilerOptions} from '../aot/compiler_options';\nimport {StaticReflector} from '../aot/static_reflector';\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompilePipeSummary} from '../compile_metadata';\nimport {BindingForm, BuiltinConverter, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ParseSourceSpan} from '../parse_util';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n\n\n/**\n * Generates code that is used to type check templates.\n */\nexport class TypeCheckCompiler {\n  constructor(private options: AotCompilerOptions, private reflector: StaticReflector) {}\n\n  /**\n   * Important notes:\n   * - This must not produce new `import` statements, but only refer to types outside\n   *   of the file via the variables provided via externalReferenceVars.\n   *   This allows Typescript to reuse the old program's structure as no imports have changed.\n   * - This must not produce any exports, as this would pollute the .d.ts file\n   *   and also violate the point above.\n   */\n  compileComponent(\n      componentId: string, component: CompileDirectiveMetadata, template: TemplateAst[],\n      usedPipes: CompilePipeSummary[], externalReferenceVars: Map<StaticSymbol, string>,\n      ctx: OutputContext): o.Statement[] {\n    const pipes = new Map<string, StaticSymbol>();\n    usedPipes.forEach(p => pipes.set(p.name, p.type.reference));\n    let embeddedViewCount = 0;\n    const viewBuilderFactory =\n        (parent: ViewBuilder | null, guards: GuardExpression[]): ViewBuilder => {\n          const embeddedViewIndex = embeddedViewCount++;\n          return new ViewBuilder(\n              this.options, this.reflector, externalReferenceVars, parent, component.type.reference,\n              component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n\n    const visitor = viewBuilderFactory(null, []);\n    visitor.visitAll([], template);\n\n    return visitor.build(componentId);\n  }\n}\n\ninterface GuardExpression {\n  guard: StaticSymbol;\n  useIf: boolean;\n  expression: Expression;\n}\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder, guards: GuardExpression[]): ViewBuilder;\n}\n\n// Note: This is used as key in Map and should therefore be\n// unique per value.\ntype OutputVarType = o.BuiltinTypeName | StaticSymbol;\n\ninterface Expression {\n  context: OutputVarType;\n  sourceSpan: ParseSourceSpan;\n  value: AST;\n}\n\nconst DYNAMIC_VAR_NAME = '_any';\n\nclass TypeCheckLocalResolver implements LocalResolver {\n  notifyImplicitReceiverUse(): void {}\n  getLocal(name: string): o.Expression|null {\n    if (name === EventHandlerVars.event.name) {\n      // References to the event should not be type-checked.\n      // TODO(chuckj): determine a better type for the event.\n      return o.variable(DYNAMIC_VAR_NAME);\n    }\n    return null;\n  }\n}\n\nconst defaultResolver = new TypeCheckLocalResolver();\n\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver {\n  private refOutputVars = new Map<string, OutputVarType>();\n  private variables: VariableAst[] = [];\n  private children: ViewBuilder[] = [];\n  private updates: Expression[] = [];\n  private actions: Expression[] = [];\n\n  constructor(\n      private options: AotCompilerOptions, private reflector: StaticReflector,\n      private externalReferenceVars: Map<StaticSymbol, string>, private parent: ViewBuilder|null,\n      private component: StaticSymbol, private isHostComponent: boolean,\n      private embeddedViewIndex: number, private pipes: Map<string, StaticSymbol>,\n      private guards: GuardExpression[], private ctx: OutputContext,\n      private viewBuilderFactory: ViewBuilderFactory) {}\n\n  private getOutputVar(type: o.BuiltinTypeName|StaticSymbol): string {\n    let varName: string|undefined;\n    if (type === this.component && this.isHostComponent) {\n      varName = DYNAMIC_VAR_NAME;\n    } else if (type instanceof StaticSymbol) {\n      varName = this.externalReferenceVars.get(type);\n    } else {\n      varName = DYNAMIC_VAR_NAME;\n    }\n    if (!varName) {\n      throw new Error(\n          `Illegal State: referring to a type without a variable ${JSON.stringify(type)}`);\n    }\n    return varName;\n  }\n\n  private getTypeGuardExpressions(ast: EmbeddedTemplateAst): GuardExpression[] {\n    const result = [...this.guards];\n    for (let directive of ast.directives) {\n      for (let input of directive.inputs) {\n        const guard = directive.directive.guards[input.directiveName];\n        if (guard) {\n          const useIf = guard === 'UseIf';\n          result.push({\n            guard,\n            useIf,\n            expression: {context: this.component, value: input.value} as Expression\n          });\n        }\n      }\n    }\n    return result;\n  }\n\n  visitAll(variables: VariableAst[], astNodes: TemplateAst[]) {\n    this.variables = variables;\n    templateVisitAll(this, astNodes);\n  }\n\n  build(componentId: string, targetStatements: o.Statement[] = []): o.Statement[] {\n    this.children.forEach((child) => child.build(componentId, targetStatements));\n    let viewStmts: o.Statement[] =\n        [o.variable(DYNAMIC_VAR_NAME).set(o.NULL_EXPR).toDeclStmt(o.DYNAMIC_TYPE)];\n    let bindingCount = 0;\n    this.updates.forEach((expression) => {\n      const {sourceSpan, context, value} = this.preprocessUpdateExpression(expression);\n      const bindingId = `${bindingCount++}`;\n      const nameResolver = context === this.component ? this : defaultResolver;\n      const {stmts, currValExpr} = convertPropertyBinding(\n          nameResolver, o.variable(this.getOutputVar(context)), value, bindingId,\n          BindingForm.General);\n      stmts.push(new o.ExpressionStatement(currValExpr));\n      viewStmts.push(...stmts.map(\n          (stmt: o.Statement) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n    });\n\n    this.actions.forEach(({sourceSpan, context, value}) => {\n      const bindingId = `${bindingCount++}`;\n      const nameResolver = context === this.component ? this : defaultResolver;\n      const {stmts} = convertActionBinding(\n          nameResolver, o.variable(this.getOutputVar(context)), value, bindingId);\n      viewStmts.push(...stmts.map(\n          (stmt: o.Statement) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n    });\n\n    if (this.guards.length) {\n      let guardExpression: o.Expression|undefined = undefined;\n      for (const guard of this.guards) {\n        const {context, value} = this.preprocessUpdateExpression(guard.expression);\n        const bindingId = `${bindingCount++}`;\n        const nameResolver = context === this.component ? this : defaultResolver;\n        // We only support support simple expressions and ignore others as they\n        // are unlikely to affect type narrowing.\n        const {stmts, currValExpr} = convertPropertyBinding(\n            nameResolver, o.variable(this.getOutputVar(context)), value, bindingId,\n            BindingForm.TrySimple);\n        if (stmts.length == 0) {\n          const guardClause =\n              guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n          guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n        }\n      }\n      if (guardExpression) {\n        viewStmts = [new o.IfStmt(guardExpression, viewStmts)];\n      }\n    }\n\n    const viewName = `_View_${componentId}_${this.embeddedViewIndex}`;\n    const viewFactory = new o.DeclareFunctionStmt(viewName, [], viewStmts);\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n\n  visitBoundText(ast: BoundTextAst, context: any): any {\n    const astWithSource = <ASTWithSource>ast.value;\n    const inter = <Interpolation>astWithSource.ast;\n\n    inter.expressions.forEach(\n        (expr) =>\n            this.updates.push({context: this.component, value: expr, sourceSpan: ast.sourceSpan}));\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    this.visitElementOrTemplate(ast);\n    // Note: The old view compiler used to use an `any` type\n    // for the context in any embedded view.\n    // We keep this behaivor behind a flag for now.\n    if (this.options.fullTemplateTypeCheck) {\n      // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n      // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n      // stamped out if ngIf is truthy so any bindings in the template can assume that,\n      // if a nullable type is used for ngIf, that expression is not null or undefined.\n      const guards = this.getTypeGuardExpressions(ast);\n      const childVisitor = this.viewBuilderFactory(this, guards);\n      this.children.push(childVisitor);\n      childVisitor.visitAll(ast.variables, ast.children);\n    }\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    this.visitElementOrTemplate(ast);\n\n    let inputDefs: o.Expression[] = [];\n    let updateRendererExpressions: Expression[] = [];\n    let outputDefs: o.Expression[] = [];\n    ast.inputs.forEach((inputAst) => {\n      this.updates.push(\n          {context: this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan});\n    });\n\n    templateVisitAll(this, ast.children);\n  }\n\n  private visitElementOrTemplate(ast: {\n    outputs: BoundEventAst[],\n    directives: DirectiveAst[],\n    references: ReferenceAst[],\n  }) {\n    ast.directives.forEach((dirAst) => { this.visitDirective(dirAst); });\n\n    ast.references.forEach((ref) => {\n      let outputVarType: OutputVarType = null !;\n      // Note: The old view compiler used to use an `any` type\n      // for directives exposed via `exportAs`.\n      // We keep this behaivor behind a flag for now.\n      if (ref.value && ref.value.identifier && this.options.fullTemplateTypeCheck) {\n        outputVarType = ref.value.identifier.reference;\n      } else {\n        outputVarType = o.BuiltinTypeName.Dynamic;\n      }\n      this.refOutputVars.set(ref.name, outputVarType);\n    });\n    ast.outputs.forEach((outputAst) => {\n      this.actions.push(\n          {context: this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan});\n    });\n  }\n\n  visitDirective(dirAst: DirectiveAst) {\n    const dirType = dirAst.directive.type.reference;\n    dirAst.inputs.forEach(\n        (input) => this.updates.push(\n            {context: this.component, value: input.value, sourceSpan: input.sourceSpan}));\n    // Note: The old view compiler used to use an `any` type\n    // for expressions in host properties / events.\n    // We keep this behaivor behind a flag for now.\n    if (this.options.fullTemplateTypeCheck) {\n      dirAst.hostProperties.forEach(\n          (inputAst) => this.updates.push(\n              {context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan}));\n      dirAst.hostEvents.forEach((hostEventAst) => this.actions.push({\n        context: dirType,\n        value: hostEventAst.handler,\n        sourceSpan: hostEventAst.sourceSpan\n      }));\n    }\n  }\n\n  notifyImplicitReceiverUse(): void {}\n  getLocal(name: string): o.Expression|null {\n    if (name == EventHandlerVars.event.name) {\n      return o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n    }\n    for (let currBuilder: ViewBuilder|null = this; currBuilder; currBuilder = currBuilder.parent) {\n      let outputVarType: OutputVarType|undefined;\n      // check references\n      outputVarType = currBuilder.refOutputVars.get(name);\n      if (outputVarType == null) {\n        // check variables\n        const varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n        if (varAst) {\n          outputVarType = o.BuiltinTypeName.Dynamic;\n        }\n      }\n      if (outputVarType != null) {\n        return o.variable(this.getOutputVar(outputVarType));\n      }\n    }\n    return null;\n  }\n\n  private pipeOutputVar(name: string): string {\n    const pipe = this.pipes.get(name);\n    if (!pipe) {\n      throw new Error(\n          `Illegal State: Could not find pipe ${name} in template of ${this.component}`);\n    }\n    return this.getOutputVar(pipe);\n  }\n\n  private preprocessUpdateExpression(expression: Expression): Expression {\n    return {\n      sourceSpan: expression.sourceSpan,\n      context: expression.context,\n      value: convertPropertyBindingBuiltins(\n          {\n            createLiteralArrayConverter: (argCount: number) => (args: o.Expression[]) => {\n              const arr = o.literalArr(args);\n              // Note: The old view compiler used to use an `any` type\n              // for arrays.\n              return this.options.fullTemplateTypeCheck ? arr : arr.cast(o.DYNAMIC_TYPE);\n            },\n            createLiteralMapConverter:\n                (keys: {key: string, quoted: boolean}[]) => (values: o.Expression[]) => {\n                  const entries = keys.map((k, i) => ({\n                                             key: k.key,\n                                             value: values[i],\n                                             quoted: k.quoted,\n                                           }));\n                  const map = o.literalMap(entries);\n                  // Note: The old view compiler used to use an `any` type\n                  // for maps.\n                  return this.options.fullTemplateTypeCheck ? map : map.cast(o.DYNAMIC_TYPE);\n                },\n            createPipeConverter: (name: string, argCount: number) => (args: o.Expression[]) => {\n              // Note: The old view compiler used to use an `any` type\n              // for pipes.\n              const pipeExpr = this.options.fullTemplateTypeCheck ?\n                  o.variable(this.pipeOutputVar(name)) :\n                  o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n              return pipeExpr.callMethod('transform', args);\n            },\n          },\n          expression.value)\n    };\n  }\n\n  visitNgContent(ast: NgContentAst, context: any): any {}\n  visitText(ast: TextAst, context: any): any {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n  visitReference(ast: ReferenceAst, context: any): any {}\n  visitVariable(ast: VariableAst, context: any): any {}\n  visitEvent(ast: BoundEventAst, context: any): any {}\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n  visitAttr(ast: AttrAst, context: any): any {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompilePipeSummary, CompileQueryMetadata, rendererTypeName, tokenReference, viewClassName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {BindingForm, BuiltinConverter, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {ArgumentType, BindingFlags, ChangeDetectionStrategy, NodeFlags, QueryBindingType, QueryValueType, ViewFlags} from '../core';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {isNgContainer} from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ParseSourceSpan} from '../parse_util';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n\nimport {componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef} from './provider_compiler';\n\nconst CLASS_ATTR = 'class';\nconst STYLE_ATTR = 'style';\nconst IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n\nexport class ViewCompileResult {\n  constructor(public viewClassVar: string, public rendererTypeVar: string) {}\n}\n\nexport class ViewCompiler {\n  constructor(private _reflector: CompileReflector) {}\n\n  compileComponent(\n      outputCtx: OutputContext, component: CompileDirectiveMetadata, template: TemplateAst[],\n      styles: o.Expression, usedPipes: CompilePipeSummary[]): ViewCompileResult {\n    let embeddedViewCount = 0;\n    const staticQueryIds = findStaticQueryIds(template);\n\n    let renderComponentVarName: string = undefined !;\n    if (!component.isHost) {\n      const template = component.template !;\n      const customRenderData: o.LiteralMapEntry[] = [];\n      if (template.animations && template.animations.length) {\n        customRenderData.push(new o.LiteralMapEntry(\n            'animation', convertValueToOutputAst(outputCtx, template.animations), true));\n      }\n\n      const renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n      renderComponentVarName = renderComponentVar.name !;\n      outputCtx.statements.push(\n          renderComponentVar\n              .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                new o.LiteralMapEntry('encapsulation', o.literal(template.encapsulation), false),\n                new o.LiteralMapEntry('styles', styles, false),\n                new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n              ])]))\n              .toDeclStmt(\n                  o.importType(Identifiers.RendererType2),\n                  [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    }\n\n    const viewBuilderFactory = (parent: ViewBuilder | null): ViewBuilder => {\n      const embeddedViewIndex = embeddedViewCount++;\n      return new ViewBuilder(\n          this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes,\n          staticQueryIds, viewBuilderFactory);\n    };\n\n    const visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template);\n\n    outputCtx.statements.push(...visitor.build());\n\n    return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n  }\n}\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n\ninterface UpdateExpression {\n  context: o.Expression;\n  nodeIndex: number;\n  bindingIndex: number;\n  sourceSpan: ParseSourceSpan;\n  value: AST;\n}\n\nconst LOG_VAR = o.variable('_l');\nconst VIEW_VAR = o.variable('_v');\nconst CHECK_VAR = o.variable('_ck');\nconst COMP_VAR = o.variable('_co');\nconst EVENT_NAME_VAR = o.variable('en');\nconst ALLOW_DEFAULT_VAR = o.variable(`ad`);\n\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver {\n  private compType: o.Type;\n  private nodes: (() => {\n    sourceSpan: ParseSourceSpan | null,\n    nodeDef: o.Expression,\n    nodeFlags: NodeFlags, updateDirectives?: UpdateExpression[], updateRenderer?: UpdateExpression[]\n  })[] = [];\n  private purePipeNodeIndices: {[pipeName: string]: number} = Object.create(null);\n  // Need Object.create so that we don't have builtin values...\n  private refNodeIndices: {[refName: string]: number} = Object.create(null);\n  private variables: VariableAst[] = [];\n  private children: ViewBuilder[] = [];\n\n  public readonly viewName: string;\n\n  constructor(\n      private reflector: CompileReflector, private outputCtx: OutputContext,\n      private parent: ViewBuilder|null, private component: CompileDirectiveMetadata,\n      private embeddedViewIndex: number, private usedPipes: CompilePipeSummary[],\n      private staticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>,\n      private viewBuilderFactory: ViewBuilderFactory) {\n    // TODO(tbosch): The old view compiler used to use an `any` type\n    // for the context in any embedded view. We keep this behaivor for now\n    // to be able to introduce the new view compiler without too many errors.\n    this.compType = this.embeddedViewIndex > 0 ?\n        o.DYNAMIC_TYPE :\n        o.expressionType(outputCtx.importExpr(this.component.type.reference)) !;\n    this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n  }\n\n  visitAll(variables: VariableAst[], astNodes: TemplateAst[]) {\n    this.variables = variables;\n    // create the pipes for the pure pipes immediately, so that we know their indices.\n    if (!this.parent) {\n      this.usedPipes.forEach((pipe) => {\n        if (pipe.pure) {\n          this.purePipeNodeIndices[pipe.name] = this._createPipe(null, pipe);\n        }\n      });\n    }\n\n    if (!this.parent) {\n      const queryIds = staticViewQueryIds(this.staticQueryIds);\n      this.component.viewQueries.forEach((query, queryIndex) => {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        const queryId = queryIndex + 1;\n        const bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n        const flags =\n            NodeFlags.TypeViewQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query);\n        this.nodes.push(() => ({\n                          sourceSpan: null,\n                          nodeFlags: flags,\n                          nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                            o.literal(flags), o.literal(queryId),\n                            new o.LiteralMapExpr([new o.LiteralMapEntry(\n                                query.propertyName, o.literal(bindingType), false)])\n                          ])\n                        }));\n      });\n    }\n    templateVisitAll(this, astNodes);\n    if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n      // if the view is an embedded view, then we need to add an additional root node in some cases\n      this.nodes.push(() => ({\n                        sourceSpan: null,\n                        nodeFlags: NodeFlags.TypeElement,\n                        nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                          o.literal(NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                        ])\n                      }));\n    }\n  }\n\n  build(targetStatements: o.Statement[] = []): o.Statement[] {\n    this.children.forEach((child) => child.build(targetStatements));\n\n    const {updateRendererStmts, updateDirectivesStmts, nodeDefExprs} =\n        this._createNodeExpressions();\n\n    const updateRendererFn = this._createUpdateFn(updateRendererStmts);\n    const updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n\n\n    let viewFlags = ViewFlags.None;\n    if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= ViewFlags.OnPush;\n    }\n    const viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [new o.FnParam(LOG_VAR.name !)],\n        [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n          o.literal(viewFlags),\n          o.literalArr(nodeDefExprs),\n          updateDirectivesFn,\n          updateRendererFn,\n        ]))],\n        o.importType(Identifiers.ViewDefinition),\n        this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n\n  private _createUpdateFn(updateStmts: o.Statement[]): o.Expression {\n    let updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      const preStmts: o.Statement[] = [];\n      if (!this.component.isHost && o.findReadVarNames(updateStmts).has(COMP_VAR.name !)) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      updateFn = o.fn(\n          [\n            new o.FnParam(CHECK_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(VIEW_VAR.name !, o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...updateStmts], o.INFERRED_TYPE);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n    return updateFn;\n  }\n\n  visitNgContent(ast: NgContentAst, context: any): any {\n    // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeNgContent,\n                      nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                        o.literal(ast.ngContentIndex), o.literal(ast.index)\n                      ])\n                    }));\n  }\n\n  visitText(ast: TextAst, context: any): any {\n    // Static text nodes have no check function\n    const checkIndex = -1;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeText,\n                      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                        o.literal(checkIndex),\n                        o.literal(ast.ngContentIndex),\n                        o.literalArr([o.literal(ast.value)]),\n                      ])\n                    }));\n  }\n\n  visitBoundText(ast: BoundTextAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push(null !);\n\n    const astWithSource = <ASTWithSource>ast.value;\n    const inter = <Interpolation>astWithSource.ast;\n\n    const updateRendererExpressions = inter.expressions.map(\n        (expr, bindingIndex) => this._preprocessUpdateExpression(\n            {nodeIndex, bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr}));\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeText,\n      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n        o.literal(checkIndex),\n        o.literal(ast.ngContentIndex),\n        o.literalArr(inter.strings.map(s => o.literal(s))),\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push(null !);\n\n    const {flags, queryMatchesExpr, hostEvents} = this._visitElementOrTemplate(nodeIndex, ast);\n\n    const childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children);\n\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n    //   ViewDefinitionFactory): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        o.variable(childVisitor.viewName),\n      ])\n    });\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push(null !);\n\n    // Using a null element name creates an anchor.\n    const elName: string|null = isNgContainer(ast.name) ? null : ast.name;\n\n    const {flags, usedEvents, queryMatchesExpr, hostBindings: dirHostBindings, hostEvents} =\n        this._visitElementOrTemplate(nodeIndex, ast);\n\n    let inputDefs: o.Expression[] = [];\n    let updateRendererExpressions: UpdateExpression[] = [];\n    let outputDefs: o.Expression[] = [];\n    if (elName) {\n      const hostBindings: any[] = ast.inputs\n                                      .map((inputAst) => ({\n                                             context: COMP_VAR as o.Expression,\n                                             inputAst,\n                                             dirAst: null as any,\n                                           }))\n                                      .concat(dirHostBindings);\n      if (hostBindings.length) {\n        updateRendererExpressions =\n            hostBindings.map((hostBinding, bindingIndex) => this._preprocessUpdateExpression({\n              context: hostBinding.context,\n              nodeIndex,\n              bindingIndex,\n              sourceSpan: hostBinding.inputAst.sourceSpan,\n              value: hostBinding.inputAst.value\n            }));\n        inputDefs = hostBindings.map(\n            hostBinding => elementBindingDef(hostBinding.inputAst, hostBinding.dirAst));\n      }\n      outputDefs = usedEvents.map(\n          ([target, eventName]) => o.literalArr([o.literal(target), o.literal(eventName)]));\n    }\n\n    templateVisitAll(this, ast.children);\n\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    const compAst = ast.directives.find(dirAst => dirAst.directive.isComponent);\n    let compRendererType = o.NULL_EXPR as o.Expression;\n    let compView = o.NULL_EXPR as o.Expression;\n    if (compAst) {\n      compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n      compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n    }\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n        o.literal(checkIndex),\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        o.literal(elName),\n        elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n        inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        compView,\n        compRendererType,\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n\n  private _visitElementOrTemplate(nodeIndex: number, ast: {\n    hasViewContainer: boolean,\n    outputs: BoundEventAst[],\n    directives: DirectiveAst[],\n    providers: ProviderAst[],\n    references: ReferenceAst[],\n    queryMatches: QueryMatch[]\n  }): {\n    flags: NodeFlags,\n    usedEvents: [string | null, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[],\n  } {\n    let flags = NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= NodeFlags.EmbeddedViews;\n    }\n    const usedEvents = new Map<string, [string | null, string]>();\n    ast.outputs.forEach((event) => {\n      const {name, target} = elementEventNameAndTarget(event, null);\n      usedEvents.set(elementEventFullName(target, name), [target, name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        const {name, target} = elementEventNameAndTarget(event, dirAst);\n        usedEvents.set(elementEventFullName(target, name), [target, name]);\n      });\n    });\n    const hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[] = [];\n    const hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[] = [];\n    this._visitComponentFactoryResolverProvider(ast.directives);\n\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let dirAst: DirectiveAst = undefined !;\n      let dirIndex: number = undefined !;\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents,\n            this.staticQueryIds.get(<any>ast) !);\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let valueType: QueryValueType = undefined !;\n      if (tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n        valueType = QueryValueType.ElementRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n        valueType = QueryValueType.ViewContainerRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let valueType: QueryValueType = undefined !;\n      if (!ref.value) {\n        valueType = QueryValueType.RenderElement;\n      } else if (\n          tokenReference(ref.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach((outputAst) => {\n      hostEvents.push({context: COMP_VAR, eventAst: outputAst, dirAst: null !});\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n      hostEvents: hostEvents\n    };\n  }\n\n  private _visitDirective(\n      providerAst: ProviderAst, dirAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, refs: ReferenceAst[], queryMatches: QueryMatch[],\n      usedEvents: Map<string, any>, queryIds: StaticAndDynamicQueryIds): {\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]\n  } {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push(null !);\n\n    dirAst.directive.queries.forEach((query, queryIndex) => {\n      const queryId = dirAst.contentQueryStartId + queryIndex;\n      const flags =\n          NodeFlags.TypeContentQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query);\n      const bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n      this.nodes.push(() => ({\n                        sourceSpan: dirAst.sourceSpan,\n                        nodeFlags: flags,\n                        nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                          o.literal(flags), o.literal(queryId),\n                          new o.LiteralMapExpr([new o.LiteralMapEntry(\n                              query.propertyName, o.literal(bindingType), false)])\n                        ]),\n                      }));\n    });\n\n    // Note: the operation below might also create new nodeDefs,\n    // but we don't want them to be a child of a directive,\n    // as they might be a provider/pipe on their own.\n    // I.e. we only allow queries as children of directives nodes.\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    let {flags, queryMatchExprs, providerExpr, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(\n            o.literalArr([o.literal(ref.name), o.literal(QueryValueType.Provider)]));\n      }\n    });\n\n    if (dirAst.directive.isComponent) {\n      flags |= NodeFlags.Component;\n    }\n\n    const inputDefs = dirAst.inputs.map((inputAst, inputIndex) => {\n      const mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const outputDefs: o.LiteralMapEntry[] = [];\n    const dirMeta = dirAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    let updateDirectiveExpressions: UpdateExpression[] = [];\n    if (dirAst.inputs.length || (flags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0) {\n      updateDirectiveExpressions =\n          dirAst.inputs.map((input, bindingIndex) => this._preprocessUpdateExpression({\n            nodeIndex,\n            bindingIndex,\n            sourceSpan: input.sourceSpan,\n            context: COMP_VAR,\n            value: input.value\n          }));\n    }\n\n    const dirContextExpr =\n        o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n    const hostBindings = dirAst.hostProperties.map((inputAst) => ({\n                                                     context: dirContextExpr,\n                                                     dirAst,\n                                                     inputAst,\n                                                   }));\n    const hostEvents = dirAst.hostEvents.map((hostEventAst) => ({\n                                               context: dirContextExpr,\n                                               eventAst: hostEventAst, dirAst,\n                                             }));\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: dirAst.sourceSpan,\n      nodeFlags: NodeFlags.TypeDirective | flags,\n      nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n        o.literal(checkIndex),\n        o.literal(flags),\n        queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n        o.literal(childCount),\n        providerExpr,\n        depsExpr,\n        inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n      ]),\n      updateDirectives: updateDirectiveExpressions,\n      directive: dirAst.directive.type,\n    });\n\n    return {hostBindings, hostEvents};\n  }\n\n  private _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n  }\n\n  private _visitComponentFactoryResolverProvider(directives: DirectiveAst[]) {\n    const componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n      const {providerExpr, depsExpr, flags, tokenExpr} = componentFactoryResolverProviderDef(\n          this.reflector, this.outputCtx, NodeFlags.PrivateProvider,\n          componentDirMeta.directive.entryComponents);\n      this._addProviderNode({\n        providerExpr,\n        depsExpr,\n        flags,\n        tokenExpr,\n        queryMatchExprs: [],\n        sourceSpan: componentDirMeta.sourceSpan\n      });\n    }\n  }\n\n  private _addProviderNode(data: {\n    flags: NodeFlags,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan\n  }) {\n    const nodeIndex = this.nodes.length;\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    this.nodes.push(\n        () => ({\n          sourceSpan: data.sourceSpan,\n          nodeFlags: data.flags,\n          nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n            o.literal(data.flags),\n            data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n            data.tokenExpr, data.providerExpr, data.depsExpr\n          ])\n        }));\n  }\n\n  private _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: NodeFlags,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression\n  } {\n    let flags = NodeFlags.None;\n    let queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(\n            o.literalArr([o.literal(match.queryId), o.literal(QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, depsExpr, flags: providerFlags, tokenExpr} =\n        providerDef(this.outputCtx, providerAst);\n    return {\n      flags: flags | providerFlags,\n      queryMatchExprs,\n      providerExpr,\n      depsExpr,\n      tokenExpr,\n      sourceSpan: providerAst.sourceSpan\n    };\n  }\n\n  getLocal(name: string): o.Expression|null {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let currViewExpr: o.Expression = VIEW_VAR;\n    for (let currBuilder: ViewBuilder|null = this; currBuilder; currBuilder = currBuilder.parent,\n                          currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n      // check references\n      const refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n      }\n\n      // check variables\n      const varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        const varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n        return currViewExpr.prop('context').prop(varValue);\n      }\n    }\n    return null;\n  }\n\n  notifyImplicitReceiverUse(): void {\n    // Not needed in View Engine as View Engine walks through the generated\n    // expressions to figure out if the implicit receiver is used and needs\n    // to be generated as part of the pre-update statements.\n  }\n\n  private _createLiteralArrayConverter(sourceSpan: ParseSourceSpan, argCount: number):\n      BuiltinConverter {\n    if (argCount === 0) {\n      const valueExpr = o.importExpr(Identifiers.EMPTY_ARRAY);\n      return () => valueExpr;\n    }\n\n    const checkIndex = this.nodes.length;\n\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureArray,\n                      nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                        o.literal(checkIndex),\n                        o.literal(argCount),\n                      ])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(checkIndex, args);\n  }\n\n  private _createLiteralMapConverter(\n      sourceSpan: ParseSourceSpan, keys: {key: string, quoted: boolean}[]): BuiltinConverter {\n    if (keys.length === 0) {\n      const valueExpr = o.importExpr(Identifiers.EMPTY_MAP);\n      return () => valueExpr;\n    }\n\n    const map = o.literalMap(keys.map((e, i) => ({...e, value: o.literal(i)})));\n    const checkIndex = this.nodes.length;\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureObject,\n                      nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                        o.literal(checkIndex),\n                        map,\n                      ])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(checkIndex, args);\n  }\n\n  private _createPipeConverter(expression: UpdateExpression, name: string, argCount: number):\n      BuiltinConverter {\n    const pipe = this.usedPipes.find((pipeSummary) => pipeSummary.name === name) !;\n    if (pipe.pure) {\n      const checkIndex = this.nodes.length;\n      this.nodes.push(() => ({\n                        sourceSpan: expression.sourceSpan,\n                        nodeFlags: NodeFlags.TypePurePipe,\n                        nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                          o.literal(checkIndex),\n                          o.literal(argCount),\n                        ])\n                      }));\n\n      // find underlying pipe in the component view\n      let compViewExpr: o.Expression = VIEW_VAR;\n      let compBuilder: ViewBuilder = this;\n      while (compBuilder.parent) {\n        compBuilder = compBuilder.parent;\n        compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n      }\n      const pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n      const pipeValueExpr: o.Expression =\n          o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 callCheckStmt(checkIndex, [pipeValueExpr].concat(args)));\n    } else {\n      const nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n      const nodeValueExpr =\n          o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 nodeValueExpr.callMethod('transform', args));\n    }\n  }\n\n  private _createPipe(sourceSpan: ParseSourceSpan|null, pipe: CompilePipeSummary): number {\n    const nodeIndex = this.nodes.length;\n    let flags = NodeFlags.None;\n    pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n      // for pipes, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n\n    const depExprs = pipe.type.diDeps.map((diDep) => depDef(this.outputCtx, diDep));\n    // function pipeDef(\n    //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n    this.nodes.push(\n        () => ({\n          sourceSpan,\n          nodeFlags: NodeFlags.TypePipe,\n          nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n            o.literal(flags), this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n          ])\n        }));\n    return nodeIndex;\n  }\n\n  /**\n   * For the AST in `UpdateExpression.value`:\n   * - create nodes for pipes, literal arrays and, literal maps,\n   * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n   *\n   * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n   */\n  private _preprocessUpdateExpression(expression: UpdateExpression): UpdateExpression {\n    return {\n      nodeIndex: expression.nodeIndex,\n      bindingIndex: expression.bindingIndex,\n      sourceSpan: expression.sourceSpan,\n      context: expression.context,\n      value: convertPropertyBindingBuiltins(\n          {\n            createLiteralArrayConverter: (argCount: number) => this._createLiteralArrayConverter(\n                                             expression.sourceSpan, argCount),\n            createLiteralMapConverter:\n                (keys: {key: string, quoted: boolean}[]) =>\n                    this._createLiteralMapConverter(expression.sourceSpan, keys),\n            createPipeConverter: (name: string, argCount: number) =>\n                                     this._createPipeConverter(expression, name, argCount)\n          },\n          expression.value)\n    };\n  }\n\n  private _createNodeExpressions(): {\n    updateRendererStmts: o.Statement[],\n    updateDirectivesStmts: o.Statement[],\n    nodeDefExprs: o.Expression[]\n  } {\n    const self = this;\n    let updateBindingCount = 0;\n    const updateRendererStmts: o.Statement[] = [];\n    const updateDirectivesStmts: o.Statement[] = [];\n    const nodeDefExprs = this.nodes.map((factory, nodeIndex) => {\n      const {nodeDef, nodeFlags, updateDirectives, updateRenderer, sourceSpan} = factory();\n      if (updateRenderer) {\n        updateRendererStmts.push(\n            ...createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n      }\n      if (updateDirectives) {\n        updateDirectivesStmts.push(...createUpdateStatements(\n            nodeIndex, sourceSpan, updateDirectives,\n            (nodeFlags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0));\n      }\n      // We use a comma expression to call the log function before\n      // the nodeDef function, but still use the result of the nodeDef function\n      // as the value.\n      // Note: We only add the logger to elements / text nodes,\n      // so we don't generate too much code.\n      const logWithNodeDef = nodeFlags & NodeFlags.CatRenderNode ?\n          new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n          nodeDef;\n      return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n    });\n    return {updateRendererStmts, updateDirectivesStmts, nodeDefExprs};\n\n    function createUpdateStatements(\n        nodeIndex: number, sourceSpan: ParseSourceSpan | null, expressions: UpdateExpression[],\n        allowEmptyExprs: boolean): o.Statement[] {\n      const updateStmts: o.Statement[] = [];\n      const exprs = expressions.map(({sourceSpan, context, value}) => {\n        const bindingId = `${updateBindingCount++}`;\n        const nameResolver = context === COMP_VAR ? self : null;\n        const {stmts, currValExpr} =\n            convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General);\n        updateStmts.push(...stmts.map(\n            (stmt: o.Statement) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n        return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n      });\n      if (expressions.length || allowEmptyExprs) {\n        updateStmts.push(o.applySourceSpanToStatementIfNeeded(\n            callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n      }\n      return updateStmts;\n    }\n  }\n\n  private _createElementHandleEventFn(\n      nodeIndex: number,\n      handlers: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]) {\n    const handleEventStmts: o.Statement[] = [];\n    let handleEventBindingCount = 0;\n    handlers.forEach(({context, eventAst, dirAst}) => {\n      const bindingId = `${handleEventBindingCount++}`;\n      const nameResolver = context === COMP_VAR ? this : null;\n      const {stmts, allowDefault} =\n          convertActionBinding(nameResolver, context, eventAst.handler, bindingId);\n      const trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      const {target: eventTarget, name: eventName} = elementEventNameAndTarget(eventAst, dirAst);\n      const fullEventName = elementEventFullName(eventTarget, eventName);\n      handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(\n          new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts),\n          eventAst.sourceSpan));\n    });\n    let handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      const preStmts: o.Statement[] =\n          [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n      if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(COMP_VAR.name !)) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      handleEventFn = o.fn(\n          [\n            new o.FnParam(VIEW_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(EVENT_NAME_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(EventHandlerVars.event.name !, o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...handleEventStmts, new o.ReturnStatement(ALLOW_DEFAULT_VAR)],\n          o.INFERRED_TYPE);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n    return handleEventFn;\n  }\n\n  visitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n  visitReference(ast: ReferenceAst, context: any): any {}\n  visitVariable(ast: VariableAst, context: any): any {}\n  visitEvent(ast: BoundEventAst, context: any): any {}\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n  visitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction needsAdditionalRootNode(astNodes: TemplateAst[]): boolean {\n  const lastAstNode = astNodes[astNodes.length - 1];\n  if (lastAstNode instanceof EmbeddedTemplateAst) {\n    return lastAstNode.hasViewContainer;\n  }\n\n  if (lastAstNode instanceof ElementAst) {\n    if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n      return needsAdditionalRootNode(lastAstNode.children);\n    }\n    return lastAstNode.hasViewContainer;\n  }\n\n  return lastAstNode instanceof NgContentAst;\n}\n\n\nfunction elementBindingDef(inputAst: BoundElementPropertyAst, dirAst: DirectiveAst): o.Expression {\n  const inputType = inputAst.type;\n  switch (inputType) {\n    case PropertyBindingType.Attribute:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementAttribute), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Property:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeProperty), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Animation:\n      const bindingType = BindingFlags.TypeProperty |\n          (dirAst && dirAst.directive.isComponent ? BindingFlags.SyntheticHostProperty :\n                                                    BindingFlags.SyntheticProperty);\n      return o.literalArr([\n        o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Class:\n      return o.literalArr(\n          [o.literal(BindingFlags.TypeElementClass), o.literal(inputAst.name), o.NULL_EXPR]);\n    case PropertyBindingType.Style:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementStyle), o.literal(inputAst.name), o.literal(inputAst.unit)\n      ]);\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected: never = inputType;\n      throw new Error(`unexpected ${unexpected}`);\n  }\n}\n\n\nfunction fixedAttrsDef(elementAst: ElementAst): o.Expression {\n  const mapResult: {[key: string]: string} = Object.create(null);\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const value = dirAst.directive.hostAttributes[name];\n      const prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  return o.literalArr(Object.keys(mapResult).sort().map(\n      (attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n\nfunction callCheckStmt(nodeIndex: number, exprs: o.Expression[]): o.Expression {\n  if (exprs.length > 10) {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Dynamic), o.literalArr(exprs)]);\n  } else {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Inline), ...exprs]);\n  }\n}\n\nfunction callUnwrapValue(nodeIndex: number, bindingIdx: number, expr: o.Expression): o.Expression {\n  return o.importExpr(Identifiers.unwrapValue).callFn([\n    VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n  ]);\n}\n\ninterface StaticAndDynamicQueryIds {\n  staticQueryIds: Set<number>;\n  dynamicQueryIds: Set<number>;\n}\n\n\nexport function findStaticQueryIds(\n    nodes: TemplateAst[], result = new Map<TemplateAst, StaticAndDynamicQueryIds>()):\n    Map<TemplateAst, StaticAndDynamicQueryIds> {\n  nodes.forEach((node) => {\n    const staticQueryIds = new Set<number>();\n    const dynamicQueryIds = new Set<number>();\n    let queryMatches: QueryMatch[] = undefined !;\n    if (node instanceof ElementAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const childData = result.get(child) !;\n        childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    } else if (node instanceof EmbeddedTemplateAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const childData = result.get(child) !;\n        childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    }\n    if (queryMatches) {\n      queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n    }\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    result.set(node, {staticQueryIds, dynamicQueryIds});\n  });\n  return result;\n}\n\nexport function staticViewQueryIds(nodeStaticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>):\n    StaticAndDynamicQueryIds {\n  const staticQueryIds = new Set<number>();\n  const dynamicQueryIds = new Set<number>();\n  Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n    entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n    entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n  });\n  dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n  return {staticQueryIds, dynamicQueryIds};\n}\n\nfunction elementEventNameAndTarget(\n    eventAst: BoundEventAst, dirAst: DirectiveAst | null): {name: string, target: string | null} {\n  if (eventAst.isAnimation) {\n    return {\n      name: `@${eventAst.name}.${eventAst.phase}`,\n      target: dirAst && dirAst.directive.isComponent ? 'component' : null\n    };\n  } else {\n    return eventAst;\n  }\n}\n\nfunction calcStaticDynamicQueryFlags(\n    queryIds: StaticAndDynamicQueryIds, queryId: number, query: CompileQueryMetadata) {\n  let flags = NodeFlags.None;\n  // Note: We only make queries static that query for a single item.\n  // This is because of backwards compatibility with the old view compiler...\n  if (query.first && shouldResolveAsStaticQuery(queryIds, queryId, query)) {\n    flags |= NodeFlags.StaticQuery;\n  } else {\n    flags |= NodeFlags.DynamicQuery;\n  }\n  return flags;\n}\n\nfunction shouldResolveAsStaticQuery(\n    queryIds: StaticAndDynamicQueryIds, queryId: number, query: CompileQueryMetadata): boolean {\n  // If query.static has been set by the user, use that value to determine whether\n  // the query is static. If none has been set, sort the query into static/dynamic\n  // based on query results (i.e. dynamic if CD needs to run to get all results).\n  return query.static ||\n      query.static == null &&\n      (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId));\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport * as i18n from './i18n_ast';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n\n\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\n  private _messages: i18n.Message[] = [];\n\n  constructor(\n      private _htmlParser: HtmlParser, private _implicitTags: string[],\n      private _implicitAttrs: {[k: string]: string[]}, private _locale: string|null = null) {}\n\n  updateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const htmlParserResult =\n        this._htmlParser.parse(html, url, {tokenizeExpansionForms: true, interpolationConfig});\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n    return [];\n  }\n\n  // Return the message in the internal format\n  // The public (serialized) format might be different, see the `write` method.\n  getMessages(): i18n.Message[] { return this._messages; }\n\n  write(serializer: Serializer, filterSources?: (path: string) => string): string {\n    const messages: {[id: string]: i18n.Message} = {};\n    const mapperVisitor = new MapPlaceholderNames();\n\n    // Deduplicate messages based on their ID\n    this._messages.forEach(message => {\n      const id = serializer.digest(message);\n      if (!messages.hasOwnProperty(id)) {\n        messages[id] = message;\n      } else {\n        messages[id].sources.push(...message.sources);\n      }\n    });\n\n    // Transform placeholder names using the serializer mapping\n    const msgList = Object.keys(messages).map(id => {\n      const mapper = serializer.createNameMapper(messages[id]);\n      const src = messages[id];\n      const nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n      let transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n      transformedMessage.sources = src.sources;\n      if (filterSources) {\n        transformedMessage.sources.forEach(\n            (source: i18n.MessageSpan) => source.filePath = filterSources(source.filePath));\n      }\n      return transformedMessage;\n    });\n\n    return serializer.write(msgList, this._locale);\n  }\n}\n\n// Transform an i18n AST by renaming the placeholder nodes with the given mapper\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n  convert(nodes: i18n.Node[], mapper: PlaceholderMapper): i18n.Node[] {\n    return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, mapper: PlaceholderMapper): i18n.TagPlaceholder {\n    const startName = mapper.toPublicName(ph.startName) !;\n    const closeName = ph.closeName ? mapper.toPublicName(ph.closeName) ! : ph.closeName;\n    const children = ph.children.map(n => n.visit(this, mapper));\n    return new i18n.TagPlaceholder(\n        ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, mapper: PlaceholderMapper): i18n.Placeholder {\n    return new i18n.Placeholder(ph.value, mapper.toPublicName(ph.name) !, ph.sourceSpan);\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, mapper: PlaceholderMapper): i18n.IcuPlaceholder {\n    return new i18n.IcuPlaceholder(ph.value, mapper.toPublicName(ph.name) !, ph.sourceSpan);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Statement, areAllEquivalent} from '../output/output_ast';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\n\nexport class GeneratedFile {\n  public source: string|null;\n  public stmts: Statement[]|null;\n\n  constructor(\n      public srcFileUrl: string, public genFileUrl: string, sourceOrStmts: string|Statement[]) {\n    if (typeof sourceOrStmts === 'string') {\n      this.source = sourceOrStmts;\n      this.stmts = null;\n    } else {\n      this.source = null;\n      this.stmts = sourceOrStmts;\n    }\n  }\n\n  isEquivalent(other: GeneratedFile): boolean {\n    if (this.genFileUrl !== other.genFileUrl) {\n      return false;\n    }\n    if (this.source) {\n      return this.source === other.source;\n    }\n    if (other.stmts == null) {\n      return false;\n    }\n    // Note: the constructor guarantees that if this.source is not filled,\n    // then this.stmts is.\n    return areAllEquivalent(this.stmts !, other.stmts !);\n  }\n}\n\nexport function toTypeScript(file: GeneratedFile, preamble: string = ''): string {\n  if (!file.stmts) {\n    throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n  }\n  return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileNgModuleMetadata, tokenReference} from '../compile_metadata';\nimport {Route} from '../core';\nimport {CompileMetadataResolver} from '../metadata_resolver';\n\nimport {AotCompilerHost} from './compiler_host';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol} from './static_symbol';\n\nexport interface LazyRoute {\n  module: StaticSymbol;\n  route: string;\n  referencedModule: StaticSymbol;\n}\n\nexport function listLazyRoutes(\n    moduleMeta: CompileNgModuleMetadata, reflector: StaticReflector): LazyRoute[] {\n  const allLazyRoutes: LazyRoute[] = [];\n  for (const {provider, module} of moduleMeta.transitiveModule.providers) {\n    if (tokenReference(provider.token) === reflector.ROUTES) {\n      const loadChildren = _collectLoadChildren(provider.useValue);\n      for (const route of loadChildren) {\n        allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n      }\n    }\n  }\n  return allLazyRoutes;\n}\n\nfunction _collectLoadChildren(routes: string | Route | Route[], target: string[] = []): string[] {\n  if (typeof routes === 'string') {\n    target.push(routes);\n  } else if (Array.isArray(routes)) {\n    for (const route of routes) {\n      _collectLoadChildren(route, target);\n    }\n  } else if (routes.loadChildren) {\n    _collectLoadChildren(routes.loadChildren, target);\n  } else if (routes.children) {\n    _collectLoadChildren(routes.children, target);\n  }\n  return target;\n}\n\nexport function parseLazyRoute(\n    route: string, reflector: StaticReflector, module?: StaticSymbol): LazyRoute {\n  const [routePath, routeName] = route.split('#');\n  const referencedModule = reflector.resolveExternalReference(\n      {\n        moduleName: routePath,\n        name: routeName,\n      },\n      module ? module.filePath : undefined);\n  return {route: route, module: module || referencedModule, referencedModule};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SummaryResolver} from '../summary_resolver';\nimport {ValueTransformer, visitValue} from '../util';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName} from './util';\n\nconst TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\n\nexport class ResolvedStaticSymbol {\n  constructor(public symbol: StaticSymbol, public metadata: any) {}\n}\n\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n */\nexport interface StaticSymbolResolverHost {\n  /**\n   * Return a ModuleMetadata for the given module.\n   * Angular CLI will produce this metadata for a module whenever a .d.ts files is\n   * produced and the module has exported variables or classes with decorators. Module metadata can\n   * also be produced directly from TypeScript sources by using MetadataCollector in tools/metadata.\n   *\n   * @param modulePath is a string identifier for a module as an absolute path.\n   * @returns the metadata for the given module.\n   */\n  getMetadataFor(modulePath: string): {[key: string]: any}[]|undefined;\n\n  /**\n   * Converts a module name that is used in an `import` to a file path.\n   * I.e.\n   * `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n   */\n  moduleNameToFileName(moduleName: string, containingFile?: string): string|null;\n\n  /**\n   * Get a file suitable for display to the user that should be relative to the project directory\n   * or the current directory.\n   */\n  getOutputName(filePath: string): string;\n}\n\nconst SUPPORTED_SCHEMA_VERSION = 4;\n\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nexport class StaticSymbolResolver {\n  private metadataCache = new Map<string, {[key: string]: any}>();\n  // Note: this will only contain StaticSymbols without members!\n  private resolvedSymbols = new Map<StaticSymbol, ResolvedStaticSymbol>();\n  private resolvedFilePaths = new Set<string>();\n  // Note: this will only contain StaticSymbols without members!\n  private importAs = new Map<StaticSymbol, StaticSymbol>();\n  private symbolResourcePaths = new Map<StaticSymbol, string>();\n  private symbolFromFile = new Map<string, StaticSymbol[]>();\n  private knownFileNameToModuleNames = new Map<string, string>();\n\n  constructor(\n      private host: StaticSymbolResolverHost, private staticSymbolCache: StaticSymbolCache,\n      private summaryResolver: SummaryResolver<StaticSymbol>,\n      private errorRecorder?: (error: any, fileName?: string) => void) {}\n\n  resolveSymbol(staticSymbol: StaticSymbol): ResolvedStaticSymbol {\n    if (staticSymbol.members.length > 0) {\n      return this._resolveSymbolMembers(staticSymbol) !;\n    }\n    // Note: always ask for a summary first,\n    // as we might have read shallow metadata via a .d.ts file\n    // for the symbol.\n    const resultFromSummary = this._resolveSymbolFromSummary(staticSymbol) !;\n    if (resultFromSummary) {\n      return resultFromSummary;\n    }\n    const resultFromCache = this.resolvedSymbols.get(staticSymbol);\n    if (resultFromCache) {\n      return resultFromCache;\n    }\n    // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n    // have summaries, only .d.ts files. So we always need to check both, the summary\n    // and metadata.\n    this._createSymbolsOf(staticSymbol.filePath);\n    return this.resolvedSymbols.get(staticSymbol) !;\n  }\n\n  /**\n   * getImportAs produces a symbol that can be used to import the given symbol.\n   * The import might be different than the symbol if the symbol is exported from\n   * a library with a summary; in which case we want to import the symbol from the\n   * ngfactory re-export instead of directly to avoid introducing a direct dependency\n   * on an otherwise indirect dependency.\n   *\n   * @param staticSymbol the symbol for which to generate a import symbol\n   */\n  getImportAs(staticSymbol: StaticSymbol, useSummaries: boolean = true): StaticSymbol|null {\n    if (staticSymbol.members.length) {\n      const baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n      const baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n      return baseImportAs ?\n          this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n          null;\n    }\n    const summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n    if (summarizedFileName !== staticSymbol.filePath) {\n      const summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n      const baseSymbol =\n          this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n      const baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n      return baseImportAs ?\n          this.getStaticSymbol(\n              summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name),\n              baseSymbol.members) :\n          null;\n    }\n    let result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n    if (!result) {\n      result = this.importAs.get(staticSymbol) !;\n    }\n    return result;\n  }\n\n  /**\n   * getResourcePath produces the path to the original location of the symbol and should\n   * be used to determine the relative location of resource references recorded in\n   * symbol metadata.\n   */\n  getResourcePath(staticSymbol: StaticSymbol): string {\n    return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n  }\n\n  /**\n   * getTypeArity returns the number of generic type parameters the given symbol\n   * has. If the symbol is not a type the result is null.\n   */\n  getTypeArity(staticSymbol: StaticSymbol): number|null {\n    // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n    // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n    // All references to generated classes must include the correct arity whenever\n    // generating code.\n    if (isGeneratedFile(staticSymbol.filePath)) {\n      return null;\n    }\n    let resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n    while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n    }\n    return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n  }\n\n  getKnownModuleName(filePath: string): string|null {\n    return this.knownFileNameToModuleNames.get(filePath) || null;\n  }\n\n  recordImportAs(sourceSymbol: StaticSymbol, targetSymbol: StaticSymbol) {\n    sourceSymbol.assertNoMembers();\n    targetSymbol.assertNoMembers();\n    this.importAs.set(sourceSymbol, targetSymbol);\n  }\n\n  recordModuleNameForFileName(fileName: string, moduleName: string) {\n    this.knownFileNameToModuleNames.set(fileName, moduleName);\n  }\n\n  /**\n   * Invalidate all information derived from the given file.\n   *\n   * @param fileName the file to invalidate\n   */\n  invalidateFile(fileName: string) {\n    this.metadataCache.delete(fileName);\n    this.resolvedFilePaths.delete(fileName);\n    const symbols = this.symbolFromFile.get(fileName);\n    if (symbols) {\n      this.symbolFromFile.delete(fileName);\n      for (const symbol of symbols) {\n        this.resolvedSymbols.delete(symbol);\n        this.importAs.delete(symbol);\n        this.symbolResourcePaths.delete(symbol);\n      }\n    }\n  }\n\n  /** @internal */\n  ignoreErrorsFor<T>(cb: () => T) {\n    const recorder = this.errorRecorder;\n    this.errorRecorder = () => {};\n    try {\n      return cb();\n    } finally {\n      this.errorRecorder = recorder;\n    }\n  }\n\n  private _resolveSymbolMembers(staticSymbol: StaticSymbol): ResolvedStaticSymbol|null {\n    const members = staticSymbol.members;\n    const baseResolvedSymbol =\n        this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n    if (!baseResolvedSymbol) {\n      return null;\n    }\n    let baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n    if (baseMetadata instanceof StaticSymbol) {\n      return new ResolvedStaticSymbol(\n          staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n    } else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n      if (baseMetadata.statics && members.length === 1) {\n        return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n      }\n    } else {\n      let value = baseMetadata;\n      for (let i = 0; i < members.length && value; i++) {\n        value = value[members[i]];\n      }\n      return new ResolvedStaticSymbol(staticSymbol, value);\n    }\n    return null;\n  }\n\n  private _resolveSymbolFromSummary(staticSymbol: StaticSymbol): ResolvedStaticSymbol|null {\n    const summary = this.summaryResolver.resolveSummary(staticSymbol);\n    return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n  }\n\n  /**\n   * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n   * All types passed to the StaticResolver should be pseudo-types returned by this method.\n   *\n   * @param declarationFile the absolute path of the file where the symbol is declared\n   * @param name the name of the type.\n   * @param members a symbol for a static member of the named type\n   */\n  getStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.staticSymbolCache.get(declarationFile, name, members);\n  }\n\n  /**\n   * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n   * metadata.\n   *\n   * @param filePath the absolute path to examine for decorators.\n   * @returns true if any class in the file has a decorator.\n   */\n  hasDecorators(filePath: string): boolean {\n    const metadata = this.getModuleMetadata(filePath);\n    if (metadata['metadata']) {\n      return Object.keys(metadata['metadata']).some((metadataKey) => {\n        const entry = metadata['metadata'][metadataKey];\n        return entry && entry.__symbolic === 'class' && entry.decorators;\n      });\n    }\n    return false;\n  }\n\n  getSymbolsOf(filePath: string): StaticSymbol[] {\n    const summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n    if (summarySymbols) {\n      return summarySymbols;\n    }\n    // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n    // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n    this._createSymbolsOf(filePath);\n    const metadataSymbols: StaticSymbol[] = [];\n    this.resolvedSymbols.forEach((resolvedSymbol) => {\n      if (resolvedSymbol.symbol.filePath === filePath) {\n        metadataSymbols.push(resolvedSymbol.symbol);\n      }\n    });\n    return metadataSymbols;\n  }\n\n  private _createSymbolsOf(filePath: string) {\n    if (this.resolvedFilePaths.has(filePath)) {\n      return;\n    }\n    this.resolvedFilePaths.add(filePath);\n    const resolvedSymbols: ResolvedStaticSymbol[] = [];\n    const metadata = this.getModuleMetadata(filePath);\n    if (metadata['importAs']) {\n      // Index bundle indices should use the importAs module name defined\n      // in the bundle.\n      this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n    }\n    // handle the symbols in one of the re-export location\n    if (metadata['exports']) {\n      for (const moduleExport of metadata['exports']) {\n        // handle the symbols in the list of explicitly re-exported symbols.\n        if (moduleExport.export) {\n          moduleExport.export.forEach((exportSymbol: any) => {\n            let symbolName: string;\n            if (typeof exportSymbol === 'string') {\n              symbolName = exportSymbol;\n            } else {\n              symbolName = exportSymbol.as;\n            }\n            symbolName = unescapeIdentifier(symbolName);\n            let symName = symbolName;\n            if (typeof exportSymbol !== 'string') {\n              symName = unescapeIdentifier(exportSymbol.name);\n            }\n            const resolvedModule = this.resolveModule(moduleExport.from, filePath);\n            if (resolvedModule) {\n              const targetSymbol = this.getStaticSymbol(resolvedModule, symName);\n              const sourceSymbol = this.getStaticSymbol(filePath, symbolName);\n              resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n            }\n          });\n        } else {\n          // handle the symbols via export * directives.\n          const resolvedModule = this.resolveModule(moduleExport.from, filePath);\n          if (resolvedModule) {\n            const nestedExports = this.getSymbolsOf(resolvedModule);\n            nestedExports.forEach((targetSymbol) => {\n              const sourceSymbol = this.getStaticSymbol(filePath, targetSymbol.name);\n              resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n            });\n          }\n        }\n      }\n    }\n\n    // handle the actual metadata. Has to be after the exports\n    // as there might be collisions in the names, and we want the symbols\n    // of the current module to win ofter reexports.\n    if (metadata['metadata']) {\n      // handle direct declarations of the symbol\n      const topLevelSymbolNames =\n          new Set<string>(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n      const origins: {[index: string]: string} = metadata['origins'] || {};\n      Object.keys(metadata['metadata']).forEach((metadataKey) => {\n        const symbolMeta = metadata['metadata'][metadataKey];\n        const name = unescapeIdentifier(metadataKey);\n\n        const symbol = this.getStaticSymbol(filePath, name);\n\n        const origin = origins.hasOwnProperty(metadataKey) && origins[metadataKey];\n        if (origin) {\n          // If the symbol is from a bundled index, use the declaration location of the\n          // symbol so relative references (such as './my.html') will be calculated\n          // correctly.\n          const originFilePath = this.resolveModule(origin, filePath);\n          if (!originFilePath) {\n            this.reportError(new Error(\n                `Couldn't resolve original symbol for ${origin} from ${this.host.getOutputName(filePath)}`));\n          } else {\n            this.symbolResourcePaths.set(symbol, originFilePath);\n          }\n        }\n        resolvedSymbols.push(\n            this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames, symbolMeta));\n      });\n    }\n    resolvedSymbols.forEach(\n        (resolvedSymbol) => this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol));\n    this.symbolFromFile.set(filePath, resolvedSymbols.map(resolvedSymbol => resolvedSymbol.symbol));\n  }\n\n  private createResolvedSymbol(\n      sourceSymbol: StaticSymbol, topLevelPath: string, topLevelSymbolNames: Set<string>,\n      metadata: any): ResolvedStaticSymbol {\n    // For classes that don't have Angular summaries / metadata,\n    // we only keep their arity, but nothing else\n    // (e.g. their constructor parameters).\n    // We do this to prevent introducing deep imports\n    // as we didn't generate .ngfactory.ts files with proper reexports.\n    const isTsFile = TS.test(sourceSymbol.filePath);\n    if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n        metadata['__symbolic'] === 'class') {\n      const transformedMeta = {__symbolic: 'class', arity: metadata.arity};\n      return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    }\n\n    let _originalFileMemo: string|undefined;\n    const getOriginalName: () => string = () => {\n      if (!_originalFileMemo) {\n        // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n        // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n        // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n        // location as it is not important to finding the file.\n        _originalFileMemo =\n            this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                                        .replace(/^.*node_modules[/\\\\]/, ''));\n      }\n      return _originalFileMemo;\n    };\n\n    const self = this;\n\n    class ReferenceTransformer extends ValueTransformer {\n      visitStringMap(map: {[key: string]: any}, functionParams: string[]): any {\n        const symbolic = map['__symbolic'];\n        if (symbolic === 'function') {\n          const oldLen = functionParams.length;\n          functionParams.push(...(map['parameters'] || []));\n          const result = super.visitStringMap(map, functionParams);\n          functionParams.length = oldLen;\n          return result;\n        } else if (symbolic === 'reference') {\n          const module = map['module'];\n          const name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n          if (!name) {\n            return null;\n          }\n          let filePath: string;\n          if (module) {\n            filePath = self.resolveModule(module, sourceSymbol.filePath) !;\n            if (!filePath) {\n              return {\n                __symbolic: 'error',\n                message: `Could not resolve ${module} relative to ${\n                    self.host.getMetadataFor(sourceSymbol.filePath)}.`,\n                line: map['line'],\n                character: map['character'],\n                fileName: getOriginalName()\n              };\n            }\n            return {\n              __symbolic: 'resolved',\n              symbol: self.getStaticSymbol(filePath, name),\n              line: map['line'],\n              character: map['character'],\n              fileName: getOriginalName()\n            };\n          } else if (functionParams.indexOf(name) >= 0) {\n            // reference to a function parameter\n            return {__symbolic: 'reference', name: name};\n          } else {\n            if (topLevelSymbolNames.has(name)) {\n              return self.getStaticSymbol(topLevelPath, name);\n            }\n            // ambient value\n            null;\n          }\n        } else if (symbolic === 'error') {\n          return {...map, fileName: getOriginalName()};\n        } else {\n          return super.visitStringMap(map, functionParams);\n        }\n      }\n    }\n    const transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n    let unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n    if (unwrappedTransformedMeta instanceof StaticSymbol) {\n      return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n    }\n    return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n  }\n\n  private createExport(sourceSymbol: StaticSymbol, targetSymbol: StaticSymbol):\n      ResolvedStaticSymbol {\n    sourceSymbol.assertNoMembers();\n    targetSymbol.assertNoMembers();\n    if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n        this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n      // This case is for an ng library importing symbols from a plain ts library\n      // transitively.\n      // Note: We rely on the fact that we discover symbols in the direction\n      // from source files to library files\n      this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n    }\n    return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n  }\n\n  private reportError(error: Error, context?: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n\n  /**\n   * @param module an absolute path to a module file.\n   */\n  private getModuleMetadata(module: string): {[key: string]: any} {\n    let moduleMetadata = this.metadataCache.get(module);\n    if (!moduleMetadata) {\n      const moduleMetadatas = this.host.getMetadataFor(module);\n      if (moduleMetadatas) {\n        let maxVersion = -1;\n        moduleMetadatas.forEach((md) => {\n          if (md && md['version'] > maxVersion) {\n            maxVersion = md['version'];\n            moduleMetadata = md;\n          }\n        });\n      }\n      if (!moduleMetadata) {\n        moduleMetadata =\n            {__symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {}};\n      }\n      if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n        const errorMessage = moduleMetadata['version'] == 2 ?\n            `Unsupported metadata version ${moduleMetadata['version']} for module ${module}. This module should be compiled with a newer version of ngc` :\n            `Metadata version mismatch for module ${this.host.getOutputName(module)}, found version ${moduleMetadata['version']}, expected ${SUPPORTED_SCHEMA_VERSION}`;\n        this.reportError(new Error(errorMessage));\n      }\n      this.metadataCache.set(module, moduleMetadata);\n    }\n    return moduleMetadata;\n  }\n\n\n  getSymbolByModule(module: string, symbolName: string, containingFile?: string): StaticSymbol {\n    const filePath = this.resolveModule(module, containingFile);\n    if (!filePath) {\n      this.reportError(\n          new Error(`Could not resolve module ${module}${containingFile ? ' relative to ' +\n            this.host.getOutputName(containingFile) : ''}`));\n      return this.getStaticSymbol(`ERROR:${module}`, symbolName);\n    }\n    return this.getStaticSymbol(filePath, symbolName);\n  }\n\n  private resolveModule(module: string, containingFile?: string): string|null {\n    try {\n      return this.host.moduleNameToFileName(module, containingFile);\n    } catch (e) {\n      console.error(`Could not resolve module '${module}' relative to file ${containingFile}`);\n      this.reportError(e, undefined, containingFile);\n    }\n    return null;\n  }\n}\n\n// Remove extra underscore from escaped identifier.\n// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts\nexport function unescapeIdentifier(identifier: string): string {\n  return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\nexport function unwrapResolvedMetadata(metadata: any): any {\n  if (metadata && metadata.__symbolic === 'resolved') {\n    return metadata.symbol;\n  }\n  return metadata;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileNgModuleMetadata, CompileNgModuleSummary, CompilePipeMetadata, CompileProviderMetadata, CompileSummaryKind, CompileTypeMetadata, CompileTypeSummary} from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport {Summary, SummaryResolver} from '../summary_resolver';\nimport {OutputContext, ValueTransformer, ValueVisitor, visitValue} from '../util';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {ResolvedStaticSymbol, StaticSymbolResolver, unwrapResolvedMetadata} from './static_symbol_resolver';\nimport {isLoweredSymbol, ngfactoryFilePath, summaryForJitFileName, summaryForJitName} from './util';\n\nexport function serializeSummaries(\n    srcFileName: string, forJitCtx: OutputContext | null,\n    summaryResolver: SummaryResolver<StaticSymbol>, symbolResolver: StaticSymbolResolver,\n    symbols: ResolvedStaticSymbol[], types: {\n      summary: CompileTypeSummary,\n      metadata: CompileNgModuleMetadata | CompileDirectiveMetadata | CompilePipeMetadata |\n          CompileTypeMetadata\n    }[],\n    createExternalSymbolReexports =\n        false): {json: string, exportAs: {symbol: StaticSymbol, exportAs: string}[]} {\n  const toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n\n  // for symbols, we use everything except for the class metadata itself\n  // (we keep the statics though), as the class metadata is contained in the\n  // CompileTypeSummary.\n  symbols.forEach(\n      (resolvedSymbol) => toJsonSerializer.addSummary(\n          {symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata}));\n\n  // Add type summaries.\n  types.forEach(({summary, metadata}) => {\n    toJsonSerializer.addSummary(\n        {symbol: summary.type.reference, metadata: undefined, type: summary});\n  });\n  const {json, exportAs} = toJsonSerializer.serialize(createExternalSymbolReexports);\n  if (forJitCtx) {\n    const forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n    types.forEach(({summary, metadata}) => { forJitSerializer.addSourceType(summary, metadata); });\n    toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach((summary) => {\n      if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n        forJitSerializer.addLibType(summary.type);\n      }\n    });\n    forJitSerializer.serialize(exportAs);\n  }\n  return {json, exportAs};\n}\n\nexport function deserializeSummaries(\n    symbolCache: StaticSymbolCache, summaryResolver: SummaryResolver<StaticSymbol>,\n    libraryFileName: string, json: string): {\n  moduleName: string | null,\n  summaries: Summary<StaticSymbol>[],\n  importAs: {symbol: StaticSymbol, importAs: StaticSymbol}[]\n} {\n  const deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n  return deserializer.deserialize(libraryFileName, json);\n}\n\nexport function createForJitStub(outputCtx: OutputContext, reference: StaticSymbol) {\n  return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\n\nfunction createSummaryForJitFunction(\n    outputCtx: OutputContext, reference: StaticSymbol, value: o.Expression) {\n  const fnName = summaryForJitName(reference.name);\n  outputCtx.statements.push(\n      o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n      ]));\n}\n\nconst enum SerializationFlags {\n  None = 0,\n  ResolveValue = 1,\n}\n\nclass ToJsonSerializer extends ValueTransformer {\n  // Note: This only contains symbols without members.\n  private symbols: StaticSymbol[] = [];\n  private indexBySymbol = new Map<StaticSymbol, number>();\n  private reexportedBy = new Map<StaticSymbol, StaticSymbol>();\n  // This now contains a `__symbol: number` in the place of\n  // StaticSymbols, but otherwise has the same shape as the original objects.\n  private processedSummaryBySymbol = new Map<StaticSymbol, any>();\n  private processedSummaries: any[] = [];\n  private moduleName: string|null;\n\n  unprocessedSymbolSummariesBySymbol = new Map<StaticSymbol, Summary<StaticSymbol>>();\n\n  constructor(\n      private symbolResolver: StaticSymbolResolver,\n      private summaryResolver: SummaryResolver<StaticSymbol>, private srcFileName: string) {\n    super();\n    this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n  }\n\n  addSummary(summary: Summary<StaticSymbol>) {\n    let unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n    let processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n    if (!unprocessedSummary) {\n      unprocessedSummary = {symbol: summary.symbol, metadata: undefined};\n      this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n      processedSummary = {symbol: this.processValue(summary.symbol, SerializationFlags.None)};\n      this.processedSummaries.push(processedSummary);\n      this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n    }\n    if (!unprocessedSummary.metadata && summary.metadata) {\n      let metadata = summary.metadata || {};\n      if (metadata.__symbolic === 'class') {\n        // For classes, we keep everything except their class decorators.\n        // We need to keep e.g. the ctor args, method names, method decorators\n        // so that the class can be extended in another compilation unit.\n        // We don't keep the class decorators as\n        // 1) they refer to data\n        //   that should not cause a rebuild of downstream compilation units\n        //   (e.g. inline templates of @Component, or @NgModule.declarations)\n        // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n        const clone: {[key: string]: any} = {};\n        Object.keys(metadata).forEach((propName) => {\n          if (propName !== 'decorators') {\n            clone[propName] = metadata[propName];\n          }\n        });\n        metadata = clone;\n      } else if (isCall(metadata)) {\n        if (!isFunctionCall(metadata) && !isMethodCallOnVariable(metadata)) {\n          // Don't store complex calls as we won't be able to simplify them anyways later on.\n          metadata = {\n            __symbolic: 'error',\n            message: 'Complex function calls are not supported.',\n          };\n        }\n      }\n      // Note: We need to keep storing ctor calls for e.g.\n      // `export const x = new InjectionToken(...)`\n      unprocessedSummary.metadata = metadata;\n      processedSummary.metadata = this.processValue(metadata, SerializationFlags.ResolveValue);\n      if (metadata instanceof StaticSymbol &&\n          this.summaryResolver.isLibraryFile(metadata.filePath)) {\n        const declarationSymbol = this.symbols[this.indexBySymbol.get(metadata) !];\n        if (!isLoweredSymbol(declarationSymbol.name)) {\n          // Note: symbols that were introduced during codegen in the user file can have a reexport\n          // if a user used `export *`. However, we can't rely on this as tsickle will change\n          // `export *` into named exports, using only the information from the typechecker.\n          // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n          // and omits them when expanding `export *`.\n          // So we have to keep reexporting these symbols manually via .ngfactory files.\n          this.reexportedBy.set(declarationSymbol, summary.symbol);\n        }\n      }\n    }\n    if (!unprocessedSummary.type && summary.type) {\n      unprocessedSummary.type = summary.type;\n      // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n      // as the type summaries already contain the transitive data that they require\n      // (in a minimal way).\n      processedSummary.type = this.processValue(summary.type, SerializationFlags.None);\n      // except for reexported directives / pipes, so we need to store\n      // their summaries explicitly.\n      if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n        const ngModuleSummary = <CompileNgModuleSummary>summary.type;\n        ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach((id) => {\n          const symbol: StaticSymbol = id.reference;\n          if (this.summaryResolver.isLibraryFile(symbol.filePath) &&\n              !this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n            const summary = this.summaryResolver.resolveSummary(symbol);\n            if (summary) {\n              this.addSummary(summary);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @param createExternalSymbolReexports Whether external static symbols should be re-exported.\n   * This can be enabled if external symbols should be re-exported by the current module in\n   * order to avoid dynamically generated module dependencies which can break strict dependency\n   * enforcements (as in Google3). Read more here: https://github.com/angular/angular/issues/25644\n   */\n  serialize(createExternalSymbolReexports: boolean):\n      {json: string, exportAs: {symbol: StaticSymbol, exportAs: string}[]} {\n    const exportAs: {symbol: StaticSymbol, exportAs: string}[] = [];\n    const json = JSON.stringify({\n      moduleName: this.moduleName,\n      summaries: this.processedSummaries,\n      symbols: this.symbols.map((symbol, index) => {\n        symbol.assertNoMembers();\n        let importAs: string|number = undefined !;\n        if (this.summaryResolver.isLibraryFile(symbol.filePath)) {\n          const reexportSymbol = this.reexportedBy.get(symbol);\n          if (reexportSymbol) {\n            // In case the given external static symbol is already manually exported by the\n            // user, we just proxy the external static symbol reference to the manual export.\n            // This ensures that the AOT compiler imports the external symbol through the\n            // user export and does not introduce another dependency which is not needed.\n            importAs = this.indexBySymbol.get(reexportSymbol) !;\n          } else if (createExternalSymbolReexports) {\n            // In this case, the given external static symbol is *not* manually exported by\n            // the user, and we manually create a re-export in the factory file so that we\n            // don't introduce another module dependency. This is useful when running within\n            // Bazel so that the AOT compiler does not introduce any module dependencies\n            // which can break the strict dependency enforcement. (e.g. as in Google3)\n            // Read more about this here: https://github.com/angular/angular/issues/25644\n            const summary = this.unprocessedSymbolSummariesBySymbol.get(symbol);\n            if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n              importAs = `${symbol.name}_${index}`;\n              exportAs.push({symbol, exportAs: importAs});\n            }\n          }\n        }\n        return {\n          __symbol: index,\n          name: symbol.name,\n          filePath: this.summaryResolver.toSummaryFileName(symbol.filePath, this.srcFileName),\n          importAs: importAs\n        };\n      })\n    });\n    return {json, exportAs};\n  }\n\n  private processValue(value: any, flags: SerializationFlags): any {\n    return visitValue(value, this, flags);\n  }\n\n  visitOther(value: any, context: any): any {\n    if (value instanceof StaticSymbol) {\n      let baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n      const index = this.visitStaticSymbol(baseSymbol, context);\n      return {__symbol: index, members: value.members};\n    }\n  }\n\n  /**\n   * Strip line and character numbers from ngsummaries.\n   * Emitting them causes white spaces changes to retrigger upstream\n   * recompilations in bazel.\n   * TODO: find out a way to have line and character numbers in errors without\n   * excessive recompilation in bazel.\n   */\n  visitStringMap(map: {[key: string]: any}, context: any): any {\n    if (map['__symbolic'] === 'resolved') {\n      return visitValue(map['symbol'], this, context);\n    }\n    if (map['__symbolic'] === 'error') {\n      delete map['line'];\n      delete map['character'];\n    }\n    return super.visitStringMap(map, context);\n  }\n\n  /**\n   * Returns null if the options.resolveValue is true, and the summary for the symbol\n   * resolved to a type or could not be resolved.\n   */\n  private visitStaticSymbol(baseSymbol: StaticSymbol, flags: SerializationFlags): number {\n    let index: number|undefined|null = this.indexBySymbol.get(baseSymbol);\n    let summary: Summary<StaticSymbol>|null = null;\n    if (flags & SerializationFlags.ResolveValue &&\n        this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n      if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n        // the summary for this symbol was already added\n        // -> nothing to do.\n        return index !;\n      }\n      summary = this.loadSummary(baseSymbol);\n      if (summary && summary.metadata instanceof StaticSymbol) {\n        // The summary is a reexport\n        index = this.visitStaticSymbol(summary.metadata, flags);\n        // reset the summary as it is just a reexport, so we don't want to store it.\n        summary = null;\n      }\n    } else if (index != null) {\n      // Note: == on purpose to compare with undefined!\n      // No summary and the symbol is already added -> nothing to do.\n      return index;\n    }\n    // Note: == on purpose to compare with undefined!\n    if (index == null) {\n      index = this.symbols.length;\n      this.symbols.push(baseSymbol);\n    }\n    this.indexBySymbol.set(baseSymbol, index);\n    if (summary) {\n      this.addSummary(summary);\n    }\n    return index;\n  }\n\n  private loadSummary(symbol: StaticSymbol): Summary<StaticSymbol>|null {\n    let summary = this.summaryResolver.resolveSummary(symbol);\n    if (!summary) {\n      // some symbols might originate from a plain typescript library\n      // that just exported .d.ts and .metadata.json files, i.e. where no summary\n      // files were created.\n      const resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n      if (resolvedSymbol) {\n        summary = {symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata};\n      }\n    }\n    return summary;\n  }\n}\n\nclass ForJitSerializer {\n  private data: Array<{\n    summary: CompileTypeSummary,\n    metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|CompilePipeMetadata|\n    CompileTypeMetadata|null,\n    isLibrary: boolean\n  }> = [];\n\n  constructor(\n      private outputCtx: OutputContext, private symbolResolver: StaticSymbolResolver,\n      private summaryResolver: SummaryResolver<StaticSymbol>) {}\n\n  addSourceType(\n      summary: CompileTypeSummary, metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|\n      CompilePipeMetadata|CompileTypeMetadata) {\n    this.data.push({summary, metadata, isLibrary: false});\n  }\n\n  addLibType(summary: CompileTypeSummary) {\n    this.data.push({summary, metadata: null, isLibrary: true});\n  }\n\n  serialize(exportAsArr: {symbol: StaticSymbol, exportAs: string}[]): void {\n    const exportAsBySymbol = new Map<StaticSymbol, string>();\n    for (const {symbol, exportAs} of exportAsArr) {\n      exportAsBySymbol.set(symbol, exportAs);\n    }\n    const ngModuleSymbols = new Set<StaticSymbol>();\n\n    for (const {summary, metadata, isLibrary} of this.data) {\n      if (summary.summaryKind === CompileSummaryKind.NgModule) {\n        // collect the symbols that refer to NgModule classes.\n        // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n        // we don't add the summaries of all referenced symbols when we serialize type summaries.\n        // See serializeSummaries for details.\n        ngModuleSymbols.add(summary.type.reference);\n        const modSummary = <CompileNgModuleSummary>summary;\n        for (const mod of modSummary.modules) {\n          ngModuleSymbols.add(mod.reference);\n        }\n      }\n      if (!isLibrary) {\n        const fnName = summaryForJitName(summary.type.reference.name);\n        createSummaryForJitFunction(\n            this.outputCtx, summary.type.reference,\n            this.serializeSummaryWithDeps(summary, metadata !));\n      }\n    }\n\n    ngModuleSymbols.forEach((ngModuleSymbol) => {\n      if (this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n        let exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n        const jitExportAsName = summaryForJitName(exportAs);\n        this.outputCtx.statements.push(o.variable(jitExportAsName)\n                                           .set(this.serializeSummaryRef(ngModuleSymbol))\n                                           .toDeclStmt(null, [o.StmtModifier.Exported]));\n      }\n    });\n  }\n\n  private serializeSummaryWithDeps(\n      summary: CompileTypeSummary, metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|\n      CompilePipeMetadata|CompileTypeMetadata): o.Expression {\n    const expressions: o.Expression[] = [this.serializeSummary(summary)];\n    let providers: CompileProviderMetadata[] = [];\n    if (metadata instanceof CompileNgModuleMetadata) {\n      expressions.push(...\n                       // For directives / pipes, we only add the declared ones,\n                       // and rely on transitively importing NgModules to get the transitive\n                       // summaries.\n                       metadata.declaredDirectives.concat(metadata.declaredPipes)\n                           .map(type => type.reference)\n                           // For modules,\n                           // we also add the summaries for modules\n                           // from libraries.\n                           // This is ok as we produce reexports for all transitive modules.\n                           .concat(metadata.transitiveModule.modules.map(type => type.reference)\n                                       .filter(ref => ref !== metadata.type.reference))\n                           .map((ref) => this.serializeSummaryRef(ref)));\n      // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n      // and we already have transitive modules.\n      providers = metadata.providers;\n    } else if (summary.summaryKind === CompileSummaryKind.Directive) {\n      const dirSummary = <CompileDirectiveSummary>summary;\n      providers = dirSummary.providers.concat(dirSummary.viewProviders);\n    }\n    // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n    // declaredDirectives / declaredPipes), as we allow\n    // providers without ctor arguments to skip the `@Injectable` decorator,\n    // i.e. we didn't generate .ngsummary.ts files for these.\n    expressions.push(\n        ...providers.filter(provider => !!provider.useClass).map(provider => this.serializeSummary({\n          summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        } as CompileTypeSummary)));\n    return o.literalArr(expressions);\n  }\n\n  private serializeSummaryRef(typeSymbol: StaticSymbol): o.Expression {\n    const jitImportedSymbol = this.symbolResolver.getStaticSymbol(\n        summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n    return this.outputCtx.importExpr(jitImportedSymbol);\n  }\n\n  private serializeSummary(data: {[key: string]: any}): o.Expression {\n    const outputCtx = this.outputCtx;\n\n    class Transformer implements ValueVisitor {\n      visitArray(arr: any[], context: any): any {\n        return o.literalArr(arr.map(entry => visitValue(entry, this, context)));\n      }\n      visitStringMap(map: {[key: string]: any}, context: any): any {\n        return new o.LiteralMapExpr(Object.keys(map).map(\n            (key) => new o.LiteralMapEntry(key, visitValue(map[key], this, context), false)));\n      }\n      visitPrimitive(value: any, context: any): any { return o.literal(value); }\n      visitOther(value: any, context: any): any {\n        if (value instanceof StaticSymbol) {\n          return outputCtx.importExpr(value);\n        } else {\n          throw new Error(`Illegal State: Encountered value ${value}`);\n        }\n      }\n    }\n\n    return visitValue(data, new Transformer(), null);\n  }\n}\n\nclass FromJsonDeserializer extends ValueTransformer {\n  // TODO(issue/24571): remove '!'.\n  private symbols !: StaticSymbol[];\n\n  constructor(\n      private symbolCache: StaticSymbolCache,\n      private summaryResolver: SummaryResolver<StaticSymbol>) {\n    super();\n  }\n\n  deserialize(libraryFileName: string, json: string): {\n    moduleName: string | null,\n    summaries: Summary<StaticSymbol>[],\n    importAs: {symbol: StaticSymbol, importAs: StaticSymbol}[]\n  } {\n    const data: {moduleName: string | null, summaries: any[], symbols: any[]} = JSON.parse(json);\n    const allImportAs: {symbol: StaticSymbol, importAs: StaticSymbol}[] = [];\n    this.symbols = data.symbols.map(\n        (serializedSymbol) => this.symbolCache.get(\n            this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName),\n            serializedSymbol.name));\n    data.symbols.forEach((serializedSymbol, index) => {\n      const symbol = this.symbols[index];\n      const importAs = serializedSymbol.importAs;\n      if (typeof importAs === 'number') {\n        allImportAs.push({symbol, importAs: this.symbols[importAs]});\n      } else if (typeof importAs === 'string') {\n        allImportAs.push(\n            {symbol, importAs: this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs)});\n      }\n    });\n    const summaries = visitValue(data.summaries, this, null) as Summary<StaticSymbol>[];\n    return {moduleName: data.moduleName, summaries, importAs: allImportAs};\n  }\n\n  visitStringMap(map: {[key: string]: any}, context: any): any {\n    if ('__symbol' in map) {\n      const baseSymbol = this.symbols[map['__symbol']];\n      const members = map['members'];\n      return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                              baseSymbol;\n    } else {\n      return super.visitStringMap(map, context);\n    }\n  }\n}\n\nfunction isCall(metadata: any): boolean {\n  return metadata && metadata.__symbolic === 'call';\n}\n\nfunction isFunctionCall(metadata: any): boolean {\n  return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n\nfunction isMethodCallOnVariable(metadata: any): boolean {\n  return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n      unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileInjectableMetadata, CompileNgModuleMetadata, CompilePipeMetadata, CompilePipeSummary, CompileProviderMetadata, CompileShallowModuleMetadata, CompileStylesheetMetadata, CompileTypeMetadata, CompileTypeSummary, componentFactoryName, flatten, identifierName, templateSourceUrl} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {ConstantPool} from '../constant_pool';\nimport {ViewEncapsulation} from '../core';\nimport {MessageBundle} from '../i18n/message_bundle';\nimport {Identifiers, createTokenForExternalReference} from '../identifiers';\nimport {InjectableCompiler} from '../injectable_compiler';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {removeWhitespaces} from '../ml_parser/html_whitespaces';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {OutputEmitter} from '../output/abstract_emitter';\nimport * as o from '../output/output_ast';\nimport {ParseError} from '../parse_util';\nimport {compileNgModuleFromRender2 as compileR3Module} from '../render3/r3_module_compiler';\nimport {compilePipeFromRender2 as compileR3Pipe} from '../render3/r3_pipe_compiler';\nimport {htmlAstToRender3Ast} from '../render3/r3_template_transform';\nimport {compileComponentFromRender2 as compileR3Component, compileDirectiveFromRender2 as compileR3Directive} from '../render3/view/compiler';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {TemplateAst} from '../template_parser/template_ast';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {OutputContext, ValueVisitor, error, syntaxError, visitValue} from '../util';\nimport {TypeCheckCompiler} from '../view_compiler/type_check_compiler';\nimport {ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompilerHost} from './compiler_host';\nimport {AotCompilerOptions} from './compiler_options';\nimport {GeneratedFile} from './generated_file';\nimport {LazyRoute, listLazyRoutes, parseLazyRoute} from './lazy_routes';\nimport {PartialModule} from './partial_module';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\nimport {createForJitStub, serializeSummaries} from './summary_serializer';\nimport {ngfactoryFilePath, normalizeGenFileSuffix, splitTypescriptSuffix, summaryFileName, summaryForJitFileName} from './util';\n\nconst enum StubEmitFlags { Basic = 1 << 0, TypeCheck = 1 << 1, All = TypeCheck | Basic }\n\nexport class AotCompiler {\n  private _templateAstCache =\n      new Map<StaticSymbol, {template: TemplateAst[], pipes: CompilePipeSummary[]}>();\n  private _analyzedFiles = new Map<string, NgAnalyzedFile>();\n  private _analyzedFilesForInjectables = new Map<string, NgAnalyzedFileWithInjectables>();\n\n  constructor(\n      private _config: CompilerConfig, private _options: AotCompilerOptions,\n      private _host: AotCompilerHost, readonly reflector: StaticReflector,\n      private _metadataResolver: CompileMetadataResolver, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _typeCheckCompiler: TypeCheckCompiler, private _ngModuleCompiler: NgModuleCompiler,\n      private _injectableCompiler: InjectableCompiler, private _outputEmitter: OutputEmitter,\n      private _summaryResolver: SummaryResolver<StaticSymbol>,\n      private _symbolResolver: StaticSymbolResolver) {}\n\n  clearCache() { this._metadataResolver.clearCache(); }\n\n  analyzeModulesSync(rootFiles: string[]): NgAnalyzedModules {\n    const analyzeResult = analyzeAndValidateNgModules(\n        rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n    analyzeResult.ngModules.forEach(\n        ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n            ngModule.type.reference, true));\n    return analyzeResult;\n  }\n\n  analyzeModulesAsync(rootFiles: string[]): Promise<NgAnalyzedModules> {\n    const analyzeResult = analyzeAndValidateNgModules(\n        rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n    return Promise\n        .all(analyzeResult.ngModules.map(\n            ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => analyzeResult);\n  }\n\n  private _analyzeFile(fileName: string): NgAnalyzedFile {\n    let analyzedFile = this._analyzedFiles.get(fileName);\n    if (!analyzedFile) {\n      analyzedFile =\n          analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n      this._analyzedFiles.set(fileName, analyzedFile);\n    }\n    return analyzedFile;\n  }\n\n  private _analyzeFileForInjectables(fileName: string): NgAnalyzedFileWithInjectables {\n    let analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n    if (!analyzedFile) {\n      analyzedFile = analyzeFileForInjectables(\n          this._host, this._symbolResolver, this._metadataResolver, fileName);\n      this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n    }\n    return analyzedFile;\n  }\n\n  findGeneratedFileNames(fileName: string): string[] {\n    const genFileNames: string[] = [];\n    const file = this._analyzeFile(fileName);\n    // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n    // or a reference to a non source file.\n    // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n    // Only do this for StubEmitFlags.Basic, as adding a type check block\n    // does not change this file (as we generate type check blocks based on NgModules).\n    if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n        file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n      genFileNames.push(ngfactoryFilePath(file.fileName, true));\n      if (this._options.enableSummariesForJit) {\n        genFileNames.push(summaryForJitFileName(file.fileName, true));\n      }\n    }\n    const fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n    file.directives.forEach((dirSymbol) => {\n      const compMeta =\n          this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol) !.metadata;\n      if (!compMeta.isComponent) {\n        return;\n      }\n      // Note: compMeta is a component and therefore template is non null.\n      compMeta.template !.styleUrls.forEach((styleUrl) => {\n        const normalizedUrl = this._host.resourceNameToFileName(styleUrl, file.fileName);\n        if (!normalizedUrl) {\n          throw syntaxError(`Couldn't resolve resource ${styleUrl} relative to ${file.fileName}`);\n        }\n        const needsShim = (compMeta.template !.encapsulation ||\n                           this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n        genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n        if (this._options.allowEmptyCodegenFiles) {\n          genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n        }\n      });\n    });\n    return genFileNames;\n  }\n\n  emitBasicStub(genFileName: string, originalFileName?: string): GeneratedFile {\n    const outputCtx = this._createOutputContext(genFileName);\n    if (genFileName.endsWith('.ngfactory.ts')) {\n      if (!originalFileName) {\n        throw new Error(\n            `Assertion error: require the original file for .ngfactory.ts stubs. File: ${genFileName}`);\n      }\n      const originalFile = this._analyzeFile(originalFileName);\n      this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n    } else if (genFileName.endsWith('.ngsummary.ts')) {\n      if (this._options.enableSummariesForJit) {\n        if (!originalFileName) {\n          throw new Error(\n              `Assertion error: require the original file for .ngsummary.ts stubs. File: ${genFileName}`);\n        }\n        const originalFile = this._analyzeFile(originalFileName);\n        _createEmptyStub(outputCtx);\n        originalFile.ngModules.forEach(ngModule => {\n          // create exports that user code can reference\n          createForJitStub(outputCtx, ngModule.type.reference);\n        });\n      }\n    } else if (genFileName.endsWith('.ngstyle.ts')) {\n      _createEmptyStub(outputCtx);\n    }\n    // Note: for the stubs, we don't need a property srcFileUrl,\n    // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n    // correct srcFileUrl.\n    // This is good as e.g. for .ngstyle.ts files we can't derive\n    // the url of components based on the genFileUrl.\n    return this._codegenSourceModule('unknown', outputCtx);\n  }\n\n  emitTypeCheckStub(genFileName: string, originalFileName: string): GeneratedFile|null {\n    const originalFile = this._analyzeFile(originalFileName);\n    const outputCtx = this._createOutputContext(genFileName);\n    if (genFileName.endsWith('.ngfactory.ts')) {\n      this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n    }\n    return outputCtx.statements.length > 0 ?\n        this._codegenSourceModule(originalFile.fileName, outputCtx) :\n        null;\n  }\n\n  loadFilesAsync(fileNames: string[], tsFiles: string[]): Promise<\n      {analyzedModules: NgAnalyzedModules, analyzedInjectables: NgAnalyzedFileWithInjectables[]}> {\n    const files = fileNames.map(fileName => this._analyzeFile(fileName));\n    const loadingPromises: Promise<NgAnalyzedModules>[] = [];\n    files.forEach(\n        file => file.ngModules.forEach(\n            ngModule =>\n                loadingPromises.push(this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                    ngModule.type.reference, false))));\n    const analyzedInjectables = tsFiles.map(tsFile => this._analyzeFileForInjectables(tsFile));\n    return Promise.all(loadingPromises).then(_ => ({\n                                               analyzedModules: mergeAndValidateNgFiles(files),\n                                               analyzedInjectables: analyzedInjectables,\n                                             }));\n  }\n\n  loadFilesSync(fileNames: string[], tsFiles: string[]):\n      {analyzedModules: NgAnalyzedModules, analyzedInjectables: NgAnalyzedFileWithInjectables[]} {\n    const files = fileNames.map(fileName => this._analyzeFile(fileName));\n    files.forEach(\n        file => file.ngModules.forEach(\n            ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, true)));\n    const analyzedInjectables = tsFiles.map(tsFile => this._analyzeFileForInjectables(tsFile));\n    return {\n      analyzedModules: mergeAndValidateNgFiles(files),\n      analyzedInjectables: analyzedInjectables,\n    };\n  }\n\n  private _createNgFactoryStub(\n      outputCtx: OutputContext, file: NgAnalyzedFile, emitFlags: StubEmitFlags) {\n    let componentId = 0;\n    file.ngModules.forEach((ngModuleMeta, ngModuleIndex) => {\n      // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n      // so we don't change the .ngfactory file too much when adding the type-check block.\n\n      // create exports that user code can reference\n      this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n\n      // add references to the symbols from the metadata.\n      // These can be used by the type check block for components,\n      // and they also cause TypeScript to include these files into the program too,\n      // which will make them part of the analyzedFiles.\n      const externalReferences: StaticSymbol[] = [\n        // Add references that are available from all the modules and imports.\n        ...ngModuleMeta.transitiveModule.directives.map(d => d.reference),\n        ...ngModuleMeta.transitiveModule.pipes.map(d => d.reference),\n        ...ngModuleMeta.importedModules.map(m => m.type.reference),\n        ...ngModuleMeta.exportedModules.map(m => m.type.reference),\n\n        // Add references that might be inserted by the template compiler.\n        ...this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]),\n      ];\n\n      const externalReferenceVars = new Map<any, string>();\n      externalReferences.forEach((ref, typeIndex) => {\n        externalReferenceVars.set(ref, `_decl${ngModuleIndex}_${typeIndex}`);\n      });\n      externalReferenceVars.forEach((varName, reference) => {\n        outputCtx.statements.push(\n            o.variable(varName)\n                .set(o.NULL_EXPR.cast(o.DYNAMIC_TYPE))\n                .toDeclStmt(o.expressionType(outputCtx.importExpr(\n                    reference, /* typeParams */ null, /* useSummaries */ false))));\n      });\n\n      if (emitFlags & StubEmitFlags.TypeCheck) {\n        // add the type-check block for all components of the NgModule\n        ngModuleMeta.declaredDirectives.forEach((dirId) => {\n          const compMeta = this._metadataResolver.getDirectiveMetadata(dirId.reference);\n          if (!compMeta.isComponent) {\n            return;\n          }\n          componentId++;\n          this._createTypeCheckBlock(\n              outputCtx, `${compMeta.type.reference.name}_Host_${componentId}`, ngModuleMeta,\n              this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type],\n              externalReferenceVars);\n          this._createTypeCheckBlock(\n              outputCtx, `${compMeta.type.reference.name}_${componentId}`, ngModuleMeta, compMeta,\n              ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n        });\n      }\n    });\n\n    if (outputCtx.statements.length === 0) {\n      _createEmptyStub(outputCtx);\n    }\n  }\n\n  private _externalIdentifierReferences(references: o.ExternalReference[]): StaticSymbol[] {\n    const result: StaticSymbol[] = [];\n    for (let reference of references) {\n      const token = createTokenForExternalReference(this.reflector, reference);\n      if (token.identifier) {\n        result.push(token.identifier.reference);\n      }\n    }\n    return result;\n  }\n\n  private _createTypeCheckBlock(\n      ctx: OutputContext, componentId: string, moduleMeta: CompileNgModuleMetadata,\n      compMeta: CompileDirectiveMetadata, directives: CompileIdentifierMetadata[],\n      externalReferenceVars: Map<any, string>) {\n    const {template: parsedTemplate, pipes: usedPipes} =\n        this._parseTemplate(compMeta, moduleMeta, directives);\n    ctx.statements.push(...this._typeCheckCompiler.compileComponent(\n        componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n  }\n\n  emitMessageBundle(analyzeResult: NgAnalyzedModules, locale: string|null): MessageBundle {\n    const errors: ParseError[] = [];\n    const htmlParser = new HtmlParser();\n\n    // TODO(vicb): implicit tags & attributes\n    const messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n\n    analyzeResult.files.forEach(file => {\n      const compMetas: CompileDirectiveMetadata[] = [];\n      file.directives.forEach(directiveType => {\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n        if (dirMeta && dirMeta.isComponent) {\n          compMetas.push(dirMeta);\n        }\n      });\n      compMetas.forEach(compMeta => {\n        const html = compMeta.template !.template !;\n        // Template URL points to either an HTML or TS file depending on whether\n        // the file is used with `templateUrl:` or `template:`, respectively.\n        const templateUrl = compMeta.template !.templateUrl !;\n        const interpolationConfig =\n            InterpolationConfig.fromArray(compMeta.template !.interpolation);\n        errors.push(...messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig) !);\n      });\n    });\n\n    if (errors.length) {\n      throw new Error(errors.map(e => e.toString()).join('\\n'));\n    }\n\n    return messageBundle;\n  }\n\n  emitAllPartialModules(\n      {ngModuleByPipeOrDirective, files}: NgAnalyzedModules,\n      r3Files: NgAnalyzedFileWithInjectables[]): PartialModule[] {\n    const contextMap = new Map<string, OutputContext>();\n\n    const getContext = (fileName: string): OutputContext => {\n      if (!contextMap.has(fileName)) {\n        contextMap.set(fileName, this._createOutputContext(fileName));\n      }\n      return contextMap.get(fileName) !;\n    };\n\n    files.forEach(\n        file => this._compilePartialModule(\n            file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules,\n            file.injectables, getContext(file.fileName)));\n    r3Files.forEach(\n        file => this._compileShallowModules(\n            file.fileName, file.shallowModules, getContext(file.fileName)));\n\n    return Array.from(contextMap.values())\n        .map(context => ({\n               fileName: context.genFilePath,\n               statements: [...context.constantPool.statements, ...context.statements],\n             }));\n  }\n\n  private _compileShallowModules(\n      fileName: string, shallowModules: CompileShallowModuleMetadata[],\n      context: OutputContext): void {\n    shallowModules.forEach(module => compileR3Module(context, module, this._injectableCompiler));\n  }\n\n  private _compilePartialModule(\n      fileName: string, ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>,\n      directives: StaticSymbol[], pipes: StaticSymbol[], ngModules: CompileNgModuleMetadata[],\n      injectables: CompileInjectableMetadata[], context: OutputContext): void {\n    const errors: ParseError[] = [];\n\n    const schemaRegistry = new DomElementSchemaRegistry();\n    const hostBindingParser = new BindingParser(\n        this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [],\n        errors);\n\n    // Process all components and directives\n    directives.forEach(directiveType => {\n      const directiveMetadata = this._metadataResolver.getDirectiveMetadata(directiveType);\n      if (directiveMetadata.isComponent) {\n        const module = ngModuleByPipeOrDirective.get(directiveType) !;\n        module ||\n            error(\n                `Cannot determine the module for component '${identifierName(directiveMetadata.type)}'`);\n\n        let htmlAst = directiveMetadata.template !.htmlAst !;\n        const preserveWhitespaces = directiveMetadata !.template !.preserveWhitespaces;\n\n        if (!preserveWhitespaces) {\n          htmlAst = removeWhitespaces(htmlAst);\n        }\n        const render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n\n        // Map of StaticType by directive selectors\n        const directiveTypeBySel = new Map<string, any>();\n\n        const directives = module.transitiveModule.directives.map(\n            dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n\n        directives.forEach(directive => {\n          if (directive.selector) {\n            directiveTypeBySel.set(directive.selector, directive.type.reference);\n          }\n        });\n\n        // Map of StaticType by pipe names\n        const pipeTypeByName = new Map<string, any>();\n\n        const pipes = module.transitiveModule.pipes.map(\n            pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n\n        pipes.forEach(pipe => { pipeTypeByName.set(pipe.name, pipe.type.reference); });\n\n        compileR3Component(\n            context, directiveMetadata, render3Ast, this.reflector, hostBindingParser,\n            directiveTypeBySel, pipeTypeByName);\n      } else {\n        compileR3Directive(context, directiveMetadata, this.reflector, hostBindingParser);\n      }\n    });\n\n    pipes.forEach(pipeType => {\n      const pipeMetadata = this._metadataResolver.getPipeMetadata(pipeType);\n      if (pipeMetadata) {\n        compileR3Pipe(context, pipeMetadata, this.reflector);\n      }\n    });\n\n    injectables.forEach(injectable => this._injectableCompiler.compile(injectable, context));\n  }\n\n  emitAllPartialModules2(files: NgAnalyzedFileWithInjectables[]): PartialModule[] {\n    // Using reduce like this is a select many pattern (where map is a select pattern)\n    return files.reduce<PartialModule[]>((r, file) => {\n      r.push(...this._emitPartialModule2(file.fileName, file.injectables));\n      return r;\n    }, []);\n  }\n\n  private _emitPartialModule2(fileName: string, injectables: CompileInjectableMetadata[]):\n      PartialModule[] {\n    const context = this._createOutputContext(fileName);\n\n    injectables.forEach(injectable => this._injectableCompiler.compile(injectable, context));\n\n    if (context.statements && context.statements.length > 0) {\n      return [{fileName, statements: [...context.constantPool.statements, ...context.statements]}];\n    }\n    return [];\n  }\n\n  emitAllImpls(analyzeResult: NgAnalyzedModules): GeneratedFile[] {\n    const {ngModuleByPipeOrDirective, files} = analyzeResult;\n    const sourceModules = files.map(\n        file => this._compileImplFile(\n            file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules,\n            file.injectables));\n    return flatten(sourceModules);\n  }\n\n  private _compileImplFile(\n      srcFileUrl: string, ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>,\n      directives: StaticSymbol[], pipes: StaticSymbol[], ngModules: CompileNgModuleMetadata[],\n      injectables: CompileInjectableMetadata[]): GeneratedFile[] {\n    const fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n    const generatedFiles: GeneratedFile[] = [];\n\n    const outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n\n    generatedFiles.push(\n        ...this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n\n    // compile all ng modules\n    ngModules.forEach((ngModuleMeta) => this._compileModule(outputCtx, ngModuleMeta));\n\n    // compile components\n    directives.forEach((dirType) => {\n      const compMeta = this._metadataResolver.getDirectiveMetadata(<any>dirType);\n      if (!compMeta.isComponent) {\n        return;\n      }\n      const ngModule = ngModuleByPipeOrDirective.get(dirType);\n      if (!ngModule) {\n        throw new Error(\n            `Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n      }\n\n      // compile styles\n      const componentStylesheet = this._styleCompiler.compileComponent(outputCtx, compMeta);\n      // Note: compMeta is a component and therefore template is non null.\n      compMeta.template !.externalStylesheets.forEach((stylesheetMeta) => {\n        // Note: fill non shim and shim style files as they might\n        // be shared by component with and without ViewEncapsulation.\n        const shim = this._styleCompiler.needsStyleShim(compMeta);\n        generatedFiles.push(\n            this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n        if (this._options.allowEmptyCodegenFiles) {\n          generatedFiles.push(\n              this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n        }\n      });\n\n      // compile components\n      const compViewVars = this._compileComponent(\n          outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet,\n          fileSuffix);\n      this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n    });\n    if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n      const srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n      generatedFiles.unshift(srcModule);\n    }\n    return generatedFiles;\n  }\n\n  private _createSummary(\n      srcFileName: string, directives: StaticSymbol[], pipes: StaticSymbol[],\n      ngModules: CompileNgModuleMetadata[], injectables: CompileInjectableMetadata[],\n      ngFactoryCtx: OutputContext): GeneratedFile[] {\n    const symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n                                .map(symbol => this._symbolResolver.resolveSymbol(symbol));\n    const typeData: {\n      summary: CompileTypeSummary,\n      metadata: CompileNgModuleMetadata | CompileDirectiveMetadata | CompilePipeMetadata |\n          CompileTypeMetadata\n    }[] =\n        [\n          ...ngModules.map(\n              meta => ({\n                summary: this._metadataResolver.getNgModuleSummary(meta.type.reference) !,\n                metadata: this._metadataResolver.getNgModuleMetadata(meta.type.reference) !\n              })),\n          ...directives.map(ref => ({\n                              summary: this._metadataResolver.getDirectiveSummary(ref) !,\n                              metadata: this._metadataResolver.getDirectiveMetadata(ref) !\n                            })),\n          ...pipes.map(ref => ({\n                         summary: this._metadataResolver.getPipeSummary(ref) !,\n                         metadata: this._metadataResolver.getPipeMetadata(ref) !\n                       })),\n          ...injectables.map(\n              ref => ({\n                summary: this._metadataResolver.getInjectableSummary(ref.symbol) !,\n                metadata: this._metadataResolver.getInjectableSummary(ref.symbol) !.type\n              }))\n        ];\n    const forJitOutputCtx = this._options.enableSummariesForJit ?\n        this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n        null;\n    const {json, exportAs} = serializeSummaries(\n        srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries,\n        typeData, this._options.createExternalSymbolFactoryReexports);\n    exportAs.forEach((entry) => {\n      ngFactoryCtx.statements.push(\n          o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n            o.StmtModifier.Exported\n          ]));\n    });\n    const summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n    const result = [summaryJson];\n    if (forJitOutputCtx) {\n      result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n    }\n    return result;\n  }\n\n  private _compileModule(outputCtx: OutputContext, ngModule: CompileNgModuleMetadata): void {\n    const providers: CompileProviderMetadata[] = [];\n\n    if (this._options.locale) {\n      const normalizedLocale = this._options.locale.replace(/_/g, '-');\n      providers.push({\n        token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n        useValue: normalizedLocale,\n      });\n    }\n\n    if (this._options.i18nFormat) {\n      providers.push({\n        token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n        useValue: this._options.i18nFormat\n      });\n    }\n\n    this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n  }\n\n  private _compileComponentFactory(\n      outputCtx: OutputContext, compMeta: CompileDirectiveMetadata,\n      ngModule: CompileNgModuleMetadata, fileSuffix: string): void {\n    const hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n    const hostViewFactoryVar =\n        this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n    const compFactoryVar = componentFactoryName(compMeta.type.reference);\n    const inputsExprs: o.LiteralMapEntry[] = [];\n    for (let propName in compMeta.inputs) {\n      const templateName = compMeta.inputs[propName];\n      // Don't quote so that the key gets minified...\n      inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n    }\n    const outputsExprs: o.LiteralMapEntry[] = [];\n    for (let propName in compMeta.outputs) {\n      const templateName = compMeta.outputs[propName];\n      // Don't quote so that the key gets minified...\n      outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n    }\n\n    outputCtx.statements.push(\n        o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n              o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n              o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n              new o.LiteralMapExpr(outputsExprs),\n              o.literalArr(\n                  compMeta.template !.ngContentSelectors.map(selector => o.literal(selector)))\n            ]))\n            .toDeclStmt(\n                o.importType(\n                    Identifiers.ComponentFactory,\n                    [o.expressionType(outputCtx.importExpr(compMeta.type.reference)) !],\n                    [o.TypeModifier.Const]),\n                [o.StmtModifier.Final, o.StmtModifier.Exported]));\n  }\n\n  private _compileComponent(\n      outputCtx: OutputContext, compMeta: CompileDirectiveMetadata,\n      ngModule: CompileNgModuleMetadata, directiveIdentifiers: CompileIdentifierMetadata[],\n      componentStyles: CompiledStylesheet|null, fileSuffix: string): ViewCompileResult {\n    const {template: parsedTemplate, pipes: usedPipes} =\n        this._parseTemplate(compMeta, ngModule, directiveIdentifiers);\n    const stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n    const viewResult = this._viewCompiler.compileComponent(\n        outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n    if (componentStyles) {\n      _resolveStyleStatements(\n          this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta),\n          fileSuffix);\n    }\n    return viewResult;\n  }\n\n  private _parseTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata,\n      directiveIdentifiers: CompileIdentifierMetadata[]):\n      {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    if (this._templateAstCache.has(compMeta.type.reference)) {\n      return this._templateAstCache.get(compMeta.type.reference) !;\n    }\n    const preserveWhitespaces = compMeta !.template !.preserveWhitespaces;\n    const directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const result = this._templateParser.parse(\n        compMeta, compMeta.template !.htmlAst !, directives, pipes, ngModule.schemas,\n        templateSourceUrl(ngModule.type, compMeta, compMeta.template !), preserveWhitespaces);\n    this._templateAstCache.set(compMeta.type.reference, result);\n    return result;\n  }\n\n  private _createOutputContext(genFilePath: string): OutputContext {\n    const importExpr =\n        (symbol: StaticSymbol, typeParams: o.Type[] | null = null,\n         useSummaries: boolean = true) => {\n          if (!(symbol instanceof StaticSymbol)) {\n            throw new Error(`Internal error: unknown identifier ${JSON.stringify(symbol)}`);\n          }\n          const arity = this._symbolResolver.getTypeArity(symbol) || 0;\n          const {filePath, name, members} =\n              this._symbolResolver.getImportAs(symbol, useSummaries) || symbol;\n          const importModule = this._fileNameToModuleName(filePath, genFilePath);\n\n          // It should be good enough to compare filePath to genFilePath and if they are equal\n          // there is a self reference. However, ngfactory files generate to .ts but their\n          // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n          // and is tracked by #17705.\n          const selfReference = this._fileNameToModuleName(genFilePath, genFilePath);\n          const moduleName = importModule === selfReference ? null : importModule;\n\n          // If we are in a type expression that refers to a generic type then supply\n          // the required type parameters. If there were not enough type parameters\n          // supplied, supply any as the type. Outside a type expression the reference\n          // should not supply type parameters and be treated as a simple value reference\n          // to the constructor function itself.\n          const suppliedTypeParams = typeParams || [];\n          const missingTypeParamsCount = arity - suppliedTypeParams.length;\n          const allTypeParams =\n              suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n          return members.reduce(\n              (expr, memberName) => expr.prop(memberName),\n              <o.Expression>o.importExpr(\n                  new o.ExternalReference(moduleName, name, null), allTypeParams));\n        };\n\n    return {statements: [], genFilePath, importExpr, constantPool: new ConstantPool()};\n  }\n\n  private _fileNameToModuleName(importedFilePath: string, containingFilePath: string): string {\n    return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n        this._symbolResolver.getKnownModuleName(importedFilePath) ||\n        this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n  }\n\n  private _codegenStyles(\n      srcFileUrl: string, compMeta: CompileDirectiveMetadata,\n      stylesheetMetadata: CompileStylesheetMetadata, isShimmed: boolean,\n      fileSuffix: string): GeneratedFile {\n    const outputCtx = this._createOutputContext(\n        _stylesModuleUrl(stylesheetMetadata.moduleUrl !, isShimmed, fileSuffix));\n    const compiledStylesheet =\n        this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n    _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n    return this._codegenSourceModule(srcFileUrl, outputCtx);\n  }\n\n  private _codegenSourceModule(srcFileUrl: string, ctx: OutputContext): GeneratedFile {\n    return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n  }\n\n  listLazyRoutes(entryRoute?: string, analyzedModules?: NgAnalyzedModules): LazyRoute[] {\n    const self = this;\n    if (entryRoute) {\n      const symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n      return visitLazyRoute(symbol);\n    } else if (analyzedModules) {\n      const allLazyRoutes: LazyRoute[] = [];\n      for (const ngModule of analyzedModules.ngModules) {\n        const lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n        for (const lazyRoute of lazyRoutes) {\n          allLazyRoutes.push(lazyRoute);\n        }\n      }\n      return allLazyRoutes;\n    } else {\n      throw new Error(`Either route or analyzedModules has to be specified!`);\n    }\n\n    function visitLazyRoute(\n        symbol: StaticSymbol, seenRoutes = new Set<StaticSymbol>(),\n        allLazyRoutes: LazyRoute[] = []): LazyRoute[] {\n      // Support pointing to default exports, but stop recursing there,\n      // as the StaticReflector does not yet support default exports.\n      if (seenRoutes.has(symbol) || !symbol.name) {\n        return allLazyRoutes;\n      }\n      seenRoutes.add(symbol);\n      const lazyRoutes = listLazyRoutes(\n          self._metadataResolver.getNgModuleMetadata(symbol, true) !, self.reflector);\n      for (const lazyRoute of lazyRoutes) {\n        allLazyRoutes.push(lazyRoute);\n        visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n      }\n      return allLazyRoutes;\n    }\n  }\n}\n\nfunction _createEmptyStub(outputCtx: OutputContext) {\n  // Note: We need to produce at least one import statement so that\n  // TypeScript knows that the file is an es6 module. Otherwise our generated\n  // exports / imports won't be emitted properly by TypeScript.\n  outputCtx.statements.push(o.importExpr(Identifiers.ComponentFactory).toStmt());\n}\n\n\nfunction _resolveStyleStatements(\n    symbolResolver: StaticSymbolResolver, compileResult: CompiledStylesheet, needsShim: boolean,\n    fileSuffix: string): void {\n  compileResult.dependencies.forEach((dep) => {\n    dep.setValue(symbolResolver.getStaticSymbol(\n        _stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n  });\n}\n\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n\nexport interface NgAnalyzedModules {\n  ngModules: CompileNgModuleMetadata[];\n  ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>;\n  files: NgAnalyzedFile[];\n  symbolsMissingModule?: StaticSymbol[];\n}\n\nexport interface NgAnalyzedFileWithInjectables {\n  fileName: string;\n  injectables: CompileInjectableMetadata[];\n  shallowModules: CompileShallowModuleMetadata[];\n}\n\nexport interface NgAnalyzedFile {\n  fileName: string;\n  directives: StaticSymbol[];\n  pipes: StaticSymbol[];\n  ngModules: CompileNgModuleMetadata[];\n  injectables: CompileInjectableMetadata[];\n  exportsNonSourceFiles: boolean;\n}\n\nexport interface NgAnalyzeModulesHost { isSourceFile(filePath: string): boolean; }\n\nexport function analyzeNgModules(\n    fileNames: string[], host: NgAnalyzeModulesHost, staticSymbolResolver: StaticSymbolResolver,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const files = _analyzeFilesIncludingNonProgramFiles(\n      fileNames, host, staticSymbolResolver, metadataResolver);\n  return mergeAnalyzedFiles(files);\n}\n\nexport function analyzeAndValidateNgModules(\n    fileNames: string[], host: NgAnalyzeModulesHost, staticSymbolResolver: StaticSymbolResolver,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  return validateAnalyzedModules(\n      analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n\nfunction validateAnalyzedModules(analyzedModules: NgAnalyzedModules): NgAnalyzedModules {\n  if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n    const messages = analyzedModules.symbolsMissingModule.map(\n        s =>\n            `Cannot determine the module for class ${s.name} in ${s.filePath}! Add ${s.name} to the NgModule to fix it.`);\n    throw syntaxError(messages.join('\\n'));\n  }\n  return analyzedModules;\n}\n\n// Analyzes all of the program files,\n// including files that are not part of the program\n// but are referenced by an NgModule.\nfunction _analyzeFilesIncludingNonProgramFiles(\n    fileNames: string[], host: NgAnalyzeModulesHost, staticSymbolResolver: StaticSymbolResolver,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedFile[] {\n  const seenFiles = new Set<string>();\n  const files: NgAnalyzedFile[] = [];\n\n  const visitFile = (fileName: string) => {\n    if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n      return false;\n    }\n    seenFiles.add(fileName);\n    const analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n    files.push(analyzedFile);\n    analyzedFile.ngModules.forEach(ngModule => {\n      ngModule.transitiveModule.modules.forEach(modMeta => visitFile(modMeta.reference.filePath));\n    });\n  };\n  fileNames.forEach((fileName) => visitFile(fileName));\n  return files;\n}\n\nexport function analyzeFile(\n    host: NgAnalyzeModulesHost, staticSymbolResolver: StaticSymbolResolver,\n    metadataResolver: CompileMetadataResolver, fileName: string): NgAnalyzedFile {\n  const directives: StaticSymbol[] = [];\n  const pipes: StaticSymbol[] = [];\n  const injectables: CompileInjectableMetadata[] = [];\n  const ngModules: CompileNgModuleMetadata[] = [];\n  const hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n  let exportsNonSourceFiles = false;\n  // Don't analyze .d.ts files that have no decorators as a shortcut\n  // to speed up the analysis. This prevents us from\n  // resolving the references in these files.\n  // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n  // which is not the case when .d.ts files are treated as input files.\n  if (!fileName.endsWith('.d.ts') || hasDecorators) {\n    staticSymbolResolver.getSymbolsOf(fileName).forEach((symbol) => {\n      const resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n      const symbolMeta = resolvedSymbol.metadata;\n      if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n        return;\n      }\n      let isNgSymbol = false;\n      if (symbolMeta.__symbolic === 'class') {\n        if (metadataResolver.isDirective(symbol)) {\n          isNgSymbol = true;\n          directives.push(symbol);\n        } else if (metadataResolver.isPipe(symbol)) {\n          isNgSymbol = true;\n          pipes.push(symbol);\n        } else if (metadataResolver.isNgModule(symbol)) {\n          const ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n          if (ngModule) {\n            isNgSymbol = true;\n            ngModules.push(ngModule);\n          }\n        } else if (metadataResolver.isInjectable(symbol)) {\n          isNgSymbol = true;\n          const injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n          if (injectable) {\n            injectables.push(injectable);\n          }\n        }\n      }\n      if (!isNgSymbol) {\n        exportsNonSourceFiles =\n            exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n      }\n    });\n  }\n  return {\n      fileName, directives, pipes, ngModules, injectables, exportsNonSourceFiles,\n  };\n}\n\nexport function analyzeFileForInjectables(\n    host: NgAnalyzeModulesHost, staticSymbolResolver: StaticSymbolResolver,\n    metadataResolver: CompileMetadataResolver, fileName: string): NgAnalyzedFileWithInjectables {\n  const injectables: CompileInjectableMetadata[] = [];\n  const shallowModules: CompileShallowModuleMetadata[] = [];\n  if (staticSymbolResolver.hasDecorators(fileName)) {\n    staticSymbolResolver.getSymbolsOf(fileName).forEach((symbol) => {\n      const resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n      const symbolMeta = resolvedSymbol.metadata;\n      if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n        return;\n      }\n      if (symbolMeta.__symbolic === 'class') {\n        if (metadataResolver.isInjectable(symbol)) {\n          const injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n          if (injectable) {\n            injectables.push(injectable);\n          }\n        } else if (metadataResolver.isNgModule(symbol)) {\n          const module = metadataResolver.getShallowModuleMetadata(symbol);\n          if (module) {\n            shallowModules.push(module);\n          }\n        }\n      }\n    });\n  }\n  return {fileName, injectables, shallowModules};\n}\n\nfunction isValueExportingNonSourceFile(host: NgAnalyzeModulesHost, metadata: any): boolean {\n  let exportsNonSourceFiles = false;\n\n  class Visitor implements ValueVisitor {\n    visitArray(arr: any[], context: any): any { arr.forEach(v => visitValue(v, this, context)); }\n    visitStringMap(map: {[key: string]: any}, context: any): any {\n      Object.keys(map).forEach((key) => visitValue(map[key], this, context));\n    }\n    visitPrimitive(value: any, context: any): any {}\n    visitOther(value: any, context: any): any {\n      if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n        exportsNonSourceFiles = true;\n      }\n    }\n  }\n\n  visitValue(metadata, new Visitor(), null);\n  return exportsNonSourceFiles;\n}\n\nexport function mergeAnalyzedFiles(analyzedFiles: NgAnalyzedFile[]): NgAnalyzedModules {\n  const allNgModules: CompileNgModuleMetadata[] = [];\n  const ngModuleByPipeOrDirective = new Map<StaticSymbol, CompileNgModuleMetadata>();\n  const allPipesAndDirectives = new Set<StaticSymbol>();\n\n  analyzedFiles.forEach(af => {\n    af.ngModules.forEach(ngModule => {\n      allNgModules.push(ngModule);\n      ngModule.declaredDirectives.forEach(\n          d => ngModuleByPipeOrDirective.set(d.reference, ngModule));\n      ngModule.declaredPipes.forEach(p => ngModuleByPipeOrDirective.set(p.reference, ngModule));\n    });\n    af.directives.forEach(d => allPipesAndDirectives.add(d));\n    af.pipes.forEach(p => allPipesAndDirectives.add(p));\n  });\n\n  const symbolsMissingModule: StaticSymbol[] = [];\n  allPipesAndDirectives.forEach(ref => {\n    if (!ngModuleByPipeOrDirective.has(ref)) {\n      symbolsMissingModule.push(ref);\n    }\n  });\n  return {\n    ngModules: allNgModules,\n    ngModuleByPipeOrDirective,\n    symbolsMissingModule,\n    files: analyzedFiles\n  };\n}\n\nfunction mergeAndValidateNgFiles(files: NgAnalyzedFile[]): NgAnalyzedModules {\n  return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {syntaxError} from '../util';\n\nexport interface Position {\n  fileName: string;\n  line: number;\n  column: number;\n}\n\nexport interface FormattedMessageChain {\n  message: string;\n  position?: Position;\n  next?: FormattedMessageChain;\n}\n\nexport type FormattedError = Error & {\n  chain: FormattedMessageChain;\n  position?: Position;\n};\n\nconst FORMATTED_MESSAGE = 'ngFormattedMessage';\n\nfunction indentStr(level: number): string {\n  if (level <= 0) return '';\n  if (level < 6) return ['', ' ', '  ', '   ', '    ', '     '][level];\n  const half = indentStr(Math.floor(level / 2));\n  return half + half + (level % 2 === 1 ? ' ' : '');\n}\n\nfunction formatChain(chain: FormattedMessageChain | undefined, indent: number = 0): string {\n  if (!chain) return '';\n  const position = chain.position ?\n      `${chain.position.fileName}(${chain.position.line+1},${chain.position.column+1})` :\n      '';\n  const prefix = position && indent === 0 ? `${position}: ` : '';\n  const postfix = position && indent !== 0 ? ` at ${position}` : '';\n  const message = `${prefix}${chain.message}${postfix}`;\n\n  return `${indentStr(indent)}${message}${(chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || ''}`;\n}\n\nexport function formattedError(chain: FormattedMessageChain): FormattedError {\n  const message = formatChain(chain) + '.';\n  const error = syntaxError(message) as FormattedError;\n  (error as any)[FORMATTED_MESSAGE] = true;\n  error.chain = chain;\n  error.position = chain.position;\n  return error;\n}\n\nexport function isFormattedError(error: Error): error is FormattedError {\n  return !!(error as any)[FORMATTED_MESSAGE];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileSummaryKind} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {MetadataFactory, createAttribute, createComponent, createContentChild, createContentChildren, createDirective, createHost, createHostBinding, createHostListener, createInject, createInjectable, createInput, createNgModule, createOptional, createOutput, createPipe, createSelf, createSkipSelf, createViewChild, createViewChildren} from '../core';\nimport * as o from '../output/output_ast';\nimport {SummaryResolver} from '../summary_resolver';\nimport {syntaxError} from '../util';\n\nimport {FormattedMessageChain, formattedError} from './formatted_error';\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst ANGULAR_CORE = '@angular/core';\nconst ANGULAR_ROUTER = '@angular/router';\n\nconst HIDDEN_KEY = /^\\$.*\\$$/;\n\nconst IGNORE = {\n  __symbolic: 'ignore'\n};\n\nconst USE_VALUE = 'useValue';\nconst PROVIDE = 'provide';\nconst REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data', 'id', 'loadChildren']);\nconst TYPEGUARD_POSTFIX = 'TypeGuard';\nconst USE_IF = 'UseIf';\n\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements CompileReflector {\n  private annotationCache = new Map<StaticSymbol, any[]>();\n  private shallowAnnotationCache = new Map<StaticSymbol, any[]>();\n  private propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\n  private parameterCache = new Map<StaticSymbol, any[]>();\n  private methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\n  private staticCache = new Map<StaticSymbol, string[]>();\n  private conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\n  private resolvedExternalReferences = new Map<string, StaticSymbol>();\n  // TODO(issue/24571): remove '!'.\n  private injectionToken !: StaticSymbol;\n  // TODO(issue/24571): remove '!'.\n  private opaqueToken !: StaticSymbol;\n  // TODO(issue/24571): remove '!'.\n  ROUTES !: StaticSymbol;\n  // TODO(issue/24571): remove '!'.\n  private ANALYZE_FOR_ENTRY_COMPONENTS !: StaticSymbol;\n  private annotationForParentClassWithSummaryKind =\n      new Map<CompileSummaryKind, MetadataFactory<any>[]>();\n\n  constructor(\n      private summaryResolver: SummaryResolver<StaticSymbol>,\n      private symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\n      private errorRecorder?: (error: any, fileName?: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Directive, [createDirective, createComponent]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Injectable,\n        [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n  }\n\n  componentModuleUrl(typeOrFunc: StaticSymbol): string {\n    const staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return this.symbolResolver.getResourcePath(staticSymbol);\n  }\n\n  resolveExternalReference(ref: o.ExternalReference, containingFile?: string): StaticSymbol {\n    let key: string|undefined = undefined;\n    if (!containingFile) {\n      key = `${ref.moduleName}:${ref.name}`;\n      const declarationSymbol = this.resolvedExternalReferences.get(key);\n      if (declarationSymbol) return declarationSymbol;\n    }\n    const refSymbol =\n        this.symbolResolver.getSymbolByModule(ref.moduleName !, ref.name !, containingFile);\n    const declarationSymbol = this.findSymbolDeclaration(refSymbol);\n    if (!containingFile) {\n      this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName !);\n      this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n    }\n    if (key) {\n      this.resolvedExternalReferences.set(key, declarationSymbol);\n    }\n    return declarationSymbol;\n  }\n\n  findDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n\n  tryFindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.symbolResolver.ignoreErrorsFor(\n        () => this.findDeclaration(moduleUrl, name, containingFile));\n  }\n\n  findSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol) {\n      let resolvedMetadata = resolvedSymbol.metadata;\n      if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n        resolvedMetadata = resolvedMetadata.symbol;\n      }\n      if (resolvedMetadata instanceof StaticSymbol) {\n        return this.findSymbolDeclaration(resolvedSymbol.metadata);\n      }\n    }\n    return symbol;\n  }\n\n  public tryAnnotations(type: StaticSymbol): any[] {\n    const originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName?: string) => {};\n    try {\n      return this.annotations(type);\n    } finally {\n      this.errorRecorder = originalRecorder;\n    }\n  }\n\n  public annotations(type: StaticSymbol): any[] {\n    return this._annotations(\n        type, (type: StaticSymbol, decorators: any) => this.simplify(type, decorators),\n        this.annotationCache);\n  }\n\n  public shallowAnnotations(type: StaticSymbol): any[] {\n    return this._annotations(\n        type, (type: StaticSymbol, decorators: any) => this.simplify(type, decorators, true),\n        this.shallowAnnotationCache);\n  }\n\n  private _annotations(\n      type: StaticSymbol, simplify: (type: StaticSymbol, decorators: any) => any,\n      annotationCache: Map<StaticSymbol, any[]>): any[] {\n    let annotations = annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const classMetadata = this.getTypeMetadata(type);\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentAnnotations = this.annotations(parentType);\n        annotations.push(...parentAnnotations);\n      }\n      let ownAnnotations: any[] = [];\n      if (classMetadata['decorators']) {\n        ownAnnotations = simplify(type, classMetadata['decorators']);\n        if (ownAnnotations) {\n          annotations.push(...ownAnnotations);\n        }\n      }\n      if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n          this.summaryResolver.isLibraryFile(parentType.filePath)) {\n        const summary = this.summaryResolver.resolveSummary(parentType);\n        if (summary && summary.type) {\n          const requiredAnnotationTypes =\n              this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind !) !;\n          const typeHasRequiredAnnotation = requiredAnnotationTypes.some(\n              (requiredType) => ownAnnotations.some(ann => requiredType.isTypeOf(ann)));\n          if (!typeHasRequiredAnnotation) {\n            this.reportError(\n                formatMetadataError(\n                    metadataError(\n                        `Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[summary.type.summaryKind!]} in another compilation unit without duplicating the decorator`,\n                        /* summary */ undefined,\n                        `Please add a ${requiredAnnotationTypes.map((type) => type.ngMetadataName).join(' or ')} decorator to the class`),\n                    type),\n                type);\n          }\n        }\n      }\n      annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n\n  public propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentPropMetadata = this.propMetadata(parentType);\n        Object.keys(parentPropMetadata).forEach((parentProp) => {\n          propMetadata ![parentProp] = parentPropMetadata[parentProp];\n        });\n      }\n\n      const members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const propData = members[propName];\n        const prop = (<any[]>propData)\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const decorators: any[] = [];\n        if (propMetadata ![propName]) {\n          decorators.push(...propMetadata ![propName]);\n        }\n        propMetadata ![propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n\n  public parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const classMetadata = this.getTypeMetadata(type);\n        const parentType = this.findParentType(type, classMetadata);\n        const members = classMetadata ? classMetadata['members'] : null;\n        const ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const ctor = (<any[]>ctorData).find(a => a['__symbolic'] == 'constructor');\n          const rawParameterTypes = <any[]>ctor['parameters'] || [];\n          const parameterDecorators = <any[]>this.simplify(type, ctor['parameterDecorators'] || []);\n          parameters = [];\n          rawParameterTypes.forEach((rawParamType, index) => {\n            const nestedResult: any[] = [];\n            const paramType = this.trySimplify(type, rawParamType);\n            if (paramType) nestedResult.push(paramType);\n            const decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            }\n            parameters !.push(nestedResult);\n          });\n        } else if (parentType) {\n          parameters = this.parameters(parentType);\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch (e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n\n  private _methodNames(type: any): {[key: string]: boolean} {\n    let methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentMethodNames = this._methodNames(parentType);\n        Object.keys(parentMethodNames).forEach((parentProp) => {\n          methodNames ![parentProp] = parentMethodNames[parentProp];\n        });\n      }\n\n      const members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const propData = members[propName];\n        const isMethod = (<any[]>propData).some(a => a['__symbolic'] == 'method');\n        methodNames ![propName] = methodNames ![propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n\n  private _staticMembers(type: StaticSymbol): string[] {\n    let staticMembers = this.staticCache.get(type);\n    if (!staticMembers) {\n      const classMetadata = this.getTypeMetadata(type);\n      const staticMemberData = classMetadata['statics'] || {};\n      staticMembers = Object.keys(staticMemberData);\n      this.staticCache.set(type, staticMembers);\n    }\n    return staticMembers;\n  }\n\n\n  private findParentType(type: StaticSymbol, classMetadata: any): StaticSymbol|undefined {\n    const parentType = this.trySimplify(type, classMetadata['extends']);\n    if (parentType instanceof StaticSymbol) {\n      return parentType;\n    }\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch (e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n\n  guards(type: any): {[key: string]: StaticSymbol} {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`guards received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n      return {};\n    }\n    const staticMembers = this._staticMembers(type);\n    const result: {[key: string]: StaticSymbol} = {};\n    for (let name of staticMembers) {\n      if (name.endsWith(TYPEGUARD_POSTFIX)) {\n        let property = name.substr(0, name.length - TYPEGUARD_POSTFIX.length);\n        let value: any;\n        if (property.endsWith(USE_IF)) {\n          property = name.substr(0, property.length - USE_IF.length);\n          value = USE_IF;\n        } else {\n          value = this.getStaticSymbol(type.filePath, type.name, [name]);\n        }\n        result[property] = value;\n      }\n    }\n    return result;\n  }\n\n  private _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n\n  private _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n\n  private initializeConversionMap(): void {\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n    this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n    this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n    this.ANALYZE_FOR_ENTRY_COMPONENTS =\n        this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n  }\n\n  /**\n   * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n   * All types passed to the StaticResolver should be pseudo-types returned by this method.\n   *\n   * @param declarationFile the absolute path of the file where the symbol is declared\n   * @param name the name of the type.\n   */\n  getStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n\n  /**\n   * Simplify but discard any errors\n   */\n  private trySimplify(context: StaticSymbol, value: any): any {\n    const originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName?: string) => {};\n    const result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n\n  /** @internal */\n  public simplify(context: StaticSymbol, value: any, lazy: boolean = false): any {\n    const self = this;\n    let scope = BindingScope.empty;\n    const calling = new Map<StaticSymbol, boolean>();\n    const rootContext = context;\n\n    function simplifyInContext(\n        context: StaticSymbol, value: any, depth: number, references: number): any {\n      function resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n\n      function simplifyEagerly(value: any): any {\n        return simplifyInContext(context, value, depth, 0);\n      }\n\n      function simplifyLazily(value: any): any {\n        return simplifyInContext(context, value, depth, references + 1);\n      }\n\n      function simplifyNested(nestedContext: StaticSymbol, value: any): any {\n        if (nestedContext === context) {\n          // If the context hasn't changed let the exception propagate unmodified.\n          return simplifyInContext(nestedContext, value, depth + 1, references);\n        }\n        try {\n          return simplifyInContext(nestedContext, value, depth + 1, references);\n        } catch (e) {\n          if (isMetadataError(e)) {\n            // Propagate the message text up but add a message to the chain that explains how we got\n            // here.\n            // e.chain implies e.symbol\n            const summaryMsg = e.chain ? 'references \\'' + e.symbol !.name + '\\'' : errorSummary(e);\n            const summary = `'${nestedContext.name}' ${summaryMsg}`;\n            const chain = {message: summary, position: e.position, next: e.chain};\n            // TODO(chuckj): retrieve the position information indirectly from the collectors node\n            // map if the metadata is from a .ts file.\n            self.error(\n                {\n                  message: e.message,\n                  advise: e.advise,\n                  context: e.context, chain,\n                  symbol: nestedContext\n                },\n                context);\n          } else {\n            // It is probably an internal error.\n            throw e;\n          }\n        }\n      }\n\n      function simplifyCall(\n          functionSymbol: StaticSymbol, targetFunction: any, args: any[], targetExpression: any) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            self.error(\n                {\n                  message: 'Recursion is not supported',\n                  summary: `called '${functionSymbol.name}' recursively`,\n                  value: targetFunction\n                },\n                functionSymbol);\n          }\n          try {\n            const value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const parameters: string[] = targetFunction['parameters'];\n              const defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyNested(context, arg))\n                         .map(arg => shouldIgnore(arg) ? undefined : arg);\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              calling.set(functionSymbol, true);\n              const functionScope = BindingScope.build();\n              for (let i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const oldScope = scope;\n              let result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyNested(functionSymbol, value);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return IGNORE;\n        }\n        let position: Position|undefined = undefined;\n        if (targetExpression && targetExpression.__symbolic == 'resolved') {\n          const line = targetExpression.line;\n          const character = targetExpression.character;\n          const fileName = targetExpression.fileName;\n          if (fileName != null && line != null && character != null) {\n            position = {fileName, line, column: character};\n          }\n        }\n        self.error(\n            {\n              message: FUNCTION_CALL_NOT_SUPPORTED,\n              context: functionSymbol,\n              value: targetFunction, position\n            },\n            context);\n      }\n\n      function simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const result: any[] = [];\n          for (const item of (<any>expression)) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              // We call with references as 0 because we require the actual value and cannot\n              // tolerate a reference here.\n              const spreadArray = simplifyEagerly(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols or if we are in a reference context and\n          // the symbol doesn't have members.\n          if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n              (references > 0 && !expression.members.length)) {\n            return expression;\n          } else {\n            const staticSymbol = expression;\n            const declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue != null) {\n              return simplifyNested(staticSymbol, declarationValue);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let indexTarget = simplifyEagerly(expression['expression']);\n                let index = simplifyEagerly(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const member = expression['member'];\n                let selectContext = context;\n                let selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue != null) {\n                    return simplifyNested(selectContext, declarationValue);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyNested(selectContext, selectTarget[member]);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references, as symbol references have\n                // been converted into 'resolved'\n                // in the StaticSymbolResolver.\n                const name: string = expression['name'];\n                const localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'resolved':\n                try {\n                  return simplify(expression.symbol);\n                } catch (e) {\n                  // If an error is reported evaluating the symbol record the position of the\n                  // reference in the error so it can\n                  // be reported in the error message generated from the exception.\n                  if (isMetadataError(e) && expression.fileName != null &&\n                      expression.line != null && expression.character != null) {\n                    e.position = {\n                      fileName: expression.fileName,\n                      line: expression.line,\n                      column: expression.character\n                    };\n                  }\n                  throw e;\n                }\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(\n                    context, expression['expression'], depth + 1, /* references */ 0);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n\n                    // OpaqueToken is supported too as it is required by the language service to\n                    // support v4 and prior versions of Angular.\n                    return context;\n                  }\n                  const argExpressions: any[] = expression['arguments'] || [];\n                  let converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const args = argExpressions.map(arg => simplifyNested(context, arg))\n                                     .map(arg => shouldIgnore(arg) ? undefined : arg);\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(\n                        staticSymbol, targetFunction, argExpressions, expression['expression']);\n                  }\n                }\n                return IGNORE;\n              case 'error':\n                let message = expression.message;\n                if (expression['line'] != null) {\n                  self.error(\n                      {\n                        message,\n                        context: expression.context,\n                        value: expression,\n                        position: {\n                          fileName: expression['fileName'],\n                          line: expression['line'],\n                          column: expression['character']\n                        }\n                      },\n                      context);\n                } else {\n                  self.error({message, context: expression.context}, context);\n                }\n                return IGNORE;\n              case 'ignore':\n                return expression;\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => {\n            if (REFERENCE_SET.has(name)) {\n              if (name === USE_VALUE && PROVIDE in expression) {\n                // If this is a provider expression, check for special tokens that need the value\n                // during analysis.\n                const provide = simplify(expression.provide);\n                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                  return simplify(value);\n                }\n              }\n              return simplifyLazily(value);\n            }\n            return simplify(value);\n          });\n        }\n        return IGNORE;\n      }\n\n      return simplify(value);\n    }\n\n    let result: any;\n    try {\n      result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n    } catch (e) {\n      if (this.errorRecorder) {\n        this.reportError(e, context);\n      } else {\n        throw formatMetadataError(e, context);\n      }\n    }\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n\n  private getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n\n  private reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(\n          formatMetadataError(error, context), (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n\n  private error(\n      {message, summary, advise, position, context, value, symbol, chain}: {\n        message: string,\n        summary?: string,\n        advise?: string,\n        position?: Position,\n        context?: any,\n        value?: any,\n        symbol?: StaticSymbol,\n        chain?: MetadataMessageChain\n      },\n      reportingContext: StaticSymbol) {\n    this.reportError(\n        metadataError(message, summary, advise, position, symbol, context, chain),\n        reportingContext);\n  }\n}\n\ninterface Position {\n  fileName: string;\n  line: number;\n  column: number;\n}\n\ninterface MetadataMessageChain {\n  message: string;\n  summary?: string;\n  position?: Position;\n  context?: any;\n  symbol?: StaticSymbol;\n  next?: MetadataMessageChain;\n}\n\ntype MetadataError = Error & {\n  position?: Position;\n  advise?: string;\n  summary?: string;\n  context?: any;\n  symbol?: StaticSymbol;\n  chain?: MetadataMessageChain;\n};\n\nconst METADATA_ERROR = 'ngMetadataError';\n\nfunction metadataError(\n    message: string, summary?: string, advise?: string, position?: Position, symbol?: StaticSymbol,\n    context?: any, chain?: MetadataMessageChain): MetadataError {\n  const error = syntaxError(message) as MetadataError;\n  (error as any)[METADATA_ERROR] = true;\n  if (advise) error.advise = advise;\n  if (position) error.position = position;\n  if (summary) error.summary = summary;\n  if (context) error.context = context;\n  if (chain) error.chain = chain;\n  if (symbol) error.symbol = symbol;\n  return error;\n}\n\nfunction isMetadataError(error: Error): error is MetadataError {\n  return !!(error as any)[METADATA_ERROR];\n}\n\nconst REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nconst VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nconst DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nconst COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nconst FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nconst REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nconst LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n\nfunction expandedMessage(message: string, context: any): string {\n  switch (message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (context && context.className) {\n        return `References to a non-exported class are not supported in decorators but ${context.className} was referenced.`;\n      }\n      break;\n    case VARIABLE_NOT_INITIALIZED:\n      return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n    case COULD_NOT_RESOLVE_TYPE:\n      if (context && context.typeName) {\n        return `Could not resolve type ${context.typeName}`;\n      }\n      break;\n    case FUNCTION_CALL_NOT_SUPPORTED:\n      if (context && context.name) {\n        return `Function calls are not supported in decorators but '${context.name}' was called`;\n      }\n      return 'Function calls are not supported in decorators';\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (context && context.name) {\n        return `Reference to a local (non-exported) symbols are not supported in decorators but '${context.name}' was referenced`;\n      }\n      break;\n    case LAMBDA_NOT_SUPPORTED:\n      return `Function expressions are not supported in decorators`;\n  }\n  return message;\n}\n\nfunction messageAdvise(message: string, context: any): string|undefined {\n  switch (message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (context && context.className) {\n        return `Consider exporting '${context.className}'`;\n      }\n      break;\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'Consider simplifying to avoid destructuring';\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (context && context.name) {\n        return `Consider exporting '${context.name}'`;\n      }\n      break;\n    case LAMBDA_NOT_SUPPORTED:\n      return `Consider changing the function expression into an exported function`;\n  }\n  return undefined;\n}\n\nfunction errorSummary(error: MetadataError): string {\n  if (error.summary) {\n    return error.summary;\n  }\n  switch (error.message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (error.context && error.context.className) {\n        return `references non-exported class ${error.context.className}`;\n      }\n      break;\n    case VARIABLE_NOT_INITIALIZED:\n      return 'is not initialized';\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'is a destructured variable';\n    case COULD_NOT_RESOLVE_TYPE:\n      return 'could not be resolved';\n    case FUNCTION_CALL_NOT_SUPPORTED:\n      if (error.context && error.context.name) {\n        return `calls '${error.context.name}'`;\n      }\n      return `calls a function`;\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (error.context && error.context.name) {\n        return `references local variable ${error.context.name}`;\n      }\n      return `references a local variable`;\n  }\n  return 'contains the error';\n}\n\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n\nabstract class BindingScope {\n  abstract resolve(name: string): any;\n  public static missing = {};\n  public static empty: BindingScope = {resolve: name => BindingScope.missing};\n\n  public static build(): BindingScopeBuilder {\n    const current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nclass PopulatedScope extends BindingScope {\n  constructor(private bindings: Map<string, any>) { super(); }\n\n  resolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction formatMetadataMessageChain(\n    chain: MetadataMessageChain, advise: string | undefined): FormattedMessageChain {\n  const expanded = expandedMessage(chain.message, chain.context);\n  const nesting = chain.symbol ? ` in '${chain.symbol.name}'` : '';\n  const message = `${expanded}${nesting}`;\n  const position = chain.position;\n  const next: FormattedMessageChain|undefined = chain.next ?\n      formatMetadataMessageChain(chain.next, advise) :\n      advise ? {message: advise} : undefined;\n  return {message, position, next};\n}\n\nfunction formatMetadataError(e: Error, context: StaticSymbol): Error {\n  if (isMetadataError(e)) {\n    // Produce a formatted version of the and leaving enough information in the original error\n    // to recover the formatting information to eventually produce a diagnostic error message.\n    const position = e.position;\n    const chain: MetadataMessageChain = {\n      message: `Error during template compile of '${context.name}'`,\n      position: position,\n      next: {message: e.message, next: e.chain, context: e.context, symbol: e.symbol}\n    };\n    const advise = e.advise || messageAdvise(e.message, e.context);\n    return formattedError(formatMetadataMessageChain(chain, advise));\n  }\n  return e;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Summary, SummaryResolver} from '../summary_resolver';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {deserializeSummaries} from './summary_serializer';\nimport {stripGeneratedFileSuffix, summaryFileName} from './util';\n\nexport interface AotSummaryResolverHost {\n  /**\n   * Loads an NgModule/Directive/Pipe summary file\n   */\n  loadSummary(filePath: string): string|null;\n\n  /**\n   * Returns whether a file is a source file or not.\n   */\n  isSourceFile(sourceFilePath: string): boolean;\n  /**\n   * Converts a file name into a representation that should be stored in a summary file.\n   * This has to include changing the suffix as well.\n   * E.g.\n   * `some_file.ts` -> `some_file.d.ts`\n   *\n   * @param referringSrcFileName the soure file that refers to fileName\n   */\n  toSummaryFileName(fileName: string, referringSrcFileName: string): string;\n\n  /**\n   * Converts a fileName that was processed by `toSummaryFileName` back into a real fileName\n   * given the fileName of the library that is referrig to it.\n   */\n  fromSummaryFileName(fileName: string, referringLibFileName: string): string;\n}\n\nexport class AotSummaryResolver implements SummaryResolver<StaticSymbol> {\n  // Note: this will only contain StaticSymbols without members!\n  private summaryCache = new Map<StaticSymbol, Summary<StaticSymbol>>();\n  private loadedFilePaths = new Map<string, boolean>();\n  // Note: this will only contain StaticSymbols without members!\n  private importAs = new Map<StaticSymbol, StaticSymbol>();\n  private knownFileNameToModuleNames = new Map<string, string>();\n\n  constructor(private host: AotSummaryResolverHost, private staticSymbolCache: StaticSymbolCache) {}\n\n  isLibraryFile(filePath: string): boolean {\n    // Note: We need to strip the .ngfactory. file path,\n    // so this method also works for generated files\n    // (for which host.isSourceFile will always return false).\n    return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n  }\n\n  toSummaryFileName(filePath: string, referringSrcFileName: string) {\n    return this.host.toSummaryFileName(filePath, referringSrcFileName);\n  }\n\n  fromSummaryFileName(fileName: string, referringLibFileName: string) {\n    return this.host.fromSummaryFileName(fileName, referringLibFileName);\n  }\n\n  resolveSummary(staticSymbol: StaticSymbol): Summary<StaticSymbol>|null {\n    const rootSymbol = staticSymbol.members.length ?\n        this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n        staticSymbol;\n    let summary = this.summaryCache.get(rootSymbol);\n    if (!summary) {\n      this._loadSummaryFile(staticSymbol.filePath);\n      summary = this.summaryCache.get(staticSymbol) !;\n    }\n    return (rootSymbol === staticSymbol && summary) || null;\n  }\n\n  getSymbolsOf(filePath: string): StaticSymbol[]|null {\n    if (this._loadSummaryFile(filePath)) {\n      return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n    }\n    return null;\n  }\n\n  getImportAs(staticSymbol: StaticSymbol): StaticSymbol {\n    staticSymbol.assertNoMembers();\n    return this.importAs.get(staticSymbol) !;\n  }\n\n  /**\n   * Converts a file path to a module name that can be used as an `import`.\n   */\n  getKnownModuleName(importedFilePath: string): string|null {\n    return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n  }\n\n  addSummary(summary: Summary<StaticSymbol>) { this.summaryCache.set(summary.symbol, summary); }\n\n  private _loadSummaryFile(filePath: string): boolean {\n    let hasSummary = this.loadedFilePaths.get(filePath);\n    if (hasSummary != null) {\n      return hasSummary;\n    }\n    let json: string|null = null;\n    if (this.isLibraryFile(filePath)) {\n      const summaryFilePath = summaryFileName(filePath);\n      try {\n        json = this.host.loadSummary(summaryFilePath);\n      } catch (e) {\n        console.error(`Error loading summary file ${summaryFilePath}`);\n        throw e;\n      }\n    }\n    hasSummary = json != null;\n    this.loadedFilePaths.set(filePath, hasSummary);\n    if (json) {\n      const {moduleName, summaries, importAs} =\n          deserializeSummaries(this.staticSymbolCache, this, filePath, json);\n      summaries.forEach((summary) => this.summaryCache.set(summary.symbol, summary));\n      if (moduleName) {\n        this.knownFileNameToModuleNames.set(filePath, moduleName);\n      }\n      importAs.forEach((importAs) => { this.importAs.set(importAs.symbol, importAs.importAs); });\n    }\n    return hasSummary;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerConfig} from '../config';\nimport {MissingTranslationStrategy, ViewEncapsulation} from '../core';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {Lexer} from '../expression_parser/lexer';\nimport {Parser} from '../expression_parser/parser';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {InjectableCompiler} from '../injectable_compiler';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\nimport {PipeResolver} from '../pipe_resolver';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {StyleCompiler} from '../style_compiler';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {UrlResolver} from '../url_resolver';\nimport {syntaxError} from '../util';\nimport {TypeCheckCompiler} from '../view_compiler/type_check_compiler';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompiler} from './compiler';\nimport {AotCompilerHost} from './compiler_host';\nimport {AotCompilerOptions} from './compiler_options';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\nimport {AotSummaryResolver} from './summary_resolver';\n\nexport function createAotUrlResolver(host: {\n  resourceNameToFileName(resourceName: string, containingFileName: string): string | null;\n}): UrlResolver {\n  return {\n    resolve: (basePath: string, url: string) => {\n      const filePath = host.resourceNameToFileName(url, basePath);\n      if (!filePath) {\n        throw syntaxError(`Couldn't resolve resource ${url} from ${basePath}`);\n      }\n      return filePath;\n    }\n  };\n}\n\n/**\n * Creates a new AotCompiler based on options and a host.\n */\nexport function createAotCompiler(\n    compilerHost: AotCompilerHost, options: AotCompilerOptions,\n    errorCollector?: (error: any, type?: any) =>\n        void): {compiler: AotCompiler, reflector: StaticReflector} {\n  let translations: string = options.translations || '';\n\n  const urlResolver = createAotUrlResolver(compilerHost);\n  const symbolCache = new StaticSymbolCache();\n  const summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n  const symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n  const staticReflector =\n      new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n  let htmlParser: I18NHtmlParser;\n  if (!!options.enableIvy) {\n    // Ivy handles i18n at the compiler level so we must use a regular parser\n    htmlParser = new HtmlParser() as I18NHtmlParser;\n  } else {\n    htmlParser = new I18NHtmlParser(\n        new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n  }\n  const config = new CompilerConfig({\n    defaultEncapsulation: ViewEncapsulation.Emulated,\n    useJit: false,\n    missingTranslation: options.missingTranslation,\n    preserveWhitespaces: options.preserveWhitespaces,\n    strictInjectionParameters: options.strictInjectionParameters,\n  });\n  const normalizer = new DirectiveNormalizer(\n      {get: (url: string) => compilerHost.loadResource(url)}, urlResolver, htmlParser, config);\n  const expressionParser = new Parser(new Lexer());\n  const elementSchemaRegistry = new DomElementSchemaRegistry();\n  const tmplParser = new TemplateParser(\n      config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n  const resolver = new CompileMetadataResolver(\n      config, htmlParser, new NgModuleResolver(staticReflector),\n      new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver,\n      elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n  // TODO(vicb): do not pass options.i18nFormat here\n  const viewCompiler = new ViewCompiler(staticReflector);\n  const typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n  const compiler = new AotCompiler(\n      config, options, compilerHost, staticReflector, resolver, tmplParser,\n      new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler,\n      new NgModuleCompiler(staticReflector),\n      new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(),\n      summaryResolver, symbolResolver);\n  return {compiler, reflector: staticReflector};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileTypeSummary} from './compile_metadata';\nimport {Type} from './core';\n\nexport interface Summary<T> {\n  symbol: T;\n  metadata: any;\n  type?: CompileTypeSummary;\n}\n\nexport abstract class SummaryResolver<T> {\n  abstract isLibraryFile(fileName: string): boolean;\n  abstract toSummaryFileName(fileName: string, referringSrcFileName: string): string;\n  abstract fromSummaryFileName(fileName: string, referringLibFileName: string): string;\n  abstract resolveSummary(reference: T): Summary<T>|null;\n  abstract getSymbolsOf(filePath: string): T[]|null;\n  abstract getImportAs(reference: T): T;\n  abstract getKnownModuleName(fileName: string): string|null;\n  abstract addSummary(summary: Summary<T>): void;\n}\n\nexport class JitSummaryResolver implements SummaryResolver<Type> {\n  private _summaries = new Map<Type, Summary<Type>>();\n\n  isLibraryFile(): boolean { return false; }\n  toSummaryFileName(fileName: string): string { return fileName; }\n  fromSummaryFileName(fileName: string): string { return fileName; }\n  resolveSummary(reference: Type): Summary<Type>|null {\n    return this._summaries.get(reference) || null;\n  }\n  getSymbolsOf(): Type[] { return []; }\n  getImportAs(reference: Type): Type { return reference; }\n  getKnownModuleName(fileName: string) { return null; }\n  addSummary(summary: Summary<Type>) { this._summaries.set(summary.symbol, summary); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {CompileReflector} from '../compile_reflector';\n\nimport * as o from './output_ast';\nimport {debugOutputAstAsTypeScript} from './ts_emitter';\n\nexport function interpretStatements(\n    statements: o.Statement[], reflector: CompileReflector): {[key: string]: any} {\n  const ctx = new _ExecutionContext(null, null, null, new Map<string, any>());\n  const visitor = new StatementInterpreter(reflector);\n  visitor.visitAllStatements(statements, ctx);\n  const result: {[key: string]: any} = {};\n  ctx.exports.forEach((exportName) => { result[exportName] = ctx.vars.get(exportName); });\n  return result;\n}\n\nfunction _executeFunctionStatements(\n    varNames: string[], varValues: any[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): any {\n  const childCtx = ctx.createChildWihtLocalVars();\n  for (let i = 0; i < varNames.length; i++) {\n    childCtx.vars.set(varNames[i], varValues[i]);\n  }\n  const result = visitor.visitAllStatements(statements, childCtx);\n  return result ? result.value : null;\n}\n\nclass _ExecutionContext {\n  exports: string[] = [];\n\n  constructor(\n      public parent: _ExecutionContext|null, public instance: Object|null,\n      public className: string|null, public vars: Map<string, any>) {}\n\n  createChildWihtLocalVars(): _ExecutionContext {\n    return new _ExecutionContext(this, this.instance, this.className, new Map<string, any>());\n  }\n}\n\nclass ReturnValue {\n  constructor(public value: any) {}\n}\n\nfunction createDynamicClass(\n    _classStmt: o.ClassStmt, _ctx: _ExecutionContext, _visitor: StatementInterpreter): Function {\n  const propertyDescriptors: {[key: string]: any} = {};\n\n  _classStmt.getters.forEach((getter: o.ClassGetter) => {\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[getter.name] = {\n      configurable: false,\n      get: function() {\n        const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n      }\n    };\n  });\n  _classStmt.methods.forEach(function(method: o.ClassMethod) {\n    const paramNames = method.params.map(param => param.name);\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[method.name !] = {\n      writable: false,\n      configurable: false,\n      value: function(...args: any[]) {\n        const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n      }\n    };\n  });\n\n  const ctorParamNames = _classStmt.constructorMethod.params.map(param => param.name);\n  // Note: use `function` instead of arrow function to capture `this`\n  const ctor = function(this: Object, ...args: any[]) {\n    const instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n    _classStmt.fields.forEach((field) => { (this as any)[field.name] = undefined; });\n    _executeFunctionStatements(\n        ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n  };\n  const superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n  ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n  return ctor;\n}\n\nclass StatementInterpreter implements o.StatementVisitor, o.ExpressionVisitor {\n  constructor(private reflector: CompileReflector) {}\n  debugAst(ast: o.Expression|o.Statement|o.Type): string { return debugOutputAstAsTypeScript(ast); }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: _ExecutionContext): any {\n    const initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n    ctx.vars.set(stmt.name, initialValue);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n  visitWriteVarExpr(expr: o.WriteVarExpr, ctx: _ExecutionContext): any {\n    const value = expr.value.visitExpression(this, ctx);\n    let currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(expr.name)) {\n        currCtx.vars.set(expr.name, value);\n        return value;\n      }\n      currCtx = currCtx.parent !;\n    }\n    throw new Error(`Not declared variable ${expr.name}`);\n  }\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: _ExecutionContext): never {\n    throw new Error('Cannot interpret a WrappedNodeExpr.');\n  }\n  visitTypeofExpr(ast: o.TypeofExpr, ctx: _ExecutionContext): never {\n    throw new Error('Cannot interpret a TypeofExpr');\n  }\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: _ExecutionContext): any {\n    let varName = ast.name !;\n    if (ast.builtin != null) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n          return Object.getPrototypeOf(ctx.instance);\n        case o.BuiltinVar.This:\n          return ctx.instance;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR;\n          break;\n        default:\n          throw new Error(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    let currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(varName)) {\n        return currCtx.vars.get(varName);\n      }\n      currCtx = currCtx.parent !;\n    }\n    throw new Error(`Not declared variable ${varName}`);\n  }\n  visitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: _ExecutionContext): any {\n    const receiver = expr.receiver.visitExpression(this, ctx);\n    const index = expr.index.visitExpression(this, ctx);\n    const value = expr.value.visitExpression(this, ctx);\n    receiver[index] = value;\n    return value;\n  }\n  visitWritePropExpr(expr: o.WritePropExpr, ctx: _ExecutionContext): any {\n    const receiver = expr.receiver.visitExpression(this, ctx);\n    const value = expr.value.visitExpression(this, ctx);\n    receiver[expr.name] = value;\n    return value;\n  }\n\n  visitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: _ExecutionContext): any {\n    const receiver = expr.receiver.visitExpression(this, ctx);\n    const args = this.visitAllExpressions(expr.args, ctx);\n    let result: any;\n    if (expr.builtin != null) {\n      switch (expr.builtin) {\n        case o.BuiltinMethod.ConcatArray:\n          result = receiver.concat(...args);\n          break;\n        case o.BuiltinMethod.SubscribeObservable:\n          result = receiver.subscribe({next: args[0]});\n          break;\n        case o.BuiltinMethod.Bind:\n          result = receiver.bind(...args);\n          break;\n        default:\n          throw new Error(`Unknown builtin method ${expr.builtin}`);\n      }\n    } else {\n      result = receiver[expr.name !].apply(receiver, args);\n    }\n    return result;\n  }\n  visitInvokeFunctionExpr(stmt: o.InvokeFunctionExpr, ctx: _ExecutionContext): any {\n    const args = this.visitAllExpressions(stmt.args, ctx);\n    const fnExpr = stmt.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.instance !.constructor.prototype.constructor.apply(ctx.instance, args);\n      return null;\n    } else {\n      const fn = stmt.fn.visitExpression(this, ctx);\n      return fn.apply(null, args);\n    }\n  }\n  visitReturnStmt(stmt: o.ReturnStatement, ctx: _ExecutionContext): any {\n    return new ReturnValue(stmt.value.visitExpression(this, ctx));\n  }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: _ExecutionContext): any {\n    const clazz = createDynamicClass(stmt, ctx, this);\n    ctx.vars.set(stmt.name, clazz);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n  visitExpressionStmt(stmt: o.ExpressionStatement, ctx: _ExecutionContext): any {\n    return stmt.expr.visitExpression(this, ctx);\n  }\n  visitIfStmt(stmt: o.IfStmt, ctx: _ExecutionContext): any {\n    const condition = stmt.condition.visitExpression(this, ctx);\n    if (condition) {\n      return this.visitAllStatements(stmt.trueCase, ctx);\n    } else if (stmt.falseCase != null) {\n      return this.visitAllStatements(stmt.falseCase, ctx);\n    }\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: _ExecutionContext): any {\n    try {\n      return this.visitAllStatements(stmt.bodyStmts, ctx);\n    } catch (e) {\n      const childCtx = ctx.createChildWihtLocalVars();\n      childCtx.vars.set(CATCH_ERROR_VAR, e);\n      childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n      return this.visitAllStatements(stmt.catchStmts, childCtx);\n    }\n  }\n  visitThrowStmt(stmt: o.ThrowStmt, ctx: _ExecutionContext): any {\n    throw stmt.error.visitExpression(this, ctx);\n  }\n  visitCommentStmt(stmt: o.CommentStmt, context?: any): any { return null; }\n  visitJSDocCommentStmt(stmt: o.JSDocCommentStmt, context?: any): any { return null; }\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: _ExecutionContext): any {\n    const args = this.visitAllExpressions(ast.args, ctx);\n    const clazz = ast.classExpr.visitExpression(this, ctx);\n    return new clazz(...args);\n  }\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: _ExecutionContext): any { return ast.value; }\n  visitExternalExpr(ast: o.ExternalExpr, ctx: _ExecutionContext): any {\n    return this.reflector.resolveExternalReference(ast.value);\n  }\n  visitConditionalExpr(ast: o.ConditionalExpr, ctx: _ExecutionContext): any {\n    if (ast.condition.visitExpression(this, ctx)) {\n      return ast.trueCase.visitExpression(this, ctx);\n    } else if (ast.falseCase != null) {\n      return ast.falseCase.visitExpression(this, ctx);\n    }\n    return null;\n  }\n  visitNotExpr(ast: o.NotExpr, ctx: _ExecutionContext): any {\n    return !ast.condition.visitExpression(this, ctx);\n  }\n  visitAssertNotNullExpr(ast: o.AssertNotNull, ctx: _ExecutionContext): any {\n    return ast.condition.visitExpression(this, ctx);\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: _ExecutionContext): any {\n    return ast.value.visitExpression(this, ctx);\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: _ExecutionContext): any {\n    const paramNames = ast.params.map((param) => param.name);\n    return _declareFn(paramNames, ast.statements, ctx, this);\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: _ExecutionContext): any {\n    const paramNames = stmt.params.map((param) => param.name);\n    ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n  visitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: _ExecutionContext): any {\n    const lhs = () => ast.lhs.visitExpression(this, ctx);\n    const rhs = () => ast.rhs.visitExpression(this, ctx);\n\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        return lhs() == rhs();\n      case o.BinaryOperator.Identical:\n        return lhs() === rhs();\n      case o.BinaryOperator.NotEquals:\n        return lhs() != rhs();\n      case o.BinaryOperator.NotIdentical:\n        return lhs() !== rhs();\n      case o.BinaryOperator.And:\n        return lhs() && rhs();\n      case o.BinaryOperator.Or:\n        return lhs() || rhs();\n      case o.BinaryOperator.Plus:\n        return lhs() + rhs();\n      case o.BinaryOperator.Minus:\n        return lhs() - rhs();\n      case o.BinaryOperator.Divide:\n        return lhs() / rhs();\n      case o.BinaryOperator.Multiply:\n        return lhs() * rhs();\n      case o.BinaryOperator.Modulo:\n        return lhs() % rhs();\n      case o.BinaryOperator.Lower:\n        return lhs() < rhs();\n      case o.BinaryOperator.LowerEquals:\n        return lhs() <= rhs();\n      case o.BinaryOperator.Bigger:\n        return lhs() > rhs();\n      case o.BinaryOperator.BiggerEquals:\n        return lhs() >= rhs();\n      default:\n        throw new Error(`Unknown operator ${ast.operator}`);\n    }\n  }\n  visitReadPropExpr(ast: o.ReadPropExpr, ctx: _ExecutionContext): any {\n    let result: any;\n    const receiver = ast.receiver.visitExpression(this, ctx);\n    result = receiver[ast.name];\n    return result;\n  }\n  visitReadKeyExpr(ast: o.ReadKeyExpr, ctx: _ExecutionContext): any {\n    const receiver = ast.receiver.visitExpression(this, ctx);\n    const prop = ast.index.visitExpression(this, ctx);\n    return receiver[prop];\n  }\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: _ExecutionContext): any {\n    return this.visitAllExpressions(ast.entries, ctx);\n  }\n  visitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: _ExecutionContext): any {\n    const result: {[k: string]: any} = {};\n    ast.entries.forEach(entry => result[entry.key] = entry.value.visitExpression(this, ctx));\n    return result;\n  }\n  visitCommaExpr(ast: o.CommaExpr, context: any): any {\n    const values = this.visitAllExpressions(ast.parts, context);\n    return values[values.length - 1];\n  }\n  visitAllExpressions(expressions: o.Expression[], ctx: _ExecutionContext): any {\n    return expressions.map((expr) => expr.visitExpression(this, ctx));\n  }\n\n  visitAllStatements(statements: o.Statement[], ctx: _ExecutionContext): ReturnValue|null {\n    for (let i = 0; i < statements.length; i++) {\n      const stmt = statements[i];\n      const val = stmt.visitStatement(this, ctx);\n      if (val instanceof ReturnValue) {\n        return val;\n      }\n    }\n    return null;\n  }\n}\n\nfunction _declareFn(\n    varNames: string[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): Function {\n  return (...args: any[]) => _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n}\n\nconst CATCH_ERROR_VAR = 'error';\nconst CATCH_STACK_VAR = 'stack';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeSummary, CompileProviderMetadata, CompileStylesheetMetadata, CompileTypeSummary, ProviderMeta, ProxyClass, identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {ConstantPool} from '../constant_pool';\nimport {Type} from '../core';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {JitEvaluator} from '../output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateAst} from '../template_parser/template_ast';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {Console, OutputContext, SyncAsync, stringify} from '../util';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nexport interface ModuleWithComponentFactories {\n  ngModuleFactory: object;\n  componentFactories: object[];\n}\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler {\n  private _compiledTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledDirectiveWrapperCache = new Map<Type, Type>();\n  private _compiledNgModuleCache = new Map<Type, object>();\n  private _sharedStylesheetCount = 0;\n  private _addedAotSummaries = new Set<() => any[]>();\n\n  constructor(\n      private _metadataResolver: CompileMetadataResolver, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _ngModuleCompiler: NgModuleCompiler, private _summaryResolver: SummaryResolver<Type>,\n      private _reflector: CompileReflector, private _jitEvaluator: JitEvaluator,\n      private _compilerConfig: CompilerConfig, private _console: Console,\n      private getExtraNgModuleProviders: (ngModule: any) => CompileProviderMetadata[]) {}\n\n  compileModuleSync(moduleType: Type): object {\n    return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n  }\n\n  compileModuleAsync(moduleType: Type): Promise<object> {\n    return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n  }\n\n  compileModuleAndAllComponentsSync(moduleType: Type): ModuleWithComponentFactories {\n    return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n  }\n\n  compileModuleAndAllComponentsAsync(moduleType: Type): Promise<ModuleWithComponentFactories> {\n    return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n  }\n\n  getComponentFactory(component: Type): object {\n    const summary = this._metadataResolver.getDirectiveSummary(component);\n    return summary.componentFactory as object;\n  }\n\n  loadAotSummaries(summaries: () => any[]) {\n    this.clearCache();\n    this._addAotSummaries(summaries);\n  }\n\n  private _addAotSummaries(fn: () => any[]) {\n    if (this._addedAotSummaries.has(fn)) {\n      return;\n    }\n    this._addedAotSummaries.add(fn);\n    const summaries = fn();\n    for (let i = 0; i < summaries.length; i++) {\n      const entry = summaries[i];\n      if (typeof entry === 'function') {\n        this._addAotSummaries(entry);\n      } else {\n        const summary = entry as CompileTypeSummary;\n        this._summaryResolver.addSummary(\n            {symbol: summary.type.reference, metadata: null, type: summary});\n      }\n    }\n  }\n\n  hasAotSummary(ref: Type) { return !!this._summaryResolver.resolveSummary(ref); }\n\n  private _filterJitIdentifiers(ids: CompileIdentifierMetadata[]): any[] {\n    return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n  }\n\n  private _compileModuleAndComponents(moduleType: Type, isSync: boolean): SyncAsync<object> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    });\n  }\n\n  private _compileModuleAndAllComponents(moduleType: Type, isSync: boolean):\n      SyncAsync<ModuleWithComponentFactories> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      const componentFactories: object[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return {\n        ngModuleFactory: this._compileModule(moduleType),\n        componentFactories: componentFactories\n      };\n    });\n  }\n\n  private _loadModules(mainModule: any, isSync: boolean): SyncAsync<any> {\n    const loading: Promise<any>[] = [];\n    const mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule) !;\n    // Note: for runtime compilation, we want to transitively compile all modules,\n    // so we also need to load the declared directives / pipes for all nested modules.\n    this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n      // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(nestedNgModule) !;\n      this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n        const promise =\n            this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      this._filterJitIdentifiers(moduleMeta.declaredPipes)\n          .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n    });\n    return SyncAsync.all(loading);\n  }\n\n  private _compileModule(moduleType: Type): object {\n    let ngModuleFactory = this._compiledNgModuleCache.get(moduleType) !;\n    if (!ngModuleFactory) {\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType) !;\n      // Always provide a bound Compiler\n      const extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n      const outputCtx = createOutputContext();\n      const compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n      ngModuleFactory = this._interpretOrJit(\n          ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponents(mainModule: Type, allComponentFactories: object[]|null) {\n    const ngModule = this._metadataResolver.getNgModuleMetadata(mainModule) !;\n    const moduleByJitDirective = new Map<any, CompileNgModuleMetadata>();\n    const templates = new Set<CompiledTemplate>();\n\n    const transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n    transJitModules.forEach((localMod) => {\n      const localModuleMeta = this._metadataResolver.getNgModuleMetadata(localMod) !;\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        moduleByJitDirective.set(dirRef, localModuleMeta);\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push(dirMeta.componentFactory as object);\n          }\n        }\n      });\n    });\n    transJitModules.forEach((localMod) => {\n      const localModuleMeta = this._metadataResolver.getNgModuleMetadata(localMod) !;\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const moduleMeta = moduleByJitDirective.get(entryComponentType.componentType) !;\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        if (!this.hasAotSummary(entryComponentType.componentType)) {\n          const moduleMeta = moduleByJitDirective.get(entryComponentType.componentType) !;\n          templates.add(\n              this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n        }\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n\n  clearCacheFor(type: Type) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    // Note: don't clear the _addedAotSummaries, as they don't change!\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(compType: Type, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const hostMeta = this._metadataResolver.getHostComponentMetadata(\n          compMeta, (compMeta.componentFactory as any).viewDefFactory);\n      compiledTemplate =\n          new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const compMeta = template.compMeta;\n    const externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const outputContext = createOutputContext();\n    const componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n    compMeta.template !.externalStylesheets.forEach((stylesheetMeta) => {\n      const compiledStylesheet =\n          this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n      externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl !, compiledStylesheet);\n    });\n    this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n    const pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const {template: parsedTemplate, pipes: usedPipes} =\n        this._parseTemplate(compMeta, template.ngModule, template.directives);\n    const compileResult = this._viewCompiler.compileComponent(\n        outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar),\n        usedPipes);\n    const evalResult = this._interpretOrJit(\n        templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n    const viewClass = evalResult[compileResult.viewClassVar];\n    const rendererType = evalResult[compileResult.rendererTypeVar];\n    template.compiled(viewClass, rendererType);\n  }\n\n  private _parseTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata,\n      directiveIdentifiers: CompileIdentifierMetadata[]):\n      {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    // Note: ! is ok here as components always have a template.\n    const preserveWhitespaces = compMeta.template !.preserveWhitespaces;\n    const directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    return this._templateParser.parse(\n        compMeta, compMeta.template !.htmlAst !, directives, pipes, ngModule.schemas,\n        templateSourceUrl(ngModule.type, compMeta, compMeta.template !), preserveWhitespaces);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl) !;\n      const nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.setValue(nestedStylesArr);\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    return this._interpretOrJit(\n        sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++),\n        result.outputCtx.statements)[result.stylesVar];\n  }\n\n  private _interpretOrJit(sourceUrl: string, statements: ir.Statement[]): any {\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(statements, this._reflector);\n    } else {\n      return this._jitEvaluator.evaluateStatements(\n          sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n    }\n  }\n}\n\nclass CompiledTemplate {\n  private _viewClass: Function = null !;\n  isCompiled = false;\n\n  constructor(\n      public isHost: boolean, public compType: CompileIdentifierMetadata,\n      public compMeta: CompileDirectiveMetadata, public ngModule: CompileNgModuleMetadata,\n      public directives: CompileIdentifierMetadata[]) {}\n\n  compiled(viewClass: Function, rendererType: any) {\n    this._viewClass = viewClass;\n    (<ProxyClass>this.compMeta.componentViewType).setDelegate(viewClass);\n    for (let prop in rendererType) {\n      (<any>this.compMeta.rendererType)[prop] = rendererType[prop];\n    }\n    this.isCompiled = true;\n  }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n\nfunction createOutputContext(): OutputContext {\n  const importExpr = (symbol: any) =>\n      ir.importExpr({name: identifierName(symbol), moduleName: null, runtime: symbol});\n  return {statements: [], genFilePath: '', importExpr, constantPool: new ConstantPool()};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from './core';\nimport * as o from './output/output_ast';\n\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n */\nexport abstract class CompileReflector {\n  abstract parameters(typeOrFunc: /*Type*/ any): any[][];\n  abstract annotations(typeOrFunc: /*Type*/ any): any[];\n  abstract shallowAnnotations(typeOrFunc: /*Type*/ any): any[];\n  abstract tryAnnotations(typeOrFunc: /*Type*/ any): any[];\n  abstract propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]};\n  abstract hasLifecycleHook(type: any, lcProperty: string): boolean;\n  abstract guards(typeOrFunc: /* Type */ any): {[key: string]: any};\n  abstract componentModuleUrl(type: /*Type*/ any, cmpMetadata: Component): string;\n  abstract resolveExternalReference(ref: o.ExternalReference): any;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Create a {@link UrlResolver} with no package prefix.\n */\nexport function createUrlResolverWithoutPackagePrefix(): UrlResolver {\n  return new UrlResolver();\n}\n\nexport function createOfflineCompileUrlResolver(): UrlResolver {\n  return new UrlResolver('.');\n}\n\n/**\n * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n *\n * ## Example\n *\n * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * @security  When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport interface UrlResolver { resolve(baseUrl: string, url: string): string; }\n\nexport interface UrlResolverCtor { new (packagePrefix?: string|null): UrlResolver; }\n\nexport const UrlResolver: UrlResolverCtor = class UrlResolverImpl {\n  constructor(private _packagePrefix: string|null = null) {}\n\n  /**\n   * Resolves the `url` given the `baseUrl`:\n   * - when the `url` is null, the `baseUrl` is returned,\n   * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n   * `baseUrl` and `url`,\n   * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n   * returned as is (ignoring the `baseUrl`)\n   */\n  resolve(baseUrl: string, url: string): string {\n    let resolvedUrl = url;\n    if (baseUrl != null && baseUrl.length > 0) {\n      resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n    }\n    const resolvedParts = _split(resolvedUrl);\n    let prefix = this._packagePrefix;\n    if (prefix != null && resolvedParts != null &&\n        resolvedParts[_ComponentIndex.Scheme] == 'package') {\n      let path = resolvedParts[_ComponentIndex.Path];\n      prefix = prefix.replace(/\\/+$/, '');\n      path = path.replace(/^\\/+/, '');\n      return `${prefix}/${path}`;\n    }\n    return resolvedUrl;\n  }\n};\n\n/**\n * Extract the scheme of a URL.\n */\nexport function getUrlScheme(url: string): string {\n  const match = _split(url);\n  return (match && match[_ComponentIndex.Scheme]) || '';\n}\n\n// The code below is adapted from Traceur:\n// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param opt_scheme The scheme such as 'http'.\n * @param opt_userInfo The user name before the '@'.\n * @param opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param opt_port The port number.\n * @param opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param opt_queryData The URI-encoded query data.\n * @param opt_fragment The URI-encoded fragment identifier.\n * @return The fully combined URI.\n */\nfunction _buildFromEncodedParts(\n    opt_scheme?: string, opt_userInfo?: string, opt_domain?: string, opt_port?: string,\n    opt_path?: string, opt_queryData?: string, opt_fragment?: string): string {\n  const out: string[] = [];\n\n  if (opt_scheme != null) {\n    out.push(opt_scheme + ':');\n  }\n\n  if (opt_domain != null) {\n    out.push('//');\n\n    if (opt_userInfo != null) {\n      out.push(opt_userInfo + '@');\n    }\n\n    out.push(opt_domain);\n\n    if (opt_port != null) {\n      out.push(':' + opt_port);\n    }\n  }\n\n  if (opt_path != null) {\n    out.push(opt_path);\n  }\n\n  if (opt_queryData != null) {\n    out.push('?' + opt_queryData);\n  }\n\n  if (opt_fragment != null) {\n    out.push('#' + opt_fragment);\n  }\n\n  return out.join('');\n}\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @internal\n */\nconst _splitRe = new RegExp(\n    '^' +\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +                  // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +  // domain - restrict to letters,\n                                         // digits, dashes, dots, percent\n                                         // escapes, and unicode characters.\n    '(?::([0-9]+))?' +                   // port\n    ')?' +\n    '([^?#]+)?' +        // path\n    '(?:\\\\?([^#]*))?' +  // query\n    '(?:#(.*))?' +       // fragment\n    '$');\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\nenum _ComponentIndex {\n  Scheme = 1,\n  UserInfo,\n  Domain,\n  Port,\n  Path,\n  QueryData,\n  Fragment\n}\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param uri The URI string to examine.\n * @return Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri: string): Array<string|any> {\n  return uri.match(_splitRe) !;\n}\n\n/**\n  * Removes dot segments in given path component, as described in\n  * RFC 3986, section 5.2.4.\n  *\n  * @param path A non-empty path component.\n  * @return Path component with removed dot segments.\n  */\nfunction _removeDotSegments(path: string): string {\n  if (path == '/') return '/';\n\n  const leadingSlash = path[0] == '/' ? '/' : '';\n  const trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n  const segments = path.split('/');\n\n  const out: string[] = [];\n  let up = 0;\n  for (let pos = 0; pos < segments.length; pos++) {\n    const segment = segments[pos];\n    switch (segment) {\n      case '':\n      case '.':\n        break;\n      case '..':\n        if (out.length > 0) {\n          out.pop();\n        } else {\n          up++;\n        }\n        break;\n      default:\n        out.push(segment);\n    }\n  }\n\n  if (leadingSlash == '') {\n    while (up-- > 0) {\n      out.unshift('..');\n    }\n\n    if (out.length === 0) out.push('.');\n  }\n\n  return leadingSlash + out.join('/') + trailingSlash;\n}\n\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n */\nfunction _joinAndCanonicalizePath(parts: any[]): string {\n  let path = parts[_ComponentIndex.Path];\n  path = path == null ? '' : _removeDotSegments(path);\n  parts[_ComponentIndex.Path] = path;\n\n  return _buildFromEncodedParts(\n      parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain],\n      parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData],\n      parts[_ComponentIndex.Fragment]);\n}\n\n/**\n * Resolves a URL.\n * @param base The URL acting as the base URL.\n * @param to The URL to resolve.\n */\nfunction _resolveUrl(base: string, url: string): string {\n  const parts = _split(encodeURI(url));\n  const baseParts = _split(base);\n\n  if (parts[_ComponentIndex.Scheme] != null) {\n    return _joinAndCanonicalizePath(parts);\n  } else {\n    parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n  }\n\n  for (let i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n    if (parts[i] == null) {\n      parts[i] = baseParts[i];\n    }\n  }\n\n  if (parts[_ComponentIndex.Path][0] == '/') {\n    return _joinAndCanonicalizePath(parts);\n  }\n\n  let path = baseParts[_ComponentIndex.Path];\n  if (path == null) path = '/';\n  const index = path.lastIndexOf('/');\n  path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n  parts[_ComponentIndex.Path] = path;\n  return _joinAndCanonicalizePath(parts);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Extract i18n messages from source code\n */\nimport {analyzeAndValidateNgModules} from '../aot/compiler';\nimport {createAotUrlResolver} from '../aot/compiler_factory';\nimport {StaticReflector} from '../aot/static_reflector';\nimport {StaticSymbolCache} from '../aot/static_symbol';\nimport {StaticSymbolResolver, StaticSymbolResolverHost} from '../aot/static_symbol_resolver';\nimport {AotSummaryResolver, AotSummaryResolverHost} from '../aot/summary_resolver';\nimport {CompileDirectiveMetadata} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {ViewEncapsulation} from '../core';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {ParseError} from '../parse_util';\nimport {PipeResolver} from '../pipe_resolver';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {syntaxError} from '../util';\n\nimport {MessageBundle} from './message_bundle';\n\n\n\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface ExtractorHost extends StaticSymbolResolverHost, AotSummaryResolverHost {\n  /**\n   * Converts a path that refers to a resource into an absolute filePath\n   * that can be lateron used for loading the resource via `loadResource.\n   */\n  resourceNameToFileName(path: string, containingFile: string): string|null;\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>|string;\n}\n\nexport class Extractor {\n  constructor(\n      public host: ExtractorHost, private staticSymbolResolver: StaticSymbolResolver,\n      private messageBundle: MessageBundle, private metadataResolver: CompileMetadataResolver) {}\n\n  extract(rootFiles: string[]): Promise<MessageBundle> {\n    const {files, ngModules} = analyzeAndValidateNgModules(\n        rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver);\n    return Promise\n        .all(ngModules.map(\n            ngModule => this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => {\n          const errors: ParseError[] = [];\n\n          files.forEach(file => {\n            const compMetas: CompileDirectiveMetadata[] = [];\n            file.directives.forEach(directiveType => {\n              const dirMeta = this.metadataResolver.getDirectiveMetadata(directiveType);\n              if (dirMeta && dirMeta.isComponent) {\n                compMetas.push(dirMeta);\n              }\n            });\n            compMetas.forEach(compMeta => {\n              const html = compMeta.template !.template !;\n              // Template URL points to either an HTML or TS file depending on\n              // whether the file is used with `templateUrl:` or `template:`,\n              // respectively.\n              const templateUrl = compMeta.template !.templateUrl !;\n              const interpolationConfig =\n                  InterpolationConfig.fromArray(compMeta.template !.interpolation);\n              errors.push(...this.messageBundle.updateFromTemplate(\n                  html, templateUrl, interpolationConfig) !);\n            });\n          });\n\n          if (errors.length) {\n            throw new Error(errors.map(e => e.toString()).join('\\n'));\n          }\n\n          return this.messageBundle;\n        });\n  }\n\n  static create(host: ExtractorHost, locale: string|null):\n      {extractor: Extractor, staticReflector: StaticReflector} {\n    const htmlParser = new HtmlParser();\n\n    const urlResolver = createAotUrlResolver(host);\n    const symbolCache = new StaticSymbolCache();\n    const summaryResolver = new AotSummaryResolver(host, symbolCache);\n    const staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n    const staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n\n    const config =\n        new CompilerConfig({defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false});\n\n    const normalizer = new DirectiveNormalizer(\n        {get: (url: string) => host.loadResource(url)}, urlResolver, htmlParser, config);\n    const elementSchemaRegistry = new DomElementSchemaRegistry();\n    const resolver = new CompileMetadataResolver(\n        config, htmlParser, new NgModuleResolver(staticReflector),\n        new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver,\n        elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n\n    // TODO(vicb): implicit tags & attributes\n    const messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n\n    const extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n    return {extractor, staticReflector};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {Extractor, ExtractorHost} from './extractor';\nexport {I18NHtmlParser} from './i18n_html_parser';\nexport {MessageBundle} from './message_bundle';\nexport {Serializer} from './serializers/serializer';\nexport {Xliff} from './serializers/xliff';\nexport {Xliff2} from './serializers/xliff2';\nexport {Xmb} from './serializers/xmb';\nexport {Xtb} from './serializers/xtb';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, BindingPipe, ImplicitReceiver, MethodCall, PropertyRead, PropertyWrite, RecursiveAstVisitor, SafeMethodCall, SafePropertyRead} from '../../expression_parser/ast';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {BoundAttribute, BoundEvent, BoundText, Content, Element, Icu, Node, Reference, Template, Text, TextAttribute, Variable, Visitor} from '../r3_ast';\n\nimport {BoundTarget, DirectiveMeta, Target, TargetBinder} from './t2_api';\nimport {getAttrsForDirectiveMatching} from './util';\n\n\n/**\n * Processes `Target`s with a given set of directives and performs a binding operation, which\n * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the\n * target.\n */\nexport class R3TargetBinder<DirectiveT extends DirectiveMeta> implements TargetBinder<DirectiveT> {\n  constructor(private directiveMatcher: SelectorMatcher<DirectiveT>) {}\n\n  /**\n   * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains\n   * metadata about the types referenced in the template.\n   */\n  bind(target: Target): BoundTarget<DirectiveT> {\n    if (!target.template) {\n      // TODO(alxhub): handle targets which contain things like HostBindings, etc.\n      throw new Error('Binding without a template not yet supported');\n    }\n\n    // First, parse the template into a `Scope` structure. This operation captures the syntactic\n    // scopes in the template and makes them available for later use.\n    const scope = Scope.apply(target.template);\n\n    // Next, perform directive matching on the template using the `DirectiveBinder`. This returns:\n    //   - directives: Map of nodes (elements & ng-templates) to the directives on them.\n    //   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims\n    //     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.\n    //   - references: Map of #references to their targets.\n    const {directives, bindings, references} =\n        DirectiveBinder.apply(target.template, this.directiveMatcher);\n    // Finally, run the TemplateBinder to bind references, variables, and other entities within the\n    // template. This extracts all the metadata that doesn't depend on directive matching.\n    const {expressions, symbols, nestingLevel, usedPipes} =\n        TemplateBinder.apply(target.template, scope);\n    return new R3BoundTarget(\n        target, directives, bindings, references, expressions, symbols, nestingLevel, usedPipes);\n  }\n}\n\n/**\n * Represents a binding scope within a template.\n *\n * Any variables, references, or other named entities declared within the template will\n * be captured and available by name in `namedEntities`. Additionally, child templates will\n * be analyzed and have their child `Scope`s available in `childScopes`.\n */\nclass Scope implements Visitor {\n  /**\n   * Named members of the `Scope`, such as `Reference`s or `Variable`s.\n   */\n  readonly namedEntities = new Map<string, Reference|Variable>();\n\n  /**\n   * Child `Scope`s for immediately nested `Template`s.\n   */\n  readonly childScopes = new Map<Template, Scope>();\n\n  private constructor(readonly parentScope?: Scope) {}\n\n  /**\n   * Process a template (either as a `Template` sub-template with variables, or a plain array of\n   * template `Node`s) and construct its `Scope`.\n   */\n  static apply(template: Template|Node[]): Scope {\n    const scope = new Scope();\n    scope.ingest(template);\n    return scope;\n  }\n\n  /**\n   * Internal method to process the template and populate the `Scope`.\n   */\n  private ingest(template: Template|Node[]): void {\n    if (template instanceof Template) {\n      // Variables on an <ng-template> are defined in the inner scope.\n      template.variables.forEach(node => this.visitVariable(node));\n\n      // Process the nodes of the template.\n      template.children.forEach(node => node.visit(this));\n    } else {\n      // No overarching `Template` instance, so process the nodes directly.\n      template.forEach(node => node.visit(this));\n    }\n  }\n\n  visitElement(element: Element) {\n    // `Element`s in the template may have `Reference`s which are captured in the scope.\n    element.references.forEach(node => this.visitReference(node));\n\n    // Recurse into the `Element`'s children.\n    element.children.forEach(node => node.visit(this));\n  }\n\n  visitTemplate(template: Template) {\n    // References on a <ng-template> are defined in the outer scope, so capture them before\n    // processing the template's child scope.\n    template.references.forEach(node => this.visitReference(node));\n\n    // Next, create an inner scope and process the template within it.\n    const scope = new Scope(this);\n    scope.ingest(template);\n    this.childScopes.set(template, scope);\n  }\n\n  visitVariable(variable: Variable) {\n    // Declare the variable if it's not already.\n    this.maybeDeclare(variable);\n  }\n\n  visitReference(reference: Reference) {\n    // Declare the variable if it's not already.\n    this.maybeDeclare(reference);\n  }\n\n  // Unused visitors.\n  visitContent(content: Content) {}\n  visitBoundAttribute(attr: BoundAttribute) {}\n  visitBoundEvent(event: BoundEvent) {}\n  visitBoundText(text: BoundText) {}\n  visitText(text: Text) {}\n  visitTextAttribute(attr: TextAttribute) {}\n  visitIcu(icu: Icu) {}\n\n  private maybeDeclare(thing: Reference|Variable) {\n    // Declare something with a name, as long as that name isn't taken.\n    if (!this.namedEntities.has(thing.name)) {\n      this.namedEntities.set(thing.name, thing);\n    }\n  }\n\n  /**\n   * Look up a variable within this `Scope`.\n   *\n   * This can recurse into a parent `Scope` if it's available.\n   */\n  lookup(name: string): Reference|Variable|null {\n    if (this.namedEntities.has(name)) {\n      // Found in the local scope.\n      return this.namedEntities.get(name) !;\n    } else if (this.parentScope !== undefined) {\n      // Not in the local scope, but there's a parent scope so check there.\n      return this.parentScope.lookup(name);\n    } else {\n      // At the top level and it wasn't found.\n      return null;\n    }\n  }\n\n  /**\n   * Get the child scope for a `Template`.\n   *\n   * This should always be defined.\n   */\n  getChildScope(template: Template): Scope {\n    const res = this.childScopes.get(template);\n    if (res === undefined) {\n      throw new Error(`Assertion error: child scope for ${template} not found`);\n    }\n    return res;\n  }\n}\n\n/**\n * Processes a template and matches directives on nodes (elements and templates).\n *\n * Usually used via the static `apply()` method.\n */\nclass DirectiveBinder<DirectiveT extends DirectiveMeta> implements Visitor {\n  constructor(\n      private matcher: SelectorMatcher<DirectiveT>,\n      private directives: Map<Element|Template, DirectiveT[]>,\n      private bindings: Map<BoundAttribute|BoundEvent|TextAttribute, DirectiveT|Element|Template>,\n      private references:\n          Map<Reference, {directive: DirectiveT, node: Element|Template}|Element|Template>) {}\n\n  /**\n   * Process a template (list of `Node`s) and perform directive matching against each node.\n   *\n   * @param template the list of template `Node`s to match (recursively).\n   * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for\n   * this template.\n   * @returns three maps which contain information about directives in the template: the\n   * `directives` map which lists directives matched on each node, the `bindings` map which\n   * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`\n   * map which resolves #references (`Reference`s) within the template to the named directive or\n   * template node.\n   */\n  static apply<DirectiveT extends DirectiveMeta>(\n      template: Node[], selectorMatcher: SelectorMatcher<DirectiveT>): {\n    directives: Map<Element|Template, DirectiveT[]>,\n    bindings: Map<BoundAttribute|BoundEvent|TextAttribute, DirectiveT|Element|Template>,\n    references: Map<Reference, {directive: DirectiveT, node: Element|Template}|Element|Template>,\n  } {\n    const directives = new Map<Element|Template, DirectiveT[]>();\n    const bindings =\n        new Map<BoundAttribute|BoundEvent|TextAttribute, DirectiveT|Element|Template>();\n    const references =\n        new Map<Reference, {directive: DirectiveT, node: Element | Template}|Element|Template>();\n    const matcher = new DirectiveBinder(selectorMatcher, directives, bindings, references);\n    matcher.ingest(template);\n    return {directives, bindings, references};\n  }\n\n  private ingest(template: Node[]): void { template.forEach(node => node.visit(this)); }\n\n  visitElement(element: Element): void { this.visitElementOrTemplate(element.name, element); }\n\n  visitTemplate(template: Template): void { this.visitElementOrTemplate('ng-template', template); }\n\n  visitElementOrTemplate(tag: string, node: Element|Template): void {\n    // First, determine the HTML shape of the node for the purpose of directive matching.\n    // Do this by building up a `CssSelector` for the node.\n    const cssSelector = new CssSelector();\n    cssSelector.setElement(tag);\n\n    // Add attributes to the CSS selector.\n    const attrs = getAttrsForDirectiveMatching(node);\n    Object.getOwnPropertyNames(attrs).forEach((name) => {\n      const value = attrs[name];\n\n      cssSelector.addAttribute(name, value);\n\n      // Treat the 'class' attribute specially.\n      if (name.toLowerCase() === 'class') {\n        const classes = value.trim().split(/\\s+/g);\n        classes.forEach(className => cssSelector.addClassName(className));\n      }\n    });\n\n    // Next, use the `SelectorMatcher` to get the list of directives on the node.\n    const directives: DirectiveT[] = [];\n    this.matcher.match(cssSelector, (_, directive) => directives.push(directive));\n    if (directives.length > 0) {\n      this.directives.set(node, directives);\n    }\n\n    // Resolve any references that are created on this node.\n    node.references.forEach(ref => {\n      let dirTarget: DirectiveT|null = null;\n\n      // If the reference expression is empty, then it matches the \"primary\" directive on the node\n      // (if there is one). Otherwise it matches the host node itself (either an element or\n      // <ng-template> node).\n      if (ref.value.trim() === '') {\n        // This could be a reference to a component if there is one.\n        dirTarget = directives.find(dir => dir.isComponent) || null;\n      } else {\n        // This is a reference to a directive exported via exportAs. One should exist.\n        dirTarget =\n            directives.find(\n                dir => dir.exportAs !== null && dir.exportAs.some(value => value === ref.value)) ||\n            null;\n\n        // Check if a matching directive was found, and error if it wasn't.\n        if (dirTarget === null) {\n          // TODO(alxhub): Return an error value here that can be used for template validation.\n          throw new Error(`Assertion error: failed to find directive with exportAs: ${ref.value}`);\n        }\n      }\n\n      if (dirTarget !== null) {\n        // This reference points to a directive.\n        this.references.set(ref, {directive: dirTarget, node});\n      } else {\n        // This reference points to the node itself.\n        this.references.set(ref, node);\n      }\n    });\n\n    // Associate attributes/bindings on the node with directives or with the node itself.\n    const processAttribute = (attribute: BoundAttribute | BoundEvent | TextAttribute) => {\n      let dir = directives.find(dir => dir.inputs.hasOwnProperty(attribute.name));\n      if (dir !== undefined) {\n        this.bindings.set(attribute, dir);\n      } else {\n        this.bindings.set(attribute, node);\n      }\n    };\n    node.attributes.forEach(processAttribute);\n    node.inputs.forEach(processAttribute);\n    node.outputs.forEach(processAttribute);\n    if (node instanceof Template) {\n      node.templateAttrs.forEach(processAttribute);\n    }\n\n    // Recurse into the node's children.\n    node.children.forEach(child => child.visit(this));\n  }\n\n  // Unused visitors.\n  visitContent(content: Content): void {}\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitBoundAttributeOrEvent(node: BoundAttribute|BoundEvent) {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n  visitIcu(icu: Icu): void {}\n}\n\n/**\n * Processes a template and extract metadata about expressions and symbols within.\n *\n * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched\n * within the template in order to operate.\n *\n * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided\n * by overridden methods from that visitor.\n */\nclass TemplateBinder extends RecursiveAstVisitor implements Visitor {\n  private visitNode: (node: Node) => void;\n\n  private pipesUsed: string[] = [];\n\n  private constructor(\n      private bindings: Map<AST, Reference|Variable>,\n      private symbols: Map<Reference|Variable, Template>, private usedPipes: Set<string>,\n      private nestingLevel: Map<Template, number>, private scope: Scope,\n      private template: Template|null, private level: number) {\n    super();\n\n    // Save a bit of processing time by constructing this closure in advance.\n    this.visitNode = (node: Node) => node.visit(this);\n  }\n\n  /**\n   * Process a template and extract metadata about expressions and symbols within.\n   *\n   * @param template the nodes of the template to process\n   * @param scope the `Scope` of the template being processed.\n   * @returns three maps which contain metadata about the template: `expressions` which interprets\n   * special `AST` nodes in expressions as pointing to references or variables declared within the\n   * template, `symbols` which maps those variables and references to the nested `Template` which\n   * declares them, if any, and `nestingLevel` which associates each `Template` with a integer\n   * nesting level (how many levels deep within the template structure the `Template` is), starting\n   * at 1.\n   */\n  static apply(template: Node[], scope: Scope): {\n    expressions: Map<AST, Reference|Variable>,\n    symbols: Map<Variable|Reference, Template>,\n    nestingLevel: Map<Template, number>,\n    usedPipes: Set<string>,\n  } {\n    const expressions = new Map<AST, Reference|Variable>();\n    const symbols = new Map<Variable|Reference, Template>();\n    const nestingLevel = new Map<Template, number>();\n    const usedPipes = new Set<string>();\n    // The top-level template has nesting level 0.\n    const binder = new TemplateBinder(\n        expressions, symbols, usedPipes, nestingLevel, scope,\n        template instanceof Template ? template : null, 0);\n    binder.ingest(template);\n    return {expressions, symbols, nestingLevel, usedPipes};\n  }\n\n  private ingest(template: Template|Node[]): void {\n    if (template instanceof Template) {\n      // For <ng-template>s, process only variables and child nodes. Inputs, outputs, templateAttrs,\n      // and references were all processed in the scope of the containing template.\n      template.variables.forEach(this.visitNode);\n      template.children.forEach(this.visitNode);\n\n      // Set the nesting level.\n      this.nestingLevel.set(template, this.level);\n    } else {\n      // Visit each node from the top-level template.\n      template.forEach(this.visitNode);\n    }\n  }\n\n  visitElement(element: Element) {\n    // Visit the inputs, outputs, and children of the element.\n    element.inputs.forEach(this.visitNode);\n    element.outputs.forEach(this.visitNode);\n    element.children.forEach(this.visitNode);\n  }\n\n  visitTemplate(template: Template) {\n    // First, visit inputs, outputs and template attributes of the template node.\n    template.inputs.forEach(this.visitNode);\n    template.outputs.forEach(this.visitNode);\n    template.templateAttrs.forEach(this.visitNode);\n\n    // References are also evaluated in the outer context.\n    template.references.forEach(this.visitNode);\n\n    // Next, recurse into the template using its scope, and bumping the nesting level up by one.\n    const childScope = this.scope.getChildScope(template);\n    const binder = new TemplateBinder(\n        this.bindings, this.symbols, this.usedPipes, this.nestingLevel, childScope, template,\n        this.level + 1);\n    binder.ingest(template);\n  }\n\n  visitVariable(variable: Variable) {\n    // Register the `Variable` as a symbol in the current `Template`.\n    if (this.template !== null) {\n      this.symbols.set(variable, this.template);\n    }\n  }\n\n  visitReference(reference: Reference) {\n    // Register the `Reference` as a symbol in the current `Template`.\n    if (this.template !== null) {\n      this.symbols.set(reference, this.template);\n    }\n  }\n\n  // Unused template visitors\n\n  visitText(text: Text) {}\n  visitContent(content: Content) {}\n  visitTextAttribute(attribute: TextAttribute) {}\n  visitIcu(icu: Icu): void {}\n\n  // The remaining visitors are concerned with processing AST expressions within template bindings\n\n  visitBoundAttribute(attribute: BoundAttribute) { attribute.value.visit(this); }\n\n  visitBoundEvent(event: BoundEvent) { event.handler.visit(this); }\n\n  visitBoundText(text: BoundText) { text.value.visit(this); }\n  visitPipe(ast: BindingPipe, context: any): any {\n    this.usedPipes.add(ast.name);\n    return super.visitPipe(ast, context);\n  }\n\n  // These five types of AST expressions can refer to expression roots, which could be variables\n  // or references in the current scope.\n\n  visitPropertyRead(ast: PropertyRead, context: any): any {\n    this.maybeMap(context, ast, ast.name);\n    return super.visitPropertyRead(ast, context);\n  }\n\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any {\n    this.maybeMap(context, ast, ast.name);\n    return super.visitSafePropertyRead(ast, context);\n  }\n\n  visitPropertyWrite(ast: PropertyWrite, context: any): any {\n    this.maybeMap(context, ast, ast.name);\n    return super.visitPropertyWrite(ast, context);\n  }\n\n  visitMethodCall(ast: MethodCall, context: any): any {\n    this.maybeMap(context, ast, ast.name);\n    return super.visitMethodCall(ast, context);\n  }\n\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any {\n    this.maybeMap(context, ast, ast.name);\n    return super.visitSafeMethodCall(ast, context);\n  }\n\n  private maybeMap(\n      scope: Scope, ast: PropertyRead|SafePropertyRead|PropertyWrite|MethodCall|SafeMethodCall,\n      name: string): void {\n    // If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an\n    // `AST` expression that maps to a `Variable` or `Reference`.\n    if (!(ast.receiver instanceof ImplicitReceiver)) {\n      return;\n    }\n\n    // Check whether the name exists in the current scope. If so, map it. Otherwise, the name is\n    // probably a property on the top-level component context.\n    let target = this.scope.lookup(name);\n    if (target !== null) {\n      this.bindings.set(ast, target);\n    }\n  }\n}\n\n/**\n * Metadata container for a `Target` that allows queries for specific bits of metadata.\n *\n * See `BoundTarget` for documentation on the individual methods.\n */\nexport class R3BoundTarget<DirectiveT extends DirectiveMeta> implements BoundTarget<DirectiveT> {\n  constructor(\n      readonly target: Target, private directives: Map<Element|Template, DirectiveT[]>,\n      private bindings: Map<BoundAttribute|BoundEvent|TextAttribute, DirectiveT|Element|Template>,\n      private references:\n          Map<BoundAttribute|BoundEvent|Reference|TextAttribute,\n              {directive: DirectiveT, node: Element|Template}|Element|Template>,\n      private exprTargets: Map<AST, Reference|Variable>,\n      private symbols: Map<Reference|Variable, Template>,\n      private nestingLevel: Map<Template, number>, private usedPipes: Set<string>) {}\n\n  getDirectivesOfNode(node: Element|Template): DirectiveT[]|null {\n    return this.directives.get(node) || null;\n  }\n\n  getReferenceTarget(ref: Reference): {directive: DirectiveT, node: Element|Template}|Element\n      |Template|null {\n    return this.references.get(ref) || null;\n  }\n\n  getConsumerOfBinding(binding: BoundAttribute|BoundEvent|TextAttribute): DirectiveT|Element\n      |Template|null {\n    return this.bindings.get(binding) || null;\n  }\n\n  getExpressionTarget(expr: AST): Reference|Variable|null {\n    return this.exprTargets.get(expr) || null;\n  }\n\n  getTemplateOfSymbol(symbol: Reference|Variable): Template|null {\n    return this.symbols.get(symbol) || null;\n  }\n\n  getNestingLevel(template: Template): number { return this.nestingLevel.get(template) || 0; }\n\n  getUsedDirectives(): DirectiveT[] {\n    const set = new Set<DirectiveT>();\n    this.directives.forEach(dirs => dirs.forEach(dir => set.add(dir)));\n    return Array.from(set.values());\n  }\n\n  getUsedPipes(): string[] { return Array.from(this.usedPipes); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n//////////////////////////////////////\n// THIS FILE HAS GLOBAL SIDE EFFECT //\n//       (see bottom of file)       //\n//////////////////////////////////////\n\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\n\nimport * as core from './core';\nimport {publishFacade} from './jit_compiler_facade';\nimport {global} from './util';\n\nexport {core};\n\nexport * from './version';\nexport * from './template_parser/template_ast';\nexport {CompilerConfig, preserveWhitespacesDefault} from './config';\nexport * from './compile_metadata';\nexport * from './aot/compiler_factory';\nexport * from './aot/compiler';\nexport * from './aot/generated_file';\nexport * from './aot/compiler_options';\nexport * from './aot/compiler_host';\nexport * from './aot/formatted_error';\nexport * from './aot/partial_module';\nexport * from './aot/static_reflector';\nexport * from './aot/static_symbol';\nexport * from './aot/static_symbol_resolver';\nexport * from './aot/summary_resolver';\nexport {isLoweredSymbol, createLoweredSymbol} from './aot/util';\nexport {LazyRoute} from './aot/lazy_routes';\nexport * from './ast_path';\nexport * from './summary_resolver';\nexport {Identifiers} from './identifiers';\nexport {JitCompiler} from './jit/compiler';\nexport * from './compile_reflector';\nexport * from './url_resolver';\nexport * from './resource_loader';\nexport {ConstantPool} from './constant_pool';\nexport {DirectiveResolver} from './directive_resolver';\nexport {PipeResolver} from './pipe_resolver';\nexport {NgModuleResolver} from './ng_module_resolver';\nexport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './ml_parser/interpolation_config';\nexport * from './schema/element_schema_registry';\nexport * from './i18n/index';\nexport * from './directive_normalizer';\nexport * from './expression_parser/ast';\nexport * from './expression_parser/lexer';\nexport * from './expression_parser/parser';\nexport * from './metadata_resolver';\nexport * from './ml_parser/ast';\nexport * from './ml_parser/html_parser';\nexport * from './ml_parser/html_tags';\nexport * from './ml_parser/interpolation_config';\nexport * from './ml_parser/tags';\nexport {LexerRange} from './ml_parser/lexer';\nexport {NgModuleCompiler} from './ng_module_compiler';\nexport {ArrayType, AssertNotNull, DYNAMIC_TYPE, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinType, BuiltinTypeName, BuiltinVar, CastExpr, ClassField, ClassMethod, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, Expression, ExpressionStatement, ExpressionType, ExpressionVisitor, ExternalExpr, ExternalReference, literalMap, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, JSDocCommentStmt, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, MapType, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, StatementVisitor, ThrowStmt, TryCatchStmt, Type, TypeVisitor, WrappedNodeExpr, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, STRING_TYPE, TypeofExpr, collectExternalReferences} from './output/output_ast';\nexport {EmitterVisitorContext} from './output/abstract_emitter';\nexport {JitEvaluator} from './output/output_jit';\nexport * from './output/ts_emitter';\nexport * from './parse_util';\nexport * from './schema/dom_element_schema_registry';\nexport * from './selector';\nexport * from './style_compiler';\nexport * from './template_parser/template_parser';\nexport {ViewCompiler, findStaticQueryIds, staticViewQueryIds} from './view_compiler/view_compiler';\nexport {getParseErrors, isSyntaxError, syntaxError, Version} from './util';\nexport {SourceMap} from './output/source_map';\nexport * from './injectable_compiler_2';\nexport * from './render3/view/api';\nexport {BoundAttribute as TmplAstBoundAttribute, BoundEvent as TmplAstBoundEvent, BoundText as TmplAstBoundText, Content as TmplAstContent, Element as TmplAstElement, Node as TmplAstNode, RecursiveVisitor as TmplAstRecursiveVisitor, Reference as TmplAstReference, Template as TmplAstTemplate, Text as TmplAstText, TextAttribute as TmplAstTextAttribute, Variable as TmplAstVariable,} from './render3/r3_ast';\nexport * from './render3/view/t2_api';\nexport * from './render3/view/t2_binder';\nexport {Identifiers as R3Identifiers} from './render3/r3_identifiers';\nexport {R3DependencyMetadata, R3FactoryMetadata, R3ResolvedDependencyType} from './render3/r3_factory';\nexport {compileInjector, compileNgModule, R3InjectorMetadata, R3NgModuleMetadata} from './render3/r3_module_compiler';\nexport {compilePipeFromMetadata, R3PipeMetadata} from './render3/r3_pipe_compiler';\nexport {makeBindingParser, parseTemplate, ParseTemplateOptions} from './render3/view/template';\nexport {R3Reference} from './render3/util';\nexport {compileBaseDefFromMetadata, R3BaseRefMetaData, compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings, ParsedHostBindings, verifyHostBindings} from './render3/view/compiler';\nexport {publishFacade} from './jit_compiler_facade';\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This function call has a global side effects and publishes the compiler into global namespace for\n// the late binding of the Compiler to the @angular/core for jit compilation.\npublishFacade(global);","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/compiler';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './compiler';\n"],"names":["TagContentType","BuiltinTypeName","tslib_1.__extends","Type","BinaryOperator","BuiltinVar","StmtModifier","BuiltinMethod","tslib_1.__values","o.Expression","o.LiteralExpr","o.variable","o.INFERRED_TYPE","o.StmtModifier","literal","o.LiteralArrayExpr","o.literal","o.literalArr","o.literalMap","o.FnParam","o.DYNAMIC_TYPE","o.fn","o.ReturnStatement","o.ReadVarExpr","CompileSummaryKind","CORE","chars.$LF","ParseErrorLevel","Text","Icu","i18n.RecurseVisitor","_Visitor","xml.Tag","xml.Text","xml.CR","xml.serialize","xml.Declaration","xml.Doctype","digest","variable","o.DeclareVarStmt","o.ExpressionStatement","o.importExpr","R3","o.ifStmt","o.JSDocCommentStmt","i18n.Message","i18n.Icu","i18n.Container","i18n.Placeholder","invalid","o.isNull","t.Template","R3ResolvedDependencyType","o.BinaryOperatorExpr","o.BinaryOperator","o.InstantiateExpr","o.NULL_EXPR","o.InvokeFunctionExpr","o.ThrowStmt","o.expressionType","o.ExpressionType","CATCH_ERROR_VAR","CATCH_STACK_VAR","o.BuiltinVar","o.BuiltinMethod","o.LiteralMapExpr","o.LiteralMapEntry","o.ClassStmt","o.ClassField","o.ClassMethod","o.ReadPropExpr","o.typeofExpr","o.NONE_TYPE","ParsedPropertyType","cdAst.Interpolation","tslib_1.__spread","cdAst.AstTransformer","cdAst.ImplicitReceiver","o.not","o.assertNotNull","cdAst.SafeMethodCall","cdAst.MethodCall","cdAst.PropertyRead","cdAst.FunctionCall","o.ArrayType","o.TypeModifier","visitAll","Element","RecursiveVisitor","chars.$EOF","chars.$LT","chars.$BANG","chars.$LBRACKET","chars.$MINUS","chars.$SLASH","chars.$RBRACE","chars.$AMPERSAND","chars.$HASH","chars.$x","chars.$X","chars.$SEMICOLON","chars.$GT","chars.$COLON","chars.isAsciiLetter","chars.$EQ","chars.$SQ","chars.$DQ","chars.$LBRACE","chars.$COMMA","chars.isWhitespace","chars.$a","chars.$z","chars.$A","chars.$Z","chars.$0","chars.$9","chars.isAsciiHexDigit","chars.isDigit","chars.isNewLine","chars.$BACKSLASH","chars.$n","chars.$r","chars.$CR","chars.$v","chars.$VTAB","chars.$t","chars.$TAB","chars.$b","chars.$BSPACE","chars.$f","chars.$FF","chars.$u","chars.isOctalDigit","lex.tokenize","lex.TokenType","html.Comment","html.Expansion","lex.Token","html.ExpansionCase","html.Text","html.Element","html.Attribute","html.visitAll","ProviderAstType","RecursiveAstVisitor","t.templateVisitAll","t.BoundTextAst","t.TextAst","t.AttrAst","t.VariableAst","t.NgContentAst","t.EmbeddedTemplateAst","t.ElementAst","t.BoundEventAst","t.BoundElementPropertyAst","t.ReferenceAst","t.DirectiveAst","t.BoundDirectivePropertyAst","parseStyle","o.WrappedNodeExpr","TokenType","Token","chars.$SPACE","chars.$PERIOD","chars.$LPAREN","chars.$RPAREN","chars.$RBRACKET","chars.$PLUS","chars.$STAR","chars.$PERCENT","chars.$CARET","chars.$QUESTION","chars.$BAR","chars.$NBSP","chars.$_","chars.$$","chars.$e","chars.$E","chars.$BT","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR_PREFIX","t.Variable","NON_BINDABLE_VISITOR","t.Content","t.Element","t.TextAttribute","t.Icu","t.BoundAttribute","t.BoundText","t.Text","t.Reference","NonBindableVisitor","t.BoundEvent","ExpressionParser","ExpressionLexer","i18n.TagPlaceholder","i18n.IcuPlaceholder","i18n.Text","serializerVisitor","NG_CONTENT_SELECT_ATTR","t.visitAll","core.parseSelectorToR3Selector","o.NUMBER_TYPE","isNgContainer","checkIsNgContainer","o.TYPED_NULL_EXPR","Parser","core.SecurityContext","core.ViewEncapsulation","core.ChangeDetectionStrategy","HOST_REG_EXP","VERSION","_PLACEHOLDER_TAG","_SOURCE_TAG","ml.visitAll","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_MARKER_TAG","_TARGET_TAG","_UNIT_TAG","_WriteVisitor","XmlToI18n","mapEntry","cpl.viewClassName","cpl.hostViewClassName","cpl.identifierName","cpl.rendererTypeName","cpl.componentFactoryName","cpl.CompileDirectiveMetadata","cpl.CompileTemplateMetadata","cpl.CompileSummaryKind","cpl.CompileNgModuleMetadata","cpl.TransitiveCompileNgModuleMetadata","cpl.tokenReference","cpl.CompilePipeMetadata","cpl.ProviderMeta","o.importType","o.Statement","o.Type","o.ExternalExpr","o.BuiltinTypeName","o.applySourceSpanToStatementIfNeeded","o.IfStmt","o.DeclareFunctionStmt","CLASS_ATTR","ViewBuilder","LOG_VAR","o.findReadVarNames","o.CommaExpr","o.applySourceSpanToExpressionIfNeeded","o.BOOL_TYPE","i18n.CloneVisitor","compileR3Module","compileR3Component","compileR3Directive","compileR3Pipe","importExpr","o.ExternalReference","USE_VALUE","BindingScope","ir.variable","ir.importExpr","global"],"mappings":"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"}