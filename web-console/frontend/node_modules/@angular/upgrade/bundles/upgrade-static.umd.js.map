{"version":3,"file":"upgrade-static.umd.js","sources":["../../../../../../../packages/upgrade/src/common/src/angular1.ts","../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../../../packages/upgrade/src/common/src/constants.ts","../../../../../../../packages/upgrade/src/common/src/component_info.ts","../../../../../../../packages/upgrade/src/common/src/util.ts","../../../../../../../packages/upgrade/src/common/src/downgrade_component_adapter.ts","../../../../../../../packages/upgrade/src/common/src/promise_util.ts","../../../../../../../packages/upgrade/src/common/src/downgrade_component.ts","../../../../../../../packages/upgrade/src/common/src/downgrade_injectable.ts","../../../../../../../packages/upgrade/src/common/src/version.ts","../../../../../../packages/upgrade/static/src/angular1_providers.ts","../../../../../../packages/upgrade/static/src/util.ts","../../../../../../packages/upgrade/static/src/downgrade_module.ts","../../../../../../../packages/upgrade/src/common/src/upgrade_helper.ts","../../../../../../packages/upgrade/static/src/upgrade_component.ts","../../../../../../packages/upgrade/static/src/upgrade_module.ts","../../../../../../packages/upgrade/static/public_api.ts","../../../../../../packages/upgrade/static/index.ts","../../../../../../packages/upgrade/static/static.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function {\n  // Older versions of `@types/angular` typings extend the global `Function` interface with\n  // `$inject?: string[]`, which is not compatible with `$inject?: ReadonlyArray<string>` (used in\n  // latest versions).\n  $inject?: Function extends{$inject?: string[]}? Ng1Token[]: ReadonlyArray<Ng1Token>;\n}\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n  $$slots?: {[slotName: string]: ILinkFn};\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(exp: Ng1Expression, locals?: any): void;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: DirectiveTranscludeProperty;\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport type DirectiveTranscludeProperty = boolean | 'element' | {[key: string]: string};\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: DirectiveTranscludeProperty;\n}\nexport interface IAttributes {\n  $observe(attr: string, fn: (v: string) => void): void;\n  [key: string]: any;\n}\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction { (clonedElement: IAugmentedJQuery, scope: IScope): any; }\nexport type IAugmentedJQuery = Node[] & {\n  on?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n  triggerHandler?: (eventTypeOrObject: string | Event, extraParameters?: any[]) => IAugmentedJQuery;\n  remove?: () => void;\n  removeData?: () => void;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression {\n  (context: any, locals: any): any;\n  assign?: (context: any, value: any) => any;\n}\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface IIntervalService {\n  (func: Function, delay: number, count?: number, invokeApply?: boolean,\n   ...args: any[]): Promise<any>;\n  cancel(promise: Promise<any>): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n\nfunction noNg(): never {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\nconst noNgElement: typeof angular.element = (() => noNg()) as any;\nnoNgElement.cleanData = noNg;\n\nlet angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config?: IAngularBootstrapConfig) =>\n                 IInjectorService,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: {\n    (e: string | Element | Document | IAugmentedJQuery): IAugmentedJQuery;\n    cleanData: (nodes: Node[] | NodeList) => void;\n  },\n  injector: (modules: Array<string|IInjectable>, strictDi?: boolean) => IInjectorService,\n  version: {major: number},\n  resumeBootstrap: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = {\n  bootstrap: noNg,\n  module: noNg,\n  element: noNgElement,\n  injector: noNg,\n  version: undefined as any,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n};\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = (<any>window).angular;\n  }\n} catch {\n  // ignore in CJS mode.\n}\n\n/**\n * @deprecated Use `setAngularJSGlobal` instead.\n *\n * @publicApi\n */\nexport function setAngularLib(ng: any): void {\n  setAngularJSGlobal(ng);\n}\n\n/**\n * @deprecated Use `getAngularJSGlobal` instead.\n *\n * @publicApi\n */\nexport function getAngularLib(): any {\n  return getAngularJSGlobal();\n}\n\n/**\n * Resets the AngularJS global.\n *\n * Used when AngularJS is loaded lazily, and not available on `window`.\n *\n * @publicApi\n */\nexport function setAngularJSGlobal(ng: any): void {\n  angular = ng;\n}\n\n/**\n * Returns the current AngularJS global.\n *\n * @publicApi\n */\nexport function getAngularJSGlobal(): any {\n  return angular;\n}\n\nexport const bootstrap: typeof angular.bootstrap = (e, modules, config?) =>\n    angular.bootstrap(e, modules, config);\n\n// Do not declare as `module` to avoid webpack bug\n// (see https://github.com/angular/angular/issues/30050).\nexport const module_: typeof angular.module = (prefix, dependencies?) =>\n    angular.module(prefix, dependencies);\n\nexport const element: typeof angular.element = (e => angular.element(e)) as typeof angular.element;\nelement.cleanData = nodes => angular.element.cleanData(nodes);\n\nexport const injector: typeof angular.injector =\n    (modules: Array<string|IInjectable>, strictDi?: boolean) => angular.injector(modules, strictDi);\n\nexport const resumeBootstrap: typeof angular.resumeBootstrap = () => angular.resumeBootstrap();\n\nexport const getTestability: typeof angular.getTestability = e => angular.getTestability(e);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $COMPILE = '$compile';\nexport const $CONTROLLER = '$controller';\nexport const $DELEGATE = '$delegate';\nexport const $EXCEPTION_HANDLER = '$exceptionHandler';\nexport const $HTTP_BACKEND = '$httpBackend';\nexport const $INJECTOR = '$injector';\nexport const $INTERVAL = '$interval';\nexport const $PARSE = '$parse';\nexport const $PROVIDE = '$provide';\nexport const $ROOT_SCOPE = '$rootScope';\nexport const $SCOPE = '$scope';\nexport const $TEMPLATE_CACHE = '$templateCache';\nexport const $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const $$TESTABILITY = '$$testability';\n\nexport const COMPILER_KEY = '$$angularCompiler';\nexport const DOWNGRADED_MODULE_COUNT_KEY = '$$angularDowngradedModuleCount';\nexport const GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const INJECTOR_KEY = '$$angularInjector';\nexport const LAZY_MODULE_REF = '$$angularLazyModuleRef';\nexport const NG_ZONE_KEY = '$$angularNgZone';\nexport const UPGRADE_APP_TYPE_KEY = '$$angularUpgradeAppType';\n\nexport const REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const REQUIRE_NG_MODEL = '?ngModel';\n\nexport const UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  // TODO(issue/24571): remove '!'.\n  bracketAttr !: string;\n  // TODO(issue/24571): remove '!'.\n  bracketParenAttr !: string;\n  // TODO(issue/24571): remove '!'.\n  parenAttr !: string;\n  // TODO(issue/24571): remove '!'.\n  onAttr !: string;\n  // TODO(issue/24571): remove '!'.\n  bindAttr !: string;\n  // TODO(issue/24571): remove '!'.\n  bindonAttr !: string;\n\n  constructor(public prop: string, public attr: string) { this.parseBinding(); }\n\n  private parseBinding() {\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, Type} from '@angular/core';\n\nimport {IInjectorService, INgModelController} from './angular1';\nimport {DOWNGRADED_MODULE_COUNT_KEY, UPGRADE_APP_TYPE_KEY} from './constants';\n\nconst DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nconst DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n\nexport function directiveNormalize(name: string): string {\n  return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n      .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, (_, letter) => letter.toUpperCase());\n}\n\nexport function getTypeName(type: Type<any>): string {\n  // Return the name of the type or the first line of its stringified version.\n  return (type as any).overriddenName || type.name || type.toString().split('\\n')[0];\n}\n\nexport function getDowngradedModuleCount($injector: IInjectorService): number {\n  return $injector.has(DOWNGRADED_MODULE_COUNT_KEY) ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY) :\n                                                      0;\n}\n\nexport function getUpgradeAppType($injector: IInjectorService): UpgradeAppType {\n  return $injector.has(UPGRADE_APP_TYPE_KEY) ? $injector.get(UPGRADE_APP_TYPE_KEY) :\n                                               UpgradeAppType.None;\n}\n\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\nexport function validateInjectionKey(\n    $injector: IInjectorService, downgradedModule: string, injectionKey: string,\n    attemptedAction: string): void {\n  const upgradeAppType = getUpgradeAppType($injector);\n  const downgradedModuleCount = getDowngradedModuleCount($injector);\n\n  // Check for common errors.\n  switch (upgradeAppType) {\n    case UpgradeAppType.Dynamic:\n    case UpgradeAppType.Static:\n      if (downgradedModule) {\n        throw new Error(\n            `Error while ${attemptedAction}: 'downgradedModule' unexpectedly specified.\\n` +\n            'You should not specify a value for \\'downgradedModule\\', unless you are downgrading ' +\n            'more than one Angular module (via \\'downgradeModule()\\').');\n      }\n      break;\n    case UpgradeAppType.Lite:\n      if (!downgradedModule && (downgradedModuleCount >= 2)) {\n        throw new Error(\n            `Error while ${attemptedAction}: 'downgradedModule' not specified.\\n` +\n            'This application contains more than one downgraded Angular module, thus you need to ' +\n            'always specify \\'downgradedModule\\' when downgrading components and injectables.');\n      }\n\n      if (!$injector.has(injectionKey)) {\n        throw new Error(\n            `Error while ${attemptedAction}: Unable to find the specified downgraded module.\\n` +\n            'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n            'application?');\n      }\n\n      break;\n    default:\n      throw new Error(\n          `Error while ${attemptedAction}: Not a valid '@angular/upgrade' application.\\n` +\n          'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n          'application?');\n  }\n}\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  // TODO(issue/24571): remove '!'.\n  resolve !: (value?: R | PromiseLike<R>) => void;\n  // TODO(issue/24571): remove '!'.\n  reject !: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nexport interface LazyModuleRef {\n  injector?: Injector;\n  promise?: Promise<Injector>;\n}\n\nexport const enum UpgradeAppType {\n  // App NOT using `@angular/upgrade`. (This should never happen in an `ngUpgrade` app.)\n  None,\n\n  // App using the deprecated `@angular/upgrade` APIs (a.k.a. dynamic `ngUpgrade`).\n  Dynamic,\n\n  // App using `@angular/upgrade/static` with `UpgradeModule`.\n  Static,\n\n  // App using @angular/upgrade/static` with `downgradeModule()` (a.k.a `ngUpgrade`-lite ).\n  Lite,\n}\n\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel: INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n    if (typeof component.registerOnTouched === 'function') {\n      component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n    }\n  }\n}\n\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, SimpleChange, SimpleChanges, StaticProvider, Testability, TestabilityRegistry, Type} from '@angular/core';\n\nimport {IAttributes, IAugmentedJQuery, ICompileService, IInjectorService, INgModelController, IParseService, IScope} from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getTypeName, hookupNgModel, strictEquals} from './util';\n\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nexport class DowngradeComponentAdapter {\n  private implementsOnChanges = false;\n  private inputChangeCount: number = 0;\n  private inputChanges: SimpleChanges = {};\n  private componentScope: IScope;\n  // TODO(issue/24571): remove '!'.\n  private componentRef !: ComponentRef<any>;\n  private component: any;\n  // TODO(issue/24571): remove '!'.\n  private changeDetector !: ChangeDetectorRef;\n  // TODO(issue/24571): remove '!'.\n  private viewChangeDetector !: ChangeDetectorRef;\n\n  constructor(\n      private element: IAugmentedJQuery, private attrs: IAttributes, private scope: IScope,\n      private ngModel: INgModelController, private parentInjector: Injector,\n      private $injector: IInjectorService, private $compile: ICompileService,\n      private $parse: IParseService, private componentFactory: ComponentFactory<any>,\n      private wrapCallback: <T>(cb: () => T) => () => T) {\n    this.componentScope = scope.$new();\n  }\n\n  compileContents(): Node[][] {\n    const compiledProjectableNodes: Node[][] = [];\n    const projectableNodes: Node[][] = this.groupProjectableNodes();\n    const linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty !();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append !(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n\n  createComponent(projectableNodes: Node[][]) {\n    const providers: StaticProvider[] = [{provide: $SCOPE, useValue: this.componentScope}];\n    const childInjector = Injector.create(\n        {providers: providers, parent: this.parentInjector, name: 'DowngradeComponentAdapter'});\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.viewChangeDetector = this.componentRef.injector.get(ChangeDetectorRef);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    // testability hook is commonly added during component bootstrap in\n    // packages/core/src/application_ref.bootstrap()\n    // in downgraded application, component creation will take place here as well as adding the\n    // testability hook.\n    const testability = this.componentRef.injector.get(Testability, null);\n    if (testability) {\n      this.componentRef.injector.get(TestabilityRegistry)\n          .registerApplication(this.componentRef.location.nativeElement, testability);\n    }\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n\n  setupInputs(manuallyAttachView: boolean, propagateDigest = true): void {\n    const attrs = this.attrs;\n    const inputs = this.componentFactory.inputs || [];\n    for (let i = 0; i < inputs.length; i++) {\n      const input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let expr: string|null = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const observeFn = (prop => {\n          let prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(prop, prevValue, currValue);\n              prevValue = currValue;\n            }\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let unwatch: Function|null = this.componentScope.$watch(() => {\n          unwatch !();\n          unwatch = null;\n          observeFn(attrs[input.attr]);\n        });\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = attrs[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = attrs[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = attrs[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = attrs[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    // Invoke `ngOnChanges()` and Change Detection (when necessary)\n    const detectChanges = () => this.changeDetector.detectChanges();\n    const prototype = this.componentFactory.componentType.prototype;\n    this.implementsOnChanges = !!(prototype && (<OnChanges>prototype).ngOnChanges);\n\n    this.componentScope.$watch(() => this.inputChangeCount, this.wrapCallback(() => {\n      // Invoke `ngOnChanges()`\n      if (this.implementsOnChanges) {\n        const inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        (<OnChanges>this.component).ngOnChanges(inputChanges !);\n      }\n\n      this.viewChangeDetector.markForCheck();\n\n      // If opted out of propagating digests, invoke change detection when inputs change.\n      if (!propagateDigest) {\n        detectChanges();\n      }\n    }));\n\n    // If not opted out of propagating digests, invoke change detection on every digest\n    if (propagateDigest) {\n      this.componentScope.$watch(this.wrapCallback(detectChanges));\n    }\n\n    // If necessary, attach the view so that it will be dirty-checked.\n    // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n    if (manuallyAttachView || !propagateDigest) {\n      let unwatch: Function|null = this.componentScope.$watch(() => {\n        unwatch !();\n        unwatch = null;\n\n        const appRef = this.parentInjector.get<ApplicationRef>(ApplicationRef);\n        appRef.attachView(this.componentRef.hostView);\n      });\n    }\n  }\n\n  setupOutputs() {\n    const attrs = this.attrs;\n    const outputs = this.componentFactory.outputs || [];\n    for (let j = 0; j < outputs.length; j++) {\n      const output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      const bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n      const bracketParenAttr =\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]`;\n      // order below is important - first update bindings then evaluate expressions\n      if (attrs.hasOwnProperty(bindonAttr)) {\n        this.subscribeToOutput(output, attrs[bindonAttr], true);\n      }\n      if (attrs.hasOwnProperty(bracketParenAttr)) {\n        this.subscribeToOutput(output, attrs[bracketParenAttr], true);\n      }\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        this.subscribeToOutput(output, attrs[output.onAttr]);\n      }\n      if (attrs.hasOwnProperty(output.parenAttr)) {\n        this.subscribeToOutput(output, attrs[output.parenAttr]);\n      }\n    }\n  }\n\n  private subscribeToOutput(output: PropertyBinding, expr: string, isAssignment: boolean = false) {\n    const getter = this.$parse(expr);\n    const setter = getter.assign;\n    if (isAssignment && !setter) {\n      throw new Error(`Expression '${expr}' is not assignable!`);\n    }\n    const emitter = this.component[output.prop] as EventEmitter<any>;\n    if (emitter) {\n      emitter.subscribe({\n        next: isAssignment ? (v: any) => setter !(this.scope, v) :\n                             (v: any) => getter(this.scope, {'$event': v})\n      });\n    } else {\n      throw new Error(\n          `Missing emitter '${output.prop}' on component '${getTypeName(this.componentFactory.componentType)}'!`);\n    }\n  }\n\n  registerCleanup() {\n    const testabilityRegistry = this.componentRef.injector.get(TestabilityRegistry);\n    const destroyComponentRef = this.wrapCallback(() => this.componentRef.destroy());\n    let destroyed = false;\n\n    this.element.on !('$destroy', () => this.componentScope.$destroy());\n    this.componentScope.$on('$destroy', () => {\n      if (!destroyed) {\n        destroyed = true;\n        testabilityRegistry.unregisterApplication(this.componentRef.location.nativeElement);\n        destroyComponentRef();\n      }\n    });\n  }\n\n  getInjector(): Injector { return this.componentRef.injector; }\n\n  private updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.implementsOnChanges) {\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.inputChangeCount++;\n    this.component[prop] = currValue;\n  }\n\n  groupProjectableNodes() {\n    let ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, this.element.contents !());\n  }\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const projectableNodes: Node[][] = [];\n  let wildcardNgContentIndex: number;\n\n  for (let i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let j = 0, jj = nodes.length; j < jj; ++j) {\n    const node = nodes[j];\n    const ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const ngContentIndices: number[] = [];\n  let wildcardNgContentIndex: number = -1;\n  for (let i = 0; i < ngContentSelectors.length; i++) {\n    const selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet _matches: (this: any, selector: string) => boolean;\n\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const elProto = <any>Element.prototype;\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isFunction} from './util';\n\nexport interface Thenable<T> { then(callback: (value: T) => any): any; }\n\nexport function isThenable<T>(obj: unknown): obj is Thenable<T> {\n  return !!obj && isFunction((obj as any).then);\n}\n\n/**\n * Synchronous, promise-like object.\n */\nexport class SyncPromise<T> {\n  protected value: T|undefined;\n  private resolved = false;\n  private callbacks: ((value: T) => unknown)[] = [];\n\n  static all<T>(valuesOrPromises: (T|Thenable<T>)[]): SyncPromise<T[]> {\n    const aggrPromise = new SyncPromise<T[]>();\n\n    let resolvedCount = 0;\n    const results: T[] = [];\n    const resolve = (idx: number, value: T) => {\n      results[idx] = value;\n      if (++resolvedCount === valuesOrPromises.length) aggrPromise.resolve(results);\n    };\n\n    valuesOrPromises.forEach((p, idx) => {\n      if (isThenable(p)) {\n        p.then(v => resolve(idx, v));\n      } else {\n        resolve(idx, p);\n      }\n    });\n\n    return aggrPromise;\n  }\n\n  resolve(value: T): void {\n    // Do nothing, if already resolved.\n    if (this.resolved) return;\n\n    this.value = value;\n    this.resolved = true;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(value));\n    this.callbacks.length = 0;\n  }\n\n  then(callback: (value: T) => unknown): void {\n    if (this.resolved) {\n      callback(this.value !);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, NgZone, Type} from '@angular/core';\n\nimport {IAnnotatedFunction, IAttributes, IAugmentedJQuery, ICompileService, IDirective, IInjectorService, INgModelController, IParseService, IScope} from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {SyncPromise, Thenable, isThenable} from './promise_util';\nimport {LazyModuleRef, UpgradeAppType, controllerKey, getDowngradedModuleCount, getTypeName, getUpgradeAppType, validateInjectionKey} from './util';\n\n\n/**\n * @description\n *\n * A helper function that allows an Angular component to be used from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * This helper function returns a factory function to be used for registering\n * an AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * @usageNotes\n * ### Examples\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * @param info contains information about the Component that is being downgraded:\n *\n * - `component: Type<any>`: The type of the Component that will be downgraded\n * - `downgradedModule?: string`: The name of the downgraded module (if any) that the component\n *   \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose\n *   corresponding Angular module will be bootstrapped, when the component needs to be instantiated.\n *   <br />\n *   (This option is only necessary when using `downgradeModule()` to downgrade more than one\n *   Angular module.)\n * - `propagateDigest?: boolean`: Whether to perform {@link ChangeDetectorRef#detectChanges\n *   change detection} on the component on every\n *   [$digest](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest). If set to `false`,\n *   change detection will still be performed when any of the component's inputs changes.\n *   (Default: true)\n *\n * @returns a factory function that can be used to register the component in an\n * AngularJS module.\n *\n * @publicApi\n */\nexport function downgradeComponent(info: {\n  component: Type<any>; downgradedModule?: string; propagateDigest?: boolean;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const directiveFactory: IAnnotatedFunction = function(\n      $compile: ICompileService, $injector: IInjectorService, $parse: IParseService): IDirective {\n    // When using `downgradeModule()`, we need to handle certain things specially. For example:\n    // - We always need to attach the component view to the `ApplicationRef` for it to be\n    //   dirty-checked.\n    // - We need to ensure callbacks to Angular APIs (e.g. change detection) are run inside the\n    //   Angular zone.\n    //   NOTE: This is not needed, when using `UpgradeModule`, because `$digest()` will be run\n    //         inside the Angular zone (except if explicitly escaped, in which case we shouldn't\n    //         force it back in).\n    const isNgUpgradeLite = getUpgradeAppType($injector) === UpgradeAppType.Lite;\n    const wrapCallback: <T>(cb: () => T) => typeof cb =\n        !isNgUpgradeLite ? cb => cb : cb => () => NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n    let ngZone: NgZone;\n\n    // When downgrading multiple modules, special handling is needed wrt injectors.\n    const hasMultipleDowngradedModules =\n        isNgUpgradeLite && (getDowngradedModuleCount($injector) > 1);\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: IScope, element: IAugmentedJQuery, attrs: IAttributes, required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const ngModel: INgModelController = required[1];\n        const parentInjector: Injector|Thenable<Injector>|undefined = required[0];\n        let moduleInjector: Injector|Thenable<Injector>|undefined = undefined;\n        let ranAsync = false;\n\n        if (!parentInjector || hasMultipleDowngradedModules) {\n          const downgradedModule = info.downgradedModule || '';\n          const lazyModuleRefKey = `${LAZY_MODULE_REF}${downgradedModule}`;\n          const attemptedAction = `instantiating component '${getTypeName(info.component)}'`;\n\n          validateInjectionKey($injector, downgradedModule, lazyModuleRefKey, attemptedAction);\n\n          const lazyModuleRef = $injector.get(lazyModuleRefKey) as LazyModuleRef;\n          moduleInjector = lazyModuleRef.injector || lazyModuleRef.promise as Promise<Injector>;\n        }\n\n        // Notes:\n        //\n        // There are two injectors: `finalModuleInjector` and `finalParentInjector` (they might be\n        // the same instance, but that is irrelevant):\n        // - `finalModuleInjector` is used to retrieve `ComponentFactoryResolver`, thus it must be\n        //   on the same tree as the `NgModule` that declares this downgraded component.\n        // - `finalParentInjector` is used for all other injection purposes.\n        //   (Note that Angular knows to only traverse the component-tree part of that injector,\n        //   when looking for an injectable and then switch to the module injector.)\n        //\n        // There are basically three cases:\n        // - If there is no parent component (thus no `parentInjector`), we bootstrap the downgraded\n        //   `NgModule` and use its injector as both `finalModuleInjector` and\n        //   `finalParentInjector`.\n        // - If there is a parent component (and thus a `parentInjector`) and we are sure that it\n        //   belongs to the same `NgModule` as this downgraded component (e.g. because there is only\n        //   one downgraded module, we use that `parentInjector` as both `finalModuleInjector` and\n        //   `finalParentInjector`.\n        // - If there is a parent component, but it may belong to a different `NgModule`, then we\n        //   use the `parentInjector` as `finalParentInjector` and this downgraded component's\n        //   declaring `NgModule`'s injector as `finalModuleInjector`.\n        //   Note 1: If the `NgModule` is already bootstrapped, we just get its injector (we don't\n        //           bootstrap again).\n        //   Note 2: It is possible that (while there are multiple downgraded modules) this\n        //           downgraded component and its parent component both belong to the same NgModule.\n        //           In that case, we could have used the `parentInjector` as both\n        //           `finalModuleInjector` and `finalParentInjector`, but (for simplicity) we are\n        //           treating this case as if they belong to different `NgModule`s. That doesn't\n        //           really affect anything, since `parentInjector` has `moduleInjector` as ancestor\n        //           and trying to resolve `ComponentFactoryResolver` from either one will return\n        //           the same instance.\n\n        // If there is a parent component, use its injector as parent injector.\n        // If this is a \"top-level\" Angular component, use the module injector.\n        const finalParentInjector = parentInjector || moduleInjector !;\n\n        // If this is a \"top-level\" Angular component or the parent component may belong to a\n        // different `NgModule`, use the module injector for module-specific dependencies.\n        // If there is a parent component that belongs to the same `NgModule`, use its injector.\n        const finalModuleInjector = moduleInjector || parentInjector !;\n\n        const doDowngrade = (injector: Injector, moduleInjector: Injector) => {\n          // Retrieve `ComponentFactoryResolver` from the injector tied to the `NgModule` this\n          // component belongs to.\n          const componentFactoryResolver: ComponentFactoryResolver =\n              moduleInjector.get(ComponentFactoryResolver);\n          const componentFactory: ComponentFactory<any> =\n              componentFactoryResolver.resolveComponentFactory(info.component) !;\n\n          if (!componentFactory) {\n            throw new Error(`Expecting ComponentFactory for: ${getTypeName(info.component)}`);\n          }\n\n          const injectorPromise = new ParentInjectorPromise(element);\n          const facade = new DowngradeComponentAdapter(\n              element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory, wrapCallback);\n\n          const projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs(isNgUpgradeLite, info.propagateDigest);\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n\n          if (ranAsync) {\n            // If this is run async, it is possible that it is not run inside a\n            // digest and initial input values will not be detected.\n            scope.$evalAsync(() => {});\n          }\n        };\n\n        const downgradeFn =\n            !isNgUpgradeLite ? doDowngrade : (pInjector: Injector, mInjector: Injector) => {\n              if (!ngZone) {\n                ngZone = pInjector.get(NgZone);\n              }\n\n              wrapCallback(() => doDowngrade(pInjector, mInjector))();\n            };\n\n        // NOTE:\n        // Not using `ParentInjectorPromise.all()` (which is inherited from `SyncPromise`), because\n        // Closure Compiler (or some related tool) complains:\n        // `TypeError: ...$src$downgrade_component_ParentInjectorPromise.all is not a function`\n        SyncPromise.all([finalParentInjector, finalModuleInjector])\n            .then(([pInjector, mInjector]) => downgradeFn(pInjector, mInjector));\n\n        ranAsync = true;\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's `$compile`.\n */\nclass ParentInjectorPromise extends SyncPromise<Injector> {\n  private injectorKey: string = controllerKey(INJECTOR_KEY);\n\n  constructor(private element: IAugmentedJQuery) {\n    super();\n\n    // Store the promise on the element.\n    element.data !(this.injectorKey, this);\n  }\n\n  resolve(injector: Injector): void {\n    // Store the real injector on the element.\n    this.element.data !(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null !;\n\n    // Resolve the promise.\n    super.resolve(injector);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {IInjectorService} from './angular1';\nimport {$INJECTOR, INJECTOR_KEY} from './constants';\nimport {getTypeName, isFunction, validateInjectionKey} from './util';\n\n/**\n * @description\n *\n * A helper function to allow an Angular service to be accessible from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * This helper function returns a factory function that provides access to the Angular\n * service identified by the `token` parameter.\n *\n * @usageNotes\n * ### Examples\n *\n * First ensure that the service to be downgraded is provided in an `NgModule`\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app `NgModule`\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"example-app\"}\n *\n * <div class=\"alert is-important\">\n *\n *   When using `downgradeModule()`, downgraded injectables will not be available until the Angular\n *   module that provides them is instantiated. In order to be safe, you need to ensure that the\n *   downgraded injectables are not used anywhere _outside_ the part of the app where it is\n *   guaranteed that their module has been instantiated.\n *\n *   For example, it is _OK_ to use a downgraded service in an upgraded component that is only used\n *   from a downgraded Angular component provided by the same Angular module as the injectable, but\n *   it is _not OK_ to use it in an AngularJS component that may be used independently of Angular or\n *   use it in a downgraded Angular component from a different module.\n *\n * </div>\n *\n * @param token an `InjectionToken` that identifies a service provided from Angular.\n * @param downgradedModule the name of the downgraded module (if any) that the injectable\n * \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose injector will\n * be used for instantiating the injectable.<br />\n * (This option is only necessary when using `downgradeModule()` to downgrade more than one Angular\n * module.)\n *\n * @returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * @publicApi\n */\nexport function downgradeInjectable(token: any, downgradedModule: string = ''): Function {\n  const factory = function($injector: IInjectorService) {\n    const injectorKey = `${INJECTOR_KEY}${downgradedModule}`;\n    const injectableName = isFunction(token) ? getTypeName(token) : String(token);\n    const attemptedAction = `instantiating injectable '${injectableName}'`;\n\n    validateInjectionKey($injector, downgradedModule, injectorKey, attemptedAction);\n\n    const injector: Injector = $injector.get(injectorKey);\n    return injector.get(token);\n  };\n  (factory as any)['$inject'] = [$INJECTOR];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('8.2.14');\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {IInjectorService} from '../../src/common/src/angular1';\n\n// We have to do a little dance to get the ng1 injector into the module injector.\n// We store the ng1 injector so that the provider in the module injector can access it\n// Then we \"get\" the ng1 injector from the module injector, which triggers the provider to read\n// the stored injector and release the reference to it.\nlet tempInjectorRef: IInjectorService|null = null;\nexport function setTempInjectorRef(injector: IInjectorService) {\n  tempInjectorRef = injector;\n}\nexport function injectorFactory() {\n  if (!tempInjectorRef) {\n    throw new Error('Trying to get the AngularJS injector before it being set.');\n  }\n\n  const injector: IInjectorService = tempInjectorRef;\n  tempInjectorRef = null;  // clear the value to prevent memory leaks\n  return injector;\n}\n\nexport function rootScopeFactory(i: IInjectorService) {\n  return i.get('$rootScope');\n}\n\nexport function compileFactory(i: IInjectorService) {\n  return i.get('$compile');\n}\n\nexport function parseFactory(i: IInjectorService) {\n  return i.get('$parse');\n}\n\nexport const angular1Providers = [\n  // We must use exported named functions for the ng2 factories to keep the compiler happy:\n  // > Metadata collected contains an error that will be reported at runtime:\n  // >   Function calls are not supported.\n  // >   Consider replacing the function or lambda with a reference to an exported function\n  {provide: '$injector', useFactory: injectorFactory, deps: []},\n  {provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector']},\n  {provide: '$compile', useFactory: compileFactory, deps: ['$injector']},\n  {provide: '$parse', useFactory: parseFactory, deps: ['$injector']}\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from '@angular/core';\n\n\nexport class NgAdapterInjector implements Injector {\n  constructor(private modInjector: Injector) {}\n\n  // When Angular locate a service in the component injector tree, the not found value is set to\n  // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n  // injector.\n  // AngularJS only supports a single tree and should always check the module injector.\n  get(token: any, notFoundValue?: any): any {\n    if (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n      return notFoundValue;\n    }\n\n    return this.modInjector.get(token, notFoundValue);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, NgModuleFactory, NgModuleRef, StaticProvider} from '@angular/core';\nimport {platformBrowser} from '@angular/platform-browser';\n\nimport {IInjectorService, IProvideService, module_ as angularModule} from '../../src/common/src/angular1';\nimport {$INJECTOR, $PROVIDE, DOWNGRADED_MODULE_COUNT_KEY, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_APP_TYPE_KEY, UPGRADE_MODULE_NAME} from '../../src/common/src/constants';\nimport {LazyModuleRef, UpgradeAppType, getDowngradedModuleCount, isFunction} from '../../src/common/src/util';\n\nimport {angular1Providers, setTempInjectorRef} from './angular1_providers';\nimport {NgAdapterInjector} from './util';\n\n\nlet moduleUid = 0;\n\n/**\n * @description\n *\n * A helper function for creating an AngularJS module that can bootstrap an Angular module\n * \"on-demand\" (possibly lazily) when a {@link downgradeComponent downgraded component} needs to be\n * instantiated.\n *\n * *Part of the [upgrade/static](api?query=upgrade/static) library for hybrid upgrade apps that\n * support AoT compilation.*\n *\n * It allows loading/bootstrapping the Angular part of a hybrid application lazily and not having to\n * pay the cost up-front. For example, you can have an AngularJS application that uses Angular for\n * specific routes and only instantiate the Angular modules if/when the user visits one of these\n * routes.\n *\n * The Angular module will be bootstrapped once (when requested for the first time) and the same\n * reference will be used from that point onwards.\n *\n * `downgradeModule()` requires either an `NgModuleFactory` or a function:\n * - `NgModuleFactory`: If you pass an `NgModuleFactory`, it will be used to instantiate a module\n *   using `platformBrowser`'s {@link PlatformRef#bootstrapModuleFactory bootstrapModuleFactory()}.\n * - `Function`: If you pass a function, it is expected to return a promise resolving to an\n *   `NgModuleRef`. The function is called with an array of extra {@link StaticProvider Providers}\n *   that are expected to be available from the returned `NgModuleRef`'s `Injector`.\n *\n * `downgradeModule()` returns the name of the created AngularJS wrapper module. You can use it to\n * declare a dependency in your main AngularJS module.\n *\n * {@example upgrade/static/ts/lite/module.ts region=\"basic-how-to\"}\n *\n * For more details on how to use `downgradeModule()` see\n * [Upgrading for Performance](guide/upgrade-performance).\n *\n * @usageNotes\n *\n * Apart from `UpgradeModule`, you can use the rest of the `upgrade/static` helpers as usual to\n * build a hybrid application. Note that the Angular pieces (e.g. downgraded services) will not be\n * available until the downgraded module has been bootstrapped, i.e. by instantiating a downgraded\n * component.\n *\n * <div class=\"alert is-important\">\n *\n *   You cannot use `downgradeModule()` and `UpgradeModule` in the same hybrid application.<br />\n *   Use one or the other.\n *\n * </div>\n *\n * ### Differences with `UpgradeModule`\n *\n * Besides their different API, there are two important internal differences between\n * `downgradeModule()` and `UpgradeModule` that affect the behavior of hybrid applications:\n *\n * 1. Unlike `UpgradeModule`, `downgradeModule()` does not bootstrap the main AngularJS module\n *    inside the {@link NgZone Angular zone}.\n * 2. Unlike `UpgradeModule`, `downgradeModule()` does not automatically run a\n *    [$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest) when changes are\n *    detected in the Angular part of the application.\n *\n * What this means is that applications using `UpgradeModule` will run change detection more\n * frequently in order to ensure that both frameworks are properly notified about possible changes.\n * This will inevitably result in more change detection runs than necessary.\n *\n * `downgradeModule()`, on the other side, does not try to tie the two change detection systems as\n * tightly, restricting the explicit change detection runs only to cases where it knows it is\n * necessary (e.g. when the inputs of a downgraded component change). This improves performance,\n * especially in change-detection-heavy applications, but leaves it up to the developer to manually\n * notify each framework as needed.\n *\n * For a more detailed discussion of the differences and their implications, see\n * [Upgrading for Performance](guide/upgrade-performance).\n *\n * <div class=\"alert is-helpful\">\n *\n *   You can manually trigger a change detection run in AngularJS using\n *   [scope.$apply(...)](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply) or\n *   [$rootScope.$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest).\n *\n *   You can manually trigger a change detection run in Angular using {@link NgZone#run\n *   ngZone.run(...)}.\n *\n * </div>\n *\n * ### Downgrading multiple modules\n *\n * It is possible to downgrade multiple modules and include them in an AngularJS application. In\n * that case, each downgraded module will be bootstrapped when an associated downgraded component or\n * injectable needs to be instantiated.\n *\n * Things to keep in mind, when downgrading multiple modules:\n *\n * - Each downgraded component/injectable needs to be explicitly associated with a downgraded\n *   module. See `downgradeComponent()` and `downgradeInjectable()` for more details.\n *\n * - If you want some injectables to be shared among all downgraded modules, you can provide them as\n *   `StaticProvider`s, when creating the `PlatformRef` (e.g. via `platformBrowser` or\n *   `platformBrowserDynamic`).\n *\n * - When using {@link PlatformRef#bootstrapmodule `bootstrapModule()`} or\n *   {@link PlatformRef#bootstrapmodulefactory `bootstrapModuleFactory()`} to bootstrap the\n *   downgraded modules, each one is considered a \"root\" module. As a consequence, a new instance\n *   will be created for every injectable provided in `\"root\"` (via\n *   {@link Injectable#providedIn `providedIn`}).\n *   If this is not your intention, you can have a shared module (that will act as act as the \"root\"\n *   module) and create all downgraded modules using that module's injector:\n *\n *   {@example upgrade/static/ts/lite-multi-shared/module.ts region=\"shared-root-module\"}\n *\n * @publicApi\n */\nexport function downgradeModule<T>(\n    moduleFactoryOrBootstrapFn: NgModuleFactory<T>|\n    ((extraProviders: StaticProvider[]) => Promise<NgModuleRef<T>>)): string {\n  const lazyModuleName = `${UPGRADE_MODULE_NAME}.lazy${++moduleUid}`;\n  const lazyModuleRefKey = `${LAZY_MODULE_REF}${lazyModuleName}`;\n  const lazyInjectorKey = `${INJECTOR_KEY}${lazyModuleName}`;\n\n  const bootstrapFn = isFunction(moduleFactoryOrBootstrapFn) ?\n      moduleFactoryOrBootstrapFn :\n      (extraProviders: StaticProvider[]) =>\n          platformBrowser(extraProviders).bootstrapModuleFactory(moduleFactoryOrBootstrapFn);\n\n  let injector: Injector;\n\n  // Create an ng1 module to bootstrap.\n  angularModule(lazyModuleName, [])\n      .constant(UPGRADE_APP_TYPE_KEY, UpgradeAppType.Lite)\n      .factory(INJECTOR_KEY, [lazyInjectorKey, identity])\n      .factory(\n          lazyInjectorKey,\n          () => {\n            if (!injector) {\n              throw new Error(\n                  'Trying to get the Angular injector before bootstrapping the corresponding ' +\n                  'Angular module.');\n            }\n            return injector;\n          })\n      .factory(LAZY_MODULE_REF, [lazyModuleRefKey, identity])\n      .factory(\n          lazyModuleRefKey,\n          [\n            $INJECTOR,\n            ($injector: IInjectorService) => {\n              setTempInjectorRef($injector);\n              const result: LazyModuleRef = {\n                promise: bootstrapFn(angular1Providers).then(ref => {\n                  injector = result.injector = new NgAdapterInjector(ref.injector);\n                  injector.get($INJECTOR);\n\n                  return injector;\n                })\n              };\n              return result;\n            }\n          ])\n      .config([\n        $INJECTOR, $PROVIDE,\n        ($injector: IInjectorService, $provide: IProvideService) => {\n          $provide.constant(DOWNGRADED_MODULE_COUNT_KEY, getDowngradedModuleCount($injector) + 1);\n        }\n      ]);\n\n  return lazyModuleName;\n}\n\nfunction identity<T = any>(x: T): T {\n  return x;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, Injector, SimpleChanges} from '@angular/core';\n\nimport {DirectiveRequireProperty, IAugmentedJQuery, ICloneAttachFunction, ICompileService, IController, IControllerService, IDirective, IHttpBackendService, IInjectorService, ILinkFn, IScope, ITemplateCacheService, SingleOrListOrMap, element as angularElement} from './angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE} from './constants';\nimport {controllerKey, directiveNormalize, isFunction} from './util';\n\n\n\n// Constants\nconst REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n\n// Interfaces\nexport interface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\nexport interface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\n// Classes\nexport class UpgradeHelper {\n  public readonly $injector: IInjectorService;\n  public readonly element: Element;\n  public readonly $element: IAugmentedJQuery;\n  public readonly directive: IDirective;\n\n  private readonly $compile: ICompileService;\n  private readonly $controller: IControllerService;\n\n  constructor(\n      private injector: Injector, private name: string, elementRef: ElementRef,\n      directive?: IDirective) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angularElement(this.element);\n\n    this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n  }\n\n  static getDirective($injector: IInjectorService, name: string): IDirective {\n    const directives: IDirective[] = $injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error(`Only support single directive definition for: ${name}`);\n    }\n\n    const directive = directives[0];\n\n    // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n    // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n    if (directive.compile && !directive.link) notSupported(name, 'compile');\n    if (directive.replace) notSupported(name, 'replace');\n    if (directive.terminal) notSupported(name, 'terminal');\n\n    return directive;\n  }\n\n  static getTemplate(\n      $injector: IInjectorService, directive: IDirective, fetchRemoteTemplate = false,\n      $element?: IAugmentedJQuery): string|Promise<string> {\n    if (directive.template !== undefined) {\n      return getOrCall<string>(directive.template, $element);\n    } else if (directive.templateUrl) {\n      const $templateCache = $injector.get($TEMPLATE_CACHE) as ITemplateCacheService;\n      const url = getOrCall<string>(directive.templateUrl, $element);\n      const template = $templateCache.get(url);\n\n      if (template !== undefined) {\n        return template;\n      } else if (!fetchRemoteTemplate) {\n        throw new Error('loading directive templates asynchronously is not supported');\n      }\n\n      return new Promise((resolve, reject) => {\n        const $httpBackend = $injector.get($HTTP_BACKEND) as IHttpBackendService;\n        $httpBackend('GET', url, null, (status: number, response: string) => {\n          if (status === 200) {\n            resolve($templateCache.put(url, response));\n          } else {\n            reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Directive '${directive.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  buildController(controllerType: IController, $scope: IScope) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance.\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const locals = {'$scope': $scope, '$element': this.$element};\n    const controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n\n    this.$element.data !(controllerKey(this.directive.name !), controller);\n\n    return controller;\n  }\n\n  compileTemplate(template?: string): ILinkFn {\n    if (template === undefined) {\n      template =\n          UpgradeHelper.getTemplate(this.$injector, this.directive, false, this.$element) as string;\n    }\n\n    return this.compileHtml(template);\n  }\n\n  onDestroy($scope: IScope, controllerInstance?: any) {\n    if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n      controllerInstance.$onDestroy();\n    }\n    $scope.$destroy();\n\n    // Clean the jQuery/jqLite data on the component+child elements.\n    // Equivelent to how jQuery/jqLite invoke `cleanData` on an Element (this.element)\n    //  https://github.com/jquery/jquery/blob/e743cbd28553267f955f71ea7248377915613fd9/src/manipulation.js#L223\n    //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/jqLite.js#L306-L312\n    // `cleanData` will invoke the AngularJS `$destroy` DOM event\n    //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/Angular.js#L1911-L1924\n    angularElement.cleanData([this.element]);\n    angularElement.cleanData(this.element.querySelectorAll('*'));\n  }\n\n  prepareTransclusion(): ILinkFn|undefined {\n    const transclude = this.directive.transclude;\n    const contentChildNodes = this.extractChildNodes();\n    const attachChildrenFn: ILinkFn = (scope, cloneAttachFn) => {\n      // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n      // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n      // there will be no transclusion scope here.\n      // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n      scope = scope || {$destroy: () => undefined};\n      return cloneAttachFn !($template, scope);\n    };\n    let $template = contentChildNodes;\n\n    if (transclude) {\n      const slots = Object.create(null);\n\n      if (typeof transclude === 'object') {\n        $template = [];\n\n        const slotMap = Object.create(null);\n        const filledSlots = Object.create(null);\n\n        // Parse the element selectors.\n        Object.keys(transclude).forEach(slotName => {\n          let selector = transclude[slotName];\n          const optional = selector.charAt(0) === '?';\n          selector = optional ? selector.substring(1) : selector;\n\n          slotMap[selector] = slotName;\n          slots[slotName] = null;            // `null`: Defined but not yet filled.\n          filledSlots[slotName] = optional;  // Consider optional slots as filled.\n        });\n\n        // Add the matching elements into their slot.\n        contentChildNodes.forEach(node => {\n          const slotName = slotMap[directiveNormalize(node.nodeName.toLowerCase())];\n          if (slotName) {\n            filledSlots[slotName] = true;\n            slots[slotName] = slots[slotName] || [];\n            slots[slotName].push(node);\n          } else {\n            $template.push(node);\n          }\n        });\n\n        // Check for required slots that were not filled.\n        Object.keys(filledSlots).forEach(slotName => {\n          if (!filledSlots[slotName]) {\n            throw new Error(`Required transclusion slot '${slotName}' on directive: ${this.name}`);\n          }\n        });\n\n        Object.keys(slots).filter(slotName => slots[slotName]).forEach(slotName => {\n          const nodes = slots[slotName];\n          slots[slotName] = (scope: IScope, cloneAttach: ICloneAttachFunction) => {\n            return cloneAttach !(nodes, scope);\n          };\n        });\n      }\n\n      // Attach `$$slots` to default slot transclude fn.\n      attachChildrenFn.$$slots = slots;\n\n      // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n      // removes all text content after the first interpolation and updates it later, after\n      // evaluating the expressions. This would result in AngularJS failing to recognize text\n      // nodes that start with an interpolation as transcluded content and use the fallback\n      // content instead.\n      // To avoid this issue, we add a\n      // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n      // to empty text nodes (which can only be a result of Angular removing their initial content).\n      // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n      //       will still fail to be detected by AngularJS v1.6+\n      $template.forEach(node => {\n        if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n          node.nodeValue = '\\u200C';\n        }\n      });\n    }\n\n    return attachChildrenFn;\n  }\n\n  resolveAndBindRequiredControllers(controllerInstance: IControllerInstance|null) {\n    const directiveRequire = this.getDirectiveRequire();\n    const requiredControllers = this.resolveRequire(directiveRequire);\n\n    if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n      const requiredControllersMap = requiredControllers as{[key: string]: IControllerInstance};\n      Object.keys(requiredControllersMap).forEach(key => {\n        controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    return requiredControllers;\n  }\n\n  private compileHtml(html: string): ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n\n  private extractChildNodes(): Node[] {\n    const childNodes: Node[] = [];\n    let childNode: Node|null;\n\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n\n  private getDirectiveRequire(): DirectiveRequireProperty {\n    const require = this.directive.require || (this.directive.controller && this.directive.name) !;\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const value = require[key];\n        const match = value.match(REQUIRE_PREFIX_RE) !;\n        const name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n\n  private resolveRequire(require: DirectiveRequireProperty, controllerInstance?: any):\n      SingleOrListOrMap<IControllerInstance>|null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(req));\n    } else if (typeof require === 'object') {\n      const value: {[key: string]: IControllerInstance} = {};\n      Object.keys(require).forEach(key => value[key] = this.resolveRequire(require[key]) !);\n      return value;\n    } else if (typeof require === 'string') {\n      const match = require.match(REQUIRE_PREFIX_RE) !;\n      const inheritType = match[1] || match[3];\n\n      const name = require.substring(match[0].length);\n      const isOptional = !!match[2];\n      const searchParents = !!inheritType;\n      const startOnParent = inheritType === '^^';\n\n      const ctrlKey = controllerKey(name);\n      const elem = startOnParent ? this.$element.parent !() : this.$element;\n      const value = searchParents ? elem.inheritedData !(ctrlKey) : elem.data !(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${this.name}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized 'require' syntax on upgraded directive '${this.name}': ${require}`);\n    }\n  }\n}\n\nfunction getOrCall<T>(property: T | Function, ...args: any[]): T {\n  return isFunction(property) ? property(...args) : property;\n}\n\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap<T>(value: SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n\nfunction notSupported(name: string, feature: string) {\n  throw new Error(`Upgraded directive '${name}' contains unsupported feature: '${feature}'.`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, ÉµlooseIdentical as looseIdentical} from '@angular/core';\n\nimport {IAttributes, IAugmentedJQuery, IDirective, IDirectivePrePost, IInjectorService, ILinkFn, IScope, ITranscludeFunction} from '../../src/common/src/angular1';\nimport {$SCOPE} from '../../src/common/src/constants';\nimport {IBindingDestination, IControllerInstance, UpgradeHelper} from '../../src/common/src/upgrade_helper';\nimport {isFunction} from '../../src/common/src/util';\n\nconst NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\n/**\n * @description\n *\n * A helper class that allows an AngularJS component to be used from Angular.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation.*\n *\n * This helper class should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @usageNotes\n * ### Examples\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero\"}\n *\n * We must create a `Directive` that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the `UpgradeComponent`\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the `ElementRef` and `Injector` for the component wrapper\n *\n * @publicApi\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck, OnDestroy {\n  private helper: UpgradeHelper;\n\n  private $injector: IInjectorService;\n\n  private element: Element;\n  private $element: IAugmentedJQuery;\n  private $componentScope: IScope;\n\n  private directive: IDirective;\n  private bindings: Bindings;\n\n  // TODO(issue/24571): remove '!'.\n  private controllerInstance !: IControllerInstance;\n  // TODO(issue/24571): remove '!'.\n  private bindingDestination !: IBindingDestination;\n\n  // We will be instantiating the controller in the `ngOnInit` hook, when the\n  // first `ngOnChanges` will have been already triggered. We store the\n  // `SimpleChanges` and \"play them back\" later.\n  // TODO(issue/24571): remove '!'.\n  private pendingChanges !: SimpleChanges | null;\n\n  // TODO(issue/24571): remove '!'.\n  private unregisterDoCheckWatcher !: Function;\n\n  /**\n   * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n   * Instead you should derive a new class from this one and call the super constructor\n   * from the base class.\n   *\n   * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\" }\n   *\n   * * The `name` parameter should be the name of the AngularJS directive.\n   * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n   *   injection into the base class constructor.\n   */\n  constructor(private name: string, private elementRef: ElementRef, private injector: Injector) {\n    this.helper = new UpgradeHelper(injector, name, elementRef);\n\n    this.$injector = this.helper.$injector;\n\n    this.element = this.helper.element;\n    this.$element = this.helper.$element;\n\n    this.directive = this.helper.directive;\n    this.bindings = this.initializeBindings(this.directive);\n\n    // We ask for the AngularJS scope from the Angular injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    this.initializeOutputs();\n  }\n\n  ngOnInit() {\n    // Collect contents, insert and compile template\n    const attachChildNodes: ILinkFn|undefined = this.helper.prepareTransclusion();\n    const linkFn = this.helper.compileTemplate();\n\n    // Instantiate controller\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType) {\n      this.controllerInstance = this.helper.buildController(controllerType, this.$componentScope);\n    } else if (bindToController) {\n      throw new Error(\n          `Upgraded directive '${this.directive.name}' specifies 'bindToController' but no controller.`);\n    }\n\n    // Set up outputs\n    this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n    this.bindOutputs();\n\n    // Require other controllers\n    const requiredControllers =\n        this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n\n    // Hook: $onChanges\n    if (this.pendingChanges) {\n      this.forwardChanges(this.pendingChanges);\n      this.pendingChanges = null;\n    }\n\n    // Hook: $onInit\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    // Hook: $doCheck\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      const callDoCheck = () => this.controllerInstance.$doCheck !();\n\n      this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n      callDoCheck();\n    }\n\n    // Linking\n    const link = this.directive.link;\n    const preLink = (typeof link == 'object') && (link as IDirectivePrePost).pre;\n    const postLink = (typeof link == 'object') ? (link as IDirectivePrePost).post : link;\n    const attrs: IAttributes = NOT_SUPPORTED;\n    const transcludeFn: ITranscludeFunction = NOT_SUPPORTED;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    linkFn(this.$componentScope, null !, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    // Hook: $postLink\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.bindingDestination) {\n      this.pendingChanges = changes;\n    } else {\n      this.forwardChanges(changes);\n    }\n  }\n\n  ngDoCheck() {\n    const twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const newValue = this.bindingDestination[propName];\n      const oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const outputName = propertyToOutputMap[propName];\n        const eventEmitter: EventEmitter<any> = (this as any)[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (isFunction(this.unregisterDoCheckWatcher)) {\n      this.unregisterDoCheckWatcher();\n    }\n    this.helper.onDestroy(this.$componentScope, this.controllerInstance);\n  }\n\n  private initializeBindings(directive: IDirective) {\n    const btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope !).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const definition = context[propName];\n        const bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            let json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n\n  private initializeOutputs() {\n    // Initialize the outputs for `=` and `&` bindings\n    this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n        .forEach(propName => {\n          const outputName = this.bindings.propertyToOutputMap[propName];\n          (this as any)[outputName] = new EventEmitter();\n        });\n  }\n\n  private bindOutputs() {\n    // Bind `&` bindings to the corresponding outputs\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const outputName = this.bindings.propertyToOutputMap[propName];\n      const emitter = (this as any)[outputName];\n\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n\n  private forwardChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => this.bindingDestination[propName] = changes[propName].currentValue);\n\n    if (isFunction(this.bindingDestination.$onChanges)) {\n      this.bindingDestination.$onChanges(changes);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, NgModule, NgZone, Testability, isDevMode} from '@angular/core';\n\nimport {IInjectorService, IIntervalService, IProvideService, ITestabilityService, bootstrap, element as angularElement, module_ as angularModule} from '../../src/common/src/angular1';\nimport {$$TESTABILITY, $DELEGATE, $INJECTOR, $INTERVAL, $PROVIDE, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_APP_TYPE_KEY, UPGRADE_MODULE_NAME} from '../../src/common/src/constants';\nimport {LazyModuleRef, UpgradeAppType, controllerKey} from '../../src/common/src/util';\n\nimport {angular1Providers, setTempInjectorRef} from './angular1_providers';\nimport {NgAdapterInjector} from './util';\n\n\n\n/**\n * @description\n *\n * An `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * *Part of the [upgrade/static](api?query=upgrade/static)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * The `upgrade/static` package contains helpers that allow AngularJS and Angular components\n * to be used together inside a hybrid upgrade application, which supports AoT compilation.\n *\n * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n *\n * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n *    that it can be used in an Angular template. See `UpgradeComponent`.\n * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n *    that it can be used in an AngularJS template. See `downgradeComponent`.\n * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n *    service so that it can be injected into an Angular context. See\n *    {@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n *    so that it can be injected into an AngularJS context. See `downgradeInjectable`.\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * @usageNotes\n *\n * ```ts\n * import {UpgradeModule} from '@angular/upgrade/static';\n * ```\n *\n * See also the {@link UpgradeModule#examples examples} below.\n *\n * ### Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside the Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n *    defining an Angular directive, which bootstraps the AngularJS component at its location\n *    in the DOM. See `UpgradeComponent`.\n * 6. An Angular component can be \"downgraded\" to an AngularJS component. This is achieved by\n *    defining an AngularJS directive, which bootstraps the Angular component at its location\n *    in the DOM. See `downgradeComponent`.\n * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n *    the framework doing the instantiation. The other framework then instantiates and owns the\n *    view for that component.\n *    1. This implies that the component bindings will always follow the semantics of the\n *       instantiation framework.\n *    2. The DOM attributes are parsed by the framework that owns the current template. So\n *       attributes in AngularJS templates must use kebab-case, while AngularJS templates must use\n *       camelCase.\n *    3. However the template binding syntax will always use the Angular style, e.g. square\n *       brackets (`[...]`) for property binding.\n * 8. Angular is bootstrapped first; AngularJS is bootstrapped second. AngularJS always owns the\n *    root component of the application.\n * 9. The new application is running in an Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### The `UpgradeModule` class\n *\n * This class is an `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * * Core AngularJS services\n *   Importing this `NgModule` will add providers for the core\n *   [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n *\n * * Bootstrap\n *   The runtime instance of this class contains a {@link UpgradeModule#bootstrap `bootstrap()`}\n *   method, which you use to bootstrap the top level AngularJS module onto an element in the\n *   DOM for the hybrid upgrade app.\n *\n *   It also contains properties to access the {@link UpgradeModule#injector root injector}, the\n *   bootstrap `NgZone` and the\n *   [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n *\n * ### Examples\n *\n * Import the `UpgradeModule` into your top level {@link NgModule Angular `NgModule`}.\n *\n * {@example upgrade/static/ts/full/module.ts region='ng2-module'}\n *\n * Then inject `UpgradeModule` into your Angular `NgModule` and use it to bootstrap the top level\n * [AngularJS module](https://docs.angularjs.org/api/ng/type/angular.Module) in the\n * `ngDoBootstrap()` method.\n *\n * {@example upgrade/static/ts/full/module.ts region='bootstrap-ng1'}\n *\n * Finally, kick off the whole process, by bootstraping your top level Angular `NgModule`.\n *\n * {@example upgrade/static/ts/full/module.ts region='bootstrap-ng2'}\n *\n * {@a upgrading-an-angular-1-service}\n * ### Upgrading an AngularJS service\n *\n * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n * following recipe:\n *\n * Let's say you have an AngularJS service:\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng1-text-formatter-service\"}\n *\n * Then you should define an Angular provider to be included in your `NgModule` `providers`\n * property.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"upgrade-ng1-service\"}\n *\n * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n * or service.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"use-ng1-upgraded-service\"}\n *\n * @publicApi\n */\n@NgModule({providers: [angular1Providers]})\nexport class UpgradeModule {\n  /**\n   * The AngularJS `$injector` for the upgrade application.\n   */\n  public $injector: any /*angular.IInjectorService*/;\n  /** The Angular Injector **/\n  public injector: Injector;\n\n  constructor(\n      /** The root `Injector` for the upgrade application. */\n      injector: Injector,\n      /** The bootstrap zone for the upgrade application */\n      public ngZone: NgZone) {\n    this.injector = new NgAdapterInjector(injector);\n  }\n\n  /**\n   * Bootstrap an AngularJS application from this NgModule\n   * @param element the element on which to bootstrap the AngularJS application\n   * @param [modules] the AngularJS modules to bootstrap for this application\n   * @param [config] optional extra AngularJS bootstrap configuration\n   */\n  bootstrap(\n      element: Element, modules: string[] = [], config?: any /*angular.IAngularBootstrapConfig*/) {\n    const INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n\n    // Create an ng1 module to bootstrap\n    const initModule =\n        angularModule(INIT_MODULE_NAME, [])\n\n            .constant(UPGRADE_APP_TYPE_KEY, UpgradeAppType.Static)\n\n            .value(INJECTOR_KEY, this.injector)\n\n            .factory(\n                LAZY_MODULE_REF,\n                [INJECTOR_KEY, (injector: Injector) => ({ injector } as LazyModuleRef)])\n\n            .config([\n              $PROVIDE, $INJECTOR,\n              ($provide: IProvideService, $injector: IInjectorService) => {\n                if ($injector.has($$TESTABILITY)) {\n                  $provide.decorator($$TESTABILITY, [\n                    $DELEGATE,\n                    (testabilityDelegate: ITestabilityService) => {\n                      const originalWhenStable: Function = testabilityDelegate.whenStable;\n                      const injector = this.injector;\n                      // Cannot use arrow function below because we need the context\n                      const newWhenStable = function(callback: Function) {\n                        originalWhenStable.call(testabilityDelegate, function() {\n                          const ng2Testability: Testability = injector.get(Testability);\n                          if (ng2Testability.isStable()) {\n                            callback();\n                          } else {\n                            ng2Testability.whenStable(\n                                newWhenStable.bind(testabilityDelegate, callback));\n                          }\n                        });\n                      };\n\n                      testabilityDelegate.whenStable = newWhenStable;\n                      return testabilityDelegate;\n                    }\n                  ]);\n                }\n\n                if ($injector.has($INTERVAL)) {\n                  $provide.decorator($INTERVAL, [\n                    $DELEGATE,\n                    (intervalDelegate: IIntervalService) => {\n                      // Wrap the $interval service so that setInterval is called outside NgZone,\n                      // but the callback is still invoked within it. This is so that $interval\n                      // won't block stability, which preserves the behavior from AngularJS.\n                      let wrappedInterval =\n                          (fn: Function, delay: number, count?: number, invokeApply?: boolean,\n                           ...pass: any[]) => {\n                            return this.ngZone.runOutsideAngular(() => {\n                              return intervalDelegate((...args: any[]) => {\n                                // Run callback in the next VM turn - $interval calls\n                                // $rootScope.$apply, and running the callback in NgZone will\n                                // cause a '$digest already in progress' error if it's in the\n                                // same vm turn.\n                                setTimeout(() => { this.ngZone.run(() => fn(...args)); });\n                              }, delay, count, invokeApply, ...pass);\n                            });\n                          };\n\n                      (wrappedInterval as any)['cancel'] = intervalDelegate.cancel;\n                      return wrappedInterval;\n                    }\n                  ]);\n                }\n              }\n            ])\n\n            .run([\n              $INJECTOR,\n              ($injector: IInjectorService) => {\n                this.$injector = $injector;\n\n                // Initialize the ng1 $injector provider\n                setTempInjectorRef($injector);\n                this.injector.get($INJECTOR);\n\n                // Put the injector on the DOM, so that it can be \"required\"\n                angularElement(element).data !(controllerKey(INJECTOR_KEY), this.injector);\n\n                // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                // We need to do this in the next tick so that we don't prevent the bootup\n                // stabilizing\n                setTimeout(() => {\n                  const $rootScope = $injector.get('$rootScope');\n                  const subscription = this.ngZone.onMicrotaskEmpty.subscribe(() => {\n                    if ($rootScope.$$phase) {\n                      if (isDevMode()) {\n                        console.warn(\n                            'A digest was triggered while one was already in progress. This may mean that something is triggering digests outside the Angular zone.');\n                      }\n\n                      return $rootScope.$evalAsync();\n                    }\n\n                    return $rootScope.$digest();\n                  });\n                  $rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                }, 0);\n              }\n            ]);\n\n    const upgradeModule = angularModule(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const windowAngular = (window as any)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    // Bootstrap the AngularJS application inside our zone\n    this.ngZone.run(() => { bootstrap(element, [upgradeModule.name], config); });\n\n    // Patch resumeBootstrap() to run inside the ngZone\n    if (windowAngular.resumeBootstrap) {\n      const originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n      const ngZone = this.ngZone;\n      windowAngular.resumeBootstrap = function() {\n        let args = arguments;\n        windowAngular.resumeBootstrap = originalResumeBootstrap;\n        return ngZone.run(() => windowAngular.resumeBootstrap.apply(this, args));\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {getAngularJSGlobal, getAngularLib, setAngularJSGlobal, setAngularLib} from '../src/common/src/angular1';\nexport {downgradeComponent} from '../src/common/src/downgrade_component';\nexport {downgradeInjectable} from '../src/common/src/downgrade_injectable';\nexport {VERSION} from '../src/common/src/version';\nexport {downgradeModule} from './src/downgrade_module';\nexport {UpgradeComponent} from './src/upgrade_component';\nexport {UpgradeModule} from './src/upgrade_module';\n\n\n// This file only re-exports items to appear in the public api. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {angular1Providers as Éµangular_packages_upgrade_static_static_e,compileFactory as Éµangular_packages_upgrade_static_static_c,injectorFactory as Éµangular_packages_upgrade_static_static_a,parseFactory as Éµangular_packages_upgrade_static_static_d,rootScopeFactory as Éµangular_packages_upgrade_static_static_b} from './src/angular1_providers';"],"names":["Injector","ChangeDetectorRef","Testability","TestabilityRegistry","ApplicationRef","SimpleChange","NgZone","ComponentFactoryResolver","tslib_1.__extends","Version","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","platformBrowser","angularModule","angularElement","INITIAL_VALUE","looseIdentical","EventEmitter","element","isDevMode","NgModule"],"mappings":"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"}