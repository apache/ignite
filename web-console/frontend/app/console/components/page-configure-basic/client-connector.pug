
-var form = 'clientConnector'
-var connectionModel = `${model}.clientConnectorConfiguration`
-var connectionEnabled = `${connectionModel}.enabled`
-var sslEnabled = `${connectionEnabled} && ${connectionModel}.sslEnabled`
-var sslFactoryEnabled = `${sslEnabled} && !${connectionModel}.useIgniteSslContextFactory`

panel-collapsible(ng-form=form on-open=`ui.loadPanel('${form}')`)
    panel-title Client connector
    panel-description 
        | Configure client properties and associate your cluster with thin client api.
    panel-content.pca-form-row(ng-if=`ui.isPanelLoaded('${form}')`)
        .pca-form-column-12.pc-form-grid-row            
            .pc-form-grid-col-30
                +form-field__text({
                    label: 'Host:',
                    model: `${connectionModel}.host`,
                    name: '"ClientConnectorHost"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: 'localhost'
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Port:',
                    model: `${connectionModel}.port`,
                    name: '"ClientConnectorPort"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '10800',
                    min: '1025'
                })           
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Socket send buffer size:',
                    model: `${connectionModel}.socketSendBufferSize`,
                    name: '"ClientConnectorSocketSendBufferSize"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '0',
                    min: '0',
                    tip: 'Socket send buffer size<br/>\
                          When set to <b>0</b>, operation system default will be used'
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Socket receive buffer size:',
                    model: `${connectionModel}.socketReceiveBufferSize`,
                    name: '"ClientConnectorSocketReceiveBufferSize"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '0',
                    min: '0',
                    tip: 'Socket receive buffer size<br/>\
                          When set to <b>0</b>, operation system default will be used'
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Max connection cursors:',
                    model: `${connectionModel}.maxOpenCursorsPerConnection`,
                    name: '"ClientConnectorMaxOpenCursorsPerConnection"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '128',
                    min: '0',
                    tip: 'Max number of opened cursors per connection'
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Pool size:',
                    model: `${connectionModel}.threadPoolSize`,
                    name: '"ClientConnectorThreadPoolSize"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: 'max(8, availableProcessors)',
                    min: '1',
                    tip: 'Size of thread pool that is in charge of processing SQL requests'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'TCP_NODELAY option',
                    model: `${connectionModel}.tcpNoDelay`,
                    name: '"ClientConnectorTcpNoDelay"',
                    disabled: `!${connectionEnabled}`
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Idle timeout:',
                    model: `${connectionModel}.idleTimeout`,
                    name: '"ClientConnectorIdleTimeout"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '0',
                    min: '-1',
                    tip: 'Idle timeout for client connections<br/>\
                         Zero or negative means no timeout'
                })
            .pc-form-grid-col-30
                +form-field__number({
                    label: 'Handshake timeout:',
                    model: `${connectionModel}.handshakeTimeout`,
                    name: '"ClientConnectorHandshakeTimeout"',
                    disabled: `!(${connectionEnabled})`,
                    placeholder: '10000',
                    min: '-1',
                    tip: 'Handshake timeout for client connections<br/>\
                        Zero or negative means no timeout'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'Enable SSL',
                    model: `${connectionModel}.sslEnabled`,
                    name: '"ClientConnectorSslEnabled"',
                    disabled: `!${connectionEnabled}`,
                    tip: 'Enable secure socket layer on client connector'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'Enable SSL client auth',
                    model: `${connectionModel}.sslClientAuth`,
                    name: '"ClientConnectorSslClientAuth"',
                    disabled: `!(${sslEnabled})`,
                    tip: 'Flag indicating whether or not SSL client authentication is required'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'Use Ignite SSL',
                    model: `${connectionModel}.useIgniteSslContextFactory`,
                    name: '"ClientConnectorUseIgniteSslContextFactory"',
                    disabled: `!(${sslEnabled})`,
                    tip: 'Use SSL factory Ignite configuration'
                })
            .pc-form-grid-col-60
                +form-field__java-class({
                    label:'SSL factory:',
                    model: `${connectionModel}.sslContextFactory`,
                    name: '"ClientConnectorSslContextFactory"',
                    disabled: `!(${sslFactoryEnabled})`,
                    required: sslFactoryEnabled,
                    tip: 'If SSL factory specified then replication will be performed through secure SSL channel created with this factory<br/>\
                          If not present <b>isUseIgniteSslContextFactory()</b> flag will be evaluated<br/>\
                          If set to <b>true</b> and <b>IgniteConfiguration#getSslContextFactory()</b> exists, then Ignite SSL context factory will be used to establish secure connection'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'JDBC Enabled',
                    model: `${connectionModel}.jdbcEnabled`,
                    name: '"ClientConnectorJdbcEnabled"',
                    disabled: `!${connectionEnabled}`,
                    tip: 'Access through JDBC is enabled'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'ODBC Enabled',
                    model: `${connectionModel}.odbcEnabled`,
                    name: '"ClientConnectorOdbcEnabled"',
                    disabled: `!${connectionEnabled}`,
                    tip: 'Access through ODBC is enabled'
                })
            .pc-form-grid-col-60
                +form-field__checkbox({
                    label: 'Thin client enabled',
                    model: `${connectionModel}.thinClientEnabled`,
                    name: '"ClientConnectorThinCliEnabled"',
                    disabled: `!${connectionEnabled}`,
                    tip: 'Access through thin client is enabled'
                })

