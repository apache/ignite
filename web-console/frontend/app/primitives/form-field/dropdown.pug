//-
    Copyright 2019 GridGain Systems, Inc. and Contributors.

    Licensed under the GridGain Community Edition License (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

mixin form-field__dropdown({ label, model, name, disabled, required, multiple, placeholder, placeholderEmpty, options, optionLabel = 'label', tip, tipOpts, inline = false, change })
    -var errLbl = label ? label.substring(0, label.length - 1) : 'Field';

    mixin __form-field__input()
        if !inline && !multiple

            select(
                id=`{{ ${name} }}Input`
                name=`{{ ${name} }}`

                ng-model=model
                ng-disabled=disabled && `${disabled}`
                ng-required=required && `${required}`
                ng-ref='$input'
                ng-ref-read='ngModel'
                ng-change=change && `${change}`

                multiple=multiple ? '' : false
            )&attributes(attributes.attributes)
                if !multiple && placeholder
                    if placeholderEmpty
                        option(value='' hidden) #{`{{ ${options}.length > 0 ? '${placeholder}' : '${placeholderEmpty}' }}`}
                    else
                        option(value='' hidden translate=placeholder)
                option(
                    ng-repeat=`item in ${options} track by item.value`
                    ng-value='item.value'
                    ng-bind=`item.${optionLabel}`
                )

        else

            button.select-toggle(
                type='button'
                id=`{{ ${name} }}Input`
                name=`{{ ${name} }}`

                data-placeholder=placeholderEmpty ? `{{ ${options}.length > 0 ? '${placeholder}' : '${placeholderEmpty}' }}` : placeholder

                ng-model=model
                ng-disabled=disabled && `${disabled}`
                ng-required=required && `${required}`
                ng-ref='$input'
                ng-ref-read='ngModel'
                ng-change=change && `${change}`

                bs-select
                bs-options=`item.value as item.${optionLabel} for item in ${options}`

                data-multiple=multiple ? '1' : false

                tabindex='0'
            )&attributes(attributes.attributes)

    .form-field.form-field__dropdown.ignite-form-field(id=`{{ ${name} }}Field`)
        +form-field__label({ label, name, required, disabled })
            +form-field__tooltip({ title: tip, options: tipOpts })

        .form-field__control
            +__form-field__input(attributes=attributes)

        .form-field__errors(
            ng-messages=`$input.$error`
            ng-show=`($input.$dirty || $input.$touched || $input.$submitted) && $input.$invalid`
        )
            if required
                +form-field__error({ error: 'required', message: `${errLbl} could not be empty!` })

            if block
                block
