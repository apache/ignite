//-
    Copyright 2019 GridGain Systems, Inc. and Contributors.

    Licensed under the GridGain Community Edition License (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

include /app/helpers/jade/mixins

ul.tabs.tabs--blue(translate-namespace='admin.listOfRegisteredUsers.tabs')
    li(role='presentation' ng-class='{ active: $ctrl.groupBy === "user" }')
        a(ng-click='$ctrl.groupByUser()')
            span(translate='.users')
            span.badge.badge--blue(ng-hide='$ctrl.groupBy === "user"')
                | {{ $ctrl.gridOptions.data.length }}
            span.badge.badge--blue(ng-show='$ctrl.groupBy === "user"')
                | {{ $ctrl.filteredRows.length }}
    li(role='presentation' ng-class='{ active: $ctrl.groupBy === "company" }')
        a(ng-click='$ctrl.groupByCompany()')
            span(translate='.companies')
            span.badge.badge--blue {{ $ctrl.companies.length }}
    li(role='presentation' ng-class='{ active: $ctrl.groupBy === "country" }')
        a(ng-click='$ctrl.groupByCountry()')
            span(translate='.countries')
            span.badge.badge--blue {{ $ctrl.countries.length }}

.panel--ignite
    header.header-with-selector
        div(ng-if='!$ctrl.selected.length' translate-namespace='admin.listOfRegisteredUsers.gridTitles')
            span(ng-if='$ctrl.groupBy === "user"' translate='.users') List of registered users
            span(ng-if='$ctrl.groupBy === "company"' translate='.companies') List of registered companies
            span(ng-if='$ctrl.groupBy === "country"' translate='.countries') List of registered countries
            grid-column-selector(grid-api='$ctrl.gridApi')

        div(ng-if='$ctrl.selected.length')
            grid-item-selected(grid-api='$ctrl.gridApi')

        div(translate-namespace='admin.listOfRegisteredUsers')
            .form-field--inline
                +form-field__text({
                    label: 'Exclude:',
                    model: '$ctrl.params.companiesExclude',
                    name: '"exclude"',
                    placeholder: '.excludeInput.placeholder'
                })

            .form-field--inline
                +form-field__datepicker({
                    label: 'Period: from',
                    model: '$ctrl.params.startDate',
                    name: '"startDate"',
                    maxdate: '$ctrl.params.endDate'
                })
            .form-field--inline
                +form-field__datepicker({
                    label: 'to',
                    model: '$ctrl.params.endDate',
                    name: '"endDate"',
                    mindate: '$ctrl.params.startDate'
                })

            grid-export(file-name='$ctrl.exporterCsvFilename' grid-api='$ctrl.gridApi')

            +ignite-form-field-bsdropdown({
                label: '{{::"actionsButtonLabel"|translate}}',
                model: '$ctrl.action',
                name: 'action',
                options: '$ctrl.actionOptions'
            })

    .ignite-grid-table
        .grid.ui-grid--ignite.ui-grid-disabled-group-selection(ui-grid='$ctrl.gridOptions' ui-grid-resize-columns ui-grid-selection ui-grid-exporter ui-grid-pinning ui-grid-grouping ui-grid-hovering)

    grid-no-data(grid-api='$ctrl.gridApi')
        grid-no-data-filtered
            span(translate='admin.listOfRegisteredUsers.noData.nonEmptyFilterMessage')
