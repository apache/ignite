(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1156:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return StringBuilder});const o={month:"2-digit",day:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",hour12:!1};class StringBuilder{generatedBy(){return"This file was generated by Ignite Web Console (".concat((new Date).toLocaleString("en-US",o),")")}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;this.indent=t,this.deep=e,this.lines=[]}emptyLine(){return this.lines.push(""),this}append(t){return e.isArray(t)?e.forEach(t,t=>this.lines.push(e.repeat(" ",this.indent*this.deep)+t)):this.lines.push(e.repeat(" ",this.indent*this.deep)+t),this}startBlock(e){return this.append(e),this.deep++,this}endBlock(e){return this.deep--,this.append(e),this}asString(){return this.lines.join("\n")}}}).call(this,i(2))},1158:function(e,t,i){"use strict";i.d(t,"a",function(){return Caches});var o=i(148),a=i.n(o),n=i(292),r=i.n(n),s=i(103),l=i.n(s);class Caches{constructor(e,t){this.$http=e,this.JDBC_LINKS=t,this.cacheModes=[{value:"LOCAL",label:"LOCAL"},{value:"REPLICATED",label:"REPLICATED"},{value:"PARTITIONED",label:"PARTITIONED"}],this.atomicityModes=[{value:"ATOMIC",label:"ATOMIC"},{value:"TRANSACTIONAL",label:"TRANSACTIONAL"},{value:"TRANSACTIONAL_SNAPSHOT",label:"TRANSACTIONAL_SNAPSHOT"}],this.normalize=r()(["__v","space","clusters"]),this.nodeFilterKinds=[{value:"Custom",label:"Custom"},{value:null,label:"Not set"}],this.memoryModes=[{value:"ONHEAP_TIERED",label:"ONHEAP_TIERED"},{value:"OFFHEAP_TIERED",label:"OFFHEAP_TIERED"},{value:"OFFHEAP_VALUES",label:"OFFHEAP_VALUES"}],this.diskPageCompression=[{value:"SKIP_GARBAGE",label:"SKIP_GARBAGE"},{value:"ZSTD",label:"ZSTD"},{value:"LZ4",label:"LZ4"},{value:"SNAPPY",label:"SNAPPY"},{value:null,label:"Disabled"}],this.offHeapMode={_val:e=>null===e.offHeapMode||void 0===e.offHeapMode?-1:e.offHeapMode,onChange:e=>{switch(this.offHeapMode._val(e)){case 1:return e.offHeapMaxMemory=e.offHeapMaxMemory>0?e.offHeapMaxMemory:null;case 0:case-1:return e.offHeapMaxMemory=e.offHeapMode}},required:e=>"OFFHEAP_TIERED"===e.memoryMode,offheapDisabled:e=>!("OFFHEAP_TIERED"===e.memoryMode&&-1===this.offHeapMode._val(e)),default:"Disabled"},this.offHeapModes=[{value:-1,label:"Disabled"},{value:1,label:"Limited"},{value:0,label:"Unlimited"}],this.offHeapMaxMemory={min:1},this.memoryMode={default:"ONHEAP_TIERED",offheapAndDomains:e=>!("OFFHEAP_VALUES"===e.memoryMode&&e.domains.length)},this.evictionPolicy={required:e=>"ONHEAP_TIERED"===(e.memoryMode||this.memoryMode.default)&&e.offHeapMaxMemory>0&&!e.evictionPolicy.kind,values:[{value:"LRU",label:"LRU"},{value:"FIFO",label:"FIFO"},{value:"SORTED",label:"Sorted"},{value:null,label:"Not set"}],kind:{default:"Not set"},maxMemorySize:{min:e=>{const t=e[e.kind];return!t||((null===t.maxSize||void 0===t.maxSize?this.evictionPolicy.maxSize.default:t.maxSize)?0:1)},default:0},maxSize:{min:e=>{const t=e[e.kind];return!t||((null===t.maxMemorySize||void 0===t.maxMemorySize?this.evictionPolicy.maxMemorySize.default:t.maxMemorySize)?0:1)},default:1e5}},this.cacheStoreFactory={kind:{default:"Not set"},values:[{value:"CacheJdbcPojoStoreFactory",label:"JDBC POJO store factory"},{value:"CacheJdbcBlobStoreFactory",label:"JDBC BLOB store factory"},{value:"CacheHibernateBlobStoreFactory",label:"Hibernate BLOB store factory"},{value:null,label:"Not set"}],values_2_7:[{value:"HiveCacheJdbcPojoStoreFactory",label:"GridGain Hive JDBC POJO store factory"},{value:"CacheJdbcPojoStoreFactory",label:"JDBC POJO store factory"},{value:"CacheJdbcBlobStoreFactory",label:"JDBC BLOB store factory"},{value:"CacheHibernateBlobStoreFactory",label:"Hibernate BLOB store factory"},{value:null,label:"Not set"}],storeDisabledValueOff:(e,t)=>!(!e||!e.cacheStoreFactory.kind)||!t,storeEnabledReadOrWriteOn:e=>!e||!e.cacheStoreFactory.kind||(e.readThrough||e.writeThrough)},this.writeBehindFlush={min:e=>0===e.writeBehindFlushSize&&0===e.writeBehindFlushFrequency?1:0}}getCache(e){return this.$http.get("/api/v1/configuration/caches/".concat(e))}getBlankCache(){return{id:l()(),evictionPolicy:{},cacheMode:"PARTITIONED",atomicityMode:"ATOMIC",readFromBackup:!0,copyOnRead:!0,cacheStoreFactory:{CacheJdbcBlobStoreFactory:{connectVia:"DataSource"},CacheHibernateBlobStoreFactory:{hibernateProperties:[]}},writeBehindCoalescing:!0,nearConfiguration:{},sqlFunctionClasses:[],domains:[],eagerTtl:!0}}toShortCache(e){return{id:e.id,name:e.name,backups:e.backups,cacheMode:e.cacheMode,atomicityMode:e.atomicityMode}}getCacheBackupsCount(e){return this.shouldShowCacheBackupsCount(e)?e.backups||0:void 0}shouldShowCacheBackupsCount(e){return e&&"PARTITIONED"===e.cacheMode}jdbcDriverURL(e){return this.JDBC_LINKS[a()(e,"dialect")]}requiresProprietaryDrivers(e){return!!this.jdbcDriverURL(e)}}Caches.$inject=["$http","JDBC_LINKS"]},1159:function(e,t,i){"use strict";i.d(t,"a",function(){return IgniteClusterDefaults});const o={localHost:"0.0.0.0",activeOnStart:!0,cacheSanityCheckEnabled:!0,discovery:{localPort:47500,localPortRange:100,socketTimeout:5e3,ackTimeout:5e3,maxAckTimeout:6e5,networkTimeout:5e3,joinTimeout:0,threadPriority:10,heartbeatFrequency:2e3,maxMissedHeartbeats:1,maxMissedClientHeartbeats:5,topHistorySize:1e3,reconnectCount:10,statisticsPrintFrequency:0,ipFinderCleanFrequency:6e4,forceServerMode:!1,clientReconnectDisabled:!1,reconnectDelay:2e3,connectionRecoveryTimeout:1e4,soLinger:5,Multicast:{multicastGroup:"228.1.2.4",multicastPort:47400,responseWaitTime:500,addressRequestAttempts:2,localAddress:"0.0.0.0"},Jdbc:{initSchema:!1},SharedFs:{path:"disco/tcp"},ZooKeeper:{basePath:"/services",serviceName:"ignite",allowDuplicateRegistrations:!1,ExponentialBackoff:{baseSleepTimeMs:1e3,maxRetries:10},BoundedExponentialBackoffRetry:{baseSleepTimeMs:1e3,maxSleepTimeMs:2147483647,maxRetries:10},UntilElapsed:{maxElapsedTimeMs:6e4,sleepMsBetweenRetries:1e3},RetryNTimes:{n:10,sleepMsBetweenRetries:1e3},OneTime:{sleepMsBetweenRetry:1e3},Forever:{retryIntervalMs:1e3}},Kubernetes:{serviceName:"ignite",namespace:"default",masterUrl:"https://kubernetes.default.svc.cluster.local:443",accountToken:"/var/run/secrets/kubernetes.io/serviceaccount/token"}},atomics:{atomicSequenceReserveSize:1e3,cacheMode:{clsName:"org.apache.ignite.cache.CacheMode",value:"PARTITIONED"}},binary:{compactFooter:!0,typeConfigurations:{enum:!1,enumValues:{keyClsName:"java.lang.String",valClsName:"java.lang.Integer",entries:[]}}},collision:{kind:null,JobStealing:{activeJobsThreshold:95,waitJobsThreshold:0,messageExpireTime:1e3,maximumStealingAttempts:5,stealingEnabled:!0,stealingAttributes:{keyClsName:"java.lang.String",valClsName:"java.io.Serializable",items:[]}},PriorityQueue:{priorityAttributeKey:"grid.task.priority",jobPriorityAttributeKey:"grid.job.priority",defaultPriority:0,starvationIncrement:1,starvationPreventionEnabled:!0}},communication:{localPort:47100,localPortRange:100,sharedMemoryPort:48100,directBuffer:!1,directSendBuffer:!1,idleConnectionTimeout:3e4,connectTimeout:5e3,maxConnectTimeout:6e5,reconnectCount:10,socketSendBuffer:32768,socketReceiveBuffer:32768,messageQueueLimit:1024,tcpNoDelay:!0,ackSendThreshold:16,unacknowledgedMessagesBufferSize:0,socketWriteTimeout:2e3,selectorSpins:0,connectionsPerNode:1,usePairedConnections:!1,filterReachableAddresses:!1},networkTimeout:5e3,networkSendRetryDelay:1e3,networkSendRetryCount:3,discoveryStartupDelay:6e4,connector:{port:11211,portRange:100,idleTimeout:7e3,idleQueryCursorTimeout:6e5,idleQueryCursorCheckFrequency:6e4,receiveBufferSize:32768,sendBufferSize:32768,sendQueueLimit:0,directBuffer:!1,noDelay:!0,sslEnabled:!1,sslClientAuth:!1},deploymentMode:{clsName:"org.apache.ignite.configuration.DeploymentMode",value:"SHARED"},peerClassLoadingEnabled:!1,peerClassLoadingMissedResourcesCacheSize:100,peerClassLoadingThreadPoolSize:2,failoverSpi:{JobStealing:{maximumFailoverAttempts:5},Always:{maximumFailoverAttempts:5}},failureDetectionTimeout:1e4,clientFailureDetectionTimeout:3e4,logger:{Log4j:{level:{clsName:"org.apache.log4j.Level"}},Log4j2:{level:{clsName:"org.apache.logging.log4j.Level"}}},marshalLocalJobs:!1,marshallerCacheKeepAliveTime:1e4,metricsHistorySize:1e4,metricsLogFrequency:6e4,metricsUpdateFrequency:2e3,clockSyncSamples:8,clockSyncFrequency:12e4,timeServerPortBase:31100,timeServerPortRange:100,transactionConfiguration:{defaultTxConcurrency:{clsName:"org.apache.ignite.transactions.TransactionConcurrency",value:"PESSIMISTIC"},defaultTxIsolation:{clsName:"org.apache.ignite.transactions.TransactionIsolation",value:"REPEATABLE_READ"},defaultTxTimeout:0,pessimisticTxLogLinger:1e4,useJtaSynchronization:!1,txTimeoutOnPartitionMapExchange:0,deadlockTimeout:1e4},attributes:{keyClsName:"java.lang.String",valClsName:"java.lang.String",items:[]},odbcConfiguration:{endpointAddress:"0.0.0.0:10800..10810",socketSendBufferSize:0,socketReceiveBufferSize:0,maxOpenCursors:128},eventStorage:{Memory:{expireCount:1e4}},checkpointSpi:{S3:{bucketNameSuffix:"default-bucket",clientConfiguration:{protocol:{clsName:"com.amazonaws.Protocol",value:"HTTPS"},maxConnections:50,retryPolicy:{retryCondition:{clsName:"com.amazonaws.retry.PredefinedRetryPolicies"},backoffStrategy:{clsName:"com.amazonaws.retry.PredefinedRetryPolicies"},maxErrorRetry:{clsName:"com.amazonaws.retry.PredefinedRetryPolicies"},honorMaxErrorRetryInClientConfig:!1},maxErrorRetry:-1,socketTimeout:5e4,connectionTimeout:5e4,requestTimeout:0,socketSendBufferSizeHints:0,connectionTTL:-1,connectionMaxIdleMillis:6e4,responseMetadataCacheSize:50,useReaper:!0,useGzip:!1,preemptiveBasicProxyAuth:!1,useTcpKeepAlive:!1,cacheResponseMetadata:!0,clientExecutionTimeout:0,socketSendBufferSizeHint:0,socketReceiveBufferSizeHint:0,useExpectContinue:!0,useThrottleRetries:!0}},JDBC:{checkpointTableName:"CHECKPOINTS",keyFieldName:"NAME",keyFieldType:"VARCHAR",valueFieldName:"VALUE",valueFieldType:"BLOB",expireDateFieldName:"EXPIRE_DATE",expireDateFieldType:"DATETIME",numberOfRetries:2}},loadBalancingSpi:{RoundRobin:{perTask:!1},Adaptive:{loadProbe:{Job:{useAverage:!0},CPU:{useAverage:!0,useProcessors:!0,processorCoefficient:1},ProcessingTime:{useAverage:!0}}},WeightedRandom:{nodeWeight:10,useWeights:!1}},memoryConfiguration:{systemCacheInitialSize:41943040,systemCacheMaxSize:104857600,pageSize:2048,defaultMemoryPolicyName:"default",memoryPolicies:{name:"default",initialSize:268435456,pageEvictionMode:{clsName:"org.apache.ignite.configuration.DataPageEvictionMode",value:"DISABLED"},evictionThreshold:.9,emptyPagesPoolSize:100,metricsEnabled:!1,subIntervals:5,rateTimeInterval:6e4}},dataStorageConfiguration:{systemCacheInitialSize:41943040,systemCacheMaxSize:104857600,pageSize:4096,storagePath:"db",dataRegionConfigurations:{name:"default",initialSize:268435456,pageEvictionMode:{clsName:"org.apache.ignite.configuration.DataPageEvictionMode",value:"DISABLED"},evictionThreshold:.9,emptyPagesPoolSize:100,metricsEnabled:!1,metricsSubIntervalCount:5,metricsRateTimeInterval:6e4,checkpointPageBufferSize:0,lazyMemoryAllocation:!0},metricsEnabled:!1,alwaysWriteFullPages:!1,checkpointFrequency:18e4,checkpointPageBufferSize:268435456,checkpointThreads:4,checkpointWriteOrder:{clsName:"org.apache.ignite.configuration.CheckpointWriteOrder",value:"SEQUENTIAL"},walMode:{clsName:"org.apache.ignite.configuration.WALMode",value:"DEFAULT"},walPath:"db/wal",walArchivePath:"db/wal/archive",walSegments:10,walSegmentSize:67108864,walHistorySize:20,walFlushFrequency:2e3,walFsyncDelayNanos:1e3,walRecordIteratorBufferSize:67108864,lockWaitTime:1e4,walThreadLocalBufferSize:131072,metricsSubIntervalCount:5,metricsRateTimeInterval:6e4,maxWalArchiveSize:1073741824,walCompactionLevel:1,walPageCompression:{clsName:"org.apache.ignite.configuration.DiskPageCompression",value:"DISABLED"}},utilityCacheKeepAliveTime:6e4,serviceConfigurations:{maxPerNodeCount:0,totalCount:0},longQueryWarningTimeout:3e3,persistenceStoreConfiguration:{metricsEnabled:!1,alwaysWriteFullPages:!1,checkpointingFrequency:18e4,checkpointingPageBufferSize:268435456,checkpointingThreads:1,walSegments:10,walSegmentSize:67108864,walHistorySize:20,walFlushFrequency:2e3,walFsyncDelayNanos:1e3,walRecordIteratorBufferSize:67108864,lockWaitTime:1e4,rateTimeInterval:6e4,tlbSize:131072,subIntervals:5,walMode:{clsName:"org.apache.ignite.configuration.WALMode",value:"DEFAULT"},walAutoArchiveAfterInactivity:-1},sqlConnectorConfiguration:{port:10800,portRange:100,socketSendBufferSize:0,socketReceiveBufferSize:0,tcpNoDelay:!0,maxOpenCursorsPerConnection:128},clientConnectorConfiguration:{port:10800,portRange:100,socketSendBufferSize:0,socketReceiveBufferSize:0,tcpNoDelay:!0,maxOpenCursorsPerConnection:128,idleTimeout:0,jdbcEnabled:!0,odbcEnabled:!0,thinClientEnabled:!0,sslEnabled:!1,useIgniteSslContextFactory:!0,sslClientAuth:!1,handshakeTimeout:1e4},encryptionSpi:{Keystore:{keySize:256,masterKeyName:"ignite.master.key"}},failureHandler:{ignoredFailureTypes:{clsName:"org.apache.ignite.failure.FailureType"}},localEventListeners:{keyClsName:"org.apache.ignite.lang.IgnitePredicate",keyClsGenericType:"org.apache.ignite.events.Event",isKeyClsGenericTypeExtended:!0,valClsName:"int[]",valClsNameShow:"EVENTS",keyField:"className",valField:"eventTypes"},authenticationEnabled:!1,sqlQueryHistorySize:1e3,allSegmentationResolversPassRequired:!0,networkCompressionLevel:1,autoActivationEnabled:!0,rebalanceBatchSize:524288,rebalanceBatchesPrefetchCount:2,rebalanceTimeout:1e4,rebalanceThrottle:0};class IgniteClusterDefaults{constructor(){Object.assign(this,o)}}},1160:function(e,t,i){"use strict";i.d(t,"a",function(){return IgniteCacheDefaults});const o={cacheMode:{clsName:"org.apache.ignite.cache.CacheMode"},partitionLossPolicy:{clsName:"org.apache.ignite.cache.PartitionLossPolicy",value:"IGNORE"},atomicityMode:{clsName:"org.apache.ignite.cache.CacheAtomicityMode"},memoryMode:{clsName:"org.apache.ignite.cache.CacheMemoryMode",value:"ONHEAP_TIERED"},onheapCacheEnabled:!1,offHeapMaxMemory:-1,startSize:15e5,swapEnabled:!1,sqlOnheapRowCacheSize:10240,longQueryWarningTimeout:3e3,snapshotableIndex:!1,sqlEscapeAll:!1,storeKeepBinary:!1,loadPreviousValue:!1,cacheStoreFactory:{HiveCacheJdbcPojoStoreFactory:{batchSize:512,maximumWriteAttempts:2,parallelLoadCacheMinimumThreshold:512,sqlEscapeAll:!1,streamerEnabled:!0},CacheJdbcPojoStoreFactory:{batchSize:512,maximumWriteAttempts:2,parallelLoadCacheMinimumThreshold:512,sqlEscapeAll:!1}},storeConcurrentLoadAllThreshold:5,readThrough:!1,writeThrough:!1,writeBehindEnabled:!1,writeBehindBatchSize:512,writeBehindFlushSize:10240,writeBehindFlushFrequency:5e3,writeBehindFlushThreadCount:1,writeBehindCoalescing:!0,maxConcurrentAsyncOperations:500,defaultLockTimeout:0,atomicWriteOrderMode:{clsName:"org.apache.ignite.cache.CacheAtomicWriteOrderMode"},writeSynchronizationMode:{clsName:"org.apache.ignite.cache.CacheWriteSynchronizationMode",value:"PRIMARY_SYNC"},rebalanceMode:{clsName:"org.apache.ignite.cache.CacheRebalanceMode",value:"ASYNC"},rebalanceBatchSize:524288,rebalanceBatchesPrefetchCount:2,rebalanceOrder:0,rebalanceDelay:0,rebalanceTimeout:1e4,rebalanceThrottle:0,statisticsEnabled:!1,managementEnabled:!1,nearConfiguration:{nearStartSize:375e3},clientNearConfiguration:{nearStartSize:375e3},evictionPolicy:{batchSize:1,maxSize:1e5},queryMetadata:"Configuration",queryDetailMetricsSize:0,queryParallelism:1,fields:{keyClsName:"java.lang.String",valClsName:"java.lang.String",valField:"className",entries:[]},defaultFieldValues:{keyClsName:"java.lang.String",valClsName:"java.lang.Object"},fieldsPrecision:{keyClsName:"java.lang.String",valClsName:"java.lang.Integer"},fieldsScale:{keyClsName:"java.lang.String",valClsName:"java.lang.Integer"},aliases:{keyClsName:"java.lang.String",valClsName:"java.lang.String",keyField:"field",valField:"alias",entries:[]},indexes:{indexType:{clsName:"org.apache.ignite.cache.QueryIndexType"},fields:{keyClsName:"java.lang.String",valClsName:"java.lang.Boolean",valField:"direction",entries:[]}},typeField:{databaseFieldType:{clsName:"java.sql.Types"}},memoryPolicyName:"default",diskPageCompression:{clsName:"org.apache.ignite.configuration.DiskPageCompression"},sqlOnheapCacheEnabled:!1,sqlOnheapCacheMaxSize:0,storeByValue:!1,encryptionEnabled:!1,eventsDisabled:!1,maxQueryIteratorsCount:1024};class IgniteCacheDefaults{constructor(){Object.assign(this,o)}}},1161:function(e,t,i){"use strict";i.d(t,"b",function(){return EmptyBean}),i.d(t,"a",function(){return Bean});var o=i(2),a=i.n(o),n=i(117),r=i.n(n),s=i(113),l=i.n(s),c=i(115),d=i.n(c),u=i(341),p=i.n(u);const g=r()(l.a),m=r()(d.a);p()({nonNil:g,nonEmpty:m});class EmptyBean{constructor(e){this.properties=[],this.arguments=[],this.clsName=e}isEmpty(){return!1}nonEmpty(){return!this.isEmpty()}isComplex(){return m(this.properties)||!!a.a.find(this.arguments,e=>"MAP"===e.clsName)}nonComplex(){return!this.isComplex()}findProperty(e){return a.a.find(this.properties,{name:e})}}class Bean extends EmptyBean{constructor(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(e),this.id=t,this.src=i,this.dflts=o}factoryMethod(e){return this.factoryMtd=e,this}_property(e,t,i,o){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:()=>!0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e=>e;if(!this.src)return this;const s=r(a.a.get(this.src,i));return n(s)&&s!==a.a.get(this.dflts,i)&&e.push({clsName:t,name:o,value:s}),this}isEmpty(){return d()(this.arguments)&&d()(this.properties)}constructorArgument(e,t){return this.arguments.push({clsName:e,value:t}),this}stringConstructorArgument(e){return this._property(this.arguments,"java.lang.String",e,null,m)}intConstructorArgument(e){return this._property(this.arguments,"int",e,null,g)}boolConstructorArgument(e){return this._property(this.arguments,"boolean",e,null,g)}longConstructorArgument(e){return this._property(this.arguments,"long",e,null,g)}classConstructorArgument(e){return this._property(this.arguments,"java.lang.Class",e,null,m)}pathConstructorArgument(e){return this._property(this.arguments,"PATH",e,null,m)}constantConstructorArgument(e){if(!this.src)return this;const t=a.a.get(this.src,e),i=a.a.get(this.dflts,e);return g(t)&&g(i)&&t!==i.value&&this.arguments.push({clsName:i.clsName,constant:!0,value:t}),this}propertyConstructorArgument(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return this.arguments.push({clsName:"PROPERTY",value:e,hint:t}),this}beanConstructorArgument(e,t){return this.arguments.push({clsName:"BEAN",id:e,value:t}),this}mapConstructorArgument(e,t,i){if(!this.src)return this;const o=a.a.get(this.dflts,t);return m(i)&&g(o)&&i!==o.entries&&this.arguments.push({clsName:"MAP",id:e,keyClsName:o.keyClsName,keyField:o.keyField||"name",valClsName:o.valClsName,valClsNameShow:o.valClsNameShow,valItemClsName:o.valItemClsName,valField:o.valField||"value",keyClsGenericType:o.keyClsGenericType,isKeyClsGenericTypeExtended:o.isKeyClsGenericTypeExtended,valClsGenericType:o.valClsGenericType,entries:i}),this}valueOf(e){return a.a.get(this.src,e)||a.a.get(this.dflts,e+".value")||a.a.get(this.dflts,e)}includes(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.src&&a.a.every(t,e=>{const t=a.a.get(this.src,e),i=a.a.get(this.dflts,e);return g(t)&&t!==i})}prop(e,t,i){this.properties.push({clsName:e,name:t,value:i})}boolProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"boolean",e,t,g)}byteProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"byte",e,t,g)}intProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"int",e,t,g)}longProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"long",e,t,g)}floatProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"float",e,t,g)}doubleProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"double",e,t,g)}property(e,t,i){return this.properties.push({clsName:"PROPERTY",name:e,value:t,hint:i}),this}propertyChar(e,t,i){return this.properties.push({clsName:"PROPERTY_CHAR",name:e,value:t,hint:i}),this}propertyInt(e,t,i){return this.properties.push({clsName:"PROPERTY_INT",name:e,value:t,hint:i}),this}stringProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,i=arguments.length>2?arguments[2]:void 0;return this._property(this.properties,"java.lang.String",e,t,m,i)}pathProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"PATH",e,t,m)}pathArrayProperty(e,t,i,o){return i&&i.length&&this.properties.push({clsName:"PATH_ARRAY",id:e,name:t,items:i,varArg:o,typeClsName:"PATH"}),this}classProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this._property(this.properties,"java.lang.Class",e,t,m)}enumProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;if(!this.src)return this;const i=a.a.get(this.src,e),o=a.a.get(this.dflts,e);return g(i)&&g(o)&&i!==o.value&&this.properties.push({clsName:o.clsName,name:t,value:o.mapper?o.mapper(i):i}),this}emptyBeanProperty(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;if(!this.src)return this;const i=a.a.get(this.src,e),o=a.a.get(this.dflts,e);return m(i)&&i!==o&&this.properties.push({clsName:"BEAN",name:t,value:new EmptyBean(i)}),this}beanProperty(e,t){return this.properties.push({clsName:"BEAN",name:e,value:t}),this}arrayProperty(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"java.lang.String";return i&&i.length&&this.properties.push({clsName:"ARRAY",id:e,name:t,items:i,typeClsName:o}),this}varArgProperty(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"java.lang.String";return i&&i.length&&this.properties.push({clsName:"ARRAY",id:e,name:t,items:i,typeClsName:o,varArg:!0}),this}collectionProperty(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"java.lang.String",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"java.util.ArrayList";return i&&i.length&&this.properties.push({id:e,name:t,items:i,clsName:"COLLECTION",typeClsName:o,implClsName:a}),this}enumCollectionProperty(e,t,i,o){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"java.util.ArrayList";return i&&i.length&&this.properties.push({id:e,name:t,items:i,clsName:"ENUM_COLLECTION",typeClsName:o,implClsName:a}),this}mapProperty(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!this.src)return this;const n=a.a.isString(t)?a.a.get(this.src,t):t,r=a.a.isString(t)?a.a.get(this.dflts,t):a.a.get(this.dflts,i);return m(n)&&g(r)&&n!==r.entries&&this.properties.push({clsName:"MAP",id:e,name:i,ordered:o,keyClsName:r.keyClsName,keyField:r.keyField||"name",valClsName:r.valClsName,valClsNameShow:r.valClsNameShow,valItemClsName:r.valItemClsName,valField:r.valField||"value",entries:n,keyClsGenericType:r.keyClsGenericType,isKeyClsGenericTypeExtended:r.isKeyClsGenericTypeExtended,valClsGenericType:r.valClsGenericType}),this}propsProperty(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;if(!this.src)return this;const o=a.a.get(this.src,t);return m(o)&&this.properties.push({clsName:"java.util.Properties",id:e,name:i,entries:o}),this}dataSource(e,t,i){return i&&this.properties.push({clsName:"DATA_SOURCE",id:e,name:t,value:i}),this}eventTypes(e,t,i){this.properties.push({clsName:"EVENT_TYPES",id:e,name:t,eventTypes:i})}}},1163:function(e,t,i){"use strict";i.d(t,"a",function(){return JavaTypesNonEnum});var o=i(649),a=i.n(o),n=i(1174),r=i.n(n),s=i(1192),l=i.n(s),c=i(65),d=i.n(c),u=i(1195),p=i.n(u),g=i(277),m=i.n(g);class JavaTypesNonEnum{constructor(e,t,i){this.enumClasses=void 0,this.shortEnumClasses=void 0,this.enumClasses=a()(this._enumClassesAcc(p()(e,t),[])),this.shortEnumClasses=r()(this.enumClasses,e=>i.shortClassName(e))}nonEnum(e){return!m()(this.shortEnumClasses,e)&&!m()(this.enumClasses,e)}_enumClassesAcc(e,t){return l()(e,(e,t,i)=>("clsName"===i?e.push(t):d()(t)&&this._enumClassesAcc(t,e),e),t)}}JavaTypesNonEnum.$inject=["IgniteClusterDefaults","IgniteCacheDefaults","JavaTypes"]},1164:function(e,t,i){"use strict";i.d(t,"a",function(){return IgniteEventGroups});var o=i(2),a=i.n(o),n=i(1202);class IgniteEventGroups{constructor(){return a.a.clone(n)}}},1165:function(e,t,i){"use strict";i.d(t,"a",function(){return IgniteConfigurationGenerator});var o=i(1203),a=i(1161),n=i(1159),r=i(1164),s=i(1160),l=i(1166),c=i(291),d=i(220),u=i(2),p=i.n(u),g=i(113),m=i.n(g),h=i(29),v=i(1167);const f=new n.a,y=new s.a,b=new c.a(f,y),C=new d.a;class IgniteConfigurationGenerator{static igniteConfigurationBean(e){return new a.a("org.apache.ignite.configuration.IgniteConfiguration","cfg",e,f)}static cacheConfigurationBean(e){return new a.a("org.apache.ignite.configuration.CacheConfiguration","ccfg",e,y)}static domainConfigurationBean(e){return new a.a("org.apache.ignite.cache.QueryEntity","qryEntity",e,y)}static domainJdbcTypeBean(e){return new a.a("org.apache.ignite.cache.store.jdbc.JdbcType","type",e)}static discoveryConfigurationBean(e){return new a.a("org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi","discovery",e,f.discovery)}static igniteConfiguration(e,t,i){const o=C.since.bind(C,t.ignite),a=this.igniteConfigurationBean(e);return this.clusterGeneral(e,o,a,i),this.clusterAtomics(e.atomicConfiguration,o,a),this.clusterBinary(e.binaryConfiguration,a),this.clusterCacheKeyConfiguration(e.cacheKeyConfiguration,a),this.clusterCheckpoint(e,o,e.caches,a),o("2.3.0")&&this.clusterClientConnector(e,o,a),this.clusterCollision(e.collision,a),this.clusterCommunication(e,o,a),this.clusterConnector(e.connector,a),o("2.3.0")&&this.clusterDataStorageConfiguration(e,o,a),this.clusterDeployment(e,o,a),this.clusterEncryption(e.encryptionSpi,o,a),this.clusterEvents(e,o,a),this.clusterFailover(e,o,a),this.clusterHadoop(e.hadoopConfiguration,a),this.clusterLoadBalancing(e,a),this.clusterLogger(e.logger,a),this.clusterMarshaller(e,o,a),o(["2.0.0","2.3.0"])&&this.clusterMemory(e.memoryConfiguration,o,a),this.clusterMisc(e,o,a),this.clusterMetrics(e,o,a),this.clusterMvcc(e,o,a),this.clusterODBC(e.odbc,o,a),o(["2.1.0","2.3.0"])&&this.clusterPersistence(e.persistenceStoreConfiguration,o,a),o(["2.1.0","2.3.0"])&&this.clusterQuery(e,o,a),this.clusterRebalance(e,o,a),this.clusterServiceConfiguration(e.serviceConfigurations,e.caches,a),this.clusterSsl(e,o,a),o(["1.0.0","2.0.0"])&&this.clusterSwap(e,a),this.clusterPools(e,o,a),this.clusterTime(e,o,a),this.clusterTransactions(e.transactionConfiguration,o,a),this.clusterUserAttributes(e,a),this.clusterCaches(e,e.caches,o,t,i,a),a}static dialectClsName(e){return o[e]||"Unknown database: "+(e||"Choose JDBC dialect")}static dataSourceBean(e,t,i,o,n){let r;switch(t){case"Generic":case"Hive":r=new a.a("com.mchange.v2.c3p0.ComboPooledDataSource",e,{}).property("jdbcUrl","".concat(e,".jdbc.url"),"jdbc:your_database");break;case"Oracle":r=new a.a("oracle.jdbc.pool.OracleDataSource",e,{}).property("URL","".concat(e,".jdbc.url"),"jdbc:oracle:thin:@[host]:[port]:[database]");break;case"DB2":r=new a.a("com.ibm.db2.jcc.DB2DataSource",e,{}).property("serverName","".concat(e,".jdbc.server_name"),"YOUR_DATABASE_SERVER_NAME").propertyInt("portNumber","".concat(e,".jdbc.port_number"),"YOUR_JDBC_PORT_NUMBER").property("databaseName","".concat(e,".jdbc.database_name"),"YOUR_DATABASE_NAME").propertyInt("driverType","".concat(e,".jdbc.driver_type"),"YOUR_JDBC_DRIVER_TYPE");break;case"SQLServer":r=new a.a("com.microsoft.sqlserver.jdbc.SQLServerDataSource",e,{}).property("URL","".concat(e,".jdbc.url"),"jdbc:sqlserver://[host]:[port][;databaseName=database]");break;case"MySQL":const s=o?p.a.find(o,e=>e.name===t):p.a.first(l.a.latestVersions(this._getArtifact({dialect:t,implementationVersion:n},i))),c=parseInt(s.version.split(".")[0],10);r=new a.a(c<8?"com.mysql.jdbc.jdbc2.optional.MysqlDataSource":"com.mysql.cj.jdbc.MysqlDataSource",e,{}).property("URL","".concat(e,".jdbc.url"),"jdbc:mysql://[host]:[port]/[database]");break;case"PostgreSQL":r=new a.a("org.postgresql.ds.PGPoolingDataSource",e,{}).property("url","".concat(e,".jdbc.url"),"jdbc:postgresql://[host]:[port]/[database]");break;case"H2":r=new a.a("org.h2.jdbcx.JdbcDataSource",e,{}).property("URL","".concat(e,".jdbc.url"),"jdbc:h2:tcp://[host]/[database]")}return r&&r.property("user","".concat(e,".jdbc.username"),"YOUR_USER_NAME").property("password","".concat(e,".jdbc.password"),"YOUR_PASSWORD"),r}static clusterGeneral(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(arguments.length>3&&void 0!==arguments[3]&&arguments[3]&&i.prop("boolean","clientMode",!0),t("2.0.0")?i.stringProperty("name","igniteInstanceName"):i.stringProperty("name","gridName"),i.stringProperty("localHost"),m()(e.discovery))return i;const o=IgniteConfigurationGenerator.discoveryConfigurationBean(e.discovery);let n;switch(o.valueOf("kind")){case"Vm":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder","ipFinder",e.discovery.Vm,f.discovery.Vm)).collectionProperty("addrs","addresses",e.discovery.Vm.addresses);break;case"Multicast":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder","ipFinder",e.discovery.Multicast,f.discovery.Multicast)).stringProperty("multicastGroup").intProperty("multicastPort").intProperty("responseWaitTime").intProperty("addressRequestAttempts").stringProperty("localAddress").collectionProperty("addrs","addresses",e.discovery.Multicast.addresses);break;case"S3":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.s3.TcpDiscoveryS3IpFinder","ipFinder",e.discovery.S3,f.discovery.S3)).stringProperty("bucketName"),t("2.4.0")&&n.stringProperty("bucketEndpoint").stringProperty("SSEAlgorithm");break;case"Cloud":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.cloud.TcpDiscoveryCloudIpFinder","ipFinder",e.discovery.Cloud,f.discovery.Cloud)).stringProperty("credential").pathProperty("credentialPath").stringProperty("identity").stringProperty("provider").collectionProperty("regions","regions",e.discovery.Cloud.regions).collectionProperty("zones","zones",e.discovery.Cloud.zones);break;case"GoogleStorage":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.gce.TcpDiscoveryGoogleStorageIpFinder","ipFinder",e.discovery.GoogleStorage,f.discovery.GoogleStorage)).stringProperty("projectName").stringProperty("bucketName").pathProperty("serviceAccountP12FilePath").stringProperty("serviceAccountId");break;case"Jdbc":if((n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.jdbc.TcpDiscoveryJdbcIpFinder","ipFinder",e.discovery.Jdbc,f.discovery.Jdbc)).intProperty("initSchema"),n.includes("dataSourceBean","dialect")){const e=n.valueOf("dataSourceBean");n.dataSource(e,"dataSource",this.dataSourceBean(e,n.valueOf("dialect"),t))}break;case"SharedFs":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.TcpDiscoverySharedFsIpFinder","ipFinder",e.discovery.SharedFs,f.discovery.SharedFs)).pathProperty("path");break;case"ZooKeeper":const i=e.discovery.ZooKeeper,r=f.discovery.ZooKeeper;(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.zk.TcpDiscoveryZookeeperIpFinder","ipFinder",i,r)).emptyBeanProperty("curator").stringProperty("zkConnectionString");const s=p.a.get(i,"retryPolicy.kind");if(s){const e=i.retryPolicy;let t;switch(s){case"ExponentialBackoff":t=new a.a("org.apache.curator.retry.ExponentialBackoffRetry",null,e.ExponentialBackoff,r.ExponentialBackoff).intConstructorArgument("baseSleepTimeMs").intConstructorArgument("maxRetries").intConstructorArgument("maxSleepMs");break;case"BoundedExponentialBackoff":t=new a.a("org.apache.curator.retry.BoundedExponentialBackoffRetry",null,e.BoundedExponentialBackoff,r.BoundedExponentialBackoffRetry).intConstructorArgument("baseSleepTimeMs").intConstructorArgument("maxSleepTimeMs").intConstructorArgument("maxRetries");break;case"UntilElapsed":t=new a.a("org.apache.curator.retry.RetryUntilElapsed",null,e.UntilElapsed,r.UntilElapsed).intConstructorArgument("maxElapsedTimeMs").intConstructorArgument("sleepMsBetweenRetries");break;case"NTimes":t=new a.a("org.apache.curator.retry.RetryNTimes",null,e.NTimes,r.NTimes).intConstructorArgument("n").intConstructorArgument("sleepMsBetweenRetries");break;case"OneTime":t=new a.a("org.apache.curator.retry.RetryOneTime",null,e.OneTime,r.OneTime).intConstructorArgument("sleepMsBetweenRetry");break;case"Forever":t=new a.a("org.apache.curator.retry.RetryForever",null,e.Forever,r.Forever).intConstructorArgument("retryIntervalMs");break;case"Custom":const i=p.a.get(e,"Custom.className");Object(h.a)(i)&&(t=new a.b(i))}t&&n.beanProperty("retryPolicy",t)}n.pathProperty("basePath").stringProperty("serviceName").boolProperty("allowDuplicateRegistrations");break;case"Kubernetes":(n=new a.a("org.apache.ignite.spi.discovery.tcp.ipfinder.kubernetes.TcpDiscoveryKubernetesIpFinder","ipFinder",e.discovery.Kubernetes,f.discovery.Kubernetes)).stringProperty("serviceName").stringProperty("namespace").stringProperty("masterUrl").pathProperty("accountToken")}return n&&o.beanProperty("ipFinder",n),this.clusterDiscovery(e.discovery,t,i,o),i}static _getArtifact(e,t){const i=p.a.get(v,e.dialect);if(!i)return[];return p.a.map(p.a.castArray(i),i=>{let{version:o}=i;return{name:e.dialect,version:e.implementationVersion||(e=>p.a.isArray(e)?p.a.find(e,e=>t(e.range)).version:e)(o)}})}static clusterCaches(e,t,i,o,a){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:this.igniteConfigurationBean(e);const r=[];"Jdbc"===e.discovery.kind&&r.push(...this._getArtifact(e.discovery.Jdbc,i)),p.a.forEach(e.checkpointSpi,e=>{"JDBC"===e.kind&&r.push(...this._getArtifact(e.JDBC,i))}),p.a.forEach(t,e=>{p.a.get(e,"cacheStoreFactory.kind")&&r.push(...this._getArtifact(e.cacheStoreFactory[e.cacheStoreFactory.kind],i))});const s=p.a.uniqWith(l.a.latestVersions(r),p.a.isEqual),c=p.a.map(t,e=>this.cacheConfiguration(e,i,o,s));return n.varArgProperty("ccfgs","cacheConfiguration",c,"org.apache.ignite.configuration.CacheConfiguration"),n}static clusterAtomics(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();const o=t("2.1.0"),n=new a.a("org.apache.ignite.configuration.AtomicConfiguration","atomicCfg",e,f.atomics);return n.enumProperty("cacheMode").intProperty("atomicSequenceReserveSize"),"PARTITIONED"===n.valueOf("cacheMode")&&n.intProperty("backups"),o&&Object(h.b)(e)&&this.affinity(e.affinity,n),o&&n.stringProperty("groupName"),n.isEmpty()?i:(i.beanProperty("atomicConfiguration",n),i)}static clusterBinary(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const i=new a.a("org.apache.ignite.configuration.BinaryConfiguration","binaryCfg",e,f.binary);i.emptyBeanProperty("idMapper").emptyBeanProperty("nameMapper").emptyBeanProperty("serializer");const o=[];return p.a.forEach(e.typeConfigurations,e=>{const t=new a.a("org.apache.ignite.binary.BinaryTypeConfiguration",b.toJavaName("binaryType",e.typeName),e,f.binary.typeConfigurations);t.stringProperty("typeName").emptyBeanProperty("idMapper").emptyBeanProperty("nameMapper").emptyBeanProperty("serializer").boolProperty("enum").mapProperty("enumValues",p.a.map(e.enumValues,(e,t)=>({name:e,value:t})),"enumValues"),t.nonEmpty()&&o.push(t)}),i.collectionProperty("types","typeConfigurations",o,"org.apache.ignite.binary.BinaryTypeConfiguration").boolProperty("compactFooter"),i.isEmpty()?t:(t.beanProperty("binaryConfiguration",i),t)}static clusterCacheKeyConfiguration(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const i=p.a.reduce(e,(e,t)=>(t.typeName&&t.affinityKeyFieldName&&e.push(new a.a("org.apache.ignite.cache.CacheKeyConfiguration",null,t).stringConstructorArgument("typeName").stringConstructorArgument("affinityKeyFieldName")),e),[]);return p.a.isEmpty(i)?t:(t.arrayProperty("cacheKeyConfiguration","cacheKeyConfiguration",i,"org.apache.ignite.cache.CacheKeyConfiguration"),t)}static clusterCheckpoint(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.igniteConfigurationBean();const n=p.a.filter(p.a.map(e.checkpointSpi,e=>{switch(p.a.get(e,"kind")){case"FS":const o=new a.a("org.apache.ignite.spi.checkpoint.sharedfs.SharedFsCheckpointSpi","checkpointSpiFs",e.FS);return o.collectionProperty("directoryPaths","directoryPaths",p.a.get(e,"FS.directoryPaths")).emptyBeanProperty("checkpointListener"),o;case"Cache":const n=new a.a("org.apache.ignite.spi.checkpoint.cache.CacheCheckpointSpi","checkpointSpiCache",e.Cache),r=p.a.get(e,"Cache.cache"),s=p.a.find(i,e=>r&&(e.id===r||p.a.get(e,"cache.id")===r));return s&&n.prop("java.lang.String","cacheName",s.name||s.cache.name),n.stringProperty("cacheName").emptyBeanProperty("checkpointListener"),n;case"S3":const l=new a.a("org.apache.ignite.spi.checkpoint.s3.S3CheckpointSpi","checkpointSpiS3",e.S3,f.checkpointSpi.S3);let c=null;switch(p.a.get(e.S3,"awsCredentials.kind")){case"Basic":(c=new a.a("com.amazonaws.auth.BasicAWSCredentials","awsCredentials",{})).propertyConstructorArgument("checkpoint.s3.credentials.accessKey","YOUR_S3_ACCESS_KEY").propertyConstructorArgument("checkpoint.s3.credentials.secretKey","YOUR_S3_SECRET_KEY");break;case"Properties":c=new a.a("com.amazonaws.auth.PropertiesCredentials","awsCredentials",{});const t=new a.a("java.io.File","",e.S3.awsCredentials.Properties).pathConstructorArgument("path");t.nonEmpty()&&c.beanConstructorArgument("file",t);break;case"Anonymous":c=new a.a("com.amazonaws.auth.AnonymousAWSCredentials","awsCredentials",{});break;case"BasicSession":(c=new a.a("com.amazonaws.auth.BasicSessionCredentials","awsCredentials",{})).propertyConstructorArgument("checkpoint.s3.credentials.accessKey").propertyConstructorArgument("checkpoint.s3.credentials.secretKey").propertyConstructorArgument("checkpoint.s3.credentials.sessionToken");break;case"Custom":const i=p.a.get(e.S3.awsCredentials,"Custom.className");i&&(c=new a.a(i,"awsCredentials",{}))}c&&l.beanProperty("awsCredentials",c),l.stringProperty("bucketNameSuffix"),t("2.4.0")&&l.stringProperty("bucketEndpoint").stringProperty("SSEAlgorithm");const d=new a.a("com.amazonaws.ClientConfiguration","clientCfg",e.S3.clientConfiguration,f.checkpointSpi.S3.clientConfiguration);d.enumProperty("protocol").intProperty("maxConnections").stringProperty("userAgentPrefix").stringProperty("userAgentSuffix");const u=new a.a("java.net.InetAddress","",e.S3.clientConfiguration).factoryMethod("getByName").stringConstructorArgument("localAddress");u.nonEmpty()&&d.beanProperty("localAddress",u),d.stringProperty("proxyHost").intProperty("proxyPort").stringProperty("proxyUsername");const g=d.valueOf("proxyUsername");g&&d.property("proxyPassword","checkpoint.s3.proxy.".concat(g,".password")),d.stringProperty("proxyDomain").stringProperty("proxyWorkstation").stringProperty("nonProxyHosts");const m=e.S3.clientConfiguration.retryPolicy;if(m){const e=m.kind,t=m[e];let i;switch(e){case"Default":(i=new a.a("com.amazonaws.retry.RetryPolicy","retryPolicy",{retryCondition:"DEFAULT_RETRY_CONDITION",backoffStrategy:"DEFAULT_BACKOFF_STRATEGY",maxErrorRetry:"DEFAULT_MAX_ERROR_RETRY",honorMaxErrorRetryInClientConfig:!0},f.checkpointSpi.S3.clientConfiguration.retryPolicy)).constantConstructorArgument("retryCondition").constantConstructorArgument("backoffStrategy").constantConstructorArgument("maxErrorRetry").constructorArgument("java.lang.Boolean",i.valueOf("honorMaxErrorRetryInClientConfig"));break;case"DefaultMaxRetries":(i=new a.a("com.amazonaws.retry.RetryPolicy","retryPolicy",{retryCondition:"DEFAULT_RETRY_CONDITION",backoffStrategy:"DEFAULT_BACKOFF_STRATEGY",maxErrorRetry:p.a.get(t,"maxErrorRetry")||-1,honorMaxErrorRetryInClientConfig:!1},f.checkpointSpi.S3.clientConfiguration.retryPolicy)).constantConstructorArgument("retryCondition").constantConstructorArgument("backoffStrategy").constructorArgument("java.lang.Integer",i.valueOf("maxErrorRetry")).constructorArgument("java.lang.Boolean",i.valueOf("honorMaxErrorRetryInClientConfig"));break;case"DynamoDB":(i=new a.a("com.amazonaws.retry.RetryPolicy","retryPolicy",{retryCondition:"DEFAULT_RETRY_CONDITION",backoffStrategy:"DYNAMODB_DEFAULT_BACKOFF_STRATEGY",maxErrorRetry:"DYNAMODB_DEFAULT_MAX_ERROR_RETRY",honorMaxErrorRetryInClientConfig:!0},f.checkpointSpi.S3.clientConfiguration.retryPolicy)).constantConstructorArgument("retryCondition").constantConstructorArgument("backoffStrategy").constantConstructorArgument("maxErrorRetry").constructorArgument("java.lang.Boolean",i.valueOf("honorMaxErrorRetryInClientConfig"));break;case"DynamoDBMaxRetries":(i=new a.a("com.amazonaws.retry.RetryPolicy","retryPolicy",{retryCondition:"DEFAULT_RETRY_CONDITION",backoffStrategy:"DYNAMODB_DEFAULT_BACKOFF_STRATEGY",maxErrorRetry:p.a.get(t,"maxErrorRetry")||-1,honorMaxErrorRetryInClientConfig:!1},f.checkpointSpi.S3.clientConfiguration.retryPolicy)).constantConstructorArgument("retryCondition").constantConstructorArgument("backoffStrategy").constructorArgument("java.lang.Integer",i.valueOf("maxErrorRetry")).constructorArgument("java.lang.Boolean",i.valueOf("honorMaxErrorRetryInClientConfig"));break;case"Custom":(i=new a.a("com.amazonaws.retry.RetryPolicy","retryPolicy",t,f.checkpointSpi.S3.clientConfiguration.retryPolicy)).beanConstructorArgument("retryCondition",i.valueOf("retryCondition")?new a.b(i.valueOf("retryCondition")):null).beanConstructorArgument("backoffStrategy",i.valueOf("backoffStrategy")?new a.b(i.valueOf("backoffStrategy")):null).constructorArgument("java.lang.Integer",i.valueOf("maxErrorRetry")).constructorArgument("java.lang.Boolean",i.valueOf("honorMaxErrorRetryInClientConfig"))}i&&d.beanProperty("retryPolicy",i)}return d.intProperty("maxErrorRetry").intProperty("socketTimeout").intProperty("connectionTimeout").intProperty("requestTimeout").stringProperty("signerOverride").longProperty("connectionTTL").longProperty("connectionMaxIdleMillis").emptyBeanProperty("dnsResolver").intProperty("responseMetadataCacheSize").emptyBeanProperty("secureRandom").intProperty("clientExecutionTimeout").boolProperty("useReaper").boolProperty("cacheResponseMetadata").boolProperty("useExpectContinue").boolProperty("useThrottleRetries").boolProperty("useGzip").boolProperty("preemptiveBasicProxyAuth").boolProperty("useTcpKeepAlive"),d.nonEmpty()&&l.beanProperty("clientConfiguration",d),l.emptyBeanProperty("checkpointListener"),l;case"JDBC":const h=new a.a("org.apache.ignite.spi.checkpoint.jdbc.JdbcCheckpointSpi","checkpointSpiJdbc",e.JDBC,f.checkpointSpi.JDBC),v=h.valueOf("dataSourceBean"),y=p.a.get(e.JDBC,"dialect");return h.dataSource(v,"dataSource",this.dataSourceBean(v,y,t)),p.a.isEmpty(h.valueOf("user"))||h.stringProperty("user").property("pwd","checkpoint.".concat(h.valueOf("dataSourceBean"),".").concat(h.valueOf("user"),".jdbc.password"),"YOUR_PASSWORD"),h.stringProperty("checkpointTableName").stringProperty("keyFieldName").stringProperty("keyFieldType").stringProperty("valueFieldName").stringProperty("valueFieldType").stringProperty("expireDateFieldName").stringProperty("expireDateFieldType").intProperty("numberOfRetries").emptyBeanProperty("checkpointListener"),h;case"Custom":const b=p.a.get(e,"Custom.className");return b?new a.a(b,"checkpointSpiCustom",e.Cache):null;default:return null}}),e=>Object(h.b)(e));return o.arrayProperty("checkpointSpi","checkpointSpi",n,"org.apache.ignite.spi.checkpoint.CheckpointSpi"),o}static clusterClientConnector(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(!t("2.3.0"))return i;if(i.longProperty("longQueryWarningTimeout"),!0!==p.a.get(e,"clientConnectorConfiguration.enabled"))return i;const o=new a.a("org.apache.ignite.configuration.ClientConnectorConfiguration","cliConnCfg",e.clientConnectorConfiguration,f.clientConnectorConfiguration);return o.stringProperty("host").intProperty("port").intProperty("portRange").intProperty("socketSendBufferSize").intProperty("socketReceiveBufferSize").intProperty("maxOpenCursorsPerConnection").intProperty("threadPoolSize").boolProperty("tcpNoDelay"),t("2.4.0")&&o.longProperty("idleTimeout").boolProperty("jdbcEnabled").boolProperty("odbcEnabled").boolProperty("thinClientEnabled"),t("2.5.0")&&o.longProperty("handshakeTimeout").boolProperty("sslEnabled").boolProperty("sslClientAuth").boolProperty("useIgniteSslContextFactory").emptyBeanProperty("sslContextFactory"),i.beanProperty("clientConnectorConfiguration",o),i}static clusterCollision(e){let t,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();switch(p.a.get(e,"kind")){case"JobStealing":(t=new a.a("org.apache.ignite.spi.collision.jobstealing.JobStealingCollisionSpi","colSpi",e.JobStealing,f.collision.JobStealing)).intProperty("activeJobsThreshold").intProperty("waitJobsThreshold").longProperty("messageExpireTime").intProperty("maximumStealingAttempts").boolProperty("stealingEnabled").emptyBeanProperty("externalCollisionListener").mapProperty("stealingAttrs","stealingAttributes");break;case"FifoQueue":(t=new a.a("org.apache.ignite.spi.collision.fifoqueue.FifoQueueCollisionSpi","colSpi",e.FifoQueue,f.collision.FifoQueue)).intProperty("parallelJobsNumber").intProperty("waitingJobsNumber");break;case"PriorityQueue":(t=new a.a("org.apache.ignite.spi.collision.priorityqueue.PriorityQueueCollisionSpi","colSpi",e.PriorityQueue,f.collision.PriorityQueue)).intProperty("parallelJobsNumber").intProperty("waitingJobsNumber").stringProperty("priorityAttributeKey").stringProperty("jobPriorityAttributeKey").intProperty("defaultPriority").intProperty("starvationIncrement").boolProperty("starvationPreventionEnabled");break;case"Custom":Object(h.b)(p.a.get(e,"Custom.class"))&&(t=new a.b(e.Custom.class));break;default:return i}return Object(h.b)(t)&&i.beanProperty("collisionSpi",t),i}static clusterCommunication(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);const o=new a.a("org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi","communicationSpi",e.communication,f.communication);return o.emptyBeanProperty("listener").stringProperty("localAddress").intProperty("localPort").intProperty("localPortRange").intProperty("sharedMemoryPort").intProperty("directBuffer").intProperty("directSendBuffer").longProperty("idleConnectionTimeout").longProperty("connectTimeout").longProperty("maxConnectTimeout").intProperty("reconnectCount").intProperty("socketSendBuffer").intProperty("socketReceiveBuffer").intProperty("messageQueueLimit").intProperty("slowClientQueueLimit").intProperty("tcpNoDelay").intProperty("ackSendThreshold").intProperty("unacknowledgedMessagesBufferSize").longProperty("socketWriteTimeout").intProperty("selectorsCount").longProperty("selectorSpins").intProperty("connectionsPerNode").emptyBeanProperty("addressResolver").boolProperty("usePairedConnections"),t("2.3.0")&&o.boolProperty("filterReachableAddresses"),o.nonEmpty()&&i.beanProperty("communicationSpi",o),i.longProperty("networkTimeout").longProperty("networkSendRetryDelay").intProperty("networkSendRetryCount"),t("2.8.0")&&i.intProperty("networkCompressionLevel"),t("2.5.0")&&i.emptyBeanProperty("communicationFailureResolver"),t(["1.0.0","2.3.0"])&&i.longProperty("discoveryStartupDelay"),i}static clusterConnector(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const i=new a.a("org.apache.ignite.configuration.ConnectorConfiguration","connectorConfiguration",e,f.connector);return i.valueOf("enabled")&&(i.pathProperty("jettyPath").stringProperty("host").intProperty("port").intProperty("portRange").longProperty("idleTimeout").longProperty("idleQueryCursorTimeout").longProperty("idleQueryCursorCheckFrequency").intProperty("receiveBufferSize").intProperty("sendBufferSize").intProperty("sendQueueLimit").intProperty("directBuffer").intProperty("noDelay").intProperty("selectorCount").intProperty("threadPoolSize").emptyBeanProperty("messageInterceptor").stringProperty("secretKey"),i.valueOf("sslEnabled")&&i.intProperty("sslClientAuth").emptyBeanProperty("sslFactory"),i.nonEmpty()&&t.beanProperty("connectorConfiguration",i)),t}static clusterDeployment(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);i.enumProperty("deploymentMode").boolProperty("peerClassLoadingEnabled"),i.valueOf("peerClassLoadingEnabled")&&i.intProperty("peerClassLoadingMissedResourcesCacheSize").intProperty("peerClassLoadingThreadPoolSize").varArgProperty("p2pLocClsPathExcl","peerClassLoadingLocalClassPathExclude",e.peerClassLoadingLocalClassPathExclude),t("2.0.0")&&i.emptyBeanProperty("classLoader");let o=null;switch(p.a.get(e,"deploymentSpi.kind")){case"URI":const t=e.deploymentSpi.URI;o=new a.a("org.apache.ignite.spi.deployment.uri.UriDeploymentSpi","deploymentSpi",t);const n=p.a.map(t.scanners,e=>new a.b(e));o.collectionProperty("uriList","uriList",t.uriList).stringProperty("temporaryDirectoryPath").varArgProperty("scanners","scanners",n,"org.apache.ignite.spi.deployment.uri.scanners.UriDeploymentScanner").emptyBeanProperty("listener").boolProperty("checkMd5").boolProperty("encodeUri"),i.beanProperty("deploymentSpi",o);break;case"Local":(o=new a.a("org.apache.ignite.spi.deployment.local.LocalDeploymentSpi","deploymentSpi",e.deploymentSpi.Local)).emptyBeanProperty("listener"),i.beanProperty("deploymentSpi",o);break;case"Custom":i.emptyBeanProperty("deploymentSpi.Custom.className")}return i}static clusterDiscovery(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(),o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.discoveryConfigurationBean(e);return o.stringProperty("localAddress").intProperty("localPort").intProperty("localPortRange").emptyBeanProperty("addressResolver").longProperty("socketTimeout").longProperty("ackTimeout").longProperty("maxAckTimeout").longProperty("networkTimeout").longProperty("joinTimeout").intProperty("threadPriority"),t(["1.0.0","2.0.0"])&&o.intProperty("heartbeatFrequency").intProperty("maxMissedHeartbeats").intProperty("maxMissedClientHeartbeats"),o.longProperty("topHistorySize").emptyBeanProperty("listener").emptyBeanProperty("dataExchange").emptyBeanProperty("metricsProvider").intProperty("reconnectCount").longProperty("statisticsPrintFrequency").longProperty("ipFinderCleanFrequency").emptyBeanProperty("authenticator"),t("2.4.0")&&o.longProperty("reconnectDelay"),t("2.7.0")&&o.longProperty("connectionRecoveryTimeout"),t("2.8.0")&&o.intProperty("soLinger"),o.intProperty("forceServerMode").intProperty("clientReconnectDisabled"),o.nonEmpty()&&i.beanProperty("discoverySpi",o),o}static filterEvents(e,t){return t("2.0.0")?p.a.reduce(e,(e,t)=>{switch(t.value){case"EVTS_SWAPSPACE":break;case"EVTS_CACHE":const i=p.a.cloneDeep(t);i.events=p.a.filter(i.events,e=>!p.a.includes(["EVT_CACHE_OBJECT_SWAPPED","EVT_CACHE_OBJECT_UNSWAPPED"],e)),e.push(i);break;default:e.push(t)}return e},[]):e}static clusterEncryption(e,t){let i,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(cluster);if(!t("2.7.0"))return o;switch(p.a.get(e,"kind")){case"Keystore":i=new a.a("org.apache.ignite.spi.encryption.keystore.KeystoreEncryptionSpi","encryptionSpi",e.Keystore,f.encryptionSpi.Keystore).stringProperty("keyStorePath"),Object(h.a)(i.valueOf("keyStorePath"))&&i.propertyChar("keyStorePassword","encryption.key.storage.password","YOUR_ENCRYPTION_KEY_STORAGE_PASSWORD"),i.intProperty("keySize").stringProperty("masterKeyName");break;case"Custom":const t=p.a.get(e,"Custom.className");t&&(i=new a.b(t))}return i&&o.beanProperty("encryptionSpi",i),o}static clusterEvents(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);const o=e.eventStorage;let n=null;switch(p.a.get(o,"kind")){case"Memory":(n=new a.a("org.apache.ignite.spi.eventstorage.memory.MemoryEventStorageSpi","eventStorage",o.Memory,f.eventStorage.Memory)).longProperty("expireAgeMs").longProperty("expireCount").emptyBeanProperty("filter");break;case"Custom":const e=p.a.get(o,"Custom.className");e&&(n=new a.b(e))}if(n&&(n.isEmpty()&&t(["1.0.0","2.0.0"])||i.beanProperty("eventStorageSpi",n),Object(h.a)(e.includeEventTypes))){const o=p.a.filter(this.eventGrps,t=>{let{value:i}=t;return p.a.includes(e.includeEventTypes,i)});i.eventTypes("evts","includeEventTypes",this.filterEvents(o,t))}return i.mapProperty("localEventListeners",p.a.map(e.localEventListeners,e=>({className:new a.b(e.className),eventTypes:p.a.map(e.eventTypes,e=>{return{class:p.a.find(this.eventGrps,t=>t.events.indexOf(e)>=0).class,label:e}})})),"localEventListeners"),i}static clusterFailover(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);const o=[];if(t("2.0.0")&&(i.longProperty("failureDetectionTimeout").longProperty("clientFailureDetectionTimeout"),t("2.7.0")&&i.longProperty("systemWorkerBlockedTimeout")),p.a.forEach(e.failoverSpi,e=>{let t;switch(p.a.get(e,"kind")){case"JobStealing":(t=new a.a("org.apache.ignite.spi.failover.jobstealing.JobStealingFailoverSpi","failoverSpi",e.JobStealing,f.failoverSpi.JobStealing)).intProperty("maximumFailoverAttempts");break;case"Never":t=new a.a("org.apache.ignite.spi.failover.never.NeverFailoverSpi","failoverSpi",e.Never);break;case"Always":(t=new a.a("org.apache.ignite.spi.failover.always.AlwaysFailoverSpi","failoverSpi",e.Always,f.failoverSpi.Always)).intProperty("maximumFailoverAttempts");break;case"Custom":const i=p.a.get(e,"Custom.class");i&&(t=new a.b(i))}t&&o.push(t)}),o.length&&i.arrayProperty("failoverSpi","failoverSpi",o,"org.apache.ignite.spi.failover.FailoverSpi"),t("2.5.0")){const t=e.failureHandler,o=p.a.get(t,"kind");let n;switch(o){case"RestartProcess":n=new a.a("org.apache.ignite.failure.RestartProcessFailureHandler","failureHandler",t);break;case"StopNodeOnHalt":const e=t.StopNodeOnHalt;n=new a.a("org.apache.ignite.failure.StopNodeOrHaltFailureHandler","failureHandler",e),e&&(e.tryStop||e.timeout)&&(e.tryStop=e.tryStop||!1,e.timeout=e.timeout||0,n.boolConstructorArgument("tryStop").longConstructorArgument("timeout"));break;case"StopNode":n=new a.a("org.apache.ignite.failure.StopNodeFailureHandler","failureHandler",t);break;case"Noop":n=new a.a("org.apache.ignite.failure.NoOpFailureHandler","failureHandler",t);break;case"Custom":const i=p.a.get(t,"Custom.className");i&&(n=new a.a(i,"failureHandler",t))}n&&(["RestartProcess","StopNodeOnHalt","StopNode"].indexOf(o)>=0&&n.collectionProperty("ignoredFailureTypes","ignoredFailureTypes",t.ignoredFailureTypes,"org.apache.ignite.failure.FailureType","java.util.HashSet"),i.beanProperty("failureHandler",n))}return i}static clusterHadoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const i=new a.a("org.apache.ignite.configuration.HadoopConfiguration","hadoop",e,f.hadoopConfiguration);let o;switch(p.a.get(e,"mapReducePlanner.kind")){case"Weighted":(o=new a.a("org.apache.ignite.hadoop.mapreduce.IgniteHadoopWeightedMapReducePlanner","planner",p.a.get(e,"mapReducePlanner.Weighted"),f.hadoopConfiguration.mapReducePlanner.Weighted)).intProperty("localMapperWeight").intProperty("remoteMapperWeight").intProperty("localReducerWeight").intProperty("remoteReducerWeight").intProperty("preferLocalReducerThresholdWeight");break;case"Custom":const t=p.a.get(e,"mapReducePlanner.Custom.className");t&&(o=new a.b(t))}return o&&i.beanProperty("mapReducePlanner",o),i.longProperty("finishedJobInfoTtl").intProperty("maxParallelTasks").intProperty("maxTaskQueueSize").arrayProperty("nativeLibraryNames","nativeLibraryNames",p.a.get(e,"nativeLibraryNames")),i.isEmpty()||t.beanProperty("hadoopConfiguration",i),t}static clusterLoadBalancing(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);const i=[];return p.a.forEach(e.loadBalancingSpi,e=>{let t;switch(p.a.get(e,"kind")){case"RoundRobin":(t=new a.a("org.apache.ignite.spi.loadbalancing.roundrobin.RoundRobinLoadBalancingSpi","loadBalancingSpiRR",e.RoundRobin,f.loadBalancingSpi.RoundRobin)).boolProperty("perTask");break;case"Adaptive":let i;switch(t=new a.a("org.apache.ignite.spi.loadbalancing.adaptive.AdaptiveLoadBalancingSpi","loadBalancingSpiAdaptive",e.Adaptive),p.a.get(e,"Adaptive.loadProbe.kind")){case"Job":(i=new a.a("org.apache.ignite.spi.loadbalancing.adaptive.AdaptiveJobCountLoadProbe","jobProbe",e.Adaptive.loadProbe.Job,f.loadBalancingSpi.Adaptive.loadProbe.Job)).boolProperty("useAverage");break;case"CPU":(i=new a.a("org.apache.ignite.spi.loadbalancing.adaptive.AdaptiveCpuLoadProbe","cpuProbe",e.Adaptive.loadProbe.CPU,f.loadBalancingSpi.Adaptive.loadProbe.CPU)).boolProperty("useAverage").boolProperty("useProcessors").intProperty("processorCoefficient");break;case"ProcessingTime":(i=new a.a("org.apache.ignite.spi.loadbalancing.adaptive.AdaptiveProcessingTimeLoadProbe","timeProbe",e.Adaptive.loadProbe.ProcessingTime,f.loadBalancingSpi.Adaptive.loadProbe.ProcessingTime)).boolProperty("useAverage");break;case"Custom":const o=p.a.get(e,"Adaptive.loadProbe.Custom.className");o&&(i=new a.a(o,"probe",e.Adaptive.loadProbe.Job.Custom))}i&&t.beanProperty("loadProbe",i);break;case"WeightedRandom":(t=new a.a("org.apache.ignite.spi.loadbalancing.weightedrandom.WeightedRandomLoadBalancingSpi","loadBalancingSpiRandom",e.WeightedRandom,f.loadBalancingSpi.WeightedRandom)).intProperty("nodeWeight").boolProperty("useWeights");break;case"Custom":const o=p.a.get(e,"Custom.className");o&&(t=new a.a(o,"loadBalancingSpiCustom",e.Custom))}t&&i.push(t)}),i.length&&t.varArgProperty("loadBalancingSpi","loadBalancingSpi",i,"org.apache.ignite.spi.loadbalancing.LoadBalancingSpi"),t}static clusterLogger(e){let t,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();switch(p.a.get(e,"kind")){case"Log4j":e.Log4j&&("Default"===e.Log4j.mode||"Path"===e.Log4j.mode&&Object(h.a)(e.Log4j.path))&&("Path"===(t=new a.a("org.apache.ignite.logger.log4j.Log4JLogger","logger",e.Log4j,f.logger.Log4j)).valueOf("mode")&&t.pathConstructorArgument("path"),t.enumProperty("level"));break;case"Log4j2":e.Log4j2&&Object(h.a)(e.Log4j2.path)&&(t=new a.a("org.apache.ignite.logger.log4j2.Log4J2Logger","logger",e.Log4j2,f.logger.Log4j2)).pathConstructorArgument("path").enumProperty("level");break;case"Null":t=new a.b("org.apache.ignite.logger.NullLogger");break;case"Java":t=new a.b("org.apache.ignite.logger.java.JavaLogger");break;case"JCL":t=new a.b("org.apache.ignite.logger.jcl.JclLogger");break;case"SLF4J":t=new a.b("org.apache.ignite.logger.slf4j.Slf4jLogger");break;case"Custom":e.Custom&&Object(h.a)(e.Custom.class)&&(t=new a.b(e.Custom.class));break;default:return i}return t&&i.beanProperty("gridLogger",t),i}static clusterMemory(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();const o=new a.a("org.apache.ignite.configuration.MemoryConfiguration","memoryConfiguration",e,f.memoryConfiguration);o.intProperty("pageSize").intProperty("concurrencyLevel").longProperty("systemCacheInitialSize").longProperty("systemCacheMaxSize").stringProperty("defaultMemoryPolicyName"),"default"===o.valueOf("defaultMemoryPolicyName")&&o.longProperty("defaultMemoryPolicySize");const n=[];return p.a.forEach(p.a.get(e,"memoryPolicies"),e=>{const i=new a.a("org.apache.ignite.configuration.MemoryPolicyConfiguration","policy",e,f.memoryConfiguration.memoryPolicies);i.stringProperty("name").longProperty("initialSize").longProperty("maxSize").stringProperty("swapFilePath").enumProperty("pageEvictionMode").doubleProperty("evictionThreshold").intProperty("emptyPagesPoolSize").boolProperty("metricsEnabled"),t("2.1.0")&&i.intProperty("subIntervals").longProperty("rateTimeInterval"),i.isEmpty()||n.push(i)}),p.a.isEmpty(n)||o.varArgProperty("memoryPolicies","memoryPolicies",n,"org.apache.ignite.configuration.MemoryPolicyConfiguration"),o.isEmpty()?i:(i.beanProperty("memoryConfiguration",o),i)}static dataRegionConfiguration(e,t){const i=new a.a("org.apache.ignite.configuration.DataRegionConfiguration","dataRegionCfg",e,f.dataStorageConfiguration.dataRegionConfigurations);return i.stringProperty("name").longProperty("initialSize").longProperty("maxSize").stringProperty("swapPath").enumProperty("pageEvictionMode").doubleProperty("evictionThreshold").intProperty("emptyPagesPoolSize").intProperty("metricsSubIntervalCount").longProperty("metricsRateTimeInterval").longProperty("checkpointPageBufferSize").boolProperty("metricsEnabled"),i.valueOf("swapPath")||i.boolProperty("persistenceEnabled"),t("2.8.0")&&i.boolProperty("lazyMemoryAllocation"),i}static clusterDataStorageConfiguration(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(!t("2.3.0"))return i;const o=t("2.4.0"),n=t("2.7.0"),r=e.dataStorageConfiguration,s=new a.a("org.apache.ignite.configuration.DataStorageConfiguration","dataStorageCfg",r,f.dataStorageConfiguration);s.intProperty("pageSize").intProperty("concurrencyLevel").longProperty("systemRegionInitialSize").longProperty("systemRegionMaxSize");const l=this.dataRegionConfiguration(p.a.get(r,"defaultDataRegionConfiguration"),t);l.isEmpty()||s.beanProperty("defaultDataRegionConfiguration",l);const c=[];if(p.a.forEach(p.a.get(r,"dataRegionConfigurations"),e=>{const i=this.dataRegionConfiguration(e,t);i.isEmpty()||c.push(i)}),p.a.isEmpty(c)||s.varArgProperty("dataRegionConfigurations","dataRegionConfigurations",c,"org.apache.ignite.configuration.DataRegionConfiguration"),s.stringProperty("storagePath").longProperty("checkpointFrequency"),n&&s.longProperty("checkpointReadLockTimeout"),s.intProperty("checkpointThreads").enumProperty("checkpointWriteOrder").enumProperty("walMode").stringProperty("walPath").stringProperty("walArchivePath"),n&&s.longProperty("maxWalArchiveSize").intProperty("walCompactionLevel"),t("2.8.0")){s.enumProperty("walPageCompression");const e=s.valueOf("walPageCompression");"ZSTD"!==e&&"LZ4"!==e||s.intProperty("walPageCompressionLevel")}s.longProperty("walAutoArchiveAfterInactivity").intProperty("walSegments").intProperty("walSegmentSize").intProperty("walHistorySize"),o&&s.intProperty("walBufferSize"),s.longProperty("walFlushFrequency").longProperty("walFsyncDelayNanos").intProperty("walRecordIteratorBufferSize").longProperty("lockWaitTime").intProperty("walThreadLocalBufferSize").intProperty("metricsSubIntervalCount").longProperty("metricsRateTimeInterval").boolProperty("metricsEnabled").boolProperty("alwaysWriteFullPages").boolProperty("writeThrottlingEnabled"),o&&s.boolProperty("walCompactionEnabled");const d=p.a.get(r,"fileIOFactory");let u;return"RANDOM"===d?u=new a.a("org.apache.ignite.internal.processors.cache.persistence.file.RandomAccessFileIOFactory","rndFileIoFactory",{}):"ASYNC"===d&&(u=new a.a("org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory","asyncFileIoFactory",{})),u&&s.beanProperty("fileIOFactory",u),(p.a.get(r,"defaultDataRegionConfiguration.persistenceEnabled")||p.a.find(p.a.get(r,"dataRegionConfigurations"),e=>e.persistenceEnabled))&&i.boolProperty("authenticationEnabled"),s.nonEmpty()&&i.beanProperty("dataStorageConfiguration",s),i}static clusterMisc(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);const o=t("2.0.0");if(i.pathProperty("workDirectory").pathProperty("igniteHome").varArgProperty("lifecycleBeans","lifecycleBeans",p.a.map(e.lifecycleBeans,e=>new a.b(e)),"org.apache.ignite.lifecycle.LifecycleBean").emptyBeanProperty("addressResolver").emptyBeanProperty("mBeanServer").varArgProperty("includeProperties","includeProperties",e.includeProperties),e.cacheStoreSessionListenerFactories){const t=p.a.map(e.cacheStoreSessionListenerFactories,e=>new a.b(e));i.varArgProperty("cacheStoreSessionListenerFactories","cacheStoreSessionListenerFactories",t,"javax.cache.configuration.Factory")}return o&&i.stringProperty("consistentId").emptyBeanProperty("warmupClosure").boolProperty("activeOnStart").boolProperty("cacheSanityCheckEnabled"),t("2.7.0")&&i.varArgProperty("sqlSchemas","sqlSchemas",e.sqlSchemas),t("2.8.0")&&i.intProperty("sqlQueryHistorySize"),t("2.4.0")&&i.boolProperty("autoActivationEnabled"),t(["1.0.0","2.1.0"])&&i.boolProperty("lateAffinityAssignment"),i}static clusterMvcc(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);return t("2.7.0")&&i.intProperty("mvccVacuumThreadCount").intProperty("mvccVacuumFrequency"),i}static clusterMarshaller(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(t(["1.0.0","2.1.0"])){const o=p.a.get(e.marshaller,"kind"),n=p.a.get(e.marshaller,o);let r;switch(o){case"OptimizedMarshaller":t(["1.0.0","2.0.0"])&&(r=new a.a("org.apache.ignite.marshaller.optimized.OptimizedMarshaller","marshaller",n).intProperty("poolSize").intProperty("requireSerializable"));break;case"JdkMarshaller":r=new a.a("org.apache.ignite.marshaller.jdk.JdkMarshaller","marshaller",n)}r&&i.beanProperty("marshaller",r)}return i.intProperty("marshalLocalJobs"),t(["1.0.0","2.0.0"])&&i.intProperty("marshallerCacheKeepAliveTime").intProperty("marshallerCacheThreadPoolSize","marshallerCachePoolSize"),i}static clusterMetrics(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);return i.longProperty("metricsExpireTime").intProperty("metricsHistorySize").longProperty("metricsLogFrequency"),t("2.0.0")&&i.longProperty("metricsUpdateFrequency"),i}static clusterODBC(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();if(t("2.1.0")||!0!==p.a.get(e,"odbcEnabled"))return i;const o=new a.a("org.apache.ignite.configuration.OdbcConfiguration","odbcConfiguration",e,f.odbcConfiguration);return o.stringProperty("endpointAddress").intProperty("socketSendBufferSize").intProperty("socketReceiveBufferSize").intProperty("maxOpenCursors").intProperty("threadPoolSize"),i.beanProperty("odbcConfiguration",o),i}static clusterQuery(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(!t("2.1.0"))return i;if(i.longProperty("longQueryWarningTimeout"),!0!==p.a.get(e,"sqlConnectorConfiguration.enabled"))return i;const o=new a.a("org.apache.ignite.configuration.SqlConnectorConfiguration","sqlConnCfg",e.sqlConnectorConfiguration,f.sqlConnectorConfiguration);return o.stringProperty("host").intProperty("port").intProperty("portRange").intProperty("socketSendBufferSize").intProperty("socketReceiveBufferSize").intProperty("maxOpenCursorsPerConnection").intProperty("threadPoolSize").boolProperty("tcpNoDelay"),i.beanProperty("sqlConnectorConfiguration",o),i}static clusterPersistence(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();if(!t(["2.1.0","2.3.0"])||!0!==p.a.get(e,"enabled"))return i;const o=new a.a("org.apache.ignite.configuration.PersistentStoreConfiguration","PersistenceCfg",e,f.persistenceStoreConfiguration);return o.stringProperty("persistentStorePath").boolProperty("metricsEnabled").boolProperty("alwaysWriteFullPages").longProperty("checkpointingFrequency").longProperty("checkpointingPageBufferSize").intProperty("checkpointingThreads").enumProperty("walMode").stringProperty("walStorePath").stringProperty("walArchivePath").intProperty("walSegments").intProperty("walSegmentSize").intProperty("walHistorySize").longProperty("walFlushFrequency").longProperty("walFsyncDelayNanos").intProperty("walRecordIteratorBufferSize").longProperty("lockWaitTime").longProperty("rateTimeInterval").intProperty("tlbSize").intProperty("subIntervals").longProperty("walAutoArchiveAfterInactivity"),i.beanProperty("persistentStoreConfiguration",o),i}static clusterRebalance(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);return t("2.5.0")&&i.intProperty("rebalanceBatchSize").longProperty("rebalanceBatchesPrefetchCount").longProperty("rebalanceTimeout").longProperty("rebalanceThrottle"),i}static clusterServiceConfiguration(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();const o=[];return p.a.forEach(e,e=>{const i=new a.a("org.apache.ignite.services.ServiceConfiguration","service",e,f.serviceConfigurations);i.stringProperty("name").emptyBeanProperty("service").intProperty("maxPerNodeCount").intProperty("totalCount").stringProperty("cache","cacheName",e=>e?p.a.get(p.a.find(t,{id:e}),"name",null):null).stringProperty("affinityKey"),o.push(i)}),p.a.isEmpty(o)||i.arrayProperty("services","serviceConfiguration",o,"org.apache.ignite.services.ServiceConfiguration"),i}static clusterSsl(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(e.sslEnabled&&Object(h.b)(e.sslContextFactory)){const o=new a.a("org.apache.ignite.ssl.SslContextFactory","sslCtxFactory",e.sslContextFactory);o.intProperty("keyAlgorithm").pathProperty("keyStoreFilePath"),Object(h.a)(o.valueOf("keyStoreFilePath"))&&o.propertyChar("keyStorePassword","ssl.key.storage.password","YOUR_SSL_KEY_STORAGE_PASSWORD"),o.intProperty("keyStoreType").intProperty("protocol"),Object(h.a)(e.sslContextFactory.trustManagers)?o.arrayProperty("trustManagers","trustManagers",p.a.map(e.sslContextFactory.trustManagers,e=>new a.b(e)),"javax.net.ssl.TrustManager"):(o.pathProperty("trustStoreFilePath"),Object(h.a)(o.valueOf("trustStoreFilePath"))&&o.propertyChar("trustStorePassword","ssl.trust.storage.password","YOUR_SSL_TRUST_STORAGE_PASSWORD"),o.intProperty("trustStoreType")),t("2.7.0")&&o.varArgProperty("cipherSuites","cipherSuites",e.sslContextFactory.cipherSuites).varArgProperty("protocols","protocols",e.sslContextFactory.protocols),i.beanProperty("sslContextFactory",o)}return i}static clusterSwap(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);if("FileSwapSpaceSpi"===p.a.get(e.swapSpaceSpi,"kind")){const i=new a.a("org.apache.ignite.spi.swapspace.file.FileSwapSpaceSpi","swapSpaceSpi",e.swapSpaceSpi.FileSwapSpaceSpi);i.pathProperty("baseDirectory").intProperty("readStripesNumber").floatProperty("maximumSparsity").intProperty("maxWriteQueueSize").intProperty("writeBufferSize"),t.beanProperty("swapSpaceSpi",i)}return t}static clusterTime(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);return t(["1.0.0","2.0.0"])&&i.intProperty("clockSyncSamples").intProperty("clockSyncFrequency"),i.intProperty("timeServerPortBase").intProperty("timeServerPortRange"),i}static clusterPools(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean(e);if(i.intProperty("publicThreadPoolSize").intProperty("systemThreadPoolSize").intProperty("serviceThreadPoolSize").intProperty("managementThreadPoolSize").intProperty("rebalanceThreadPoolSize").intProperty("utilityCacheThreadPoolSize","utilityCachePoolSize").longProperty("utilityCacheKeepAliveTime").intProperty("asyncCallbackPoolSize").intProperty("stripedPoolSize"),t("2.0.0")){i.intProperty("dataStreamerThreadPoolSize").intProperty("queryThreadPoolSize");const t=[];p.a.forEach(e.executorConfiguration,e=>{const i=new a.a("org.apache.ignite.configuration.ExecutorConfiguration","executor",e);i.stringProperty("name").intProperty("size"),i.isEmpty()||t.push(i)}),p.a.isEmpty(t)||i.arrayProperty("executors","executorConfiguration",t,"org.apache.ignite.configuration.ExecutorConfiguration")}return i}static clusterTransactions(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();const o=new a.a("org.apache.ignite.configuration.TransactionConfiguration","transactionConfiguration",e,f.transactionConfiguration);return o.enumProperty("defaultTxConcurrency").enumProperty("defaultTxIsolation").longProperty("defaultTxTimeout").intProperty("pessimisticTxLogLinger").intProperty("pessimisticTxLogSize").boolProperty("txSerializableEnabled").emptyBeanProperty("txManagerFactory"),t("2.5.0")&&o.longProperty("txTimeoutOnPartitionMapExchange"),t("2.8.0")&&o.longProperty("deadlockTimeout"),o.boolProperty("useJtaSynchronization"),o.nonEmpty()&&i.beanProperty("transactionConfiguration",o),i}static clusterUserAttributes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);return t.mapProperty("attrs","attributes","userAttributes"),t}static domainModelGeneral(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.domainConfigurationBean(e);switch(t.valueOf("queryMetadata")){case"Annotations":Object(h.b)(e.keyType)&&Object(h.b)(e.valueType)&&t.varArgProperty("indexedTypes","indexedTypes",[b.fullClassName(e.keyType),b.fullClassName(e.valueType)],"java.lang.Class");break;case"Configuration":t.stringProperty("keyType","keyType",e=>b.fullClassName(e)).stringProperty("valueType","valueType",e=>b.fullClassName(e))}return t}static domainModelQuery(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.domainConfigurationBean(e);if("Configuration"===i.valueOf("queryMetadata")){const o=[],n=[],r=[],s=[],l=t("2.3.0"),c=t("2.4.0"),d=t("2.7.0"),u=p.a.filter(p.a.map(e.fields,e=>{if(l&&e.notNull&&o.push(e.name),c&&e.defaultValue){let t=e.defaultValue;switch(e.className){case"String":t=new a.a("java.lang.String","value",e).stringConstructorArgument("defaultValue");break;case"BigDecimal":t=new a.a("java.math.BigDecimal","value",e).stringConstructorArgument("defaultValue");break;case"byte[]":t=null}s.push({name:e.name,value:t})}return d&&e.precision&&(n.push({name:e.name,value:e.precision}),e.scale&&r.push({name:e.name,value:e.scale})),{name:e.name,className:b.stringClassName(e.className)}}),t=>t.name!==e.keyFieldName&&t.name!==e.valueFieldName);if(i.stringProperty("tableName"),t("2.0.0")){i.stringProperty("keyFieldName").stringProperty("valueFieldName");const t=i.valueOf("keyFieldName"),o=i.valueOf("valueFieldName");t&&u.push({name:t,className:b.stringClassName(e.keyType)}),o&&u.push({name:o,className:b.stringClassName(e.valueType)})}i.collectionProperty("keyFields","keyFields",e.queryKeyFields,"java.lang.String","java.util.HashSet").mapProperty("fields",u,"fields",!0).mapProperty("aliases","aliases"),l&&o&&i.collectionProperty("notNullFields","notNullFields",o,"java.lang.String","java.util.HashSet"),c&&s&&i.mapProperty("defaultFieldValues",s,"defaultFieldValues"),d&&n&&(i.mapProperty("fieldsPrecision",n,"fieldsPrecision"),r&&i.mapProperty("fieldsScale",r,"fieldsScale"));const g=p.a.map(e.indexes,e=>{const i=new a.a("org.apache.ignite.cache.QueryIndex","index",e,y.indexes).stringProperty("name").enumProperty("indexType").mapProperty("indFlds","fields","fields",!0);return t("2.3.0")&&i.intProperty("inlineSize"),i});i.collectionProperty("indexes","indexes",g,"org.apache.ignite.cache.QueryIndex")}return i}static _domainModelDatabaseFields(e,t,i){const o=p.a.map(i[t],e=>new a.a("org.apache.ignite.cache.store.jdbc.JdbcTypeField","typeField",e,y.typeField).constantConstructorArgument("databaseFieldType").stringConstructorArgument("databaseFieldName").classConstructorArgument("javaFieldType").stringConstructorArgument("javaFieldName"));return e.varArgProperty(t,t,o,"org.apache.ignite.cache.store.jdbc.JdbcTypeField"),e}static domainStore(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.domainJdbcTypeBean(e);return t.stringProperty("databaseSchema").stringProperty("databaseTable"),this._domainModelDatabaseFields(t,"keyFields",e),this._domainModelDatabaseFields(t,"valueFields",e),t}static _evictionPolicy(e,t,i,o,n){let r,s;if(t("2.4.0")){switch(p.a.get(o,"kind")){case"LRU":s={cls:"org.apache.ignite.cache.eviction.lru.LruEvictionPolicyFactory",src:o.LRU};break;case"FIFO":s={cls:"org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicyFactory",src:o.FIFO};break;case"SORTED":s={cls:"org.apache.ignite.cache.eviction.sorted.SortedEvictionPolicyFactory",src:o.SORTED};break;default:return e}r=(i?"nearEviction":"eviction")+"PolicyFactory"}else{switch(p.a.get(o,"kind")){case"LRU":s={cls:"org.apache.ignite.cache.eviction.lru.LruEvictionPolicy",src:o.LRU};break;case"FIFO":s={cls:"org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy",src:o.FIFO};break;case"SORTED":s={cls:"org.apache.ignite.cache.eviction.sorted.SortedEvictionPolicy",src:o.SORTED};break;default:return e}r=(i?"nearEviction":"eviction")+"Policy"}const l=new a.a(s.cls,r,s.src,n);return l.intProperty("batchSize").intProperty("maxMemorySize").intProperty("maxSize"),e.beanProperty(r,l),e}static cacheGeneral(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);return i.stringProperty("name"),t("2.1.0")&&i.stringProperty("groupName"),i.enumProperty("cacheMode").enumProperty("atomicityMode"),"PARTITIONED"===i.valueOf("cacheMode")&&i.valueOf("backups")&&i.intProperty("backups").intProperty("readFromBackup"),t("2.0.0")&&i.enumProperty("partitionLossPolicy"),i.intProperty("copyOnRead"),"PARTITIONED"===i.valueOf("cacheMode")&&"TRANSACTIONAL"===i.valueOf("atomicityMode")&&i.intProperty("isInvalidate","invalidate"),i}static affinityFunction(e,t){const i=new a.a(e,"affinityFunction",t);return i.boolConstructorArgument("excludeNeighbors").intProperty("partitions").emptyBeanProperty("affinityBackupFilter"),i}static affinity(e,t){switch(p.a.get(e,"kind")){case"Rendezvous":t.beanProperty("affinity",this.affinityFunction("org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction",e.Rendezvous));break;case"Fair":t.beanProperty("affinity",this.affinityFunction("org.apache.ignite.cache.affinity.fair.FairAffinityFunction",e.Fair));break;case"Custom":t.emptyBeanProperty("affinity.Custom.className","affinity")}}static cacheAffinity(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);return this.affinity(e.affinity,i),i.emptyBeanProperty("affinityMapper"),t("2.0.0")&&i.emptyBeanProperty("topologyValidator"),i}static cacheKeyConfiguration(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.igniteConfigurationBean();if(t("2.1.0")){const t=p.a.reduce(e,(e,t)=>(t.typeName&&t.affinityKeyFieldName&&e.push(new a.a("org.apache.ignite.cache.CacheKeyConfiguration",null,t).stringConstructorArgument("typeName").stringConstructorArgument("affinityKeyFieldName")),e),[]);if(p.a.isEmpty(t))return i;i.arrayProperty("keyConfiguration","keyConfiguration",t,"org.apache.ignite.cache.CacheKeyConfiguration")}return i}static cacheMemory(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);if(t(["2.0.0","2.3.0"])&&i.stringProperty("memoryPolicyName"),t("2.3.0")&&i.stringProperty("dataRegionName"),t("2.8.0")){i.enumProperty("diskPageCompression");const e=i.valueOf("diskPageCompression");"ZSTD"!==e&&"LZ4"!==e||i.intProperty("diskPageCompressionLevel")}return t(["1.0.0","2.0.0"])&&(i.enumProperty("memoryMode"),"OFFHEAP_VALUES"!==i.valueOf("memoryMode")&&i.longProperty("offHeapMaxMemory")),t("2.0.0")&&i.boolProperty("onheapCacheEnabled").emptyBeanProperty("evictionFilter"),this._evictionPolicy(i,t,!1,e.evictionPolicy,y.evictionPolicy),t(["1.0.0","2.0.0"])&&i.intProperty("startSize").boolProperty("swapEnabled"),e.cacheWriterFactory&&i.beanProperty("cacheWriterFactory",new a.b(e.cacheWriterFactory)),e.cacheLoaderFactory&&i.beanProperty("cacheLoaderFactory",new a.b(e.cacheLoaderFactory)),e.expiryPolicyFactory&&i.beanProperty("expiryPolicyFactory",new a.b(e.expiryPolicyFactory)),i}static cacheQuery(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.cacheConfigurationBean(e);const a=p.a.reduce(t,(e,t)=>("Annotations"===t.queryMetadata&&e.push(b.fullClassName(t.keyType),b.fullClassName(t.valueType)),e),[]);return o.stringProperty("sqlSchema"),i(["1.0.0","2.0.0"])&&o.intProperty("sqlOnheapRowCacheSize"),o.longProperty("longQueryWarningTimeout").arrayProperty("indexedTypes","indexedTypes",a,"java.lang.Class").intProperty("queryDetailMetricsSize").arrayProperty("sqlFunctionClasses","sqlFunctionClasses",e.sqlFunctionClasses,"java.lang.Class"),i(["1.0.0","2.0.0"])&&o.intProperty("snapshotableIndex"),o.intProperty("sqlEscapeAll"),i("2.0.0")&&o.intProperty("queryParallelism").intProperty("sqlIndexMaxInlineSize"),i("2.4.0")&&e.sqlOnheapCacheEnabled&&o.boolProperty("sqlOnheapCacheEnabled").intProperty("sqlOnheapCacheMaxSize"),o.intProperty("maxQueryIteratorsCount"),o}static _baseJdbcPojoStoreFactory(e,t,i,o,n,r){const s=t.valueOf("dataSourceBean");t.dataSource(s,"dataSourceBean",this.dataSourceBean(s,e.dialect,n,r,e.implementationVersion)).beanProperty("dialect",new a.b(this.dialectClsName(e.dialect))),t.intProperty("batchSize").intProperty("maximumPoolSize").intProperty("maximumWriteAttempts").intProperty("parallelLoadCacheMinimumThreshold").emptyBeanProperty("hasher").emptyBeanProperty("transformer").boolProperty("sqlEscapeAll");const l=(e,t)=>{b.nonBuiltInClass(e.valueOf(t))?e.stringProperty(t):e.classProperty(t)},c=p.a.reduce(o,(e,t)=>{if(m()(t.databaseTable))return e;const o=this.domainJdbcTypeBean(p.a.merge({},t,{cacheName:i})).stringProperty("cacheName");return l(o,"keyType"),l(o,"valueType"),this.domainStore(t,o),e.push(o),e},[]);t.varArgProperty("types","types",c,"org.apache.ignite.cache.store.jdbc.JdbcType")}static cacheStore(e,t,i,o,n){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:this.cacheConfigurationBean(e);const s=p.a.get(e,"cacheStoreFactory.kind");if(s&&e.cacheStoreFactory[s]){let l=null;const c=e.cacheStoreFactory[s];switch(s){case"HiveCacheJdbcPojoStoreFactory":o.hiveVersion&&(l=new a.a("org.gridgain.cachestore.HiveCacheJdbcPojoStoreFactory","cacheStoreFactory",c,y.cacheStoreFactory.HiveCacheJdbcPojoStoreFactory),this._baseJdbcPojoStoreFactory(c,l,e.name,t,i,n),l.boolProperty("streamerEnabled"));break;case"CacheJdbcPojoStoreFactory":l=new a.a("org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory","cacheStoreFactory",c,y.cacheStoreFactory.CacheJdbcPojoStoreFactory),this._baseJdbcPojoStoreFactory(c,l,e.name,t,i,n);break;case"CacheJdbcBlobStoreFactory":if("DataSource"===(l=new a.a("org.apache.ignite.cache.store.jdbc.CacheJdbcBlobStoreFactory","cacheStoreFactory",c)).valueOf("connectVia")){const e=l.valueOf("dataSourceBean");l.dataSource(e,"dataSourceBean",this.dataSourceBean(e,c.dialect,i,n))}else r.stringProperty("connectionUrl").stringProperty("user").property("password","ds.".concat(c.user,".password"),"YOUR_PASSWORD");l.boolProperty("initSchema").stringProperty("createTableQuery").stringProperty("loadQuery").stringProperty("insertQuery").stringProperty("updateQuery").stringProperty("deleteQuery");break;case"CacheHibernateBlobStoreFactory":(l=new a.a("org.apache.ignite.cache.store.hibernate.CacheHibernateBlobStoreFactory","cacheStoreFactory",c)).propsProperty("props","hibernateProperties")}l&&r.beanProperty("cacheStoreFactory",l)}return r.intProperty("storeConcurrentLoadAllThreshold").boolProperty("storeKeepBinary").boolProperty("loadPreviousValue").boolProperty("readThrough").boolProperty("writeThrough"),r.valueOf("writeBehindEnabled")&&(r.boolProperty("writeBehindEnabled").intProperty("writeBehindBatchSize").intProperty("writeBehindFlushSize").longProperty("writeBehindFlushFrequency").intProperty("writeBehindFlushThreadCount"),i("2.0.0")&&r.boolProperty("writeBehindCoalescing")),r}static cacheConcurrency(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);return i.intProperty("maxConcurrentAsyncOperations").longProperty("defaultLockTimeout"),t(["1.0.0","2.0.0"])&&i.enumProperty("atomicWriteOrderMode"),i.enumProperty("writeSynchronizationMode"),i}static nodeFilter(e){const t=p.a.get(e,"kind"),i=p.a.get(e,t);if(!m()(i))switch(t){case"Custom":if(Object(h.a)(i.className))return new a.b(i.className)}return null}static cacheNodeFilter(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);const i=p.a.get(e,"nodeFilter"),o=this.nodeFilter(i);return o&&t.beanProperty("nodeFilter",o),t}static cacheRebalance(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return"LOCAL"!==t.valueOf("cacheMode")&&t.enumProperty("rebalanceMode").intProperty("rebalanceBatchSize").longProperty("rebalanceBatchesPrefetchCount").intProperty("rebalanceOrder").longProperty("rebalanceDelay").longProperty("rebalanceTimeout").longProperty("rebalanceThrottle"),t}static cacheMisc(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);if(e.interceptor&&i.beanProperty("interceptor",new a.b(e.interceptor)),t("2.0.0")&&i.boolProperty("storeByValue"),i.boolProperty("eagerTtl"),t("2.7.0")&&i.boolProperty("encryptionEnabled"),t("2.5.0")&&i.boolProperty("eventsDisabled"),e.cacheStoreSessionListenerFactories){const t=p.a.map(e.cacheStoreSessionListenerFactories,e=>new a.b(e));i.varArgProperty("cacheStoreSessionListenerFactories","cacheStoreSessionListenerFactories",t,"javax.cache.configuration.Factory")}return i}static cacheNearServer(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);if("PARTITIONED"===i.valueOf("cacheMode")&&p.a.get(e,"nearConfiguration.enabled")){const o=new a.a("org.apache.ignite.configuration.NearCacheConfiguration","nearConfiguration",e.nearConfiguration,y.nearConfiguration);o.intProperty("nearStartSize"),this._evictionPolicy(o,t,!0,o.valueOf("nearEvictionPolicy"),y.evictionPolicy),i.beanProperty("nearConfiguration",o)}return i}static cacheNearClient(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);if("PARTITIONED"===i.valueOf("cacheMode")&&p.a.get(e,"clientNearConfiguration.enabled")){const o=new a.a("org.apache.ignite.configuration.NearCacheConfiguration",b.toJavaName("nearConfiguration",i.valueOf("name")),e.clientNearConfiguration,y.clientNearConfiguration);return o.intProperty("nearStartSize"),this._evictionPolicy(o,t,!0,o.valueOf("nearEvictionPolicy"),y.evictionPolicy),o}return i}static cacheStatistics(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return t.boolProperty("statisticsEnabled").boolProperty("managementEnabled"),t}static cacheDomains(e,t,i){const o=p.a.reduce(e,(e,i)=>{if(m()(i.queryMetadata)||"Configuration"===i.queryMetadata){const o=this.domainModelGeneral(i);this.domainModelQuery(i,t,o),e.push(o)}return e},[]);i.collectionProperty("qryEntities","queryEntities",o,"org.apache.ignite.cache.QueryEntity")}static cacheConfiguration(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.cacheConfigurationBean(e);return this.cacheGeneral(e,t,a),this.cacheAffinity(e,t,a),this.cacheMemory(e,t,a),this.cacheQuery(e,e.domains,t,a),this.cacheStore(e,e.domains,t,i,o,a),this.cacheKeyConfiguration(e.keyConfiguration,t,a),this.cacheNodeFilter(e,a),this.cacheConcurrency(e,t,a),this.cacheRebalance(e,a),this.cacheMisc(e,t,a),this.cacheNearServer(e,t,a),this.cacheStatistics(e,a),this.cacheDomains(e.domains,t,a),a}}IgniteConfigurationGenerator.eventGrps=new r.a},1166:function(e,t,i){"use strict";i.d(t,"a",function(){return ArtifactVersionChecker});var o=i(2),a=i.n(o);class ArtifactVersionChecker{static _numberComparator(e,t){return e>t?1:e<t?-1:0}static _compare(e,t){for(let i=0;i<e.length&&i<t.length;i++){const o=this._numberComparator(e[i],t[i]);if(0!==o)return o}return 0}static _parse(e){return a.a.map(e.split(/[.-]/),e=>e.startsWith("jre")?parseInt(e.substring(3),10):parseInt(e,10))}static latestVersions(e){return a.a.map(a.a.values(a.a.groupBy(a.a.uniqWith(e,a.a.isEqual),e=>e.groupId+e.artifactId)),e=>{if(e.length>1)try{return a.a.reduce(e,(e,t)=>this._compare(this._parse(t.version),this._parse(e.version))>0?t:e)}catch(t){return a.a.last(a.a.sortBy(e,"version"))}return e[0]})}}},1167:function(e){e.exports=JSON.parse('{"Cloud":{"artifactId":"ignite-cloud"},"S3":{"artifactId":"ignite-aws"},"GoogleStorage":{"artifactId":"ignite-gce"},"ZooKeeper":{"artifactId":"ignite-zookeeper"},"Kubernetes":{"artifactId":"ignite-kubernetes"},"Log4j":{"artifactId":"ignite-log4j"},"Log4j2":{"artifactId":"ignite-log4j2"},"JCL":{"artifactId":"ignite-jcl"},"SLF4J":{"artifactId":"ignite-slf4j"},"Generic":[{"groupId":"com.mchange","artifactId":"c3p0","version":"0.9.5.4"},{"groupId":"com.mchange","artifactId":"mchange-commons-java","version":"0.2.15"}],"Hive":[{"groupId":"org.apache.hive","artifactId":"hive-jdbc","version":"3.1.1","exclude":[{"groupId":"org.eclipse.jetty.aggregate","artifactId":"*"}]},{"groupId":"com.mchange","artifactId":"c3p0","version":"0.9.5.4"},{"groupId":"com.mchange","artifactId":"mchange-commons-java","version":"0.2.15"}],"MySQL":{"groupId":"mysql","artifactId":"mysql-connector-java","version":"8.0.15"},"PostgreSQL":{"groupId":"org.postgresql","artifactId":"postgresql","version":"42.2.5"},"H2":{"groupId":"com.h2database","artifactId":"h2","version":[{"range":["1.0.0","2.0.0"],"version":"1.4.191"},{"range":["2.0.0","2.7.0"],"version":"1.4.195"},{"range":"2.7.0","version":"1.4.197"}]},"Oracle":{"groupId":"com.oracle.jdbc","artifactId":"ojdbc8","version":"18.3.0.0.0","jar":"ojdbc8.jar","link":"https://www.oracle.com/technetwork/database/application-development/jdbc/downloads/index.html"},"DB2":{"groupId":"ibm","artifactId":"jdbc","version":"4.25.13","jar":"db2jcc4.jar","link":"http://www-01.ibm.com/support/docview.wss?uid=swg21363866"},"SQLServer":{"groupId":"com.microsoft.sqlserver","artifactId":"mssql-jdbc","version":"7.2.1.jre8"}}')},1168:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return AbstractTransformer});var o=i(1156),a=i(1165),n=i(1159),r=i(1160),s=i(291),l=i(1163);const c=new n.a,d=new r.a;class AbstractTransformer{static mainComment(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return i.push(e.generatedBy()),this.commentBlock(e,...i)}static _emptyLineIfNeeded(t,i,o){if(o===i.length-1)return;const a=i[o];if(e.includes(["MAP","COLLECTION","ARRAY","ENUM_COLLECTION"],a.clsName)||"BEAN"===a.clsName&&a.value.isComplex())return t.emptyLine();const n=i[o+1];return e.includes(["MAP","COLLECTION","ARRAY","ENUM_COLLECTION"],n.clsName)||"BEAN"===n.clsName&&n.value.isComplex()?t.emptyLine():void 0}static clusterGeneral(e,t){return this.toSection(this.generator.clusterGeneral(e,t))}static clusterAtomics(e,t){return this.toSection(this.generator.clusterAtomics(e,t))}static clusterBinary(e){return this.toSection(this.generator.clusterBinary(e))}static clusterCacheKeyConfiguration(e){return this.toSection(this.generator.clusterCacheKeyConfiguration(e))}static clusterClientConnector(e,t){return this.toSection(this.generator.clusterClientConnector(e,t))}static clusterCollision(e){return this.toSection(this.generator.clusterCollision(e))}static clusterCommunication(e,t){return this.toSection(this.generator.clusterCommunication(e,t))}static clusterConnector(e){return this.toSection(this.generator.clusterConnector(e))}static clusterDeployment(e,t){return this.toSection(this.generator.clusterDeployment(e,t))}static clusterDiscovery(e,t){return this.toSection(this.generator.clusterDiscovery(e,t))}static clusterEvents(e,t){return this.toSection(this.generator.clusterEvents(e,t))}static clusterFailover(e,t){return this.toSection(this.generator.clusterFailover(e,t))}static clusterLoadBalancing(e){return this.toSection(this.generator.clusterLoadBalancing(e))}static clusterLogger(e){return this.toSection(this.generator.clusterLogger(e))}static clusterMemory(e,t){return this.toSection(this.generator.clusterMemory(e,t))}static clusterDataStorageConfiguration(e,t){return this.toSection(this.generator.clusterDataStorageConfiguration(e,t))}static clusterMisc(e,t){return this.toSection(this.generator.clusterMisc(e,t))}static clusterMvcc(e,t){return this.toSection(this.generator.clusterMvcc(e,t))}static clusterEncryption(e,t){return this.toSection(this.generator.clusterEncryption(e,t))}static clusterMarshaller(e,t){return this.toSection(this.generator.clusterMarshaller(e,t))}static clusterMetrics(e,t){return this.toSection(this.generator.clusterMetrics(e,t))}static clusterODBC(e,t){return this.toSection(this.generator.clusterODBC(e,t))}static clusterPersistence(e,t){return this.toSection(this.generator.clusterPersistence(e,t))}static clusterQuery(e,t){return this.toSection(this.generator.clusterQuery(e,t))}static clusterRebalance(e,t){return this.toSection(this.generator.clusterRebalance(e,t))}static clusterServiceConfiguration(e,t){return this.toSection(this.generator.clusterServiceConfiguration(e,t))}static clusterSsl(e,t){return this.toSection(this.generator.clusterSsl(e,t))}static clusterSwap(e){return this.toSection(this.generator.clusterSwap(e))}static clusterTime(e,t){return this.toSection(this.generator.clusterTime(e,t))}static clusterPools(e,t){return this.toSection(this.generator.clusterPools(e,t))}static clusterTransactions(e,t){return this.toSection(this.generator.clusterTransactions(e,t))}static clusterUserAttributes(e){return this.toSection(this.generator.clusterUserAttributes(e))}static cacheGeneral(e,t){return this.toSection(this.generator.cacheGeneral(e,t))}static cacheAffinity(e,t){return this.toSection(this.generator.cacheAffinity(e,t))}static cacheKeyConfiguration(e,t){return this.toSection(this.generator.cacheKeyConfiguration(e,t))}static cacheMemory(e,t){return this.toSection(this.generator.cacheMemory(e,t))}static cacheQuery(e,t,i){return this.toSection(this.generator.cacheQuery(e,t,i))}static cacheStore(e,t,i){return this.toSection(this.generator.cacheStore(e,t,i))}static cacheConcurrency(e,t){return this.toSection(this.generator.cacheConcurrency(e,t))}static cacheMisc(e,t){return this.toSection(this.generator.cacheMisc(e,t))}static cacheNodeFilter(e){return this.toSection(this.generator.cacheNodeFilter(e))}static cacheRebalance(e){return this.toSection(this.generator.cacheRebalance(e))}static cacheNearServer(e,t){return this.toSection(this.generator.cacheNearServer(e,t))}static cacheNearClient(e,t){return this.toSection(this.generator.cacheNearClient(e,t))}static cacheStatistics(e){return this.toSection(this.generator.cacheStatistics(e))}static clusterCaches(e,t,i,o){return this.toSection(this.generator.clusterCaches(e,i,t,o))}static clusterCheckpoint(e,t,i){return this.toSection(this.generator.clusterCheckpoint(e,t,i))}static domainModelGeneral(e){return this.toSection(this.generator.domainModelGeneral(e))}static domainModelQuery(e,t){return this.toSection(this.generator.domainModelQuery(e,t))}static domainStore(e){return this.toSection(this.generator.domainStore(e))}static hasProperties(t){const i=t=>{switch(t.clsName){case"BEAN":if(this.hasProperties(t.value))return!0;break;case"ARRAY":case"COLLECTION":case"ENUM_COLLECTION":if(e.find(t.items,e=>this.hasProperties(e)))return!0;break;case"DATA_SOURCE":case"PROPERTY":case"PROPERTY_CHAR":return!0}return!1};return e.isObject(t)&&(!!e.find(t.arguments,i)||!!e.find(t.properties,i))}static collectDataSources(t){const i=e.reduce(t.properties,(t,i)=>{switch(i.clsName.toUpperCase()){case"ARRAY":this._isBean(i.typeClsName)&&e.forEach(i.items,e=>t.push(...this.collectDataSources(e)));break;case"BEAN":t.push(...this.collectDataSources(i.value));break;case"DATA_SOURCE":t.push(i.value)}return t},[]);return e.uniqBy(i,e=>e.id)}static toSection(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new o.a;return this._setProperties(t,e),t}}AbstractTransformer.generator=a.a,AbstractTransformer.javaTypes=new s.a,AbstractTransformer.javaTypesNonEnum=new l.a(c,d,new s.a)}).call(this,i(2))},1183:function(e,t){function webpackEmptyContext(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,e.exports=webpackEmptyContext,webpackEmptyContext.id=1183},1184:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return IgniteUiAceGeneratorFactory});class IgniteUiAceGeneratorFactory{constructor(e,t,i,o){this.scope=e,this.attrs=t,this.Version=i,this.generatorFactory=o}$onInit(){delete this.data;const t=this.Version.available.bind(this.Version);switch(this.generator){case"igniteConfiguration":this.generate=(e=>this.generatorFactory.cluster(e,this.Version.currentSbj.getValue(),"true"===this.client));break;case"cacheStore":case"cacheQuery":this.generate=((i,o)=>{const a=e.reduce(o,(t,o)=>(e.includes(i.domains,o.value)&&t.push(o.meta),t),[]);return this.generatorFactory[this.generator](i,a,t)});break;case"cacheNodeFilter":this.generate=(e=>this.generatorFactory.cacheNodeFilter(e));break;case"clusterServiceConfiguration":this.generate=((e,t)=>this.generatorFactory.clusterServiceConfiguration(e.serviceConfigurations,t));break;case"clusterCheckpoint":this.generate=((e,i)=>this.generatorFactory.clusterCheckpoint(e,t,i));break;default:this.generate=(e=>this.generatorFactory[this.generator](e,t))}}$postLink(){this.formCtrl&&this.ngModelCtrl&&this.formCtrl.$removeControl(this.ngModelCtrl),this.igniteUiAceTabs&&this.igniteUiAceTabs.onLoad&&(this.scope.onLoad=(e=>{this.igniteUiAceTabs.onLoad(e),this.scope.$watch("master",()=>e.attractAttention=!1)})),this.igniteUiAceTabs&&this.igniteUiAceTabs.onChange&&(this.scope.onChange=this.igniteUiAceTabs.onChange);const t=!(void 0!==this.attrs.noDeepWatch),i=()=>{this.ctrl.data=e.isNil(this.scope.master)?null:this.ctrl.generate(this.scope.master,this.scope.detail).asString()};this.scope.$watch("master",i,t),this.subscription=this.Version.currentSbj.subscribe({next:i})}$onDestroy(){this.subscription.unsubscribe()}}}).call(this,i(2))},1201:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return IgniteClusterPlatformDefaults});const o=t=>e.capitalize(t),a={atomics:{cacheMode:{clsName:"Apache.Ignite.Core.Cache.Configuration.CacheMode",mapper:o}},transactionConfiguration:{defaultTxConcurrency:{clsName:"Apache.Ignite.Core.Transactions.TransactionConcurrency",mapper:o},defaultTxIsolation:{clsName:"Apache.Ignite.Core.Transactions.TransactionIsolation",mapper:o}}};class IgniteClusterPlatformDefaults{constructor(){Object.assign(this,a)}}}).call(this,i(2))},1202:function(e){e.exports=JSON.parse('[{"label":"EVTS_CHECKPOINT","value":"EVTS_CHECKPOINT","class":"org.apache.ignite.events.EventType","events":["EVT_CHECKPOINT_SAVED","EVT_CHECKPOINT_LOADED","EVT_CHECKPOINT_REMOVED"]},{"label":"EVTS_DEPLOYMENT","value":"EVTS_DEPLOYMENT","class":"org.apache.ignite.events.EventType","events":["EVT_CLASS_DEPLOYED","EVT_CLASS_UNDEPLOYED","EVT_CLASS_DEPLOY_FAILED","EVT_TASK_DEPLOYED","EVT_TASK_UNDEPLOYED","EVT_TASK_DEPLOY_FAILED"]},{"label":"EVTS_ERROR","value":"EVTS_ERROR","class":"org.apache.ignite.events.EventType","events":["EVT_JOB_TIMEDOUT","EVT_JOB_FAILED","EVT_JOB_FAILED_OVER","EVT_JOB_REJECTED","EVT_JOB_CANCELLED","EVT_TASK_TIMEDOUT","EVT_TASK_FAILED","EVT_CLASS_DEPLOY_FAILED","EVT_TASK_DEPLOY_FAILED","EVT_TASK_DEPLOYED","EVT_TASK_UNDEPLOYED","EVT_CACHE_REBALANCE_STARTED","EVT_CACHE_REBALANCE_STOPPED"]},{"label":"EVTS_DISCOVERY","value":"EVTS_DISCOVERY","class":"org.apache.ignite.events.EventType","events":["EVT_NODE_JOINED","EVT_NODE_LEFT","EVT_NODE_FAILED","EVT_NODE_SEGMENTED","EVT_CLIENT_NODE_DISCONNECTED","EVT_CLIENT_NODE_RECONNECTED"]},{"label":"EVTS_JOB_EXECUTION","value":"EVTS_JOB_EXECUTION","class":"org.apache.ignite.events.EventType","events":["EVT_JOB_MAPPED","EVT_JOB_RESULTED","EVT_JOB_FAILED_OVER","EVT_JOB_STARTED","EVT_JOB_FINISHED","EVT_JOB_TIMEDOUT","EVT_JOB_REJECTED","EVT_JOB_FAILED","EVT_JOB_QUEUED","EVT_JOB_CANCELLED"]},{"label":"EVTS_TASK_EXECUTION","value":"EVTS_TASK_EXECUTION","class":"org.apache.ignite.events.EventType","events":["EVT_TASK_STARTED","EVT_TASK_FINISHED","EVT_TASK_FAILED","EVT_TASK_TIMEDOUT","EVT_TASK_SESSION_ATTR_SET","EVT_TASK_REDUCED"]},{"label":"EVTS_CACHE","value":"EVTS_CACHE","class":"org.apache.ignite.events.EventType","events":["EVT_CACHE_ENTRY_CREATED","EVT_CACHE_ENTRY_DESTROYED","EVT_CACHE_OBJECT_PUT","EVT_CACHE_OBJECT_READ","EVT_CACHE_OBJECT_REMOVED","EVT_CACHE_OBJECT_LOCKED","EVT_CACHE_OBJECT_UNLOCKED","EVT_CACHE_OBJECT_SWAPPED","EVT_CACHE_OBJECT_UNSWAPPED","EVT_CACHE_OBJECT_EXPIRED"]},{"label":"EVTS_CACHE_REBALANCE","value":"EVTS_CACHE_REBALANCE","class":"org.apache.ignite.events.EventType","events":["EVT_CACHE_REBALANCE_STARTED","EVT_CACHE_REBALANCE_STOPPED","EVT_CACHE_REBALANCE_PART_LOADED","EVT_CACHE_REBALANCE_PART_UNLOADED","EVT_CACHE_REBALANCE_OBJECT_LOADED","EVT_CACHE_REBALANCE_OBJECT_UNLOADED","EVT_CACHE_REBALANCE_PART_DATA_LOST"]},{"label":"EVTS_CACHE_LIFECYCLE","value":"EVTS_CACHE_LIFECYCLE","class":"org.apache.ignite.events.EventType","events":["EVT_CACHE_STARTED","EVT_CACHE_STOPPED","EVT_CACHE_NODES_LEFT"]},{"label":"EVTS_CACHE_QUERY","value":"EVTS_CACHE_QUERY","class":"org.apache.ignite.events.EventType","events":["EVT_CACHE_QUERY_EXECUTED","EVT_CACHE_QUERY_OBJECT_READ"]},{"label":"EVTS_SWAPSPACE","value":"EVTS_SWAPSPACE","class":"org.apache.ignite.events.EventType","events":["EVT_SWAP_SPACE_CLEARED","EVT_SWAP_SPACE_DATA_REMOVED","EVT_SWAP_SPACE_DATA_READ","EVT_SWAP_SPACE_DATA_STORED","EVT_SWAP_SPACE_DATA_EVICTED"]}]')},1203:function(e){e.exports=JSON.parse('{"Generic":"org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect","Oracle":"org.apache.ignite.cache.store.jdbc.dialect.OracleDialect","DB2":"org.apache.ignite.cache.store.jdbc.dialect.DB2Dialect","SQLServer":"org.apache.ignite.cache.store.jdbc.dialect.SQLServerDialect","MySQL":"org.apache.ignite.cache.store.jdbc.dialect.MySQLDialect","PostgreSQL":"org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect","H2":"org.apache.ignite.cache.store.jdbc.dialect.H2Dialect","Hive":"org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect"}')},1204:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return IgniteJavaTransformer});var o=i(29),a=i(1161),n=i(1168),r=i(1156);const s=new(i(220).a),l=["org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory","org.gridgain.cachestore.HiveCacheJdbcPojoStoreFactory"],c=[{schema:"CARS",type:"PARKING",create:["CREATE TABLE IF NOT EXISTS CARS.PARKING (","ID       INTEGER     NOT NULL PRIMARY KEY,","NAME     VARCHAR(50) NOT NULL,","CAPACITY INTEGER NOT NULL)"],clearQuery:["DELETE FROM CARS.PARKING"],insertCntConsts:[{name:"DEMO_MAX_PARKING_CNT",val:5,comment:"How many parkings to generate."}],insertPattern:["INSERT INTO CARS.PARKING(ID, NAME, CAPACITY) VALUES(?, ?, ?)"],fillInsertParameters(e){e.append("stmt.setInt(1, id);"),e.append('stmt.setString(2, "Parking #" + (id + 1));'),e.append("stmt.setInt(3, 10 + rnd.nextInt(20));")},selectQuery:["SELECT * FROM PARKING WHERE CAPACITY >= 20"]},{schema:"CARS",type:"CAR",create:["CREATE TABLE IF NOT EXISTS CARS.CAR (","ID         INTEGER NOT NULL PRIMARY KEY,","PARKING_ID INTEGER NOT NULL,","NAME       VARCHAR(50) NOT NULL);"],clearQuery:["DELETE FROM CARS.CAR"],rndRequired:!0,insertCntConsts:[{name:"DEMO_MAX_CAR_CNT",val:10,comment:"How many cars to generate."},{name:"DEMO_MAX_PARKING_CNT",val:5,comment:"How many parkings to generate."}],insertPattern:["INSERT INTO CARS.CAR(ID, PARKING_ID, NAME) VALUES(?, ?, ?)"],fillInsertParameters(e){e.append("stmt.setInt(1, id);"),e.append("stmt.setInt(2, rnd.nextInt(DEMO_MAX_PARKING_CNT));"),e.append('stmt.setString(3, "Car #" + (id + 1));')},selectQuery:["SELECT * FROM CAR WHERE PARKINGID = 2"]},{type:"COUNTRY",create:["CREATE TABLE IF NOT EXISTS COUNTRY (","ID         INTEGER NOT NULL PRIMARY KEY,","NAME       VARCHAR(50),","POPULATION INTEGER NOT NULL);"],clearQuery:["DELETE FROM COUNTRY"],insertCntConsts:[{name:"DEMO_MAX_COUNTRY_CNT",val:5,comment:"How many countries to generate."}],insertPattern:["INSERT INTO COUNTRY(ID, NAME, POPULATION) VALUES(?, ?, ?)"],fillInsertParameters(e){e.append("stmt.setInt(1, id);"),e.append('stmt.setString(2, "Country #" + (id + 1));'),e.append("stmt.setInt(3, 10000000 + rnd.nextInt(100000000));")},selectQuery:["SELECT * FROM COUNTRY WHERE POPULATION BETWEEN 15000000 AND 25000000"]},{type:"DEPARTMENT",create:["CREATE TABLE IF NOT EXISTS DEPARTMENT (","ID         INTEGER NOT NULL PRIMARY KEY,","COUNTRY_ID INTEGER NOT NULL,","NAME       VARCHAR(50) NOT NULL);"],clearQuery:["DELETE FROM DEPARTMENT"],rndRequired:!0,insertCntConsts:[{name:"DEMO_MAX_DEPARTMENT_CNT",val:5,comment:"How many departments to generate."},{name:"DEMO_MAX_COUNTRY_CNT",val:5,comment:"How many countries to generate."}],insertPattern:["INSERT INTO DEPARTMENT(ID, COUNTRY_ID, NAME) VALUES(?, ?, ?)"],fillInsertParameters(e){e.append("stmt.setInt(1, id);"),e.append("stmt.setInt(2, rnd.nextInt(DEMO_MAX_COUNTRY_CNT));"),e.append('stmt.setString(3, "Department #" + (id + 1));')},selectQuery:["SELECT * FROM DEPARTMENT"]},{type:"EMPLOYEE",create:["CREATE TABLE IF NOT EXISTS EMPLOYEE (","ID            INTEGER NOT NULL PRIMARY KEY,","DEPARTMENT_ID INTEGER NOT NULL,","MANAGER_ID    INTEGER,","FIRST_NAME    VARCHAR(50) NOT NULL,","LAST_NAME     VARCHAR(50) NOT NULL,","EMAIL         VARCHAR(50) NOT NULL,","PHONE_NUMBER  VARCHAR(50),","HIRE_DATE     DATE        NOT NULL,","JOB           VARCHAR(50) NOT NULL,","SALARY        DOUBLE);"],clearQuery:["DELETE FROM EMPLOYEE"],rndRequired:!0,insertCntConsts:[{name:"DEMO_MAX_EMPLOYEE_CNT",val:10,comment:"How many employees to generate."},{name:"DEMO_MAX_DEPARTMENT_CNT",val:5,comment:"How many departments to generate."}],customGeneration(e,t,i){e.append("".concat(i," = ").concat(t,'.prepareStatement("INSERT INTO EMPLOYEE(ID, DEPARTMENT_ID, MANAGER_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB, SALARY) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");')),e.emptyLine(),e.startBlock("for (int id = 0; id < DEMO_MAX_EMPLOYEE_CNT; id ++) {"),e.append("int depId = rnd.nextInt(DEMO_MAX_DEPARTMENT_CNT);"),e.emptyLine(),e.append("stmt.setInt(1, DEMO_MAX_DEPARTMENT_CNT + id);"),e.append("stmt.setInt(2, depId);"),e.append("stmt.setInt(3, depId);"),e.append('stmt.setString(4, "First name manager #" + (id + 1));'),e.append('stmt.setString(5, "Last name manager#" + (id + 1));'),e.append('stmt.setString(6, "Email manager#" + (id + 1));'),e.append('stmt.setString(7, "Phone number manager#" + (id + 1));'),e.append('stmt.setString(8, "2014-01-01");'),e.append('stmt.setString(9, "Job manager #" + (id + 1));'),e.append("stmt.setDouble(10, 600.0 + rnd.nextInt(300));"),e.emptyLine(),e.append("stmt.executeUpdate();"),e.endBlock("}")},selectQuery:["SELECT * FROM EMPLOYEE WHERE SALARY > 700"]}],d=()=>{let t="";const i=[];return o=>{let a;for(;e.includes(i,a="".concat(o.id).concat(t?"_"+t:t));)t++;return i.push(a),a}};class IgniteJavaTransformer extends n.a{static comment(t){for(var i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];e.forEach(o,e=>t.append("// ".concat(e)))}static commentBlock(t){for(var i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];1===o.length?t.append("/** ".concat(e.head(o)," **/")):(t.append("/**"),e.forEach(o,e=>t.append(" * ".concat(e))),t.append(" **/"))}static _newBean(t){const i=this.javaTypes.shortClassName(t.clsName);if(e.isEmpty(t.arguments))return"new ".concat(i,"()");const o=e.map(t.arguments,e=>{switch(e.clsName){case"MAP":return e.id;case"BEAN":return this._newBean(e.value);default:return this._toObject(e.clsName,e.value)}});return t.factoryMtd?"".concat(i,".").concat(t.factoryMtd,"(").concat(o.join(", "),")"):"new ".concat(i,"(").concat(o.join(", "),")")}static _setProperty(t,i,o,a){t.append("".concat(i,".set").concat(e.upperFirst(o),"(").concat(a,");"))}static constructBean(t,i){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:i.id;e.forEach(i.arguments,e=>{switch(e.clsName){case"MAP":this._constructMap(t,e,a),t.emptyLine();break;default:this._isBean(e.clsName)&&e.value.isComplex()&&(this.constructBean(t,e.value,a,n),t.emptyLine())}});const s=this.javaTypes.shortClassName(i.clsName);t.append("".concat(this.varInit(s,r,a)," = ").concat(this._newBean(i),";")),Object(o.a)(i.properties)&&(t.emptyLine(),this._setProperties(t,i,a,n,r))}static constructStoreFactory(t,i,o){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const n=this.javaTypes.shortClassName(i.clsName);e.includes(o,i.id)?t.append("".concat(i.id," = ").concat(this._newBean(i),";")):(o.push(i.id),t.append("".concat(n," ").concat(i.id," = ").concat(this._newBean(i),";"))),t.emptyLine(),t.startBlock("".concat(i.id,".setDataSourceFactory(new Factory<DataSource>() {")),this.commentBlock(t,"{@inheritDoc}"),t.startBlock("@Override public DataSource create() {"),t.append("return DataSources.INSTANCE_".concat(i.findProperty("dataSourceBean").id,";")),t.endBlock("};"),t.endBlock("});");const r=e.cloneDeep(i);e.remove(r.properties,t=>e.includes(["dataSourceBean"],t.name)),r.properties.length&&(t.emptyLine(),this._setProperties(t,r,o,a))}static _isBean(t){return this.javaTypes.nonBuiltInClass(t)&&this.javaTypesNonEnum.nonEnum(t)&&e.includes(t,".")}static _toObject(t,i){const o=e.isArray(i)?i:[i];if("EVENTS"===t){const t=o.length-1;return[...e.map(o,(e,i)=>(0===i?"new int[] {":" ")+e.label+(t===i?"}":""))]}return e.map(o,o=>{if(e.isNil(o))return"null";switch(t){case"byte":return"(byte) ".concat(o);case"float":return"".concat(o,"f");case"double":return"".concat(o);case"long":return"".concat(o,"L");case"java.io.Serializable":case"java.lang.String":return'"'.concat(o.replace(/\\/g,"\\\\").replace(/"/g,'\\"'),'"');case"PATH":case"PATH_ARRAY":return'"'.concat(o.replace(/\\/g,"\\\\"),'"');case"java.lang.Class":return"".concat(this.javaTypes.shortClassName(o),".class");case"java.util.UUID":return'UUID.fromString("'.concat(o,'")');case"PROPERTY":return'props.getProperty("'.concat(o,'")');case"PROPERTY_CHAR":return'props.getProperty("'.concat(o,'").toCharArray()');case"PROPERTY_INT":return'Integer.parseInt(props.getProperty("'.concat(o,'"))');default:return this._isBean(t)||i instanceof a.a?o.isComplex()?o.id:this._newBean(o):this.javaTypesNonEnum.nonEnum(t)?o:"".concat(this.javaTypes.shortClassName(t),".").concat(o)}})}static _mapperId(e){return t=>this.javaTypes.toJavaName(e.prefix,t.findProperty(e.name).value)}static _constructBeans(t,i,o,a,n){if(this._isBean(i)){const r=this.METHOD_MAPPING[i],s=r?this._mapperId(r):d();return e.map(o,e=>{if(n&&r)return s(e)+(n?"(".concat(r.args,")"):"");if(e.isComplex()){const i=s(e);return this.constructBean(t,e,a,n,i),t.emptyLine(),i}return this._newBean(e)})}return this._toObject(i,o)}static _setVarArg(t,i,o,a,n){const r=this._constructBeans(t,o.typeClsName,o.items,a,n);if(1===r.length)this._setProperty(t,i,o.name,e.head(r));else{t.startBlock("".concat(i,".set").concat(e.upperFirst(o.name),"("));const a=r.length-1;e.forEach(r,(e,i)=>{t.append(e+(a!==i?",":""))}),t.endBlock(");")}}static _setArray(t,i,o,a,n){const r=this._constructBeans(t,o.typeClsName,o.items,a,n),s=this.javaTypes.shortClassName(o.typeClsName);t.startBlock("".concat(i,".set").concat(e.upperFirst(o.name),"(new ").concat(s,"[] {"));const l=r.length-1;e.forEach(r,(e,i)=>t.append(e+(l!==i?",":""))),t.endBlock("});")}static _constructMap(t,i){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const a=this.javaTypes.shortClassName(i.keyClsName),n=this.javaTypes.shortClassName(i.valClsName),r=i.keyClsGenericType?this.javaTypes.shortClassName(i.keyClsGenericType):"",s=i.keyClsGenericType?i.isKeyClsGenericTypeExtended?"<? extends ".concat(r,">"):"<".concat(r,">"):"",l=i.valClsGenericType?this.javaTypes.shortClassName(i.valClsGenericType):"",c=i.valClsGenericType?"<".concat(l,">"):"",d=i.ordered?"LinkedHashMap":"HashMap",u="".concat(d,"<").concat(a).concat(s,", ").concat(n).concat(c,">");t.append("".concat(this.varInit(u,i.id,o)," = new ").concat(d,"<>();")),t.emptyLine(),e.forEach(i.entries,a=>{const n=this._toObject(i.keyClsName,a[i.keyField]),r=a[i.valField];e.isArray(r)&&"java.lang.String"===i.valClsName?r.length>1?(t.startBlock("".concat(i.id,".put(").concat(n,",")),e.forEach(r,(e,i)=>{t.append('"'.concat(e,'"').concat(i!==r.length-1?" +":""))}),t.endBlock(");")):t.append("".concat(i.id,".put(").concat(n,", ").concat(this._toObject(i.valClsName,e.head(r)),");")):e.isArray(r)&&"java.util.Collection"===i.valClsName?r.length>1?(t.startBlock("".concat(i.id,".put(").concat(n,", Arrays.asList(")),e.forEach(r,(e,o)=>{t.append("".concat(this._toObject(i.valClsGenericType||i.valClsName,e)).concat(o!==r.length-1?",":""))}),t.endBlock("));")):t.append("".concat(i.id,".put(").concat(n,", Arrays.asList(").concat(this._toObject(i.valClsGenericType||i.valClsName,e.head(r)),"));")):this._isBean(i.valClsNameShow||i.valClsName)?(this.constructBean(t,r,o,!1,r.id),t.append("".concat(i.id,".put(").concat(n,", ").concat(r.id,");"))):t.append("".concat(i.id,".put(").concat(n,", ").concat(this._toObject(i.valClsNameShow||i.valClsName,r),");"))})}static varInit(t,i,o){return e.includes(o,i)?i:(o.push(i),"".concat(t," ").concat(i))}static _setProperties(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new r.a,i=arguments.length>1?arguments[1]:void 0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:i.id;return e.forEach(i.properties,(r,c)=>{switch(r.clsName){case"DATA_SOURCE":this._setProperty(t,s,"dataSource","DataSources.INSTANCE_".concat(r.id));break;case"EVENT_TYPES":if(1===r.eventTypes.length){const i=e.head(r.eventTypes);this._setProperty(t,s,r.name,i.label)}else{const i=e.map(r.eventTypes,"label");t.append("int[] ".concat(r.id," = new int[").concat(e.head(i),".length")),e.forEach(e.tail(i),e=>{t.append("    + ".concat(e,".length"))}),t.append("];"),t.emptyLine(),t.append("int k = 0;"),e.forEach(i,(e,i)=>{t.emptyLine(),t.append("System.arraycopy(".concat(e,", 0, ").concat(r.id,", k, ").concat(e,".length);")),i<e.length-1&&t.append("k += ".concat(e,".length;"))}),t.emptyLine(),t.append("cfg.setIncludeEventTypes(".concat(r.id,");"))}break;case"ARRAY":r.varArg?this._setVarArg(t,s,r,a,n):this._setArray(t,s,r,a,n);break;case"PATH_ARRAY":r.varArg?this._setVarArg(t,s,r,this._toObject(r.clsName,r.items),n):this._setArray(t,s,r,this._toObject(r.clsName,r.items),n);break;case"COLLECTION":const i=!this._isBean(r.typeClsName);if(i&&"java.util.ArrayList"===r.implClsName){const i=e.map(r.items,e=>this._toObject(r.typeClsName,e));i.length>1?(t.startBlock("".concat(s,".set").concat(e.upperFirst(r.name),"(Arrays.asList(")),e.forEach(i,(e,o)=>t.append(e+(o!==i.length-1?",":""))),t.endBlock("));")):this._setProperty(t,s,r.name,"Arrays.asList(".concat(i,")"))}else{const o=this.javaTypes.shortClassName(r.typeClsName),l=this.javaTypes.shortClassName(r.implClsName);t.append("".concat(this.varInit("".concat(l,"<").concat(o,">"),r.id,a)," = new ").concat(l,"<>();")),t.emptyLine(),i?e.forEach(this._toObject(o,r.items),e=>{this.javaTypesNonEnum.nonEnum(r.typeClsName)?t.append("".concat(r.id,'.add("').concat(e,'");')):t.append("".concat(r.id,".add(").concat(e,");")),t.emptyLine()}):e.forEach(r.items,e=>{this.constructBean(t,e,a,n),t.append("".concat(r.id,".add(").concat(e.id,");")),t.emptyLine()}),this._setProperty(t,s,r.name,r.id)}break;case"ENUM_COLLECTION":if("java.util.ArrayList"===r.implClsName){const i=e.map(r.items,e=>this._toObject(r.typeClsName,e));i.length>1?(t.startBlock("".concat(s,".set").concat(e.upperFirst(r.name),"(Arrays.asList(")),e.forEach(i,(e,o)=>t.append(e+(o!==i.length-1?",":""))),t.endBlock("));")):this._setProperty(t,s,r.name,"Arrays.asList(".concat(i,")"))}else{const i=this.javaTypes.shortClassName(r.typeClsName),o=this.javaTypes.shortClassName(r.implClsName);t.append("".concat(this.varInit("".concat(o,"<").concat(i,">"),r.id,a)," = new ").concat(o,"<>();")),t.emptyLine(),e.forEach(this._toObject(i,r.items),e=>{t.append("".concat(r.id,'.add("').concat(e,'");')),t.emptyLine()}),this._setProperty(t,s,r.name,r.id)}break;case"MAP":this._constructMap(t,r,a),Object(o.a)(r.entries)&&t.emptyLine(),this._setProperty(t,s,r.name,r.id);break;case"java.util.Properties":t.append("".concat(this.varInit("Properties",r.id,a)," = new Properties();")),Object(o.a)(r.entries)&&t.emptyLine(),e.forEach(r.entries,e=>{const i=this._toObject("java.lang.String",e.name),o=this._toObject("java.lang.String",e.value);t.append("".concat(r.id,".setProperty(").concat(i,", ").concat(o,");"))}),t.emptyLine(),this._setProperty(t,s,r.name,r.id);break;case"BEAN":const c=r.value;e.includes(l,c.clsName)?(this.constructStoreFactory(t,c,a,n),t.emptyLine(),this._setProperty(t,s,r.name,c.id)):c.isComplex()?(this.constructBean(t,c,a,n),t.emptyLine(),this._setProperty(t,s,r.name,c.id)):this._setProperty(t,s,r.name,this._newBean(c));break;default:this._setProperty(t,s,r.name,this._toObject(r.clsName,r.value))}this._emptyLineIfNeeded(t,i.properties,c)}),t}static _collectMapImports(e){const t=[];return t.push(e.ordered?"java.util.LinkedHashMap":"java.util.HashMap"),t.push(e.keyClsName),t.push(e.valClsName),e.keyClsGenericType&&t.push(e.keyClsGenericType),e.valClsGenericType&&t.push(e.valClsGenericType),t}static collectBeanImports(t){const i=[t.clsName];return e.forEach(t.arguments,e=>{switch(e.clsName){case"BEAN":i.push(...this.collectBeanImports(e.value));break;case"java.lang.Class":i.push(this.javaTypes.fullClassName(e.value));break;case"MAP":i.push(...this._collectMapImports(e));break;default:i.push(e.clsName)}}),i.push(...this.collectPropertiesImports(t.properties)),e.includes(l,t.clsName)&&i.push("javax.sql.DataSource","javax.cache.configuration.Factory"),i}static collectPropertiesImports(t){const i=[];return e.forEach(t,t=>{switch(t.clsName){case"DATA_SOURCE":i.push(t.value.clsName);break;case"PROPERTY":case"PROPERTY_CHAR":case"PROPERTY_INT":i.push("java.io.InputStream","java.util.Properties");break;case"BEAN":i.push(...this.collectBeanImports(t.value));break;case"ARRAY":t.varArg||i.push(t.typeClsName),this._isBean(t.typeClsName)&&e.forEach(t.items,e=>i.push(...this.collectBeanImports(e))),"java.lang.Class"===t.typeClsName&&e.forEach(t.items,e=>i.push(e));break;case"COLLECTION":i.push(t.typeClsName),this._isBean(t.typeClsName)?(e.forEach(t.items,e=>i.push(...this.collectBeanImports(e))),i.push(t.implClsName)):"java.util.ArrayList"===t.implClsName?i.push("java.util.Arrays"):i.push(t.implClsName);break;case"ENUM_COLLECTION":i.push(t.typeClsName),"java.util.ArrayList"===t.implClsName?i.push("java.util.Arrays"):i.push(t.implClsName);break;case"MAP":i.push(...this._collectMapImports(t));break;default:this.javaTypesNonEnum.nonEnum(t.clsName)||i.push(t.clsName)}}),i}static _prepareImports(t){return e.sortedUniq(e.sortBy(e.filter(t,t=>!e.startsWith(t,"java.lang.")&&e.includes(t,"."))))}static collectStaticImports(t){const i=[];return e.forEach(t.properties,t=>{switch(t.clsName){case"EVENT_TYPES":e.forEach(t.eventTypes,e=>{i.push("".concat(e.class,".").concat(e.value))});break;case"MAP":"EVENTS"===t.valClsNameShow&&e.forEach(t.entries,t=>{e.forEach(t.eventTypes,e=>i.push("".concat(e.class,".").concat(e.label)))})}}),i}static collectBeansWithMapping(t){const i={};return e.forEach(t.properties,t=>{switch(t.clsName){case"BEAN":e.merge(i,this.collectBeansWithMapping(t.value));break;case"ARRAY":if(this._isBean(t.typeClsName)){const o=this.METHOD_MAPPING[t.typeClsName],a=o?this._mapperId(o):null;e.reduce(t.items,(t,i)=>(a&&(t[a(i)]=i),e.merge(t,this.collectBeansWithMapping(i)),t),i)}}}),i}static igniteConfiguration(t,i,a,n,l){const c=s.since.bind(s,i.ignite),d=new r.a;d.append("package ".concat(a,";")),d.emptyLine();const u=this.collectBeanImports(t),p=[];Object(o.a)(l)&&(u.push("org.apache.ignite.configuration.NearCacheConfiguration"),e.forEach(l,e=>{const t=this.generator.cacheNearClient(e,c);t.cacheName=e.name,u.push(...this.collectBeanImports(t)),p.push(t)})),e.includes(u,"oracle.jdbc.pool.OracleDataSource")&&u.push("java.sql.SQLException");const g=this.hasProperties(t);g&&u.push("java.util.Properties","java.io.InputStream"),e.forEach(this._prepareImports(u),e=>d.append("import ".concat(e,";"))),d.emptyLine();const m=this._prepareImports(this.collectStaticImports(t));m.length&&(e.forEach(this._prepareImports(m),e=>d.append("import static ".concat(e,";"))),d.emptyLine()),this.mainComment(d),d.startBlock("public class ".concat(n," {")),g&&(this.commentBlock(d,"Secret properties loading."),d.append("private static final Properties props = new Properties();"),d.emptyLine(),d.startBlock("static {"),d.startBlock('try (InputStream in = IgniteConfiguration.class.getClassLoader().getResourceAsStream("secret.properties")) {'),d.append("props.load(in);"),d.endBlock("}"),d.startBlock("catch (Exception ignored) {"),d.append("// No-op."),d.endBlock("}"),d.endBlock("}"),d.emptyLine());const h=this.collectDataSources(t);h.length&&(this.commentBlock(d,"Helper class for datasource creation."),d.startBlock("public static class DataSources {"),e.forEach(h,(e,t)=>{const i=this.javaTypes.shortClassName(e.clsName);0!==t&&d.emptyLine(),d.append("public static final ".concat(i," INSTANCE_").concat(e.id," = create").concat(e.id,"();")),d.emptyLine(),d.startBlock("private static ".concat(i," create").concat(e.id,"() {")),"OracleDataSource"===i&&d.startBlock("try {"),this.constructBean(d,e),d.emptyLine(),d.append("return ".concat(e.id,";")),"OracleDataSource"===i&&(d.endBlock("}"),d.startBlock("catch (SQLException ex) {"),d.append("throw new Error(ex);"),d.endBlock("}")),d.endBlock("}")}),d.endBlock("}"),d.emptyLine()),e.forEach(p,e=>{this.commentBlock(d,"Configuration of near cache for cache: ".concat(e.cacheName,"."),"","@return Near cache configuration.","@throws Exception If failed to construct near cache configuration instance."),d.startBlock("public static NearCacheConfiguration ".concat(e.id,"() throws Exception {")),this.constructBean(d,e),d.emptyLine(),d.append("return ".concat(e.id,";")),d.endBlock("}"),d.emptyLine()}),this.commentBlock(d,"Configure grid.","","@return Ignite configuration.","@throws Exception If failed to construct Ignite configuration instance."),d.startBlock("public static IgniteConfiguration createConfiguration() throws Exception {"),this.constructBean(d,t,[],!0),d.emptyLine(),d.append("return ".concat(t.id,";")),d.endBlock("}");const v=this.collectBeansWithMapping(t);return e.forEach(v,(e,t)=>{d.emptyLine(),this.METHOD_MAPPING[e.clsName].generator(d,t,e)}),d.endBlock("}"),d}static cluster(t,i,o,a,n){const r=this.generator.igniteConfiguration(t,i,n),s=n?e.filter(t.caches,t=>"PARTITIONED"===t.cacheMode&&e.get(t,"clientNearConfiguration.enabled")):[];return this.igniteConfiguration(r,i,o,a,s)}static pojo(t,i,o){const a=t.lastIndexOf("."),n=t.substring(0,a),s=t.substring(a+1),l=new r.a;l.append("package ".concat(n,";")),l.emptyLine();const c=["java.io.Serializable"];if(e.forEach(i,e=>c.push(this.javaTypes.fullClassName(e.javaFieldType))),e.forEach(this._prepareImports(c),e=>l.append("import ".concat(e,";"))),l.emptyLine(),this.mainComment(l,"".concat(s," definition."),""),l.startBlock("public class ".concat(s," implements Serializable {")),l.append("/** */"),l.append("private static final long serialVersionUID = 0L;"),l.emptyLine(),e.forEach(i,e=>{const t=e.javaFieldName,i=this.javaTypes.shortClassName(e.javaFieldType);l.append("/** Value for ".concat(t,". */")),l.append("private ".concat(i," ").concat(t,";")),l.emptyLine()}),o){this.commentBlock(l,"Empty constructor."),l.startBlock("public ".concat(s,"() {")),this.comment(l,"No-op."),l.endBlock("}"),l.emptyLine(),this.commentBlock(l,"Full constructor.");const t=e=>{const t=this.javaTypes.shortClassName(e.javaFieldType);return"".concat(t," ").concat(e.javaFieldName)};l.startBlock("public ".concat(s,"(").concat(t(e.head(i))).concat(1===i.length?") {":",")),e.forEach(e.tail(i),(e,o)=>{l.append("".concat(t(e)).concat(o!==i.length-2?",":") {"))}),e.forEach(i,e=>l.append("this.".concat(e.javaFieldName," = ").concat(e.javaFieldName,";"))),l.endBlock("}"),l.emptyLine()}e.forEach(i,e=>{const t=this.javaTypes.shortClassName(e.javaFieldType),i=e.javaFieldName;this.commentBlock(l,"Gets ".concat(i),"","@return Value for ".concat(i,".")),l.startBlock("public ".concat(t," ").concat(this.javaTypes.toJavaName("get",i),"() {")),l.append("return "+i+";"),l.endBlock("}"),l.emptyLine(),this.commentBlock(l,"Sets ".concat(i),"","@param ".concat(i," New value for ").concat(i,".")),l.startBlock("public void ".concat(this.javaTypes.toJavaName("set",i),"(").concat(t," ").concat(i,") {")),l.append("this.".concat(i," = ").concat(i,";")),l.endBlock("}"),l.emptyLine()}),this.commentBlock(l,"{@inheritDoc}"),l.startBlock("@Override public boolean equals(Object o) {"),l.startBlock("if (this == o)"),l.append("return true;"),l.endBlock(""),l.startBlock("if (!(o instanceof ".concat(s,"))")),l.append("return false;"),l.endBlock(""),l.append("".concat(s," that = (").concat(s,")o;")),e.forEach(i,e=>{l.emptyLine();const t=e.javaFieldName,i=e.javaFieldType;switch(i){case"float":l.startBlock("if (Float.compare(".concat(t,", that.").concat(t,") != 0)"));break;case"double":l.startBlock("if (Double.compare(".concat(t,", that.").concat(t,") != 0)"));break;default:this.javaTypes.isPrimitive(i)?l.startBlock("if ("+t+" != that."+t+")"):l.startBlock("if ("+t+" != null ? !"+t+".equals(that."+t+") : that."+t+" != null)")}l.append("return false;"),l.endBlock("")}),l.append("return true;"),l.endBlock("}"),l.emptyLine(),this.commentBlock(l,"{@inheritDoc}"),l.startBlock("@Override public int hashCode() {");let d=!0,u=!1;return e.forEach(i,e=>{const t=e.javaFieldName;let i;switch(e.javaFieldType){case"boolean":i="".concat(t," ? 1 : 0");break;case"byte":case"short":i="(int)".concat(t);break;case"int":i="".concat(t);break;case"long":i="(int)(".concat(t," ^ (").concat(t," >>> 32))");break;case"float":i="".concat(t," != +0.0f ? Float.floatToIntBits(").concat(t,") : 0");break;case"double":l.append("".concat(u?"ig_hash_temp":"long ig_hash_temp"," = Double.doubleToLongBits(").concat(t,");")),u=!0,i="(int) (ig_hash_temp ^ (ig_hash_temp >>> 32))";break;default:i="".concat(t," != null ? ").concat(t,".hashCode() : 0")}l.append(d?"int res = ".concat(i,";"):"res = 31 * res + ".concat(i.startsWith("(")?i:"(".concat(i,")"),";")),d=!1,l.emptyLine()}),l.append("return res;"),l.endBlock("}"),l.emptyLine(),this.commentBlock(l,"{@inheritDoc}"),l.startBlock("@Override public String toString() {"),l.startBlock('return "'.concat(s,' [" + ')),e.forEach(i,(e,t)=>{l.append('"'.concat(e.javaFieldName,'=" + ').concat(e.javaFieldName).concat(t<i.length-1?' + ", " + ':" +"))}),l.endBlock('"]";'),l.endBlock("}"),l.endBlock("}"),l.asString()}static pojos(t,i,a){const n=[];return e.forEach(t,t=>{e.forEach(t.domains,t=>{if(t.generatePojo&&!e.find(n,{valueType:t.valueType})&&Object(o.a)(t.valueFields)){const r={keyType:t.keyType,valueType:t.valueType};this.javaTypes.nonBuiltInClass(t.keyType)&&Object(o.a)(t.keyFields)&&(r.keyClass=this.pojo(t.keyType,t.keyFields,i));const s=e.clone(t.valueFields);a&&e.forEach(t.keyFields,t=>{e.find(s,{javaFieldName:t.javaFieldName})||s.push(t)}),r.valueClass=this.pojo(t.valueType,s,i),n.push(r)}})}),n}static _multilineQuery(t,i,o,a){e.isEmpty(i)||(e.forEach(i,(e,n)=>{0===n?1===i.length?t.append("".concat(o,'"').concat(e,'"').concat(a)):t.startBlock("".concat(o,'"').concat(e,'" +')):t.append('"'.concat(e,'"').concat(n===i.length-1?a:" +"))}),i.length>1?t.endBlock(""):t.emptyLine())}static _prepareStatement(e,t,i){this._multilineQuery(e,i,"".concat(t,".prepareStatement("),").executeUpdate();")}static demoStartup(t,i,a){const n=e.filter(i.caches,t=>{const i=e.get(t,"cacheStoreFactory.kind");if(i){const o=t.cacheStoreFactory[i];return("DataSource"===o.connectVia||e.isNil(o.connectVia))&&o.dialect}return!1}),r=[],s=e.reduce(n,(t,i)=>{const a=e.filter(i.domains,t=>Object(o.a)(t.valueFields)&&!e.includes(r,t));return Object(o.a)(a)&&(r.push(...a),t.push({cache:i,domains:a})),t},[]);if(Object(o.a)(s)){const i=e.groupBy(s,e=>{let{cache:t}=e;return t.cacheStoreFactory[t.cacheStoreFactory.kind].dataSourceBean});let o=!0;const n=[];e.forEach(i,i=>{e.forEach(i,i=>{e.forEach(i.domains,i=>{const a=i.valueType.toUpperCase(),r=e.find(c,e=>a.endsWith(e.type));r&&(o&&r.rndRequired&&(this.commentBlock(t,"Random generator for demo data."),t.append("private static final Random rnd = new Random();"),t.emptyLine(),o=!1),e.forEach(r.insertCntConsts,i=>{e.includes(n,i.name)||(this.commentBlock(t,i.comment),t.append("private static final int ".concat(i.name," = ").concat(i.val,";")),t.emptyLine(),n.push(i.name))}))})})}),this.commentBlock(t,"Fill data for Demo."),t.startBlock("private static void prepareDemoData() throws SQLException {");let r=!0;e.forEach(i,(i,o)=>{const n=o+"Con";r?r=!1:t.emptyLine(),t.startBlock("try (Connection ".concat(n," = ").concat(a,".DataSources.INSTANCE_").concat(o,".getConnection()) {"));let s=!0,l=!0;e.forEach(i,i=>{e.forEach(i.domains,i=>{const o=i.valueType.toUpperCase(),a=e.find(c,e=>o.endsWith(e.type));if(a){s?s=!1:t.emptyLine(),this.comment(t,"Generate ".concat(a.type,".")),a.schema&&this._prepareStatement(t,n,["CREATE SCHEMA IF NOT EXISTS ".concat(a.schema)]),this._prepareStatement(t,n,a.create),this._prepareStatement(t,n,a.clearQuery);let i="stmt";l&&(l=!1,i="PreparedStatement stmt"),e.isFunction(a.customGeneration)?a.customGeneration(t,n,i):(t.append("".concat(i," = ").concat(n,'.prepareStatement("').concat(a.insertPattern,'");')),t.emptyLine(),t.startBlock("for (int id = 0; id < ".concat(a.insertCntConsts[0].name,"; id ++) {")),a.fillInsertParameters(t),t.emptyLine(),t.append("stmt.executeUpdate();"),t.endBlock("}")),t.emptyLine(),t.append("".concat(n,".commit();"))}})}),t.endBlock("}")}),t.endBlock("}"),t.emptyLine(),this.commentBlock(t,"Print result table to console."),t.startBlock("private static void printResult(List<Cache.Entry<Object, Object>> rows) {"),t.append("for (Cache.Entry<Object, Object> row: rows)"),t.append("    System.out.println(row);"),t.endBlock("}"),t.emptyLine(),this.commentBlock(t,"Run demo."),t.startBlock("private static void runDemo(Ignite ignite) throws SQLException {");const l=e=>e.substr(e.lastIndexOf(".")+1),d=[];let u=!1;r=!0,e.forEach(i,(i,o)=>{const n=o+"Con";r?r=!1:t.emptyLine(),t.startBlock("try (Connection ".concat(n," = ").concat(a,".DataSources.INSTANCE_").concat(o,".getConnection()) {"));let s=!0;e.forEach(i,i=>{e.forEach(i.domains,o=>{const a=o.valueType.toUpperCase(),n=e.find(c,e=>a.endsWith(e.type));if(n){if(e.isEmpty(n.selectQuery))return;s?s=!1:t.emptyLine();const a=i.cache.name;e.includes(d,a)||(t.append('ignite.cache("'.concat(a,'").loadCache(null);')),t.emptyLine(),d.push(a));const r=u?"rows":"List<Cache.Entry<Object, Object>> rows";this._multilineQuery(t,n.selectQuery,"".concat(r,' = ignite.cache("').concat(a,'").query(new SqlQuery<>("').concat(l(o.valueType),'", '),")).getAll();"),t.append("printResult(rows);"),u=!0}})}),t.endBlock("}")}),t.endBlock("}")}}static nodeStartup(t,i,a,n,s){const l=i.lastIndexOf("."),c=i.substring(0,l),d=i.substring(l+1),u="DemoStartup"===d,p=new r.a,g=["org.apache.ignite.Ignition"];let m;return u&&g.push("org.h2.tools.Server","java.sql.Connection","java.sql.PreparedStatement","java.sql.SQLException","java.util.Random","java.util.List","javax.cache.Cache","org.apache.ignite.cache.query.SqlQuery"),n&&(g.push(n),m=this.javaTypes.shortClassName(n)),(Object(o.a)(s)||u)&&m&&g.push("org.apache.ignite.Ignite"),p.append("package ".concat(c,";")).emptyLine(),e.forEach(this._prepareImports(g),e=>p.append("import ".concat(e,";"))),p.emptyLine(),u?this.mainComment(p,"To start demo configure data sources in secret.properties file.","For H2 database it should be like following:","dsH2.jdbc.url=jdbc:h2:tcp://localhost/mem:DemoDB;DB_CLOSE_DELAY=-1","dsH2.jdbc.username=sa","dsH2.jdbc.password=",""):this.mainComment(p),p.startBlock("public class ".concat(d," {")),u&&m&&this.demoStartup(p,t,m),this.commentBlock(p,"Start up node with specified configuration.","","@param args Command line arguments, none required.","@throws Exception If failed."),p.startBlock("public static void main(String[] args) throws Exception {"),u&&(p.startBlock("try {"),p.append("// Start H2 database server."),p.append('Server.createTcpServer("-tcpDaemon").start();'),p.endBlock("}"),p.startBlock("catch (SQLException ignore) {"),p.append("// No-op."),p.endBlock("}"),p.emptyLine()),(Object(o.a)(s)||u)&&m?(g.push("org.apache.ignite.Ignite"),p.append("Ignite ignite = Ignition.start(".concat(a,");")),e.forEach(s,(e,t)=>{p.emptyLine(),0===t&&p.append("// Demo of near cache creation on client node.");const i=this.javaTypes.toJavaName("nearConfiguration",e.name);p.append("ignite.getOrCreateCache(".concat(m,".").concat(this.javaTypes.toJavaName("cache",e.name),"(), ").concat(m,".").concat(i,"());"))})):p.append("Ignition.start(".concat(a,");")),u&&(p.emptyLine(),p.append("prepareDemoData();"),p.emptyLine(),p.append("runDemo(ignite);")),p.endBlock("}"),p.endBlock("}"),p.asString()}static loadCaches(t,i,o,a){const n=new r.a;n.append("package ".concat(i,";")).emptyLine();return e.forEach(this._prepareImports(["org.apache.ignite.Ignition","org.apache.ignite.Ignite"]),e=>n.append("import ".concat(e,";"))),n.emptyLine(),this.mainComment(n),n.startBlock("public class ".concat(o," {")),this.commentBlock(n,"<p>","Utility to load caches from database.","<p>","How to use:","<ul>","    <li>Start cluster.</li>","    <li>Start this utility and wait while load complete.</li>","</ul>","","@param args Command line arguments, none required.","@throws Exception If failed."),n.startBlock("public static void main(String[] args) throws Exception {"),n.startBlock("try (Ignite ignite = Ignition.start(".concat(a,")) {")),n.append('System.out.println(">>> Loading caches...");'),n.emptyLine(),e.forEach(t,e=>{n.append('System.out.println(">>> Loading cache: '+e.name+'");'),n.append('ignite.cache("'+e.name+'").loadCache(null);'),n.emptyLine()}),n.append('System.out.println(">>> All caches loaded!");'),n.endBlock("}"),n.endBlock("}"),n.endBlock("}"),n.asString()}static isDemoConfigured(t,i){return i&&e.find(t.caches,t=>e.find(t.domains,t=>e.find(c,e=>t.valueType.toUpperCase().endsWith(e.type))))}}IgniteJavaTransformer.METHOD_MAPPING={"org.apache.ignite.configuration.CacheConfiguration":{prefix:"cache",name:"name",args:"",generator:(e,t,i)=>{const o=i.findProperty("name").value,a=IgniteJavaTransformer.collectDataSources(i),n=['Create configuration for cache "'.concat(o,'".'),"","@return Configured cache."];return a.length&&n.push("@throws Exception if failed to create cache configuration."),IgniteJavaTransformer.commentBlock(e,...n),e.startBlock("public static CacheConfiguration ".concat(t,"()").concat(a.length?" throws Exception":""," {")),IgniteJavaTransformer.constructBean(e,i,[],!0),e.emptyLine(),e.append("return ".concat(i.id,";")),e.endBlock("}"),e}},"org.apache.ignite.cache.store.jdbc.JdbcType":{prefix:"jdbcType",name:"valueType",args:"ccfg.getName()",generator:(e,t,i)=>{const o=['Create JDBC type for "'.concat(t,'".'),"","@param cacheName Cache name.","@return Configured JDBC type."];IgniteJavaTransformer.commentBlock(e,...o),e.startBlock("private static JdbcType ".concat(t,"(String cacheName) {"));const a=i.findProperty("cacheName");return a.clsName="var",a.value="cacheName",IgniteJavaTransformer.constructBean(e,i),e.emptyLine(),e.append("return ".concat(i.id,";")),e.endBlock("}"),e}}}}).call(this,i(2))},1206:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return IgnitePropertiesGenerator});var o=i(1156);class IgnitePropertiesGenerator{_collectProperties(t){const i=[],o=t=>{const o=e.difference(this._collectProperties(t),i);e.isEmpty(o)||(i.push(...o),e.isEmpty(e.last(i))||i.push(""))},a=t=>{switch(t.clsName){case"PROPERTY":case"PROPERTY_CHAR":case"PROPERTY_INT":i.push(...e.difference(["".concat(t.value,"=").concat(t.hint)],i));break;case"BEAN":case"DATA_SOURCE":o(t.value);break;case"ARRAY":case"COLLECTION":e.forEach(t.items,o);break;case"MAP":e.forEach(t.entries,e=>{o(e.name),o(e.value)})}};return e.forEach(e.get(t,"arguments"),a),e.forEach(e.get(t,"properties"),a),i}generate(t){const i=this._collectProperties(t);if(e.isEmpty(i))return null;const a=new o.a;return a.append("# ".concat(a.generatedBy())).emptyLine(),e.forEach(i,e=>a.append(e)),a.asString()}}}).call(this,i(2))},1224:function(e,t,i){var o={"./diff_match_patch_uncompressed":1182,"./diff_match_patch_uncompressed.js":1182};function webpackContext(e){var t=webpackContextResolve(e);return i(t)}function webpackContextResolve(e){if(!i.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}webpackContext.keys=function webpackContextKeys(){return Object.keys(o)},webpackContext.resolve=webpackContextResolve,e.exports=webpackContext,webpackContext.id=1224},1229:function(e,t,i){e.exports=function(){return new Worker(i.p+"dcbc73075daf2fded3c8.worker.js")}},1230:function(e,t){e.exports='<header class="header-with-selector"><div><h1>{{ $ctrl.clusterName$|async:this }}</h1><version-picker></version-picker></div><div><button-import-models cluster-id="$ctrl.clusterID$|async:this"></button-import-models></div></header><div class="pc-content-container"><ul class="tabs tabs--blue"><li role="presentation" ui-sref-active="active"><a ui-sref="base.configuration.edit.basic">Basic</a></li><li role="presentation" ui-sref-active="{active: &quot;base.configuration.edit.advanced&quot;}"><a ui-sref="base.configuration.edit.advanced.cluster">Advanced</a></li></ul><label class="pc-tooltips-toggle switcher--ignite"><svg class="icon-left" ignite-icon="info" bs-tooltip="" data-title="Use this setting to hide or show tooltips with hints." data-placement="left"></svg><span>Tooltips</span><input type="checkbox" ng-model="$ctrl.tooltipsVisible"/><div></div></label><ui-view class="theme--ignite theme--ignite-errors-horizontal" ignite-loading="configuration" ignite-loading-text="{{ $ctrl.loadingText }}" ignite-loading-position="top" ng-class="{\n            \'pc-hide-tooltips\': !$ctrl.tooltipsVisible\n        }"></ui-view></div>'},1231:function(e,t,i){},1233:function(e,t){e.exports='<form novalidate="novalidate" name="$ctrl.form"><h2 class="pcb-section-header pcb-inner-padding">Step 1. Cluster Configuration</h2><div class="pcb-section-notification pcb-inner-padding" ng-if="!$ctrl.shortClusters">You have no clusters.\nLet’s configure your first and associate it with caches.</div><div class="pcb-section-notification pcb-inner-padding" ng-if="$ctrl.shortClusters">Configure cluster properties and associate your cluster with caches.</div><div class="pc-form-grid-row pcb-form-grid-row"><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;clusterName&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;clusterName&quot; }}Label" for="{{ &quot;clusterName&quot; }}Input"><span>Name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Instance name allows to indicate to what grid this particular grid instance belongs to" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;clusterName&quot; }}Input" name="{{ &quot;clusterName&quot; }}" translate-attr="{placeholder: &quot;Input name&quot;}" ng-model="$ctrl.clonedCluster.name" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ignite-unique="$ctrl.shortClusters" ignite-unique-property="name" ignite-unique-skip="[&quot;id&quot;, $ctrl.clonedCluster]" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Name could not be empty!</div><div bs-tooltip="" data-title="Name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Cluster name should be unique.</div><div bs-tooltip="" data-title="Cluster name should be unique." data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid__break"></div><div class="pc-form-grid-col-60"><div class="form-field form-field__dropdown ignite-form-field" id="{{ &quot;discovery&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;discovery&quot; }}Label" for="{{ &quot;discovery&quot; }}Input"><span>Discovery:</span><svg ignite-icon="info" bs-tooltip="" data-title="Discovery allows to discover remote nodes in grid                &lt;ul&gt;                    &lt;li&gt;Static IPs - IP Finder which works only with pre configured list of IP addresses specified&lt;/li&gt;                    &lt;li&gt;Multicast - Multicast based IP finder&lt;/li&gt;                    &lt;li&gt;AWS S3 - AWS S3 based IP finder that automatically discover cluster nodes on Amazon EC2 cloud&lt;/li&gt;                    &lt;li&gt;Apache jclouds - Apache jclouds multi cloud toolkit based IP finder for cloud platforms with unstable IP addresses&lt;/li&gt;                    &lt;li&gt;Google cloud storage - Google Cloud Storage based IP finder that automatically discover cluster nodes on Google Compute Engine cluster&lt;/li&gt;                    &lt;li&gt;JDBC - JDBC based IP finder that use database to store node IP address&lt;/li&gt;                    &lt;li&gt;Shared filesystem - Shared filesystem based IP finder that use file to store node IP address&lt;/li&gt;                    &lt;li&gt;Apache ZooKeeper - Apache ZooKeeper based IP finder when you use ZooKeeper to coordinate your distributed environment&lt;/li&gt;                    &lt;li&gt;Kubernetes - IP finder for automatic lookup of Ignite nodes running in Kubernetes environment&lt;/li&gt;                &lt;/ul&gt;" data-placement="auto"></svg></label><div class="form-field__control"><select id="{{ &quot;discovery&quot; }}Input" name="{{ &quot;discovery&quot; }}" ng-model="$ctrl.clonedCluster.discovery.kind" ng-ref="$input" ng-ref-read="ngModel"><option value="" hidden="hidden" translate="Choose discovery"></option><option ng-repeat="item in $ctrl.Clusters.discoveries track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid__break"></div><div class="pc-form-group"><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'Vm\'"><div class="pc-form-grid-col-60"><div class="form-field ignite-form-field"><list-editable ng-model="$ctrl.clonedCluster.discovery.Vm.addresses" name="vmAddresses" list-editable-cols="::[{name: &quot;Addresses:&quot;, tip: &quot;Addresses may be represented as follows:\n                        &lt;ul&gt;\n                            &lt;li&gt;IP address (e.g. 127.0.0.1, 9.9.9.9, etc)&lt;/li&gt;\n                            &lt;li&gt;IP address and port (e.g. 127.0.0.1:47500, 9.9.9.9:47501, etc)&lt;/li&gt;\n                            &lt;li&gt;IP address and port range (e.g. 127.0.0.1:47500..47510, 9.9.9.9:47501..47504, etc)&lt;/li&gt;\n                            &lt;li&gt;Hostname (e.g. host1.com, host2, etc)&lt;/li&gt;\n                            &lt;li&gt;Hostname and port (e.g. host1.com:47500, host2:47502, etc)&lt;/li&gt;\n                            &lt;li&gt;Hostname and port range (e.g. host1.com:47500..47510, host2:47502..47508, etc)&lt;/li&gt;\n                        &lt;/ul&gt;\n                        If port is 0 or not provided then default port will be used (depends on discovery SPI configuration)&lt;br /&gt;\n                        If port range is provided (e.g. host:port1..port2) the following should be considered:\n                        &lt;/ul&gt;\n                        &lt;ul&gt;\n                            &lt;li&gt; port1 &amp;lt; port2 should be true&lt;/li&gt;\n                            &lt;li&gt; Both port1 and port2 should be greater than 0&lt;/li&gt;\n                        &lt;/ul&gt;&quot;}]" ng-required="true" ng-ref="$vmAddresses" ng-ref-read="ngModel"><list-editable-item-view>{{ $item }}</list-editable-item-view><list-editable-item-edit item-name="address"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;address&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;address&quot; }}Label" for="{{ &quot;address&quot; }}Input"><span>Address</span></label><div class="form-field__control"><input id="{{ &quot;address&quot; }}Input" name="{{ &quot;address&quot; }}" translate-attr="{placeholder: &quot;IP address:port&quot;}" ng-model="address" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ipaddress="true" ipaddress-with-port="true" ipaddress-with-port-range="ipaddress-with-port-range" ignite-unique="$ctrl.clonedCluster.discovery.Vm.addresses" ignite-form-field-input-autofocus="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Address could not be empty!</div><div bs-tooltip="" data-title="Address could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Such IP address already exists!</div><div bs-tooltip="" data-title="Such IP address already exists!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddress"><div>Invalid address!</div><div bs-tooltip="" data-title="Invalid address!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddressPort"><div>Invalid port!</div><div bs-tooltip="" data-title="Invalid port!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddressPortRange"><div>Invalid port range!</div><div bs-tooltip="" data-title="Invalid port range!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="required"><div>IP address:port could not be empty!</div><div bs-tooltip="" data-title="IP address:port could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></list-editable-item-edit><list-editable-no-items><list-editable-add-item-button add-item="$editLast(($ctrl.clonedCluster.discovery.Vm.addresses = $ctrl.clonedCluster.discovery.Vm.addresses || []).push(&quot;&quot;))" label-multiple="addresses" label-single="address"></list-editable-add-item-button></list-editable-no-items></list-editable><div class="form-field__errors" ng-messages="$vmAddresses.$error" ng-show="$vmAddresses.$invalid"><div class="form-field__error" ng-message="required"><div>Addresses should be configured</div><div bs-tooltip="" data-title="Addresses should be configured" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'Cloud\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;credential&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;credential&quot; }}Label" for="{{ &quot;credential&quot; }}Input"><span>Credential:</span><svg ignite-icon="info" bs-tooltip="" data-title="Credential that is used during authentication on the cloud&lt;br/&gt;                      Depending on a cloud platform it can be a password or access key" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;credential&quot; }}Input" name="{{ &quot;credential&quot; }}" translate-attr="{placeholder: &quot;Input cloud credential&quot;}" ng-model="$ctrl.clonedCluster.discovery.Cloud.credential" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;credentialPath&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;credentialPath&quot; }}Label" for="{{ &quot;credentialPath&quot; }}Input"><span>Path to credential:</span><svg ignite-icon="info" bs-tooltip="" data-title="Path to a credential that is used during authentication on the cloud&lt;br/&gt;                     Access key or private key should be stored in a plain or PEM file without a passphrase" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;credentialPath&quot; }}Input" name="{{ &quot;credentialPath&quot; }}" translate-attr="{placeholder: &quot;Input path to credential&quot;}" ng-model="$ctrl.clonedCluster.discovery.Cloud.credentialPath" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;CloudIdentity&quot; }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == &quot;Cloud&quot; ? \'required\' : \'\' }}" id="{{ &quot;CloudIdentity&quot; }}Label" for="{{ &quot;CloudIdentity&quot; }}Input"><span>Identity:</span><svg ignite-icon="info" bs-tooltip="" data-title="Identity that is used as a user name during a connection to the cloud&lt;br/&gt;                     Depending on a cloud platform it can be an email address, user name, etc" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;CloudIdentity&quot; }}Input" name="{{ &quot;CloudIdentity&quot; }}" translate-attr="{placeholder: &quot;Input identity&quot;}" ng-model="$ctrl.clonedCluster.discovery.Cloud.identity" ng-required="$ctrl.clonedCluster.discovery.kind == &quot;Cloud&quot;" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Identity could not be empty!</div><div bs-tooltip="" data-title="Identity could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;CloudProvider&quot; }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == &quot;Cloud&quot; ? \'required\' : \'\' }}" id="{{ &quot;CloudProvider&quot; }}Label" for="{{ &quot;CloudProvider&quot; }}Input"><span>Provider:</span><svg ignite-icon="info" bs-tooltip="" data-title="Cloud provider to use" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;CloudProvider&quot; }}Input" name="{{ &quot;CloudProvider&quot; }}" translate-attr="{placeholder: &quot;Input provider&quot;}" ng-model="$ctrl.clonedCluster.discovery.Cloud.provider" ng-required="$ctrl.clonedCluster.discovery.kind == &quot;Cloud&quot;" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Provider could not be empty!</div><div bs-tooltip="" data-title="Provider could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="ignite-form-field"><list-editable ng-model="$ctrl.clonedCluster.discovery.Cloud.regions" list-editable-cols="::[{\n                        name: \'Regions:\',\n                        tip: &quot;List of regions where VMs are located&lt;br /&gt;\n                        If the regions are not set then every region, that a cloud provider has, will be investigated. This could lead to significant performance degradation&lt;br /&gt;\n                        Note, that some cloud providers, like Google Compute Engine, doesn\'t have a notion of a region. For such providers regions are redundant&quot;\n                    }]"><list-editable-item-view>{{ $item }}</list-editable-item-view><list-editable-item-edit><div class="form-field form-field__text ignite-form-field" id="{{ &quot;regionName&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;regionName&quot; }}Label" for="{{ &quot;regionName&quot; }}Input"><span>Region name</span></label><div class="form-field__control"><input id="{{ &quot;regionName&quot; }}Input" name="{{ &quot;regionName&quot; }}" translate-attr="{placeholder: &quot;Enter region name&quot;}" ng-model="$item" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ignite-unique="$ctrl.clonedCluster.discovery.Cloud.regions" ignite-form-field-input-autofocus="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Region name could not be empty!</div><div bs-tooltip="" data-title="Region name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Such region already exists!</div><div bs-tooltip="" data-title="Such region already exists!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></list-editable-item-edit><list-editable-no-items><list-editable-add-item-button add-item="$editLast(($ctrl.clonedCluster.discovery.Cloud.regions = $ctrl.clonedCluster.discovery.Cloud.regions || []).push(\'\'))" label-single="region" label-multiple="regions"></list-editable-add-item-button></list-editable-no-items></list-editable></div></div><div class="pc-form-grid-col-60"><div class="ignite-form-field"><list-editable ng-model="$ctrl.clonedCluster.discovery.Cloud.zones" list-editable-cols="::[{\n                        name: \'Zones:\',\n                        tip: &quot;List of zones where VMs are located&lt;br /&gt;\n                        If the zones are not set then every zone from specified regions, will be taken into account&lt;br /&gt;\n                        Note, that some cloud providers, like Rackspace, doesn\'t have a notion of a zone. For such providers zones are redundant&quot;\n                    }]"><list-editable-item-view>{{ $item }}</list-editable-item-view><list-editable-item-edit><div class="form-field form-field__text ignite-form-field" id="{{ &quot;zoneName&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;zoneName&quot; }}Label" for="{{ &quot;zoneName&quot; }}Input"><span>Zone name</span></label><div class="form-field__control"><input id="{{ &quot;zoneName&quot; }}Input" name="{{ &quot;zoneName&quot; }}" translate-attr="{placeholder: &quot;Enter zone name&quot;}" ng-model="$item" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ignite-unique="$ctrl.clonedCluster.discovery.Cloud.zones" ignite-form-field-input-autofocus="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Zone name could not be empty!</div><div bs-tooltip="" data-title="Zone name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Such zone already exists!</div><div bs-tooltip="" data-title="Such zone already exists!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></list-editable-item-edit><list-editable-no-items><list-editable-add-item-button add-item="$editLast(($ctrl.clonedCluster.discovery.Cloud.zones = $ctrl.clonedCluster.discovery.Cloud.zones || []).push(\'\'))" label-single="zone" label-multiple="zones"></list-editable-add-item-button></list-editable-no-items></list-editable></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'GoogleStorage\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'GoogleStorageProjectName\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'GoogleStorage\' ? \'required\' : \'\' }}" id="{{ \'GoogleStorageProjectName\' }}Label" for="{{ \'GoogleStorageProjectName\' }}Input"><span>Project name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Google Cloud Platforms project name&lt;br/&gt;                     Usually this is an auto generated project number(ex. 208709979073) that can be found in &quot;Overview&quot; section of Google Developer Console" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'GoogleStorageProjectName\' }}Input" name="{{ \'GoogleStorageProjectName\' }}" translate-attr="{placeholder: &quot;Input project name&quot;}" ng-model="$ctrl.clonedCluster.discovery.GoogleStorage.projectName" ng-required="$ctrl.clonedCluster.discovery.kind == \'GoogleStorage\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Project name could not be empty!</div><div bs-tooltip="" data-title="Project name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'GoogleStorageBucketName\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'GoogleStorage\' ? \'required\' : \'\' }}" id="{{ \'GoogleStorageBucketName\' }}Label" for="{{ \'GoogleStorageBucketName\' }}Input"><span>Bucket name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Google Cloud Storage bucket name&lt;br/&gt;                     If the bucket does not exist Ignite will automatically create it&lt;br/&gt;                     However the name must be unique across whole Google Cloud Storage and Service Account Id must be authorized to perform this operation" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'GoogleStorageBucketName\' }}Input" name="{{ \'GoogleStorageBucketName\' }}" translate-attr="{placeholder: &quot;Input bucket name&quot;}" ng-model="$ctrl.clonedCluster.discovery.GoogleStorage.bucketName" ng-required="$ctrl.clonedCluster.discovery.kind == \'GoogleStorage\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Bucket name could not be empty!</div><div bs-tooltip="" data-title="Bucket name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'GoogleStorageServiceAccountP12FilePath\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'GoogleStorage\' ? \'required\' : \'\' }}" id="{{ \'GoogleStorageServiceAccountP12FilePath\' }}Label" for="{{ \'GoogleStorageServiceAccountP12FilePath\' }}Input"><span>Private key path:</span><svg ignite-icon="info" bs-tooltip="" data-title="Full path to the private key in PKCS12 format of the Service Account" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'GoogleStorageServiceAccountP12FilePath\' }}Input" name="{{ \'GoogleStorageServiceAccountP12FilePath\' }}" translate-attr="{placeholder: &quot;Input private key path&quot;}" ng-model="$ctrl.clonedCluster.discovery.GoogleStorage.serviceAccountP12FilePath" ng-required="$ctrl.clonedCluster.discovery.kind == \'GoogleStorage\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Private key path could not be empty!</div><div bs-tooltip="" data-title="Private key path could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'GoogleStorageServiceAccountId\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'GoogleStorage\' ? \'required\' : \'\' }}" id="{{ \'GoogleStorageServiceAccountId\' }}Label" for="{{ \'GoogleStorageServiceAccountId\' }}Input"><span>Account id:</span><svg ignite-icon="info" bs-tooltip="" data-title="Service account ID (typically an e-mail address)" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'GoogleStorageServiceAccountId\' }}Input" name="{{ \'GoogleStorageServiceAccountId\' }}" translate-attr="{placeholder: &quot;Input account id&quot;}" ng-model="$ctrl.clonedCluster.discovery.GoogleStorage.serviceAccountId" ng-required="$ctrl.clonedCluster.discovery.kind == \'GoogleStorage\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Account id could not be empty!</div><div bs-tooltip="" data-title="Account id could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'Jdbc\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;dataSourceBean&quot; }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind === &quot;Jdbc&quot; ? \'required\' : \'\' }}" id="{{ &quot;dataSourceBean&quot; }}Label" for="{{ &quot;dataSourceBean&quot; }}Input"><span>Data source bean name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Name of the data source bean in Spring context" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;dataSourceBean&quot; }}Input" name="{{ &quot;dataSourceBean&quot; }}" translate-attr="{placeholder: &quot;Input bean name&quot;}" ng-model="$ctrl.clonedCluster.discovery.Jdbc.dataSourceBean" ng-required="$ctrl.clonedCluster.discovery.kind === &quot;Jdbc&quot;" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Data source bean name could not be empty!</div><div bs-tooltip="" data-title="Data source bean name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__dropdown ignite-form-field" id="{{ &quot;dialect&quot; }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind === &quot;Jdbc&quot; ? \'required\' : \'\' }}" id="{{ &quot;dialect&quot; }}Label" for="{{ &quot;dialect&quot; }}Input"><span>Dialect:</span><svg ignite-icon="info" bs-tooltip="" data-title="Dialect of SQL implemented by a particular RDBMS:\n            &lt;ul&gt;\n                &lt;li&gt;Generic JDBC dialect&lt;/li&gt;\n                &lt;li&gt;Oracle database&lt;/li&gt;\n                &lt;li&gt;IBM DB2&lt;/li&gt;\n                &lt;li&gt;Microsoft SQL Server&lt;/li&gt;\n                &lt;li&gt;MySQL&lt;/li&gt;\n                &lt;li&gt;PostgreSQL&lt;/li&gt;\n                &lt;li&gt;H2 database&lt;/li&gt;\n                &lt;li&gt;Apache Hive&lt;/li&gt;\n            &lt;/ul&gt;" data-placement="auto"></svg></label><div class="form-field__control"><select id="{{ &quot;dialect&quot; }}Input" name="{{ &quot;dialect&quot; }}" ng-model="$ctrl.clonedCluster.discovery.Jdbc.dialect" ng-required="$ctrl.clonedCluster.discovery.kind === &quot;Jdbc&quot;" ng-ref="$input" ng-ref-read="ngModel"><option value="" hidden="hidden" translate="Choose JDBC dialect"></option><option ng-repeat="item in [                {value: &quot;Generic&quot;, label: &quot;Generic JDBC dialect&quot;},                {value: &quot;Oracle&quot;, label: &quot;Oracle&quot;},                {value: &quot;DB2&quot;, label: &quot;IBM DB2&quot;},                {value: &quot;SQLServer&quot;, label: &quot;Microsoft SQL Server&quot;},                {value: &quot;MySQL&quot;, label: &quot;MySQL&quot;},                {value: &quot;PostgreSQL&quot;, label: &quot;PostgreSQL&quot;},                {value: &quot;H2&quot;, label: &quot;H2 database&quot;},                {value: &quot;Hive&quot;, label: &quot;Apache Hive&quot;}        ] track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Dialect could not be empty!</div><div bs-tooltip="" data-title="Dialect could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="form-field ignite-form-field form-field__checkbox" id="{{ &quot;initSchema&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;initSchema&quot; }}Label" for="{{ &quot;initSchema&quot; }}Input"><span>DB schema should be initialized by Ignite</span><svg ignite-icon="info" bs-tooltip="" data-title="Flag indicating whether DB schema should be initialized by Ignite or was explicitly created by user" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;initSchema&quot; }}Input" name="{{ &quot;initSchema&quot; }}" translate-attr="{placeholder: &quot;undefined&quot;}" ng-model="$ctrl.clonedCluster.discovery.Jdbc.initSchema" ng-ref="$input" ng-ref-read="ngModel" type="checkbox"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-30" ng-if="$ctrl.Clusters.requiresProprietaryDrivers($ctrl.clonedCluster.discovery.Jdbc)"><a class="link-success" ng-href="{{ $ctrl.Clusters.jdbcDriverURL($ctrl.clonedCluster.discovery.Jdbc) }}" target="_blank">Download JDBC drivers?</a></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'Multicast\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;multicastGroup&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;multicastGroup&quot; }}Label" for="{{ &quot;multicastGroup&quot; }}Input" ng-disabled="!(true)"><span>IP address:</span><svg ignite-icon="info" bs-tooltip="" data-title="IP address of multicast group" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;multicastGroup&quot; }}Input" name="{{ &quot;multicastGroup&quot; }}" translate-attr="{placeholder: &quot;228.1.2.4&quot;}" ng-model="$ctrl.clonedCluster.discovery.Multicast.multicastGroup" ng-disabled="!(true)" ng-ref="$input" ng-ref-read="ngModel" data-ipaddress="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="ipaddress"><div>Invalid address!</div><div bs-tooltip="" data-title="Invalid address!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;multicastPort&quot; }}Label" for="{{ &quot;multicastPort&quot; }}Input"><span>Port number:</span><svg ignite-icon="info" bs-tooltip="" data-title="Port number which multicast messages are sent to" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;multicastPort&quot; }}Input" name="{{ &quot;multicastPort&quot; }}" translate-attr="{placeholder: &quot;47400&quot;}" ng-model="$ctrl.clonedCluster.discovery.Multicast.multicastPort" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="65535" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Port number is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Port number is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Port number is more than allowable maximum: 65535</div><div bs-tooltip="" data-title="Port number is more than allowable maximum: 65535" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Port number step should be 1</div><div bs-tooltip="" data-title="Port number step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;responseWaitTime&quot; }}Label" for="{{ &quot;responseWaitTime&quot; }}Input"><span>Waits for reply:</span><svg ignite-icon="info" bs-tooltip="" data-title="Time in milliseconds IP finder waits for reply to multicast address request" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;responseWaitTime&quot; }}Input" name="{{ &quot;responseWaitTime&quot; }}" translate-attr="{placeholder: &quot;500&quot;}" ng-model="$ctrl.clonedCluster.discovery.Multicast.responseWaitTime" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Waits for reply is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Waits for reply is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Waits for reply is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Waits for reply is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Waits for reply step should be 1</div><div bs-tooltip="" data-title="Waits for reply step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;addressRequestAttempts&quot; }}Label" for="{{ &quot;addressRequestAttempts&quot; }}Input"><span>Attempts count:</span><svg ignite-icon="info" bs-tooltip="" data-title="Number of attempts to send multicast address request&lt;br/&gt;                     IP finder re - sends request only in case if no reply for previous request is received" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;addressRequestAttempts&quot; }}Input" name="{{ &quot;addressRequestAttempts&quot; }}" translate-attr="{placeholder: &quot;2&quot;}" ng-model="$ctrl.clonedCluster.discovery.Multicast.addressRequestAttempts" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Attempts count is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Attempts count is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Attempts count is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Attempts count is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Attempts count step should be 1</div><div bs-tooltip="" data-title="Attempts count step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20 pc-form-grid-col-free"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;localAddress&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;localAddress&quot; }}Label" for="{{ &quot;localAddress&quot; }}Input" ng-disabled="!(true)"><span>Local address:</span><svg ignite-icon="info" bs-tooltip="" data-title="Local host address used by this IP finder&lt;br/&gt;                     If provided address is non - loopback then multicast socket is bound to this interface&lt;br/&gt;                     If local address is not set or is any local address then IP finder creates multicast sockets for all found non - loopback addresses" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;localAddress&quot; }}Input" name="{{ &quot;localAddress&quot; }}" translate-attr="{placeholder: &quot;0.0.0.0&quot;}" ng-model="$ctrl.clonedCluster.discovery.Multicast.localAddress" ng-disabled="!(true)" ng-ref="$input" ng-ref-read="ngModel" data-ipaddress="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="ipaddress"><div>Invalid address!</div><div bs-tooltip="" data-title="Invalid address!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="ignite-form-field"><list-editable ng-model="$ctrl.clonedCluster.discovery.Multicast.addresses" name="multicastAddresses" list-editable-cols="::[{name: &quot;Addresses:&quot;, tip: &quot;Addresses may be represented as follows:\n                    &lt;ul&gt;\n                        &lt;li&gt;IP address (e.g. 127.0.0.1, 9.9.9.9, etc)&lt;/li&gt;\n                        &lt;li&gt;IP address and port (e.g. 127.0.0.1:47500, 9.9.9.9:47501, etc)&lt;/li&gt;\n                        &lt;li&gt;IP address and port range (e.g. 127.0.0.1:47500..47510, 9.9.9.9:47501..47504, etc)&lt;/li&gt;\n                        &lt;li&gt;Hostname (e.g. host1.com, host2, etc)&lt;/li&gt;\n                        &lt;li&gt;Hostname and port (e.g. host1.com:47500, host2:47502, etc)&lt;/li&gt;\n                        &lt;li&gt;Hostname and port range (e.g. host1.com:47500..47510, host2:47502..47508, etc)&lt;/li&gt;\n                    &lt;/ul&gt;\n                    If port is 0 or not provided then default port will be used (depends on discovery SPI configuration)&lt;br /&gt;\n                    If port range is provided (e.g. host:port1..port2) the following should be considered:\n                    &lt;/ul&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt; port1 &amp;lt; port2 should be true&lt;/li&gt;\n                        &lt;li&gt; Both port1 and port2 should be greater than 0&lt;/li&gt;\n                    &lt;/ul&gt;&quot;}]"><list-editable-item-view>{{ $item }}</list-editable-item-view><list-editable-item-edit item-name="address"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;address&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;address&quot; }}Label" for="{{ &quot;address&quot; }}Input"><span>Address</span></label><div class="form-field__control"><input id="{{ &quot;address&quot; }}Input" name="{{ &quot;address&quot; }}" translate-attr="{placeholder: &quot;IP address:port&quot;}" ng-model="address" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ipaddress="true" ipaddress-with-port="true" ipaddress-with-port-range="ipaddress-with-port-range" ignite-unique="$ctrl.clonedCluster.discovery.Multicast.addresses" ignite-form-field-input-autofocus="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Address could not be empty!</div><div bs-tooltip="" data-title="Address could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Such IP address already exists!</div><div bs-tooltip="" data-title="Such IP address already exists!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddress"><div>Invalid address!</div><div bs-tooltip="" data-title="Invalid address!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddressPort"><div>Invalid port!</div><div bs-tooltip="" data-title="Invalid port!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="ipaddressPortRange"><div>Invalid port range!</div><div bs-tooltip="" data-title="Invalid port range!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="required"><div>IP address:port could not be empty!</div><div bs-tooltip="" data-title="IP address:port could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></list-editable-item-edit><list-editable-no-items><list-editable-add-item-button add-item="$editLast(($ctrl.clonedCluster.discovery.Multicast.addresses = $ctrl.clonedCluster.discovery.Multicast.addresses || []).push(&quot;&quot;))" label-multiple="addresses" label-single="address"></list-editable-add-item-button></list-editable-no-items></list-editable></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'S3\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'S3BucketName\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'S3\' ? \'required\' : \'\' }}" id="{{ \'S3BucketName\' }}Label" for="{{ \'S3BucketName\' }}Input"><span>Bucket name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Bucket name for IP finder" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'S3BucketName\' }}Input" name="{{ \'S3BucketName\' }}" translate-attr="{placeholder: &quot;Input bucket name&quot;}" ng-model="$ctrl.clonedCluster.discovery.S3.bucketName" ng-required="$ctrl.clonedCluster.discovery.kind == \'S3\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Bucket name could not be empty!</div><div bs-tooltip="" data-title="Bucket name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30"><div class="pc-form-grid__text-only-item" style="font-style: italic;color: #424242;">AWS credentials will be generated as stub</div></div><div class="pc-form-grid-col-40" ng-if-start="$ctrl.available(&quot;2.4.0&quot;)"><div class="form-field form-field__text ignite-form-field" id="{{ \'S3BucketEndpoint\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'S3BucketEndpoint\' }}Label" for="{{ \'S3BucketEndpoint\' }}Input"><span>Bucket endpoint:</span><svg ignite-icon="info" bs-tooltip="" data-title="Bucket endpoint for IP finder&lt;br/&gt;                       For information about possible endpoint names visit &lt;a href=&quot;http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region&quot;&gt;docs.aws.amazon.com&lt;/a&gt;" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'S3BucketEndpoint\' }}Input" name="{{ \'S3BucketEndpoint\' }}" translate-attr="{placeholder: &quot;Input bucket endpoint&quot;}" ng-model="$ctrl.clonedCluster.discovery.S3.bucketEndpoint" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-20" ng-if-end="ng-if-end"><div class="form-field form-field__text ignite-form-field" id="{{ \'S3SSEAlgorithm\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'S3SSEAlgorithm\' }}Label" for="{{ \'S3SSEAlgorithm\' }}Input"><span>SSE algorithm:</span><svg ignite-icon="info" bs-tooltip="" data-title="Server-side encryption algorithm for Amazon S3-managed encryption keys&lt;br/&gt;                       For information about possible S3-managed encryption keys visit &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html&quot;&gt;docs.aws.amazon.com&lt;/a&gt;" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'S3SSEAlgorithm\' }}Input" name="{{ \'S3SSEAlgorithm\' }}" translate-attr="{placeholder: &quot;Input SSE algorithm&quot;}" ng-model="$ctrl.clonedCluster.discovery.S3.SSEAlgorithm" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'SharedFs\'"><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;path&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;path&quot; }}Label" for="{{ &quot;path&quot; }}Input"><span>File path:</span><svg ignite-icon="info" bs-tooltip="" data-title="Shared path" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;path&quot; }}Input" name="{{ &quot;path&quot; }}" translate-attr="{placeholder: &quot;disco/tcp&quot;}" ng-model="$ctrl.clonedCluster.discovery.SharedFs.path" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'ZooKeeper\'"><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;curator&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;curator&quot; }}Label" for="{{ &quot;curator&quot; }}Input"><span>Curator:</span><svg ignite-icon="info" bs-tooltip="" data-title="The Curator framework in use&lt;br/&gt;                     By default generates curator of org.apache.curator. framework.imps.CuratorFrameworkImpl                     class with configured connect string, retry policy, and default session and connection timeouts" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;curator&quot; }}Input" name="{{ &quot;curator&quot; }}" translate-attr="{placeholder: &quot;Enter fully qualified class name&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.curator" ng-ref="$input" ng-ref-read="ngModel" data-java-identifier="true" data-java-package-specified="true" data-java-keywords="true" data-java-built-in-class="true" data-validation-active="{{ $ctrl.clonedCluster.discovery.kind == \'ZooKeeper\' }}" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="javaBuiltInClass"><div>Curator should not be the Java built-in class!</div><div bs-tooltip="" data-title="Curator should not be the Java built-in class!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaKeywords"><div>Curator could not contains reserved Java keyword!</div><div bs-tooltip="" data-title="Curator could not contains reserved Java keyword!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaPackageSpecified"><div>Curator does not have package specified!</div><div bs-tooltip="" data-title="Curator does not have package specified!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaIdentifier"><div>Curator is invalid Java identifier!</div><div bs-tooltip="" data-title="Curator is invalid Java identifier!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ \'ZooKeeperConnectionString\' }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind == \'ZooKeeper\' ? \'required\' : \'\' }}" id="{{ \'ZooKeeperConnectionString\' }}Label" for="{{ \'ZooKeeperConnectionString\' }}Input"><span>Connect string:</span><svg ignite-icon="info" bs-tooltip="" data-title="When &lt;b&gt;IGNITE_ZK_CONNECTION_STRING&lt;/b&gt; system property is not configured this property will be used.&lt;br&gt;&lt;br&gt;This should be a comma separated host:port pairs, each corresponding to a zk server. e.g. &quot;127.0.0.1:3000,127.0.0.1:3001&quot;.&lt;br&gt;If the optional chroot suffix is used the example would look like: &quot;127.0.0.1:3000,127.0.0.1:3002/app/a&quot;.&lt;br&gt;&lt;br&gt;Where the client would be rooted at &quot;/app/a&quot; and all paths would be relative to this root - ie getting/setting/etc... &quot;/foo/bar&quot; would result in operations being run on &quot;/app/a/foo/bar&quot; (from the server perspective).&lt;br&gt;&lt;br&gt;&lt;a href=&quot;https://zookeeper.apache.org/doc/r3.2.2/api/org/apache/zookeeper/ZooKeeper.html#ZooKeeper(java.lang.String,%20int,%20org.apache.zookeeper.Watcher)&quot;&gt;Zookeeper docs&lt;/a&gt;" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'ZooKeeperConnectionString\' }}Input" name="{{ \'ZooKeeperConnectionString\' }}" translate-attr="{placeholder: &quot;host:port[chroot][,host:port[chroot]]&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.zkConnectionString" ng-required="$ctrl.clonedCluster.discovery.kind == \'ZooKeeper\'" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Connect string could not be empty!</div><div bs-tooltip="" data-title="Connect string could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="form-field form-field__dropdown ignite-form-field" id="{{ &quot;retryPolicy&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;retryPolicy&quot; }}Label" for="{{ &quot;retryPolicy&quot; }}Input"><span>Retry policy:</span><svg ignite-icon="info" bs-tooltip="" data-title="Available retry policies:                            &lt;ul&gt;                                &lt;li&gt;Exponential backoff - retries a set number of times with increasing sleep time between retries&lt;/li&gt;                                &lt;li&gt;Bounded exponential backoff - retries a set number of times with an increasing (up to a maximum bound) sleep time between retries&lt;/li&gt;                                &lt;li&gt;Until elapsed - retries until a given amount of time elapses&lt;/li&gt;                                &lt;li&gt;Max number of times - retries a max number of times&lt;/li&gt;                                &lt;li&gt;Only once - retries only once&lt;/li&gt;                                &lt;li&gt;Always allow retry - retries infinitely&lt;/li&gt;                                &lt;li&gt;Custom - custom retry policy implementation&lt;/li&gt;                                &lt;li&gt;Default - exponential backoff retry policy with configured base sleep time equal to 1000ms and max retry count equal to 10&lt;/li&gt;                            &lt;/ul&gt;" data-placement="auto"></svg></label><div class="form-field__control"><select id="{{ &quot;retryPolicy&quot; }}Input" name="{{ &quot;retryPolicy&quot; }}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind" ng-ref="$input" ng-ref-read="ngModel"><option value="" hidden="hidden" translate="Default"></option><option ng-repeat="item in [                                {value: &quot;ExponentialBackoff&quot;, label: &quot;Exponential backoff&quot;},                                {value: &quot;BoundedExponentialBackoff&quot;, label: &quot;Bounded exponential backoff&quot;},                                {value: &quot;UntilElapsed&quot;, label: &quot;Until elapsed&quot;},                                {value: &quot;NTimes&quot;, label: &quot;Max number of times&quot;},                                {value: &quot;OneTime&quot;, label: &quot;Only once&quot;},                                {value: &quot;Forever&quot;, label: &quot;Always allow retry&quot;},                                {value: &quot;Custom&quot;, label: &quot;Custom&quot;},                                {value: null, label: &quot;Default&quot;}                            ] track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid__break"></div><div class="pc-form-grid-col-20" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'ExponentialBackoff\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;expBaseSleepTimeMs&quot; }}Label" for="{{ &quot;expBaseSleepTimeMs&quot; }}Input"><span>Base interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Initial amount of time in ms to wait between retries" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;expBaseSleepTimeMs&quot; }}Input" name="{{ &quot;expBaseSleepTimeMs&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.ExponentialBackoff.baseSleepTimeMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Base interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Base interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Base interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Base interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Base interval step should be 1</div><div bs-tooltip="" data-title="Base interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;expMaxRetries&quot; }}Label" for="{{ &quot;expMaxRetries&quot; }}Input"><span>Max retries:</span><svg ignite-icon="info" bs-tooltip="" data-title="Max number of times to retry" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;expMaxRetries&quot; }}Input" name="{{ &quot;expMaxRetries&quot; }}" translate-attr="{placeholder: &quot;10&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.ExponentialBackoff.maxRetries" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="29" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Max retries is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Max retries is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Max retries is more than allowable maximum: 29</div><div bs-tooltip="" data-title="Max retries is more than allowable maximum: 29" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Max retries step should be 1</div><div bs-tooltip="" data-title="Max retries step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20" ng-if-end="ng-if-end"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;expMaxSleepMs&quot; }}Label" for="{{ &quot;expMaxSleepMs&quot; }}Input"><span>Max interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Max time in ms to sleep on each retry" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;expMaxSleepMs&quot; }}Input" name="{{ &quot;expMaxSleepMs&quot; }}" translate-attr="{placeholder: &quot;Integer.MAX_VALUE&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.ExponentialBackoff.maxSleepMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Max interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Max interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Max interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Max interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Max interval step should be 1</div><div bs-tooltip="" data-title="Max interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'BoundedExponentialBackoff\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;beBaseSleepTimeMs&quot; }}Label" for="{{ &quot;beBaseSleepTimeMs&quot; }}Input"><span>Base interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Initial amount of time in ms to wait between retries" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;beBaseSleepTimeMs&quot; }}Input" name="{{ &quot;beBaseSleepTimeMs&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.BoundedExponentialBackoff.baseSleepTimeMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Base interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Base interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Base interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Base interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Base interval step should be 1</div><div bs-tooltip="" data-title="Base interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;beMaxSleepTimeMs&quot; }}Label" for="{{ &quot;beMaxSleepTimeMs&quot; }}Input"><span>Max interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Max time in ms to sleep on each retry" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;beMaxSleepTimeMs&quot; }}Input" name="{{ &quot;beMaxSleepTimeMs&quot; }}" translate-attr="{placeholder: &quot;Integer.MAX_VALUE&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.BoundedExponentialBackoff.maxSleepTimeMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Max interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Max interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Max interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Max interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Max interval step should be 1</div><div bs-tooltip="" data-title="Max interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-20" ng-if-end="ng-if-end"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;beMaxRetries&quot; }}Label" for="{{ &quot;beMaxRetries&quot; }}Input"><span>Max retries:</span><svg ignite-icon="info" bs-tooltip="" data-title="Max number of times to retry" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;beMaxRetries&quot; }}Input" name="{{ &quot;beMaxRetries&quot; }}" translate-attr="{placeholder: &quot;10&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.BoundedExponentialBackoff.maxRetries" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="29" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Max retries is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Max retries is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Max retries is more than allowable maximum: 29</div><div bs-tooltip="" data-title="Max retries is more than allowable maximum: 29" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Max retries step should be 1</div><div bs-tooltip="" data-title="Max retries step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'UntilElapsed\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;ueMaxElapsedTimeMs&quot; }}Label" for="{{ &quot;ueMaxElapsedTimeMs&quot; }}Input"><span>Total time:</span><svg ignite-icon="info" bs-tooltip="" data-title="Total time in ms for execution of retry attempt" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;ueMaxElapsedTimeMs&quot; }}Input" name="{{ &quot;ueMaxElapsedTimeMs&quot; }}" translate-attr="{placeholder: &quot;60000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.UntilElapsed.maxElapsedTimeMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Total time is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Total time is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Total time is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Total time is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Total time step should be 1</div><div bs-tooltip="" data-title="Total time step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30" ng-if-end="ng-if-end"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;ueSleepMsBetweenRetries&quot; }}Label" for="{{ &quot;ueSleepMsBetweenRetries&quot; }}Input"><span>Interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Time in ms between retry attempts" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;ueSleepMsBetweenRetries&quot; }}Input" name="{{ &quot;ueSleepMsBetweenRetries&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.UntilElapsed.sleepMsBetweenRetries" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Interval step should be 1</div><div bs-tooltip="" data-title="Interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'NTimes\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;n&quot; }}Label" for="{{ &quot;n&quot; }}Input"><span>Retries:</span><svg ignite-icon="info" bs-tooltip="" data-title="Number of times to retry" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;n&quot; }}Input" name="{{ &quot;n&quot; }}" translate-attr="{placeholder: &quot;10&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.NTimes.n" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Retries is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Retries is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Retries is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Retries is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Retries step should be 1</div><div bs-tooltip="" data-title="Retries step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30" ng-if-end="ng-if-end"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;ntSleepMsBetweenRetries&quot; }}Label" for="{{ &quot;ntSleepMsBetweenRetries&quot; }}Input"><span>Interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Time in ms between retry attempts" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;ntSleepMsBetweenRetries&quot; }}Input" name="{{ &quot;ntSleepMsBetweenRetries&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.NTimes.sleepMsBetweenRetries" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Interval step should be 1</div><div bs-tooltip="" data-title="Interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-30" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'OneTime\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;oneSleepMsBetweenRetry&quot; }}Label" for="{{ &quot;oneSleepMsBetweenRetry&quot; }}Input"><span>Interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Time in ms to retry attempt" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;oneSleepMsBetweenRetry&quot; }}Input" name="{{ &quot;oneSleepMsBetweenRetry&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.OneTime.sleepMsBetweenRetry" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Interval step should be 1</div><div bs-tooltip="" data-title="Interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid__break" ng-if-end="ng-if-end"></div><div class="pc-form-grid-col-30" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'Forever\'"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;feRetryIntervalMs&quot; }}Label" for="{{ &quot;feRetryIntervalMs&quot; }}Input"><span>Interval:</span><svg ignite-icon="info" bs-tooltip="" data-title="Time in ms between retry attempts" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;feRetryIntervalMs&quot; }}Input" name="{{ &quot;feRetryIntervalMs&quot; }}" translate-attr="{placeholder: &quot;1000&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.Forever.retryIntervalMs" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Interval is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Interval is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Interval is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Interval is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Interval step should be 1</div><div bs-tooltip="" data-title="Interval step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid__break" ng-if-end="ng-if-end"></div><div class="pc-form-grid-col-60" ng-if-start="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === \'Custom\'"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;customClassName&quot; }}Field"><label class="form-field__label {{ $ctrl.clonedCluster.discovery.kind === &quot;ZooKeeper&quot; &amp;&amp; $ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === &quot;Custom&quot; ? \'required\' : \'\' }}" id="{{ &quot;customClassName&quot; }}Label" for="{{ &quot;customClassName&quot; }}Input"><span>Class name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Custom retry policy implementation class name" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;customClassName&quot; }}Input" name="{{ &quot;customClassName&quot; }}" translate-attr="{placeholder: &quot;Enter fully qualified class name&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.Custom.className" ng-required="$ctrl.clonedCluster.discovery.kind === &quot;ZooKeeper&quot; &amp;&amp; $ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === &quot;Custom&quot;" ng-ref="$input" ng-ref-read="ngModel" data-java-identifier="true" data-java-package-specified="true" data-java-keywords="true" data-java-built-in-class="true" data-validation-active="{{ $ctrl.clonedCluster.discovery.kind === &quot;ZooKeeper&quot; &amp;&amp; $ctrl.clonedCluster.discovery.ZooKeeper.retryPolicy.kind === &quot;Custom&quot; }}" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Class name could not be empty!</div><div bs-tooltip="" data-title="Class name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaBuiltInClass"><div>Class name should not be the Java built-in class!</div><div bs-tooltip="" data-title="Class name should not be the Java built-in class!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaKeywords"><div>Class name could not contains reserved Java keyword!</div><div bs-tooltip="" data-title="Class name could not contains reserved Java keyword!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaPackageSpecified"><div>Class name does not have package specified!</div><div bs-tooltip="" data-title="Class name does not have package specified!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="javaIdentifier"><div>Class name is invalid Java identifier!</div><div bs-tooltip="" data-title="Class name is invalid Java identifier!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid__break" ng-if-end="ng-if-end"></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;basePath&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;basePath&quot; }}Label" for="{{ &quot;basePath&quot; }}Input"><span>Base path:</span><svg ignite-icon="info" bs-tooltip="" data-title="Base path for service registration" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;basePath&quot; }}Input" name="{{ &quot;basePath&quot; }}" translate-attr="{placeholder: &quot;/services&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.basePath" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ &quot;serviceName&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;serviceName&quot; }}Label" for="{{ &quot;serviceName&quot; }}Input"><span>Service name:</span><svg ignite-icon="info" bs-tooltip="" data-title="Service name to use, as defined by Curator&amp;#39;s ServiceDiscovery recipe&lt;br/&gt;                      In physical ZooKeeper terms, it represents the node under basePath, under which services will be registered" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;serviceName&quot; }}Input" name="{{ &quot;serviceName&quot; }}" translate-attr="{placeholder: &quot;ignite&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.serviceName" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid__break"></div><div class="pc-form-grid-col-60"><div class="form-field ignite-form-field form-field__checkbox" id="{{ &quot;allowDuplicateRegistrations&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;allowDuplicateRegistrations&quot; }}Label" for="{{ &quot;allowDuplicateRegistrations&quot; }}Input"><span>Allow duplicate registrations</span><svg ignite-icon="info" bs-tooltip="" data-title="Whether to register each node only once, or if duplicate registrations are allowed&lt;br/&gt;                     Nodes will attempt to register themselves, plus those they know about&lt;br/&gt;                     By default, duplicate registrations are not allowed, but you might want to set this property to &lt;b&gt;true&lt;/b&gt; if you have multiple network interfaces or if you are facing troubles" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ &quot;allowDuplicateRegistrations&quot; }}Input" name="{{ &quot;allowDuplicateRegistrations&quot; }}" translate-attr="{placeholder: &quot;undefined&quot;}" ng-model="$ctrl.clonedCluster.discovery.ZooKeeper.allowDuplicateRegistrations" ng-ref="$input" ng-ref-read="ngModel" type="checkbox"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div></div><div class="pc-form-grid-row pcb-form-grid-row" ng-if="$ctrl.clonedCluster.discovery.kind === \'Kubernetes\'"><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'KubernetesServiceName\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'KubernetesServiceName\' }}Label" for="{{ \'KubernetesServiceName\' }}Input"><span>Service name:</span><svg ignite-icon="info" bs-tooltip="" data-title="The name of Kubernetes service for Ignite pods\' IP addresses lookup.&lt;br/&gt;                     The name of the service must be equal to the name set in service\'s Kubernetes configuration.&lt;br/&gt;                     If this parameter is not changed then the name of the service has to be set to \'ignite\' in the corresponding Kubernetes configuration." data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'KubernetesServiceName\' }}Input" name="{{ \'KubernetesServiceName\' }}" translate-attr="{placeholder: &quot;ignite&quot;}" ng-model="$ctrl.clonedCluster.discovery.Kubernetes.serviceName" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-30"><div class="form-field form-field__text ignite-form-field" id="{{ \'KubernetesNamespace\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'KubernetesNamespace\' }}Label" for="{{ \'KubernetesNamespace\' }}Input"><span>Namespace:</span><svg ignite-icon="info" bs-tooltip="" data-title="The namespace the Kubernetes service belongs to.&lt;br/&gt;                      By default, it\'s supposed that the service is running under Kubernetes `default` namespace." data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'KubernetesNamespace\' }}Input" name="{{ \'KubernetesNamespace\' }}" translate-attr="{placeholder: &quot;default&quot;}" ng-model="$ctrl.clonedCluster.discovery.Kubernetes.namespace" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ \'KubernetesMasterUrl\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'KubernetesMasterUrl\' }}Label" for="{{ \'KubernetesMasterUrl\' }}Input" ng-disabled="!(true)"><span>Kubernetes server:</span><svg ignite-icon="info" bs-tooltip="" data-title="The host name of the Kubernetes API server" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'KubernetesMasterUrl\' }}Input" name="{{ \'KubernetesMasterUrl\' }}" translate-attr="{placeholder: &quot;https://kubernetes.default.svc.cluster.local:443&quot;}" ng-model="$ctrl.clonedCluster.discovery.Kubernetes.masterUrl" ng-disabled="!(true)" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="url"><div>Kubernetes server should be a valid URL!</div><div bs-tooltip="" data-title="Kubernetes server should be a valid URL!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div class="pc-form-grid-col-60"><div class="form-field form-field__text ignite-form-field" id="{{ \'KubernetesAccountToken\' }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ \'KubernetesAccountToken\' }}Label" for="{{ \'KubernetesAccountToken\' }}Input"><span>Service token file:</span><svg ignite-icon="info" bs-tooltip="" data-title="The path to the service token file" data-placement="auto"></svg></label><div class="form-field__control"><input id="{{ \'KubernetesAccountToken\' }}Input" name="{{ \'KubernetesAccountToken\' }}" translate-attr="{placeholder: &quot;/var/run/secrets/kubernetes.io/serviceaccount/token&quot;}" ng-model="$ctrl.clonedCluster.discovery.Kubernetes.accountToken" ng-ref="$input" ng-ref-read="ngModel" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div></div></div></div><h2 class="pcb-section-header pcb-inner-padding" style="margin-top:30px">Step 2. Caches Configuration</h2><div class="pcb-form-grid-row pc-form-grid-row"><div class="pc-form-grid-col-60" ng-if="\n                $ctrl.defaultMemoryPolicy &amp;&amp;\n                $ctrl.IgniteVersion.available([\'2.0.0\', \'2.3.0\']) &amp;&amp;\n                $ctrl.memorySizeInputVisible$|async:this\n            "><form-field-size ng-model="$ctrl.defaultMemoryPolicy.maxSize" ng-model-options="{allowInvalid: true}" id="memory" name="memory" label="Total Off-heap Size:" size-type="bytes" size-scale-label="mb" placeholder="{{ ::$ctrl.Clusters.memoryPolicy.maxSize.default }}" min="{{ ::$ctrl.Clusters.memoryPolicy.maxSize.min($ctrl.defaultMemoryPolicy) }}" tip="“default” cluster memory policy off-heap max memory size. Leave empty to use 80% of physical memory available on current machine. Should be at least 10Mb." on-scale-change="scale = $event"><div class="form-field__error" ng-message="min"><div>Maximum size should be equal to or more than initial size ({{ $ctrl.Clusters.memoryPolicy.maxSize.min($ctrl.defaultMemoryPolicy) / scale.value}} {{scale.label}}).</div><div bs-tooltip="" data-title="Maximum size should be equal to or more than initial size ({{ $ctrl.Clusters.memoryPolicy.maxSize.min($ctrl.defaultMemoryPolicy) / scale.value}} {{scale.label}})." data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></form-field-size></div><div class="pc-form-grid-col-60" ng-if="$ctrl.IgniteVersion.available(\'2.3.0\')"><form-field-size ng-model="$ctrl.clonedCluster.dataStorageConfiguration.defaultDataRegionConfiguration.maxSize" ng-model-options="{allowInvalid: true}" id="memory" name="memory" label="Total Off-heap Size:" size-type="bytes" size-scale-label="mb" placeholder="{{ ::$ctrl.Clusters.dataRegion.maxSize.default }}" min="{{ ::$ctrl.Clusters.dataRegion.maxSize.min($ctrl.clonedCluster.dataStorageConfiguration.defaultDataRegionConfiguration) }}" tip="Default data region off-heap max memory size. Leave empty to use 20% of physical memory available on current machine. Should be at least 10Mb." on-scale-change="scale = $event"><div class="form-field__error" ng-message="min"><div>Maximum size should be equal to or more than initial size ({{ $ctrl.Clusters.dataRegion.maxSize.min($ctrl.clonedCluster.dataStorageConfiguration.defaultDataRegionConfiguration) / scale.value}} {{scale.label}}).</div><div bs-tooltip="" data-title="Maximum size should be equal to or more than initial size ({{ $ctrl.Clusters.dataRegion.maxSize.min($ctrl.clonedCluster.dataStorageConfiguration.defaultDataRegionConfiguration) / scale.value}} {{scale.label}})." data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></form-field-size></div><div class="pc-form-grid-col-120"><div class="ignite-form-field"><list-editable class="pcb-caches-list" ng-model="$ctrl.shortCaches" list-editable-one-way="list-editable-one-way" on-item-change="$ctrl.changeCache($event)" on-item-remove="$ctrl.removeCache($event)" list-editable-cols="::$ctrl.cachesColDefs" list-editable-cols-row-class="pc-form-grid-row pcb-row-no-margin"><list-editable-item-view><div>{{ $item.name }}</div><div>{{ $item.cacheMode }}</div><div>{{ $item.atomicityMode }}</div><div>{{ $ctrl.Caches.getCacheBackupsCount($item) }}</div></list-editable-item-view><list-editable-item-edit><div><div class="form-field form-field__text ignite-form-field" id="{{ &quot;name&quot; }}Field"><label class="form-field__label {{ true ? \'required\' : \'\' }}" id="{{ &quot;name&quot; }}Label" for="{{ &quot;name&quot; }}Input"><span>Name</span></label><div class="form-field__control"><input id="{{ &quot;name&quot; }}Input" name="{{ &quot;name&quot; }}" translate-attr="{placeholder: &quot;undefined&quot;}" ng-model="$item.name" ng-required="true" ng-ref="$input" ng-ref-read="ngModel" ignite-unique="$ctrl.shortCaches" ignite-unique-property="name" ignite-form-field-input-autofocus="true" type="text"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="required"><div>Name could not be empty!</div><div bs-tooltip="" data-title="Name could not be empty!" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="igniteUnique"><div>Cache name should be unqiue</div><div bs-tooltip="" data-title="Cache name should be unqiue" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div><div><div class="form-field form-field__dropdown ignite-form-field" id="{{ &quot;cacheMode&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;cacheMode&quot; }}Label" for="{{ &quot;cacheMode&quot; }}Input"><span>Mode:</span><svg ignite-icon="info" bs-tooltip="" data-title="Cache modes:        &lt;ul&gt;            &lt;li&gt;PARTITIONED - in this mode the overall key set will be divided into partitions and all partitions will be split equally between participating nodes&lt;/li&gt;            &lt;li&gt;REPLICATED - in this mode all the keys are distributed to all participating nodes&lt;/li&gt;            &lt;li&gt;LOCAL - in this mode caches residing on different grid nodes will not know about each other&lt;/li&gt;        &lt;/ul&gt;" data-placement="auto"></svg></label><div class="form-field__control"><select id="{{ &quot;cacheMode&quot; }}Input" name="{{ &quot;cacheMode&quot; }}" ng-model="$item.cacheMode" ng-ref="$input" ng-ref-read="ngModel"><option value="" hidden="hidden" translate="PARTITIONED"></option><option ng-repeat="item in [            {value: &quot;LOCAL&quot;, label: &quot;LOCAL&quot;},            {value: &quot;REPLICATED&quot;, label: &quot;REPLICATED&quot;},            {value: &quot;PARTITIONED&quot;, label: &quot;PARTITIONED&quot;}        ] track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div><div class="form-field form-field__dropdown ignite-form-field" id="{{ &quot;atomicityMode&quot; }}Field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;atomicityMode&quot; }}Label" for="{{ &quot;atomicityMode&quot; }}Input"><span>Atomicity:</span></label><div class="form-field__control"><select id="{{ &quot;atomicityMode&quot; }}Input" name="{{ &quot;atomicityMode&quot; }}" ng-model="$item.atomicityMode" ng-ref="$input" ng-ref-read="ngModel"><option value="" hidden="hidden" translate="ATOMIC"></option><option ng-repeat="item in ::$ctrl.Caches.atomicityModes track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div ng-show="$ctrl.Caches.shouldShowCacheBackupsCount($item)"><div class="form-field ignite-form-field"><label class="form-field__label {{ undefined ? \'required\' : \'\' }}" id="{{ &quot;backups&quot; }}Label" for="{{ &quot;backups&quot; }}Input"><span>Backups:</span></label><div class="form-field__control"><input id="{{ &quot;backups&quot; }}Input" name="{{ &quot;backups&quot; }}" translate-attr="{placeholder: &quot;0&quot;}" ng-model="$item.backups" ng-ref="$input" ng-ref-read="ngModel" type="number" min="0" max="{{ Number.MAX_VALUE }}" step="1"/></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"><div class="form-field__error" ng-message="min"><div>Backups is less than allowable minimum: 0</div><div bs-tooltip="" data-title="Backups is less than allowable minimum: 0" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="max"><div>Backups is more than allowable maximum: undefined</div><div bs-tooltip="" data-title="Backups is more than allowable maximum: undefined" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="step"><div>Backups step should be 1</div><div bs-tooltip="" data-title="Backups step should be 1" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div><div class="form-field__error" ng-message="number"><div>Only numbers allowed</div><div bs-tooltip="" data-title="Only numbers allowed" data-placement="top" data-template="\n                &lt;div class=&quot;tooltip tooltip--error in&quot; ng-show=&quot;title&quot;&gt;\n                    &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;\n                    &lt;div class=&quot;tooltip-inner&quot; ng-bind-html=&quot;title&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;"></div><svg ignite-icon="exclamation"></svg></div></div></div></div></list-editable-item-edit><list-editable-no-items><list-editable-add-item-button add-item="$ctrl.addCache()" label-single="cache" label-multiple="caches"></list-editable-add-item-button></list-editable-no-items></list-editable></div></div></div><div class="pc-form-actions-panel"><button-preview-project ng-hide="$ctrl.isNew$|async:this" cluster="$ctrl.clonedCluster"></button-preview-project><div class="pc-form-actions-panel__right-after"></div><button class="btn-ignite btn-ignite--link-success" type="button" ng-click="$ctrl.confirmAndRestart()" ng-show="$ctrl.$scope.status!=&quot;started&quot;"> Restart Cluster</button><button class="btn-ignite btn-ignite--link-success" type="button" ng-click="$ctrl.confirmAndStop()" ng-show="$ctrl.$scope.status==&quot;started&quot;"> Stop Cluster</button><button class="btn-ignite btn-ignite--link-success" type="button" ng-click="$ctrl.confirmAndReset()">Cancel</button><pc-split-button actions="::$ctrl.formActionsMenu"></pc-split-button></div></form>'},1234:function(e,t,i){},1236:function(e,t){e.exports='<nav class="pca-menu"><ul><li ng-repeat="item in $ctrl.menuItems"><a class="pca-menu-link btn-ignite" ui-sref-active="active" ui-sref="{{::item.sref}}"><svg class="icon-left" ng-if="::item.icon" ignite-icon="{{::item.icon}}"></svg>{{::item.text}}</a></li></ul></nav><ui-view></ui-view>'},1237:function(e,t,i){},1239:function(e,t){e.exports='<cluster-edit-form is-new="$ctrl.isNew$|async:this" cluster="$ctrl.originalCluster$|async:this" caches="$ctrl.shortCaches$|async:this" on-save="$ctrl.save($event)" ng-class="{&quot;pca-form-blocked&quot;: !($ctrl.isBlocked$|async:this)}" fake-ui-can-exit="base.configuration.edit.advanced.cluster" form-ui-can-exit-guard="form-ui-can-exit-guard"></cluster-edit-form>'},1240:function(e,t){e.exports='<div class="ui-grid-cell-contents" ng-class="{\n    \'page-configure-advanced__invalid-model-cell\': !row.entity[col.field],\n    \'page-configure-advanced__valid-model-cell\': row.entity[col.field],\n}"><svg ignite-icon="attention" ng-if="!row.entity[col.field]"></svg><svg ignite-icon="checkmark" ng-if="row.entity[col.field]"></svg><span>{{ row.entity[col.field] ? \'Yes\' : \'No\'}}</span></div>'},1241:function(e,t){e.exports='<div class="ui-grid-cell-contents" ng-class="{\'page-configure-advanced__invalid-model-cell\': !row.entity.keyType}"><span ng-if="row.entity[col.field]">{{ row.entity[col.field] }}</span><i ng-if-start="!row.entity[col.field]">No keyType defined</i><svg ignite-icon="attention" ng-if-end="ng-if-end"></svg></div>'},1242:function(e,t){e.exports='<div class="ui-grid-cell-contents" ng-class="{\'page-configure-advanced__invalid-model-cell\': !row.entity.keyType}">{{ row.entity[col.field]}}</div>'},1243:function(e,t){e.exports='<pc-items-table table-title="::&quot;My domain models&quot;" column-defs="$ctrl.columnDefs" items="$ctrl.shortItems$|async:this" actions-menu="$ctrl.tableActions$|async:this" selected-row-id="$ctrl.selectionManager.selectedItemIDs$|async:this" one-way-selection="::true" on-selection-change="$ctrl.selectedRows$.next($event)" on-filter-changed="$ctrl.filterChanges$.next($event)" on-visible-rows-change="$ctrl.visibleRows$.next($event)"><footer-slot><div style="font-style: italic" ng-hide="($ctrl.shortItems$|async:this).length">You have no models. <a class="link-success" ui-sref="base.configuration.edit.advanced.models.model({modelID: &quot;new&quot;})">Create one?</a></div><a class="link-success" ui-sref="base.configuration.edit.advanced.models.model({modelID: &quot;new&quot;})" ng-show="($ctrl.shortItems$|async:this).length">+ Add new model</a></footer-slot></pc-items-table><h2 class="pc-page-header ng-animate-disabled" ng-if="!($ctrl.itemID$|async:this)">{{ ($ctrl.selectionManager.selectedItemIDs$|async:this).length ? \'Multiple\' : \'No\' }} models selected<span class="pc-page-header-sub">Select only one model to see settings and edit it</span></h2><h2 class="pc-page-header ng-animate-disabled" ng-if="$ctrl.itemID$|async:this">{{ $ctrl.itemEditTitle$|async:this }}</h2><model-edit-form model="$ctrl.originalItem$|async:this" models="$ctrl.shortItems$|async:this" caches="$ctrl.shortCaches$|async:this" on-save="$ctrl.save($event)" ng-class="{&quot;pca-form-blocked&quot;: !($ctrl.itemID$|async:this)}" fake-ui-can-exit="base.configuration.edit.advanced.models.model" form-ui-can-exit-guard="form-ui-can-exit-guard"></model-edit-form>'},1244:function(e,t,i){},1246:function(e,t){e.exports='<pc-items-table table-title="::&quot;My caches&quot;" column-defs="$ctrl.cachesColumnDefs" items="$ctrl.shortCaches$|async:this" actions-menu="$ctrl.tableActions$|async:this" selected-row-id="$ctrl.selectionManager.selectedItemIDs$|async:this" one-way-selection="::true" on-selection-change="$ctrl.selectedRows$.next($event)" on-filter-changed="$ctrl.filterChanges$.next($event)" on-visible-rows-change="$ctrl.visibleRows$.next($event)"><footer-slot><div style="font-style: italic" ng-hide="($ctrl.shortCaches$|async:this).length">You have no caches. <a class="link-success" ui-sref="base.configuration.edit.advanced.caches.cache({cacheID: &quot;new&quot;})" ui-sref-opts="{location: &quot;replace&quot;}">Create one?           </a></div><a class="link-success" ui-sref="base.configuration.edit.advanced.caches.cache({cacheID: &quot;new&quot;})" ui-sref-opts="{location: &quot;replace&quot;}" ng-show="($ctrl.shortCaches$|async:this).length">+ Add new cache</a></footer-slot></pc-items-table><h2 class="pc-page-header ng-animate-disabled" ng-if="!($ctrl.isBlocked$|async:this)">{{ ($ctrl.selectionManager.selectedItemIDs$|async:this).length ? \'Multiple\' : \'No\' }} caches selected<span class="pc-page-header-sub">Select only one cache to see settings and edit it</span></h2><h2 class="pc-page-header ng-animate-disabled" ng-if="$ctrl.isBlocked$|async:this">{{ $ctrl.itemEditTitle$|async:this }}</h2><cache-edit-form cache="$ctrl.originalCache$|async:this" caches="$ctrl.shortCaches$|async:this" models="$ctrl.shortModels$|async:this" on-save="$ctrl.save($event)" ng-class="{&quot;pca-form-blocked&quot;: !($ctrl.isBlocked$|async:this)}" fake-ui-can-exit="base.configuration.edit.advanced.caches.cache" form-ui-can-exit-guard="form-ui-can-exit-guard"></cache-edit-form>'},1247:function(e,t,i){"use strict";(function(e){i.d(t,"a",function(){return CacheEditFormController});var o=i(1157),a=i.n(o),n=i(148),r=i.n(n),s=i(1139);i(1158);class CacheEditFormController{constructor(e,t,i,o,n){this.IgniteConfirm=e,this.IgniteVersion=t,this.$scope=i,this.Caches=o,this.IgniteFormUtils=n,this.modelsMenu=void 0,this.onSave=void 0,this.reset=(e=>e?this.clonedCache=a()(this.cache):void 0)}$onInit(){this.available=this.IgniteVersion.available.bind(this.IgniteVersion);const t=()=>{this.$scope.affinityFunction=[{value:"Rendezvous",label:"Rendezvous"},{value:"Custom",label:"Custom"},{value:null,label:"Default"}],this.available(["1.0.0","2.0.0"])&&this.$scope.affinityFunction.splice(1,0,{value:"Fair",label:"Fair"}),this.IgniteVersion.currentSbj.getValue().hiveVersion||"HiveCacheJdbcPojoStoreFactory"!==e.get(this.clonedCache,"cacheStoreFactory.kind")||(this.clonedCache.cacheStoreFactory.kind=null)};t();this.subscription=this.IgniteVersion.currentSbj.pipe(Object(s.a)(t),Object(s.a)(()=>{this.clonedCache&&this.available("2.0.0")&&"Fair"===r()(this.clonedCache,"affinity.kind")&&(this.clonedCache.affinity.kind=null)})).subscribe(),this.$scope.ui=this.IgniteFormUtils.formUI(),this.formActions=[{text:"Save",icon:"checkmark",click:()=>this.save()},{text:"Save and Download",icon:"download",click:()=>this.save(!0)}]}$onDestroy(){this.subscription.unsubscribe()}$onChanges(e){"cache"in e&&r()(this.clonedCache,"id")!==r()(this.cache,"id")&&(this.clonedCache=a()(e.cache.currentValue),this.$scope.ui&&this.$scope.ui.inputForm&&(this.$scope.ui.inputForm.$setPristine(),this.$scope.ui.inputForm.$setUntouched())),"models"in e&&(this.modelsMenu=(e.models.currentValue||[]).map(e=>({value:e.id,label:e.valueType})))}getValuesToCompare(){return[this.cache,this.clonedCache].map(this.Caches.normalize)}save(e){if(this.$scope.ui.inputForm.$invalid)return this.IgniteFormUtils.triggerValidation(this.$scope.ui.inputForm,this.$scope);this.onSave({$event:{cache:a()(this.clonedCache),download:e}})}confirmAndReset(){return this.IgniteConfirm.confirm("Are you sure you want to undo all changes for current cache?").then(this.reset)}clearImplementationVersion(e){delete e.implementationVersion}}CacheEditFormController.$inject=["IgniteConfirm","IgniteVersion","$scope","Caches","IgniteFormUtils"]}).call(this,i(2))},1248:function(e,t,i){e.exports=i.p+"assets/templates/template.tpl.b28ff9953b42645ff63f8738853a3bd6.html"},1249:function(e,t,i){},1251:function(e,t,i){e.exports=i.p+"assets/templates/template.tpl.6a2403f364d4c44b3193b302974f1b16.html"},1252:function(e,t,i){},1254:function(e,t,i){e.exports=i.p+"assets/templates/template.tpl.96099d324c2ce37a209b5caf89b8669a.html"},1255:function(e,t,i){},1257:function(e,t){e.exports='<header class="header-with-selector"><div><h1>Configuration</h1><version-picker></version-picker></div><div><a class="btn-ignite btn-ignite--primary" type="button" ui-sref="^.edit({clusterID: &quot;new&quot;})"><svg class="icon-left" ignite-icon="plus"></svg>Create Cluster Configuration</a><button-import-models cluster-id="::&quot;new&quot;"></button-import-models></div></header><div class="pco-relative-root"><pc-items-table table-title="::&quot;My Cluster Configurations&quot;" column-defs="$ctrl.clustersColumnDefs" items="$ctrl.shortClusters$|async:this" on-action="$ctrl.onClustersAction($event)" max-rows-to-show="10" one-way-selection="::false" selected-row-id="$ctrl.selectedRowsIDs$|async:this" on-selection-change="$ctrl.selectedRows$.next($event)" actions-menu="$ctrl.actions$|async:this"><footer-slot ng-hide="($ctrl.shortClusters$|async:this).length" style="font-style: italic">You have no cluster configurations.<a class="link-success" ui-sref="base.configuration.edit.basic({clusterID: &quot;new&quot;})">Create one?</a></footer-slot></pc-items-table></div>'},1258:function(e,t,i){},1263:function(e,t){e.exports='<div class="modal modal--ignite theme--ignite center modal-preview-project-structure" tabindex="-1" role="dialog"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title"><svg ignite-icon="structure"></svg><span>See Project Structure</span></h4><button class="close" type="button" aria-label="Close" ng-click="$ctrl.onHide()"><svg ignite-icon="cross"></svg></button></div><div class="modal-body" ignite-loading="projectStructurePreview" ignite-loading-text="Generating project structure preview…"><div class="pane-left"><treecontrol tree-model="$ctrl.data" on-selection="$ctrl.showPreview(node)" selected-node="$ctrl.selectedNode" expanded-nodes="$ctrl.expandedNodes" options="$ctrl.treeOptions" order-by="[&quot;file.dir&quot;, &quot;-path&quot;]"><i class="fa fa-file-text-o" ng-if="::!node.file.dir"></i>{{ ::node.path }}</treecontrol></div><div class="pane-right"><div class="file-preview" ignite-ace="{mode: $ctrl.fileExt, readonly: true}" ng-model="$ctrl.fileText"></div></div></div><div class="modal-footer"><div><button class="btn-ignite btn-ignite--success" ng-click="$ctrl.onHide()">Close</button></div></div></div></div></div>'},1264:function(e,t,i){},1266:function(e,t){e.exports='<div class="panel--ignite"><header class="header-with-selector" ng-if="!$ctrl.hideHeader"><div ng-hide="$ctrl.gridAPI.selection.getSelectedCount()"><span>{{ $ctrl.tableTitle }}</span><grid-column-selector grid-api="$ctrl.gridAPI"></grid-column-selector></div><div ng-show="$ctrl.gridAPI.selection.getSelectedCount()"><grid-item-selected grid-api="$ctrl.gridAPI"></grid-item-selected></div><div><div class="dropdown--ignite ignite-form-field"><div class="btn-ignite btn-ignite--primary-outline" ng-disabled="!$ctrl.gridAPI.selection.getSelectedCount()" bs-dropdown="" data-trigger="hover focus" data-placement="bottom-right" data-container="self" tabindex="0" aria-haspopup="true" aria-expanded="false">Actions<span class="icon-right fa fa-caret-down"></span></div><ul class="dropdown-menu" role="menu"><li ng-repeat="item in $ctrl.actionsMenu" ng-if="item.available"><a ng-if="item.click" ng-click="item.click()">{{ item.action }}</a><a ng-if="item.sref" ui-sref="{{:: item.sref}}">{{ item.action }}</a></li></ul></div></div></header><div class="grid ui-grid--ignite" ui-grid="$ctrl.grid" ui-grid-selection="ui-grid-selection" pco-grid-column-categories="pco-grid-column-categories" pc-ui-grid-filters="pc-ui-grid-filters" ui-grid-resize-columns="ui-grid-resize-columns" ui-grid-hovering="ui-grid-hovering"></div><div ng-transclude="footerSlot" ng-hide="$ctrl.showFilterNotification"></div><footer-slot ng-if="$ctrl.showFilterNotification" style="font-style:italic">Nothing to display. Check your filters.</footer-slot></div>'},1267:function(e,t,i){},1269:function(e,t){e.exports='<div class="ui-grid-filter-container pc-ui-grid-filters" role="columnheader" ng-style="col.extraStyle" ng-repeat="colFilter in col.filters" ng-class="{\'ui-grid-filter-cancel-button-hidden\' : colFilter.disableCancelFilterButton === true }" ng-switch="colFilter.type"><div ng-switch-when="select"><button class="btn-ignite btn-ignite--link-dashed-success" ng-class="{\n                \'btn-ignite--link-dashed-success\': colFilter.term.length === colFilter.selectOptions.length,\n                \'btn-ignite--link-dashed-primary\': colFilter.term.length !== colFilter.selectOptions.length\n            }" type="button" title="{{ colFilter.$$multiselectFilterTooltip() }}" ng-model="colFilter.term" bs-select="bs-select" bs-options="option.value as option.label for option in colFilter.selectOptions" data-multiple="true" data-trigger="click" data-placement="bottom-right" protect-from-bs-select-render="protect-from-bs-select-render">{{ col.displayName }}</button></div></div>'},1270:function(e,t,i){},1272:function(e,t,i){e.exports=i.p+"assets/templates/template.tpl.8a67c4df5e791264526360f804939abe.html"},1273:function(e,t,i){},1276:function(e,t){e.exports='<nav><div class="step-indicator__steps"><div class="step-indicator__step" ng-repeat-start="step in ::$ctrl.steps" ng-class="{\n                &quot;step-indicator__step-active&quot;: $ctrl.currentStep === step.value,\n                &quot;step-indicator__step-visited&quot;: $ctrl.isVisited($index),\n                &quot;step-indicator__step-first&quot;: $first,\n                &quot;step-indicator__step-last&quot;: $last\n            }">{{::step.label}}</div><div class="step-indicator__spline" ng-repeat-end="ng-repeat-end" ng-if="!$last"></div></div></nav>'},1277:function(e,t,i){},1279:function(e,t){e.exports='<button class="table-action-cell__edit-button btn-ignite" type="button" b_s-tooltip="" d_ata-title="Click to edit" title="Click to edit" data-placement="top" ng-click="$ctrl.onEditStart({$event: $ctrl.table})" ng-if="!$ctrl.table.edit">{{ $ctrl.tableActionView($ctrl.table) }}</button><div class="table-action-cell__edit-form" ng-if="$ctrl.table.edit"><div class="table-action-cell__action-select"><div class="form-field form-field__dropdown ignite-form-field" id="{{ undefined }}Field"><div class="form-field__control"><select id="{{ undefined }}Input" name="{{ undefined }}" ng-model="$ctrl.table.action" ng-ref="$input" ng-ref-read="ngModel"><option ng-repeat="item in $ctrl.importActions track by item.value" ng-value="item.value" ng-bind="item.shortLabel"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div><div class="table-action-cell__cache-select"><div class="form-field form-field__dropdown ignite-form-field" id="{{ undefined }}Field"><div class="form-field__control"><select id="{{ undefined }}Input" name="{{ undefined }}" ng-model="$ctrl.table.cacheOrTemplate" ng-ref="$input" ng-ref-read="ngModel" ng-change="$ctrl.onCacheSelect({$event: $ctrl.table.cacheOrTemplate})"><option ng-repeat="item in $ctrl.table.cachesOrTemplates track by item.value" ng-value="item.value" ng-bind="item.label"></option></select></div><div class="form-field__errors" ng-messages="$input.$error" ng-show="($input.$dirty || $input.$touched || $input.$submitted) &amp;&amp; $input.$invalid"></div></div></div></div>'},1280:function(e,t,i){},1282:function(e,t){e.exports="{{ $ctrl.selectedAmount || 0}} of {{ $ctrl.totalAmount }} selected"},1283:function(e,t,i){},1285:function(e,t){e.exports='<button class="btn-ignite btn-ignite--primary" ng-click="$ctrl.startImport()" type="button">Import from Database</button>'},1286:function(e,t,i){},1288:function(e,t){e.exports='<button class="btn-ignite btn-ignite--success" type="button" ng-click="$ctrl.download()"><svg class="icon-left" ignite-icon="download"></svg>Download project</button>'},1289:function(e,t){e.exports='<button class="btn-ignite btn-ignite--link-dashed-success" type="button" ng-click="$ctrl.preview()"><svg class="icon-left" ignite-icon="structure"></svg>See project structure</button>'},1290:function(e,t){e.exports='<button class="btn-ignite btn-ignite--success" ng-click="$ctrl.actions[0].click()" type="button"><svg class="icon-left" ignite-icon="{{ ::$ctrl.actions[0].icon }}"></svg>{{ ::$ctrl.actions[0].text }}</button><button class="btn-ignite btn-ignite--success" bs-dropdown="$ctrl.actions" data-placement="top-right" type="button"><span class="icon fa fa-caret-down"></span></button>'},1291:function(e,t){e.exports='<div ng-if="ctrl.data" ignite-ace="{onLoad: onLoad,              onChange: onChange,              renderOptions: renderOptions,              mode: &quot;java&quot;}" ng-model="ctrl.data"></div>'},1292:function(e,t){e.exports='<div ng-if="ctrl.data" ignite-ace="{onLoad: onLoad, onChange: onChange, mode: &quot;xml&quot;}" ng-model="ctrl.data"></div>'},1297:function(e,t,i){"use strict";i.r(t);var o=i(1186),a=i.n(o),n=i(200),r=i(287),s=i(201),l=i(1294),c=i(1139),d=i(1163),u=i(1159),p=i(1201),g=i(1160),m=i(2),h=i.n(m);const v=e=>h.a.capitalize(e),f={cacheMode:{clsName:"Apache.Ignite.Core.Cache.Configuration.CacheMode",mapper:v},atomicityMode:{clsName:"Apache.Ignite.Core.Cache.Configuration.CacheAtomicityMode",mapper:v},memoryMode:{clsName:"Apache.Ignite.Core.Cache.Configuration.CacheMemoryMode",value:"ONHEAP_TIERED",mapper:v},atomicWriteOrderMode:{clsName:"org.apache.ignite.cache.CacheAtomicWriteOrderMode",mapper:v},writeSynchronizationMode:{clsName:"org.apache.ignite.cache.CacheWriteSynchronizationMode",value:"PRIMARY_SYNC",mapper:v},rebalanceMode:{clsName:"org.apache.ignite.cache.CacheRebalanceMode",value:"ASYNC",mapper:v}};var y=i(1164),b=i(1165),C=i(29),S=i(1161);function service(e,t,i){return class PlatformGenerator{static igniteConfigurationBean(e){return new S.a("Apache.Ignite.Core.IgniteConfiguration","cfg",e,t)}static cacheConfigurationBean(e){return new S.a("Apache.Ignite.Core.Cache.Configuration.CacheConfiguration","ccfg",e,i)}static igniteConfiguration(e){const t=this.igniteConfigurationBean(e);return this.clusterAtomics(e.atomics,t),t}static clusterGeneral(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);if(i.stringProperty("name","GridName").stringProperty("localHost","Localhost"),h.a.isNil(e.discovery))return i;const o=new S.a("Apache.Ignite.Core.Discovery.Tcp.TcpDiscoverySpi","discovery",e.discovery,t.discovery);let a;switch(o.valueOf("kind")){case"Vm":(a=new S.a("Apache.Ignite.Core.Discovery.Tcp.Static.TcpDiscoveryStaticIpFinder","ipFinder",e.discovery.Vm,t.discovery.Vm)).collectionProperty("addrs","addresses",e.discovery.Vm.addresses,"ICollection");break;case"Multicast":(a=new S.a("Apache.Ignite.Core.Discovery.Tcp.Multicast.TcpDiscoveryMulticastIpFinder","ipFinder",e.discovery.Multicast,t.discovery.Multicast)).stringProperty("MulticastGroup").intProperty("multicastPort","MulticastPort").intProperty("responseWaitTime","ResponseTimeout").intProperty("addressRequestAttempts","AddressRequestAttempts").stringProperty("localAddress","LocalAddress").collectionProperty("addrs","Endpoints",e.discovery.Multicast.addresses,"ICollection")}return a&&o.beanProperty("IpFinder",a),i.beanProperty("DiscoverySpi",o),i}static clusterAtomics(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const o=new S.a("Apache.Ignite.Core.DataStructures.Configuration.AtomicConfiguration","atomicCfg",e,t.atomics);return o.enumProperty("cacheMode","CacheMode").intProperty("atomicSequenceReserveSize","AtomicSequenceReserveSize"),"PARTITIONED"===o.valueOf("cacheMode")&&o.intProperty("backups","Backups"),o.isEmpty()?i:(i.beanProperty("AtomicConfiguration",o),i)}static clusterBinary(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();return new S.a("Apache.Ignite.Core.Binary.BinaryConfiguration","binaryCfg",e,t.binary).emptyBeanProperty("idMapper","DefaultIdMapper").emptyBeanProperty("nameMapper","DefaultNameMapper").emptyBeanProperty("serializer","DefaultSerializer"),i}static clusterCommunication(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);const o=new S.a("Apache.Ignite.Core.Communication.Tcp.TcpCommunicationSpi","communicationSpi",e.communication,t.communication);return o.emptyBeanProperty("listener").stringProperty("localAddress").intProperty("localPort").intProperty("localPortRange").intProperty("directBuffer").intProperty("directSendBuffer").intProperty("idleConnectionTimeout").intProperty("connectTimeout").intProperty("maxConnectTimeout").intProperty("reconnectCount").intProperty("socketSendBuffer").intProperty("socketReceiveBuffer").intProperty("messageQueueLimit").intProperty("slowClientQueueLimit").intProperty("tcpNoDelay").intProperty("ackSendThreshold").intProperty("unacknowledgedMessagesBufferSize").intProperty("selectorsCount"),o.nonEmpty()&&i.beanProperty("CommunicationSpi",o),i.intProperty("networkTimeout","NetworkTimeout").intProperty("networkSendRetryDelay").intProperty("networkSendRetryCount"),i}static clusterDiscovery(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();if(e){let o=i.findProperty("discovery");h.a.isNil(o)&&(o=new S.a("Apache.Ignite.Core.Discovery.Tcp.TcpDiscoverySpi","discovery",e,t.discovery)),o.stringProperty("localAddress").intProperty("localPort").intProperty("localPortRange").intProperty("socketTimeout").intProperty("ackTimeout").intProperty("maxAckTimeout").intProperty("networkTimeout").intProperty("joinTimeout").intProperty("threadPriority").intProperty("heartbeatFrequency").intProperty("maxMissedHeartbeats").intProperty("maxMissedClientHeartbeats").intProperty("topHistorySize").intProperty("reconnectCount").intProperty("statisticsPrintFrequency").intProperty("ipFinderCleanFrequency").intProperty("forceServerMode").intProperty("clientReconnectDisabled"),o.nonEmpty()&&i.beanProperty("discoverySpi",o)}return i}static clusterEvents(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);return Object(C.a)(e.includeEventTypes)&&t.eventTypes("events","includeEventTypes",e.includeEventTypes),t}static clusterMetrics(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);return t.intProperty("metricsExpireTime").intProperty("metricsHistorySize").intProperty("metricsLogFrequency").intProperty("metricsUpdateFrequency"),t}static clusterTransactions(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean();const o=new S.a("Apache.Ignite.Core.Transactions.TransactionConfiguration","TransactionConfiguration",e,t.transactionConfiguration);return o.enumProperty("defaultTxConcurrency","DefaultTransactionConcurrency").enumProperty("defaultTxIsolation","DefaultTransactionIsolation").intProperty("defaultTxTimeout","DefaultTimeout").intProperty("pessimisticTxLogLinger","PessimisticTransactionLogLinger").intProperty("pessimisticTxLogSize","PessimisticTransactionLogSize"),o.nonEmpty()&&i.beanProperty("transactionConfiguration",o),i}static clusterUserAttributes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.igniteConfigurationBean(e);return t.mapProperty("attributes","attributes","UserAttributes"),t}static clusterCaches(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.igniteConfigurationBean(e);return this.clusterGeneral(e,o)}static cacheGeneral(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return t.stringProperty("name").enumProperty("cacheMode").enumProperty("atomicityMode"),"PARTITIONED"===t.valueOf("cacheMode")&&t.valueOf("backups")&&t.intProperty("backups").intProperty("readFromBackup"),t.intProperty("copyOnRead"),"PARTITIONED"===t.valueOf("cacheMode")&&"TRANSACTIONAL"===t.valueOf("atomicityMode")&&t.intProperty("isInvalidate","invalidate"),t}static cacheMemory(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);return i.enumProperty("memoryMode"),"OFFHEAP_VALUES"!==i.valueOf("memoryMode")&&i.intProperty("offHeapMaxMemory"),i.intProperty("startSize").boolProperty("swapEnabled","EnableSwap"),i}static cacheQuery(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(e);return i.intProperty("sqlOnheapRowCacheSize").intProperty("longQueryWarningTimeout"),i}static cacheStore(t,i){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.cacheConfigurationBean(t);const a=h.a.get(t,"cacheStoreFactory.kind");if(a&&t.cacheStoreFactory[a]){let n=null;const r=t.cacheStoreFactory[a];switch(a){case"CacheJdbcPojoStoreFactory":const s=(n=new S.a("org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory","cacheStoreFactory",r)).valueOf("dataSourceBean");n.dataSource(s,"dataSourceBean",this.dataSourceBean(s,r.dialect)).beanProperty("dialect",new S.b(this.dialectClsName(r.dialect)));const l=(t,i)=>{e.nonBuiltInClass(t.valueOf(i))?t.stringProperty(i):t.classProperty(i)},c=h.a.reduce(i,(e,i)=>{if(h.a.isNil(i.databaseTable))return e;const o=new S.a("org.apache.ignite.cache.store.jdbc.JdbcType","type",h.a.merge({},i,{cacheName:t.name})).stringProperty("cacheName");return l(o,"keyType"),l(o,"valueType"),this.domainStore(i,o),e.push(o),e},[]);n.arrayProperty("types","types",c,"org.apache.ignite.cache.store.jdbc.JdbcType");break;case"CacheJdbcBlobStoreFactory":"DataSource"===(n=new S.a("org.apache.ignite.cache.store.jdbc.CacheJdbcBlobStoreFactory","cacheStoreFactory",r)).valueOf("connectVia")?n.dataSource(n.valueOf("dataSourceBean"),"dataSourceBean",this.dialectClsName(r.dialect)):o.stringProperty("connectionUrl").stringProperty("user").property("password","ds.".concat(r.user,".password"),"YOUR_PASSWORD"),n.boolProperty("initSchema").stringProperty("createTableQuery").stringProperty("loadQuery").stringProperty("insertQuery").stringProperty("updateQuery").stringProperty("deleteQuery");break;case"CacheHibernateBlobStoreFactory":(n=new S.a("org.apache.ignite.cache.store.hibernate.CacheHibernateBlobStoreFactory","cacheStoreFactory",r)).propsProperty("props","hibernateProperties")}n&&o.beanProperty("cacheStoreFactory",n)}return o.boolProperty("storeKeepBinary").boolProperty("loadPreviousValue").boolProperty("readThrough").boolProperty("writeThrough"),o.valueOf("writeBehindEnabled")&&o.boolProperty("writeBehindEnabled").intProperty("writeBehindBatchSize").intProperty("writeBehindFlushSize").intProperty("writeBehindFlushFrequency").intProperty("writeBehindFlushThreadCount"),o}static cacheConcurrency(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return t.intProperty("maxConcurrentAsyncOperations").intProperty("defaultLockTimeout").enumProperty("atomicWriteOrderMode").enumProperty("writeSynchronizationMode"),t}static cacheNodeFilter(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);const i=h.a.get(e,"nodeFilter.kind");if(i&&e.nodeFilter[i]){let o=null;switch(i){case"Custom":o=new S.a(e.nodeFilter.Custom.className,"nodeFilter");break;default:return t}o&&t.beanProperty("nodeFilter",o)}return t}static cacheRebalance(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return"LOCAL"!==t.valueOf("cacheMode")&&t.enumProperty("rebalanceMode").intProperty("rebalanceThreadPoolSize").intProperty("rebalanceBatchSize").intProperty("rebalanceBatchesPrefetchCount").intProperty("rebalanceOrder").intProperty("rebalanceDelay").intProperty("rebalanceTimeout").intProperty("rebalanceThrottle"),t}static cacheServerNearCache(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);if("PARTITIONED"===e.cacheMode&&e.nearCacheEnabled){const o=new S.a("org.apache.ignite.configuration.NearCacheConfiguration","nearConfiguration",e.nearConfiguration,{nearStartSize:375e3});o.intProperty("nearStartSize"),this._evictionPolicy(o,!0,o.valueOf("nearEvictionPolicy"),i.evictionPolicy),t.beanProperty("nearConfiguration",o)}return t}static cacheStatistics(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return t.boolProperty("statisticsEnabled").boolProperty("managementEnabled"),t}static cacheConfiguration(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.cacheConfigurationBean(e);return this.cacheGeneral(e,t),this.cacheMemory(e,t),this.cacheQuery(e,e.domains,t),this.cacheStore(e,e.domains,t),this.cacheNodeFilter(e,t),this.cacheConcurrency(e,t),this.cacheRebalance(e,t),this.cacheServerNearCache(e,t),this.cacheStatistics(e,t),t}}}service.$inject=["JavaTypes","igniteClusterPlatformDefaults","igniteCachePlatformDefaults"];var q=i(1168),P=i(1156),_=i(220);const E=new _.a;class SpringTransformer_service_IgniteSpringTransformer extends q.a{static escapeXml(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&apos;").replace(/>/g,"&gt;").replace(/</g,"&lt;")}static commentBlock(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];i.length>1?(e.append("\x3c!--"),h.a.forEach(i,t=>e.append("  ".concat(t))),e.append("--\x3e")):e.append("\x3c!-- ".concat(h.a.head(i)," --\x3e"))}static appendBean(e,t,i){const o=[];i&&o.push('id="'.concat(t.id,'"')),o.push('class="'.concat(t.clsName,'"')),t.factoryMtd&&o.push('factory-method="'.concat(t.factoryMtd,'"')),e.startBlock("<bean ".concat(o.join(" "),">")),h.a.forEach(t.arguments,t=>{"MAP"===t.clsName?(e.startBlock("<constructor-arg>"),this._constructMap(e,t),e.endBlock("</constructor-arg>")):h.a.isNil(t.value)?(e.startBlock("<constructor-arg>"),e.append("<null/>"),e.endBlock("</constructor-arg>")):t.constant?(e.startBlock("<constructor-arg>"),e.append('<util:constant static-field="'.concat(t.clsName,".").concat(t.value,'"/>')),e.endBlock("</constructor-arg>")):"BEAN"===t.clsName?(e.startBlock("<constructor-arg>"),this.appendBean(e,t.value),e.endBlock("</constructor-arg>")):e.append('<constructor-arg value="'.concat(this._toObject(t.clsName,t.value),'"/>'))}),this._setProperties(e,t),e.endBlock("</bean>")}static _toObject(e,t){const i=h.a.isArray(t)?t:[t];return"EVENTS"===e?["<list>",...h.a.map(i,e=>'    <util:constant static-field="'.concat(e.class,".").concat(e.label,'"/>')),"</list>"]:h.a.map(i,t=>{switch(e){case"PROPERTY":case"PROPERTY_CHAR":case"PROPERTY_INT":return"${".concat(t,"}");case"java.lang.Class":return this.javaTypes.fullClassName(t);case"long":return"".concat(t);case"java.lang.String":case"PATH":case"PATH_ARRAY":return this.escapeXml(t);default:return t}})}static _isBean(e){return this.javaTypes.nonBuiltInClass(e)&&this.javaTypesNonEnum.nonEnum(e)&&h.a.includes(e,".")}static _setCollection(e,t){e.startBlock('<property name="'.concat(t.name,'">')),this._toCollection(e,t.items,t.typeClsName),e.endBlock("</property>")}static _toCollection(e,t,i){e.startBlock("<list>"),h.a.forEach(t,(t,o)=>{this._isBean(i)?(0!==o&&e.emptyLine(),this.appendBean(e,t)):e.append("<value>".concat(t,"</value>"))}),e.endBlock("</list>")}static _constructMap(e,t){e.startBlock("<map>"),h.a.forEach(t.entries,i=>{const o=i[t.keyField],a=i[t.valField],n=o instanceof S.a||this._isBean(t.keyClsName),r=h.a.isArray(a),s=a instanceof S.a||this._isBean(t.valClsName);n||s?(e.startBlock("<entry>"),e.startBlock("<key>"),n?this.appendBean(e,o):(e.startBlock("<value>"),e.append(this._toObject(t.keyClsName,o)),e.endBlock("</value>")),e.endBlock("</key>"),r&&"java.util.Collection"===t.valClsName?this._toCollection(e,a,t.keyClsGenericType):s?this.appendBean(e,a):(e.startBlock("<value>"),e.append(this._toObject(t.valClsNameShow||t.valClsName,a)),e.endBlock("</value>")),e.endBlock("</entry>")):e.append('<entry key="'.concat(this._toObject(t.keyClsName,o),'" value="').concat(this._toObject(t.valClsName,a),'"/>'))}),e.endBlock("</map>")}static _setProperties(e,t){return h.a.forEach(t.properties,(i,o)=>{switch(i.clsName){case"DATA_SOURCE":const t="dataSource"===i.name?"ref":"value";e.append('<property name="'.concat(i.name,'" ').concat(t,'="').concat(i.id,'"/>'));break;case"EVENT_TYPES":if(e.startBlock('<property name="'.concat(i.name,'">')),1===i.eventTypes.length){const t=h.a.head(i.eventTypes);e.append('<util:constant static-field="'.concat(t.class,".").concat(t.label,'"/>'))}else e.startBlock("<list>"),h.a.forEach(i.eventTypes,(t,i)=>{i>0&&e.emptyLine(),e.append("\x3c!-- EventType.".concat(t.label," --\x3e")),h.a.forEach(t.events,i=>e.append('<util:constant static-field="'.concat(t.class,".").concat(i,'"/>')))}),e.endBlock("</list>");e.endBlock("</property>");break;case"ARRAY":case"PATH_ARRAY":case"COLLECTION":case"ENUM_COLLECTION":this._setCollection(e,i);break;case"MAP":e.startBlock('<property name="'.concat(i.name,'">')),this._constructMap(e,i),e.endBlock("</property>");break;case"java.util.Properties":e.startBlock('<property name="'.concat(i.name,'">')),e.startBlock("<props>"),h.a.forEach(i.entries,t=>{e.append('<prop key="'.concat(t.name,'">').concat(t.value,"</prop>"))}),e.endBlock("</props>"),e.endBlock("</property>");break;case"BEAN":e.startBlock('<property name="'.concat(i.name,'">')),this.appendBean(e,i.value),e.endBlock("</property>");break;default:e.append('<property name="'.concat(i.name,'" value="').concat(this._toObject(i.clsName,i.value),'"/>'))}this._emptyLineIfNeeded(e,t.properties,o)}),e}static igniteConfiguration(e,t,i){const o=E.since.bind(E,t.ignite),a=new P.a;a.append('<?xml version="1.0" encoding="UTF-8"?>'),a.emptyLine(),this.mainComment(a),a.emptyLine(),a.startBlock(['<beans xmlns="http://www.springframework.org/schema/beans"','       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"','       xmlns:util="http://www.springframework.org/schema/util"','       xsi:schemaLocation="http://www.springframework.org/schema/beans',"                           http://www.springframework.org/schema/beans/spring-beans.xsd","                           http://www.springframework.org/schema/util",'                           http://www.springframework.org/schema/util/spring-util.xsd">']),this.hasProperties(e)&&(this.commentBlock(a,"Load external properties file."),a.startBlock('<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">'),a.append('<property name="location" value="classpath:secret.properties"/>'),a.endBlock("</bean>"),a.emptyLine());const n=this.collectDataSources(e);return n.length&&(this.commentBlock(a,"Data source beans will be initialized from external properties file."),h.a.forEach(n,e=>{this.appendBean(a,e,!0),a.emptyLine()})),h.a.forEach(i,e=>{this.commentBlock(a,'Configuration of near cache for cache "'.concat(e.name,'"')),this.appendBean(a,this.generator.cacheNearClient(e,o),!0),a.emptyLine()}),this.appendBean(a,e),a.endBlock("</beans>"),a}static cluster(e,t,i){const o=this.generator.igniteConfiguration(e,t,i),a=i?h.a.filter(e.caches,e=>"PARTITIONED"===e.cacheMode&&h.a.get(e,"clientNearConfiguration.enabled")):[];return this.igniteConfiguration(o,t,a)}}var w=i(1204),T=i(291);const $=new b.a,I=new u.a,O=new g.a,A=new T.a,k=new d.a(I,O,A);class SharpTransformer_service_SharpTransformer extends q.a{static commentBlock(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];h.a.forEach(i,t=>e.append("// ".concat(t)))}static doc(e){e.append("/// <summary>");for(var t=arguments.length,i=new Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];h.a.forEach(i,t=>e.append("/// ".concat(t))),e.append("/// </summary>")}static mainComment(e){return this.doc(e,e.generatedBy())}static _defineBean(e,t){const i=A.shortClassName(t.clsName);e.append("var ".concat(t.id," = new ").concat(i,"();"))}static _setProperty(e,t,i,o){e.append("".concat(t.id,".").concat(h.a.upperFirst(i)," = ").concat(o,";"))}static _setBeanProperty(e,t,i,o){e.append("".concat(t.id,".").concat(h.a.upperFirst(i)," = ").concat(o.id,";"))}static _toObject(e,t){const i=h.a.isArray(t)?t:[t];return h.a.map(i,(t,o)=>{if(h.a.isNil(t))return"null";const a=A.shortClassName(e);switch(a){case"String":return i.length>1?'"'.concat(t,'"').concat(o!==i.length-1?" +":""):'"'.concat(t,'"');default:return k.nonEnum(a)?t:"".concat(a,".").concat(t)}})}static _setProperties(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new P.a,t=arguments.length>1?arguments[1]:void 0;return h.a.forEach(t.properties,i=>{switch(i.clsName){case"ICollection":const o=A.shortClassName(i.typeClsName);if("String"===o){const a=this._toObject(o,i.items);e.append("".concat(t.id,".").concat(h.a.upperFirst(i.name)," = new {").concat(a.join(", "),"};"))}break;case"Bean":const a=i.value;this._defineBean(e,a),e.emptyLine(),this._setProperties(e,a),e.emptyLine(),this._setBeanProperty(e,t,i.name,a);break;default:this._setProperty(e,t,i.name,this._toObject(i.clsName,i.value))}}),e}static toClassFile(e,t,i){const o=new P.a;return o.startBlock("namespace ".concat(t),"{"),h.a.forEach(h.a.sortBy(e.collectClasses()),e=>o.append("using ".concat(e,";"))),o.emptyLine(),this.mainComment(o),o.startBlock("public class ".concat(i),"{"),this.doc(o,"Configure grid."),o.startBlock("public static IgniteConfiguration CreateConfiguration()","{"),this._defineBean(o,e),o.emptyLine(),this._setProperties(o,e),o.emptyLine(),o.append("return ".concat(e.id,";")),o.endBlock("}"),o.endBlock("}"),o.endBlock("}"),o.asString()}static generateSection(e){const t=new P.a;return this._setProperties(t,e),t.asString()}}SharpTransformer_service_SharpTransformer.generator=$;var D,j,N,M,R,B=i(1205),x=i(1167),L=i(148),F=i.n(L);function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}const U=new _.a,V="2.1.0";var z=i(1166);const H=new _.a;var K=i(1206);var J=angular.module("ignite-console.configuration.generator",[]).service("JavaTypesNonEnum",d.a).service("IgniteConfigurationGenerator",function(){return b.a}).service("IgnitePlatformGenerator",service).service("SpringTransformer",function(){return SpringTransformer_service_IgniteSpringTransformer}).service("JavaTransformer",function(){return w.a}).service("IgniteSharpTransformer",SharpTransformer_service_SharpTransformer).service("IgniteEventGroups",y.a).service("IgniteClusterDefaults",u.a).service("IgniteClusterPlatformDefaults",p.a).service("IgniteCacheDefaults",g.a).service("IgniteCachePlatformDefaults",class IgniteCachePlatformDefaults{constructor(){Object.assign(this,f)}}).service("IgnitePropertiesGenerator",K.a).service("IgniteReadmeGenerator",class Readme_service_IgniteReadmeGenerator{header(e){e.append("Content of this folder was generated by Apache Ignite Web Console"),e.append("=================================================================")}generateJDBC(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new P.a;return e.append("Proprietary JDBC drivers for databases like Oracle, IBM DB2 Server are not available on Maven Central repository."),e.append("Drivers should be downloaded manually and copied to this folder."),e.asString()}generate(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new P.a;return this.header(e),e.emptyLine(),e.append("Project structure:"),e.append("    /jdbc-drivers - this folder should contains proprietary JDBC drivers."),e.append("    /src - this folder contains generated java code."),e.append("    /src/main/java/config - this folder contains generated java classes with cluster configuration from code."),e.append("    /src/main/java/startup - this folder contains generated java classes with server and client nodes startup code."),e.append("    /src/main/java/[model] - this optional folder will be named as package name for your POJO classes and contain generated POJO files."),e.append("    /src/main/resources - this folder contains generated configurations in XML format and secret.properties file with security sensitive information if any."),e.append("    Dockerfile - sample Docker file. With this file you could package Ignite deployment with all the dependencies into a standard container."),e.append("    pom.xml - generated Maven project description, could be used to open generated project in IDE or build with Maven."),e.append("    README.txt - this file."),e.emptyLine(),e.append("Ignite ships with CacheJdbcPojoStore, which is out-of-the-box JDBC implementation of the IgniteCacheStore "),e.append("interface, and automatically handles all the write-through and read-through logic."),e.emptyLine(),e.append("You can use generated configuration and POJO classes as part of your application."),e.emptyLine(),e.append("Note, in case of using proprietary JDBC drivers (Oracle, IBM DB2)"),e.append("you should download them manually and copy into ./jdbc-drivers folder."),e.asString()}}).service("IgniteDockerGenerator",class Docker_service_IgniteDockerGenerator{constructor(){this.escapeFileName=(e=>e.replace(/[\\\/*\"\[\],\.:;|=<>?]/g,"-").replace(/ /g,"_"))}from(e,t){return Object(B.outdent)(D||(D=_taggedTemplateLiteral(["\n            # Start from Apache Ignite image.',\n            FROM apacheignite/ignite:","\n        "])),t.ignite)}generate(e,t){return Object(B.outdent)(j||(j=_taggedTemplateLiteral(["\n            ","\n\n            # Set config uri for node.\n            ENV CONFIG_URI ","-server.xml\n\n            # Copy optional libs.\n            ENV OPTION_LIBS ","\n\n            # Update packages and install maven.\n            ","\n            \n            # Append project to container.\n            ADD . ","\n\n            # Build project in container.\n            RUN mvn -f ","/pom.xml clean package -DskipTests\n\n            # Copy project jars to node classpath.\n            RUN mkdir $IGNITE_HOME/libs/"," && \\\n               find ",'/target -name "*.jar" -type f -exec cp {} $IGNITE_HOME/libs/'," \\;\n        "],["\n            ","\n\n            # Set config uri for node.\n            ENV CONFIG_URI ","-server.xml\n\n            # Copy optional libs.\n            ENV OPTION_LIBS ","\n\n            # Update packages and install maven.\n            ","\n            \n            # Append project to container.\n            ADD . ","\n\n            # Build project in container.\n            RUN mvn -f ","/pom.xml clean package -DskipTests\n\n            # Copy project jars to node classpath.\n            RUN mkdir $IGNITE_HOME/libs/"," && \\\\\n               find ",'/target -name "*.jar" -type f -exec cp {} $IGNITE_HOME/libs/'," \\\\;\n        "])),this.from(e,t),this.escapeFileName(e.name),this.optionLibs(e,t).join(","),this.packages(e,t),e.name,e.name,e.name,e.name,e.name)}optionLibs(e,t){return["ignite-rest-http",F()(x,[F()(e,"discovery.kind"),"artifactId"])].filter(Boolean)}packages(e,t){return U.since(t.ignite,V)?Object(B.outdent)(N||(N=_taggedTemplateLiteral(["\n                RUN set -x \\\n                    && apk add --no-cache \\\n                        openjdk8\n\n                RUN apk --update add \\\n                    maven \\\n                    && rm -rfv /var/cache/apk/*\n            "],["\n                RUN set -x \\\\\n                    && apk add --no-cache \\\\\n                        openjdk8\n\n                RUN apk --update add \\\\\n                    maven \\\\\n                    && rm -rfv /var/cache/apk/*\n            "]))):Object(B.outdent)(M||(M=_taggedTemplateLiteral(["\n                RUN \\\n                   apt-get update &&\\\n                   apt-get install -y maven\n            "],["\n                RUN \\\\\n                   apt-get update &&\\\\\n                   apt-get install -y maven\n            "])))}ignoreFile(){return Object(B.outdent)(R||(R=_taggedTemplateLiteral(["\n            target\n            Dockerfile\n        "])))}}).service("IgniteMavenGenerator",class Maven_service_IgniteMavenGenerator{escapeId(e){return"string"!=typeof e?e:e.replace(/[^A-Za-z0-9_\-.]+/g,"_")}addProperty(e,t,i){e.append("<".concat(t,">").concat(i,"</").concat(t,">"))}addComment(e,t){e.append("\x3c!-- ".concat(t," --\x3e"))}addDependency(e,t,i,o,a,n,r){e.push({groupId:t,artifactId:i,version:o,jar:a,link:n,exclude:r})}_extractVersion(e,t){return h.a.isArray(t)?h.a.find(t,t=>H.since(e,t.range)).version:t}pickDependency(e,t,i,o,a,n){const r=x[t];h.a.isNil(r)||h.a.forEach(h.a.castArray(r),t=>{let{groupId:r,artifactId:s,version:l,jar:c,link:d,exclude:u}=t;this.addDependency(e,r||i,s,n||this._extractVersion(a,l)||o,c,d,u)})}addResource(e,t,i){e.startBlock("<resource>"),this.addProperty(e,"directory",t),i&&(e.startBlock("<excludes>"),this.addProperty(e,"exclude",i),e.endBlock("</excludes>")),e.endBlock("</resource>")}artifactSection(e,t,i,o){this.addProperty(e,"groupId",t),this.addProperty(e,"artifactId",this.escapeId(i.name)+"-project"),this.addProperty(e,"version",o.ignite)}dependenciesSection(e,t){return e.startBlock("<dependencies>"),h.a.forEach(t,t=>{e.startBlock("<dependency>"),this.addProperty(e,"groupId",t.groupId),this.addProperty(e,"artifactId",t.artifactId),this.addProperty(e,"version",t.version),t.jar&&(this.addProperty(e,"scope","system"),this.addProperty(e,"systemPath","${project.basedir}/jdbc-drivers/"+t.jar)),t.link&&this.addComment(e,"You may download JDBC driver from: ".concat(t.link)),t.exclude&&(e.startBlock("<exclusions>"),h.a.forEach(t.exclude,t=>{e.startBlock("<exclusion>"),this.addProperty(e,"groupId",t.groupId),this.addProperty(e,"artifactId",t.artifactId),e.endBlock("</exclusion>")}),e.endBlock("</exclusions>")),e.endBlock("</dependency>")}),e.endBlock("</dependencies>"),e}buildSection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new P.a,t=arguments.length>1?arguments[1]:void 0;e.startBlock("<build>"),e.startBlock("<resources>"),this.addResource(e,"src/main/java","**/*.java"),this.addResource(e,"src/main/resources"),e.endBlock("</resources>"),e.startBlock("<plugins>"),e.startBlock("<plugin>"),this.addProperty(e,"artifactId","maven-dependency-plugin"),e.startBlock("<executions>"),e.startBlock("<execution>"),this.addProperty(e,"id","copy-libs"),this.addProperty(e,"phase","test-compile"),e.startBlock("<goals>"),this.addProperty(e,"goal","copy-dependencies"),e.endBlock("</goals>"),e.startBlock("<configuration>"),this.addProperty(e,"excludeGroupIds",t.join(",")),this.addProperty(e,"outputDirectory","target/libs"),this.addProperty(e,"includeScope","compile"),this.addProperty(e,"excludeTransitive","true"),e.endBlock("</configuration>"),e.endBlock("</execution>"),e.endBlock("</executions>"),e.endBlock("</plugin>"),e.startBlock("<plugin>"),this.addProperty(e,"artifactId","maven-compiler-plugin"),this.addProperty(e,"version","3.1"),e.startBlock("<configuration>"),this.addProperty(e,"source","1.7"),this.addProperty(e,"target","1.7"),e.endBlock("</configuration>"),e.endBlock("</plugin>"),e.endBlock("</plugins>"),e.endBlock("</build>")}storeFactoryDependency(e,t,i,o){!i.dialect||i.connectVia&&"DataSource"!==i.connectVia||this.pickDependency(t,i.dialect,e,null,o,i.implementationVersion)}collectDependencies(e,t,i){const o=i.ignite,a=[],n=[];this.addDependency(a,e,"ignite-core",o),this.addDependency(a,e,"ignite-spring",o),this.addDependency(a,e,"ignite-indexing",o),this.addDependency(a,e,"ignite-rest-http",o),"URI"===h.a.get(t,"deploymentSpi.kind")&&this.addDependency(a,e,"ignite-urideploy",o),this.pickDependency(a,t.discovery.kind,e,o);const r=t.caches;if(h.a.forEach(r,t=>{t.cacheStoreFactory&&t.cacheStoreFactory.kind&&this.storeFactoryDependency(e,n,t.cacheStoreFactory[t.cacheStoreFactory.kind],o),"Exclude"===h.a.get(t,"nodeFilter.kind")&&this.addDependency(a,e,"ignite-extdata-p2p",o),t.diskPageCompression&&H.since(o,"2.8.0")&&this.addDependency(a,e,"ignite-compress",o)}),"Jdbc"===t.discovery.kind){const i=t.discovery.Jdbc;i.dataSourceBean&&i.dialect&&this.storeFactoryDependency(e,n,t.discovery.Jdbc,o)}return h.a.forEach(t.checkpointSpi,t=>{"S3"===t.kind?this.pickDependency(a,t.kind,e,o):"JDBC"===t.kind&&this.storeFactoryDependency(e,n,t.JDBC,o)}),h.a.find(r,{cacheStoreFactory:{kind:"CacheHibernateBlobStoreFactory"}})&&this.addDependency(a,e,"ignite-hibernate",o),t.logger&&t.logger.kind&&this.pickDependency(a,t.logger.kind,e,o),h.a.uniqWith(a.concat(z.a.latestVersions(n)),h.a.isEqual)}generate(e,t){const i=new P.a,o=H.since(t.ignite,"8.7.3")?"org.gridgain":"org.apache.ignite";i.append('<?xml version="1.0" encoding="UTF-8"?>'),i.emptyLine(),i.append("\x3c!-- ".concat(i.generatedBy()," --\x3e")),i.emptyLine(),i.startBlock('<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">'),i.append("<modelVersion>4.0.0</modelVersion>"),i.emptyLine(),this.artifactSection(i,o,e,t),i.emptyLine();const a=this.collectDependencies(o,e,t);return this.dependenciesSection(i,a),i.emptyLine(),this.buildSection(i,[o]),i.endBlock("</project>"),i.asString()}}).service("IgniteCustomGenerator",class IgniteCustomGenerator{optionalContent(e,t){}}).service("IgniteArtifactVersionUtils",z.a),G=i(69),W=i(1134);var Y=i(1157),Q=i.n(Y),Z=i(1135),X=i(1155),ee=i(283),te=i(1148),ie=i(1138),oe=i(60),ae=i(51),ne=i(203),re=i(84),se=i(1145),le=i(1146),ce=i(1150),de=i(1298),ue=i(1295),pe=i(649),ge=i.n(pe);const me=function uniqueName(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e=>{let{name:t,i:i}=e;return"".concat(t).concat(i)},o=0,a=e;const n=e=>e.name===a;for(;t.some(n);)a=i({name:e,i:o+=1});return a},he={cluster:"Cluster",cache:"Cache",importedCluster:"ImportedCluster"};var ve=i(381),fe=i.n(ve),ye=i(1207),be=i.n(ye);const Ce="CONFIRM_CLUSTERS_REMOVAL",Se="CONFIRM_CLUSTERS_REMOVAL_OK",qe="REMOVE_CLUSTER_ITEMS",Pe="REMOVE_CLUSTER_ITEMS_CONFIRMED",_e="ADVANCED_SAVE_COMPLETE_CONFIGURATION",Ee="ADVANCED_SAVE_COMPLETE_CONFIGURATION_OK",we="ADVANCED_SAVE_COMPLETE_CONFIGURATION_ERR",Te="COMPLETE_CONFIGURATION",$e="ADVANCED_SAVE_CLUSTER",Ie="ADVANCED_SAVE_CACHE",Oe="ADVANCED_SAVE_MODEL",Ae="BASIC_SAVE",ke="BASIC_SAVE_AND_DOWNLOAD",De="BASIC_SAVE_OK";function ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(i),!0).forEach(function(t){_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}Symbol("LOAD_LIST"),Symbol("ADD_CLUSTER"),Symbol("ADD_CLUSTERS"),Symbol("REMOVE_CLUSTERS"),Symbol("UPDATE_CLUSTER"),Symbol("UPSERT_CLUSTERS"),Symbol("ADD_CACHE"),Symbol("UPDATE_CACHE"),Symbol("UPSERT_CACHES"),Symbol("REMOVE_CACHE"),new Map,new Map,new Map;const je=Symbol("RECEIVE_CLUSTER_EDIT"),Ne=Symbol("RECEIVE_CACHE_EDIT"),Me=Symbol("RECEIVE_MODELS_EDIT"),Re=Symbol("RECEIVE_MODEL_EDIT"),Be=Symbol("SHOW_CONFIG_LOADING"),xe=Symbol("HIDE_CONFIG_LOADING"),Le={isLoading:!1,loadingText:"Loading..."},Fe=e=>(function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(i.type){case e.SET:return new Map(i.items.map(e=>[e.id,e]));case e.RESET:return new Map;case e.UPSERT:return i.items.length?i.items.reduce((e,t)=>(e.set(t.id,t),e),new Map(t)):t;case e.REMOVE:return i.ids.length?i.ids.reduce((e,t)=>(e.delete(t),e),new Map(t)):t;default:return t}}),Ue=e=>{const t=Fe(e);return function(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{value:t(),pristine:!0},o=arguments.length>1?arguments[1]:void 0;switch(o.type){case e.SET:case e.REMOVE:case e.UPSERT:return{value:t(i.value,o),pristine:!1};case e.RESET:return{value:t(i.value,o),pristine:!0};default:return i}}},Ve={SET:"SET_BASIC_CACHES",RESET:"RESET_BASIC_CACHES",LOAD:"LOAD_BASIC_CACHES",UPSERT:"UPSERT_BASIC_CACHES",REMOVE:"REMOVE_BASIC_CACHES"},ze=e=>({SET:"SET_".concat(e),RESET:"RESET_".concat(e),UPSERT:"UPSERT_".concat(e),REMOVE:"REMOVE_".concat(e)}),He=ze("CLUSTERS"),Ke=ze("SHORT_CLUSTERS"),Je=ze("CACHES"),Ge=ze("SHORT_CACHES"),We=ze("MODELS"),Ye=ze("SHORT_MODELS"),Qe=e=>{const t=(e=>(function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Set,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(i.type){case e.SET:return new Set(i.items.map(e=>e.id));case e.RESET:return new Set;case e.UPSERT:return i.items.reduce((e,t)=>(e.add(t.id),e),new Set(t));case e.REMOVE:return i.items.reduce((e,t)=>(e.delete(t),e),new Set(t));default:return t}}))(e),i=Fe(e);return function(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{ids:t(),changedItems:i()},a=arguments.length>1?arguments[1]:void 0;switch(a.type){case e.SET:return a.state;case e.LOAD:return _objectSpread({},o,{ids:t(o.ids,_objectSpread({},a,{type:e.UPSERT}))});case e.RESET:case e.UPSERT:return{ids:t(o.ids,a),changedItems:i(o.changedItems,a)};case e.REMOVE:return{ids:t(o.ids,{type:a.type,items:a.ids}),changedItems:i(o.changedItems,a)};default:return o}}},Ze=function editReducer2(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:editReducer2.getDefaults(),t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_EDIT":return t.state;case"EDIT_CLUSTER":return _objectSpread({},e,{changes:_objectSpread({},["caches","models"].reduce((e,i)=>_objectSpread({},e,{[i]:{ids:t.cluster&&t.cluster[i]||[],changedItems:[]}}),e.changes),{cluster:t.cluster})});case"RESET_EDIT_CHANGES":return _objectSpread({},e,{changes:_objectSpread({},["caches","models"].reduce((t,i)=>_objectSpread({},t,{[i]:{ids:e.changes.cluster&&e.changes.cluster[i]||[],changedItems:[]}}),e.changes),{cluster:_objectSpread({},e.changes.cluster)})});case"UPSERT_CLUSTER":return _objectSpread({},e,{changes:_objectSpread({},e.changes,{cluster:t.cluster})});case"UPSERT_CLUSTER_ITEM":{const{itemType:i,item:o}=t;return _objectSpread({},e,{changes:_objectSpread({},e.changes,{[i]:{ids:e.changes[i].ids.filter(e=>e!==o.id).concat(o.id),changedItems:e.changes[i].changedItems.filter(e=>{let{id:t}=e;return t!==o.id}).concat(o)}})})}case Pe:{const{itemType:i,itemIDs:o}=t;return _objectSpread({},e,{changes:_objectSpread({},e.changes,{[i]:{ids:e.changes[i].ids.filter(e=>!o.includes(e)),changedItems:e.changes[i].changedItems.filter(e=>{let{id:t}=e;return!o.includes(t)})}})})}default:return e}};Ze.getDefaults=(()=>({changes:["caches","models"].reduce((e,t)=>_objectSpread({},e,{[t]:{ids:[],changedItems:[]}}),{cluster:null})}));const Xe=(e,t)=>{switch(t.type){case Pe:{const{itemType:i,itemIDs:o}=t,a="short"+be()(i),n=e[a];return _objectSpread({},e,{[a]:{value:o.reduce((e,t)=>(e.delete(t),e),n.value),pristine:n.pristine}})}default:return e}};function actionCreators_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function actionCreators_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}const et=function removeClusterItems(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];return{type:qe,itemType:t,clusterID:e,itemIDs:i,save:o,confirm:a}},tt=(e,t,i)=>({type:Pe,itemType:t,clusterID:e,itemIDs:i}),it=e=>({cluster:function actionCreators_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?actionCreators_ownKeys(Object(i),!0).forEach(function(t){actionCreators_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):actionCreators_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}({},e.changes.cluster,{caches:e.changes.caches.ids,models:e.changes.models.ids}),caches:e.changes.caches.changedItems,models:e.changes.models.changedItems}),ot=(e,t)=>({type:"UPSERT_CLUSTER_ITEM",itemType:e,item:t}),at=e=>({type:_e,changedItems:it(e)}),nt=e=>({type:Ce,clusterIDs:e}),rt=()=>({type:Se}),st=e=>({type:Te,configuration:e}),lt=function advancedSaveCluster(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return{type:$e,cluster:e,download:t}},ct=function advancedSaveCache(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return{type:Ie,cache:e,download:t}},dt=function advancedSaveModel(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return{type:Oe,model:e,download:t}},ut=e=>({type:Ae,cluster:e}),pt=e=>({type:ke,cluster:e}),gt=e=>({type:De,changedItems:e}),mt=(e,t)=>({type:"BASIC_SAVE_ERR",changedItems:e,error:{message:'Failed to save cluster "'.concat(e.cluster.name,'": ').concat(t.data,".")}});var ht=i(241),vt=i.n(ht);class ConfigurationDownload_ConfigurationDownload{constructor(e,t,i,o,a,n,r,s){this.messages=e,this.activitiesData=t,this.configuration=i,this.summaryZipper=o,this.Version=a,this.$q=n,this.Demo=r,this.PageConfigure=s,this.saver=vt.a}downloadClusterConfiguration(e){return this.activitiesData.post({action:"/configuration/download"}),this.PageConfigure.getClusterConfiguration({clusterID:e.id,isDemo:!!this.Demo.enabled}).then(e=>this.configuration.populate(e)).then(t=>{let{clusters:i}=t;return i.find(t=>{let{id:i}=t;return i===e.id})||this.$q.reject({message:"Cluster ".concat(e.name," not found")})}).then(e=>this.summaryZipper({cluster:e,data:{},demoMode:this.Demo.enabled,targetVer:this.Version.currentSbj.getValue()})).then(t=>this.saver.saveAs(t,this.nameFile(e))).catch(e=>this.messages.showError("Failed to generate project files. ".concat(e.message)))}nameFile(e){return"".concat(this.escapeFileName(e.name),"-project.zip")}escapeFileName(e){return e.replace(/[\\\/*\"\[\],\.:;|=<>?]/g,"-").replace(/ /g,"_")}}ConfigurationDownload_ConfigurationDownload.$inject=["IgniteMessages","IgniteActivitiesData","IgniteConfigurationResource","IgniteSummaryZipper","IgniteVersion","$q","Demo","PageConfigure"];var ft=i(145),yt=i(589),bt=i(1137),Ct=i(1141),St=i(1158),qt=i(273),Pt=i.n(qt),_t=i(292),Et=i.n(_t),wt=i(103),Tt=i.n(wt);const $t=function uniqueNameValidator(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return function(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return t&&!i.some(i=>i.id!==t.id&&(t.name||e)===(i.name||e))}};class Clusters_Clusters{constructor(e,t){var i=this;this.$http=e,this.JDBC_LINKS=t,this.status="created",this.discoveries=[{value:"Vm",label:"Static IPs"},{value:"Multicast",label:"Multicast"},{value:"S3",label:"AWS S3"},{value:"Cloud",label:"Apache jclouds"},{value:"GoogleStorage",label:"Google cloud storage"},{value:"Jdbc",label:"JDBC"},{value:"SharedFs",label:"Shared filesystem"},{value:"ZooKeeper",label:"Apache ZooKeeper"},{value:"Kubernetes",label:"Kubernetes"}],this.walPageCompression=[{value:"DISABLED",label:"DISABLED"},{value:"SKIP_GARBAGE",label:"SKIP_GARBAGE"},{value:"ZSTD",label:"ZSTD"},{value:"LZ4",label:"LZ4"},{value:"SNAPPY",label:"SNAPPY"},{value:null,label:"Default"}],this.minMemoryPolicySize=10485760,this.ackSendThreshold={min:1,default:16},this.messageQueueLimit={min:0,default:1024},this.unacknowledgedMessagesBufferSize={min:function min(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i.unacknowledgedMessagesBufferSize.default,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.messageQueueLimit.default,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.ackSendThreshold.default;if(e===i.unacknowledgedMessagesBufferSize.default)return e;const{validRatio:a}=i.unacknowledgedMessagesBufferSize;return Math.max(t*a,o*a)},validRatio:5,default:0},this.sharedMemoryPort={default:48100,min:-1,max:65535,invalidValues:[0]},this.failoverSpis=[{value:"JobStealing",label:"Job stealing"},{value:"Never",label:"Never"},{value:"Always",label:"Always"},{value:"Custom",label:"Custom"}],this.dataRegion={name:{default:"default",invalidValues:["sysMemPlc"]},initialSize:{default:268435456,min:10485760},maxSize:{default:"0.2 * totalMemoryAvailable",min:e=>{if(e)return e.initialSize||this.dataRegion.initialSize.default}},evictionThreshold:{step:.001,max:.999,min:.5,default:.9},emptyPagesPoolSize:{default:100,min:11,max:(e,t)=>{if(!e||!t||!t.maxSize)return;const i=t.maxSize,o=e.dataStorageConfiguration.pageSize||this.dataStorageConfiguration.pageSize.default;return Math.floor(i/o/10)}},metricsSubIntervalCount:{default:5,min:1,step:1},metricsRateTimeInterval:{min:1e3,default:6e4,step:1e3}},this.memoryPolicy={name:{default:"default",invalidValues:["sysMemPlc"]},initialSize:{default:268435456,min:10485760},maxSize:{default:"0.8 * totalMemoryAvailable",min:e=>e.initialSize||this.memoryPolicy.initialSize.default},customValidators:{defaultMemoryPolicyExists:function defaultMemoryPolicyExists(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const o=i.memoryPolicy.name.default,a=e||o;return a===o||t.some(e=>(e.name||o)===a)},uniqueMemoryPolicyName:function uniqueMemoryPolicyName(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const o=i.memoryPolicy.name.default;return!t.some(t=>t.id!==e.id&&(e.name||o)===(t.name||o))}},emptyPagesPoolSize:{default:100,min:11,max:(e,t)=>{if(!t||!t.maxSize)return;const i=t.maxSize,o=e.memoryConfiguration.pageSize||this.memoryConfiguration.pageSize.default;return Math.floor(i/o/10)}}},this.loadBalancingKinds=[{value:"RoundRobin",label:"Round-robin"},{value:"Adaptive",label:"Adaptive"},{value:"WeightedRandom",label:"Random"},{value:"Custom",label:"Custom"}],this.memoryConfiguration={pageSize:{default:2048,values:[{value:null,label:"Default (2kb)"},{value:1024,label:"1 kb"},{value:2048,label:"2 kb"},{value:4096,label:"4 kb"},{value:8192,label:"8 kb"},{value:16384,label:"16 kb"}]},systemCacheInitialSize:{default:41943040,min:10485760},systemCacheMaxSize:{default:104857600,min:e=>F()(e,"memoryConfiguration.systemCacheInitialSize")||this.memoryConfiguration.systemCacheInitialSize.default}},this.dataStorageConfiguration={pageSize:{default:4096,values:[{value:null,label:"Default (4kb)"},{value:1024,label:"1 kb"},{value:2048,label:"2 kb"},{value:4096,label:"4 kb"},{value:8192,label:"8 kb"},{value:16384,label:"16 kb"}]},systemRegionInitialSize:{default:41943040,min:10485760},systemRegionMaxSize:{default:104857600,min:e=>F()(e,"dataStorageConfiguration.systemRegionInitialSize")||this.dataStorageConfiguration.systemRegionInitialSize.default}},this.swapSpaceSpi={readStripesNumber:{default:"availableProcessors",customValidators:{powerOfTwo:e=>!e||(e&-e)===e}}},this.serviceConfigurations={serviceConfiguration:{name:{customValidators:{uniqueName:$t("")}}}},this.systemThreadPoolSize={default:"max(8, availableProcessors) * 2",min:2},this.rebalanceThreadPoolSize={default:1,min:1,max:e=>e.systemThreadPoolSize?e.systemThreadPoolSize-1:void 0},this.executorConfigurations={allNamesExist:function allNamesExist(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).every(e=>e&&e.name)},allNamesUnique:function allNamesUnique(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return new Set(e.map(e=>e.name)).size===e.length}},this.executorConfiguration={name:{customValidators:{uniqueName:$t()}}},this.marshaller={kind:{default:"BinaryMarshaller"}},this.odbc={odbcEnabled:{correctMarshaller:(e,t)=>{const i=F()(e,"marshaller.kind")||this.marshaller.kind.default;return!t||i===this.marshaller.kind.default},correctMarshallerWatch:e=>"".concat(e,".marshaller.kind")}},this.swapSpaceSpis=[{value:"FileSwapSpaceSpi",label:"File-based swap"},{value:null,label:"Not set"}],this.affinityFunctions=[{value:"Rendezvous",label:"Rendezvous"},{value:"Custom",label:"Custom"},{value:null,label:"Default"}],this.normalize=Et()(["__v","space"])}getConfiguration(e){return this.$http.get("/api/v1/configuration/".concat(e)).then(e=>e)}getCluster(e){return this.$http.get("/api/v1/configuration/clusters/".concat(e))}getClusterCaches(e){return this.$http.get("/api/v1/configuration/clusters/".concat(e,"/caches"))}getClusterModels(e){return this.$http.get("/api/v1/configuration/clusters/".concat(e,"/models"))}getClustersOverview(){return this.$http.get("/api/v1/configuration/clusters/")}removeCluster(e){return this.$http.post("/api/v1/configuration/clusters/remove",{clusterIDs:e})}saveBasic(e){return this.$http.put("/api/v1/configuration/clusters/basic",e)}saveAdvanced(e){return this.$http.put("/api/v1/configuration/clusters/",e)}getBlankCluster(){return{id:Tt()(),activeOnStart:!0,cacheSanityCheckEnabled:!0,atomicConfiguration:{},cacheKeyConfiguration:[],deploymentSpi:{URI:{uriList:[],scanners:[]}},marshaller:{},peerClassLoadingLocalClassPathExclude:[],sslContextFactory:{trustManagers:[]},swapSpaceSpi:{},transactionConfiguration:{},dataStorageConfiguration:{pageSize:null,concurrencyLevel:null,defaultDataRegionConfiguration:{name:"default"},dataRegionConfigurations:[]},memoryConfiguration:{pageSize:null,memoryPolicies:[{name:"default",maxSize:null}]},serviceConfigurations:[],executorConfiguration:[],sqlConnectorConfiguration:{tcpNoDelay:!0},clientConnectorConfiguration:{tcpNoDelay:!0,jdbcEnabled:!0,odbcEnabled:!0,thinClientEnabled:!0,useIgniteSslContextFactory:!0},space:void 0,discovery:{kind:"Multicast",Vm:{addresses:["127.0.0.1:47500..47510"]},Multicast:{addresses:["127.0.0.1:47500..47510"]},Jdbc:{initSchema:!0},Cloud:{regions:[],zones:[]}},binaryConfiguration:{typeConfigurations:[],compactFooter:!0},communication:{tcpNoDelay:!0},connector:{noDelay:!0},collision:{kind:"Noop",JobStealing:{stealingEnabled:!0},PriorityQueue:{starvationPreventionEnabled:!0}},failoverSpi:[],logger:{Log4j:{mode:"Default"}},caches:[],models:[],checkpointSpi:[],loadBalancingSpi:[],autoActivationEnabled:!0}}toShortCluster(e){return{id:e.id,name:e.name,discovery:e.discovery.kind,cachesCount:(e.caches||[]).length,modelsCount:(e.models||[]).length}}jdbcDriverURL(e){return this.JDBC_LINKS[F()(e,"dialect")]}requiresProprietaryDrivers(e){return!!this.jdbcDriverURL(e)}makeBlankDataRegionConfiguration(){return{id:Tt()()}}addDataRegionConfiguration(e){const t=F()(e,"dataStorageConfiguration.dataRegionConfigurations");if(t)return t.push(Object.assign(this.makeBlankDataRegionConfiguration(),{name:me("New data region",t.concat(e.dataStorageConfiguration.defaultDataRegionConfiguration))}))}getDefaultClusterMemoryPolicy(e){const t=this.memoryPolicy.name.default,i=F()(e,"memoryConfiguration.defaultMemoryPolicyName")||t;return F()(e,"memoryConfiguration.memoryPolicies",[]).find(e=>(e.name||t)===i)}makeBlankCheckpointSPI(){return{FS:{directoryPaths:[]},S3:{awsCredentials:{kind:"Basic"},clientConfiguration:{retryPolicy:{kind:"Default"},useReaper:!0}}}}addCheckpointSPI(e){const t=this.makeBlankCheckpointSPI();return e.checkpointSpi.push(t),t}makeBlankLoadBalancingSpi(){return{Adaptive:{loadProbe:{Job:{useAverage:!0},CPU:{useAverage:!0,useProcessors:!0},ProcessingTime:{useAverage:!0}}}}}addLoadBalancingSpi(e){return e.loadBalancingSpi.push(this.makeBlankLoadBalancingSpi())}makeBlankMemoryPolicy(){return{id:Tt()()}}addMemoryPolicy(e){const t=F()(e,"memoryConfiguration.memoryPolicies");if(t)return t.push(Object.assign(this.makeBlankMemoryPolicy(),{name:t.length?me("New memory policy",t):""}))}persistenceEnabled(e){return!(!F()(e,"defaultDataRegionConfiguration.persistenceEnabled")&&!Pt()(F()(e,"dataRegionConfigurations"),e=>e.persistenceEnabled))}makeBlankServiceConfiguration(){return{id:Tt()()}}addServiceConfiguration(e){e.serviceConfigurations||(e.serviceConfigurations=[]),e.serviceConfigurations.push(Object.assign(this.makeBlankServiceConfiguration(),{name:me("New service configuration",e.serviceConfigurations)}))}addExecutorConfiguration(e){e.executorConfiguration||(e.executorConfiguration=[]);const t={id:Tt()(),name:""};return e.executorConfiguration.push(t),t}addPeerClassLoadingLocalClassPathExclude(e){return e.peerClassLoadingLocalClassPathExclude||(e.peerClassLoadingLocalClassPathExclude=[]),e.peerClassLoadingLocalClassPathExclude.push("")}addBinaryTypeConfiguration(e){e.binaryConfiguration.typeConfigurations||(e.binaryConfiguration.typeConfigurations=[]);const t={id:Tt()()};return e.binaryConfiguration.typeConfigurations.push(t),t}addLocalEventListener(e){e.localEventListeners||(e.localEventListeners=[]);const t={id:Tt()()};return e.localEventListeners.push(t),t}}function Models_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function Models_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Models_ownKeys(Object(i),!0).forEach(function(t){Models_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Models_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function Models_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}Clusters_Clusters.$inject=["$http","JDBC_LINKS"];class Models_Models{constructor(e){this.$http=e,this.queryMetadata={values:[{label:"Annotations",value:"Annotations"},{label:"Configuration",value:"Configuration"}]},this.indexType={values:[{label:"SORTED",value:"SORTED"},{label:"FULLTEXT",value:"FULLTEXT"},{label:"GEOSPATIAL",value:"GEOSPATIAL"}]},this.inlineSizeTypes=[{label:"Auto",value:-1},{label:"Custom",value:1},{label:"Disabled",value:0}],this.inlineSizeType={_val:e=>null===e.inlineSizeType||void 0===e.inlineSizeType?-1:e.inlineSizeType,onChange:e=>{if(!e)return;switch(this.inlineSizeType._val(e)){case 1:return e.inlineSize=e.inlineSize>0?e.inlineSize:null;case 0:case-1:return e.inlineSize=e.inlineSizeType}},default:"Auto"},this.fieldProperties={typesWithPrecision:["BigDecimal","String","byte[]"],fieldPresentation:(e,t)=>{if(!e)return"";const i=t("2.7.0")&&this.fieldProperties.precisionAvailable(e),o=t("2.7.0")&&this.fieldProperties.scaleAvailable(e);return"".concat(e.name||""," ").concat(e.className||"").concat(i&&e.precision?" ("+e.precision:"").concat(o&&e.precision&&e.scale?","+e.scale:"").concat(i&&e.precision?")":"").concat(t("2.3.0")&&e.notNull?" Not NULL":"").concat(t("2.4.0")&&e.defaultValue?" DEFAULT "+e.defaultValue:"")},precisionAvailable:e=>e&&this.fieldProperties.typesWithPrecision.includes(e.className),scaleAvailable:e=>e&&"BigDecimal"===e.className},this.indexSortDirection={values:[{value:!0,label:"ASC"},{value:!1,label:"DESC"}],default:!0},this.normalize=Et()(["__v","space"]),this.queryIndexes={complete:function complete(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).every(e=>e.name&&e.indexType&&e.fields&&e.fields.length&&e.fields.every(e=>!!e.name))},fieldsExist:function fieldsExist(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const i=new Set(t.map(e=>e.name));return e.every(e=>e.fields&&e.fields.every(e=>i.has(e.name)))},indexFieldsHaveUniqueNames:function indexFieldsHaveUniqueNames(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).every(e=>{if(!e.fields)return!0;return new Set(e.fields.map(e=>e.name)).size===e.fields.length})}}}getModel(e){return this.$http.get("/api/v1/configuration/domains/".concat(e))}getBlankModel(){return{id:Tt()(),generatePojo:!0,caches:[],queryKeyFields:[],queryMetadata:"Configuration"}}addIndexField(e){return e[e.push({id:Tt()(),direction:!0})-1]}addIndex(e){if(e)return e.indexes||(e.indexes=[]),e.indexes.push({id:Tt()(),name:"",indexType:"SORTED",fields:[]}),e.indexes[e.indexes.length-1]}hasIndex(e){return"Configuration"===e.queryMetadata?!(!e.keyFields||!e.keyFields.length):!e.generatePojo||!e.databaseSchema&&!e.databaseTable}toShortModel(e){return{id:e.id,keyType:e.keyType,valueType:e.valueType,hasIndex:this.hasIndex(e)}}removeInvalidFields(e){if(!e)return e;const t=new Set((e.fields||[]).map(e=>e.name));return Models_objectSpread({},e,{queryKeyFields:(e.queryKeyFields||[]).filter(e=>t.has(e)),indexes:(e.indexes||[]).map(e=>Models_objectSpread({},e,{fields:(e.fields||[]).filter(e=>t.has(e.name))}))})}storeKeyDBFieldsUnique(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return["databaseFieldName","javaFieldName"].every(t=>{return new Set(e.map(e=>e[t])).size===e.length})}}Models_Models.$inject=["$http"];const It=Object(s.a)(e=>e),Ot=e=>Object(ft.a)(Object(s.a)(e=>e),Object(ie.a)(e),Object(s.a)(e=>e)),At=Object(oe.a)(e=>e&&[...e.value.values()]),kt=(e,t)=>Object(ft.a)(Object(ie.a)(e),Object(oe.a)(e=>e&&e.get(t))),Dt=(e,t)=>Object(ft.a)(Object(ie.a)(e),Object(oe.a)(e=>e&&t.map(t=>e.get(t)))),jt=e=>{let{items:t,itemFactory:i,defaultName:o="",itemID:a}=e;return Object(le.a)(e=>e?Object(ne.a)(Object.assign(i(),e)):"new"===a?t.pipe(Object(ee.a)(1),Object(oe.a)(e=>Object.assign(i(),{name:me(o,e)}))):a?Object(re.b)():Object(ne.a)(null))},Nt=e=>{let{changesKey:t,shortKey:i}=e;return e=>Object(yt.b)(e.pipe(Object(ie.a)("edit","changes",t),It,Object(Ct.a)()),e.pipe(Object(ie.a)(i,"value"),It,Object(Ct.a)())).pipe(Object(oe.a)(e=>{let[{ids:t=[],changedItems:i},o]=e;return t.length&&o?t.map(e=>i.find(t=>{let{id:i}=t;return e===i})||o.get(e)):[]}),Object(oe.a)(e=>e.filter(e=>e)))},Mt=function selectNames(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"name";return Object(ft.a)(Object(ie.a)("value"),Object(oe.a)(i=>e.map(e=>i.get(e)[t])))};class selectors_ConfigSelectors{constructor(e,t,i){var o=this;this.Caches=e,this.Clusters=t,this.Models=i,this.selectModel=(e=>kt("models",e)),this.selectShortModels=(()=>Ot("shortModels")),this.selectShortModelsValue=(()=>e=>e.pipe(this.selectShortModels(),At)),this.selectShortClustersValue=(()=>e=>e.pipe(this.selectShortClusters(),At)),this.selectClusterNames=(e=>t=>t.pipe(this.selectShortClusters(),Mt(e))),this.selectCluster=(e=>kt("clusters",e)),this.selectShortClusters=(()=>Ot("shortClusters")),this.selectCache=(e=>kt("caches",e)),this.selectShortCaches=(()=>Ot("shortCaches")),this.selectShortCachesValue=(()=>e=>e.pipe(this.selectShortCaches(),At)),this.selectShortModelsValue=(()=>e=>e.pipe(this.selectShortModels(),At)),this.selectCacheToEdit=(e=>t=>t.pipe(this.selectCache(e),Object(Ct.a)(),jt({items:t.pipe(this.selectCurrentShortCaches),itemFactory:()=>this.Caches.getBlankCache(),defaultName:he.cache,itemID:e}))),this.selectModelToEdit=(e=>t=>t.pipe(this.selectModel(e),Object(Ct.a)(),jt({items:t.pipe(this.selectCurrentShortModels),itemFactory:()=>this.Models.getBlankModel(),itemID:e}))),this.selectClusterToEdit=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:he.cluster;return i=>i.pipe(o.selectCluster(e),Object(Ct.a)(),jt({items:i.pipe(o.selectShortClustersValue()),itemFactory:()=>o.Clusters.getBlankCluster(),defaultName:t,itemID:e}))},this.selectCurrentShortCaches=Nt({changesKey:"caches",shortKey:"shortCaches"}),this.selectCurrentShortModels=Nt({changesKey:"models",shortKey:"shortModels"}),this.selectClusterShortCaches=(e=>t=>"new"===e?Object(ne.a)([]):Object(yt.b)(t.pipe(this.selectCluster(e),Object(ie.a)("caches")),t.pipe(this.selectShortCaches(),Object(ie.a)("value")),(e,t)=>e.map(e=>t.get(e)))),this.selectCompleteClusterConfiguration=(e=>{let{clusterID:t,isDemo:i}=e;return e=>{const o=e=>!e.some(e=>!e);return e.pipe(this.selectCluster(t),Object(se.a)(t=>t?Object(bt.a)(e.pipe(Dt("caches",t.caches||[]),Object(ee.a)(1)),e.pipe(Dt("models",t.models||[]),Object(ee.a)(1))).pipe(Object(oe.a)(e=>{let[a,n]=e;return{cluster:t,caches:a,domains:n,spaces:[{id:t.space,demo:i}],__isComplete:!!t&&!(!o(a)||!o(n))}})):Object(ne.a)({__isComplete:!1})))}})}}selectors_ConfigSelectors.$inject=["Caches","Clusters","Models"];i(150);function effects_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function effects_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?effects_ownKeys(Object(i),!0).forEach(function(t){effects_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):effects_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function effects_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}const Rt=e=>t=>t.pipe(Object(s.a)(t=>t.type===e));class effects_ConfigEffects{constructor(e,t,i,o,a,n,r,d,u,p){var g=this;this.etp=function(){const e="object"==typeof(arguments.length<=0?void 0:arguments[0])?arguments.length<=0?void 0:arguments[0]:effects_objectSpread({type:arguments.length<=0?void 0:arguments[0]},arguments.length<=1?void 0:arguments[1]),t="".concat(e.type,"_OK"),i="".concat(e.type,"_ERR");return setTimeout(()=>g.ConfigureState.dispatchAction(e)),g.ConfigureState.actions$.pipe(Object(s.a)(e=>e.type===t||e.type===i),Object(ee.a)(1),Object(oe.a)(e=>{if(e.type===i)throw e;return e})).toPromise()},this.ConfigureState=e,this.ConfigSelectors=o,this.Models=i,this.Caches=t,this.Clusters=a,this.$state=n,this.IgniteMessages=r,this.IgniteConfirm=d,this.Confirm=u,this.configurationDownload=p,this.loadConfigurationEffect$=this.ConfigureState.actions$.pipe(Rt("LOAD_COMPLETE_CONFIGURATION"),Object(se.a)(e=>Object(ae.a)(this.Clusters.getConfiguration(e.clusterID)).pipe(Object(le.a)(e=>{let{data:t}=e;return Object(ne.a)(st(t),{type:"LOAD_COMPLETE_CONFIGURATION_OK",data:t})}),Object(ce.a)(t=>Object(ne.a)({type:"LOAD_COMPLETE_CONFIGURATION_ERR",error:{message:"Failed to load cluster configuration: ".concat(t.data.message,".")},action:e}))))),this.storeConfigurationEffect$=this.ConfigureState.actions$.pipe(Rt(Te),Object(se.a)(e=>{let{configuration:{cluster:t,caches:i,models:o}}=e;return Object(ne.a)(...[t&&{type:He.UPSERT,items:[t]},i&&i.length&&{type:Je.UPSERT,items:i},o&&o.length&&{type:We.UPSERT,items:o}].filter(e=>e))})),this.saveCompleteConfigurationEffect$=this.ConfigureState.actions$.pipe(Rt(_e),Object(le.a)(e=>{const i=[{type:We.UPSERT,items:e.changedItems.models},{type:Ye.UPSERT,items:e.changedItems.models.map(e=>this.Models.toShortModel(e))},{type:Je.UPSERT,items:e.changedItems.caches},{type:Ge.UPSERT,items:e.changedItems.caches.map(t.toShortCache)},{type:He.UPSERT,items:[e.changedItems.cluster]},{type:Ke.UPSERT,items:[a.toShortCluster(e.changedItems.cluster)]}].filter(e=>e.items.length);return Object(Z.a)(Object(ne.a)(...i),Object(ae.a)(a.saveAdvanced(e.changedItems)).pipe(Object(le.a)(t=>Object(ne.a)({type:"EDIT_CLUSTER",cluster:e.changedItems.cluster},{type:Ee,changedItems:e.changedItems})),Object(ce.a)(t=>Object(ne.a)({type:we,changedItems:e.changedItems,action:e,error:{message:'Failed to save cluster "'.concat(e.changedItems.cluster.name,'": ').concat(t.data,".")}},{type:"UNDO_ACTIONS",actions:i}))))})),this.addCacheToEditEffect$=this.ConfigureState.actions$.pipe(Rt("ADD_CACHE_TO_EDIT"),Object(le.a)(()=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCacheToEdit("new"),Object(ee.a)(1))),Object(oe.a)(e=>({type:"UPSERT_CLUSTER_ITEM",itemType:"caches",item:e}))),this.errorNotificationsEffect$=this.ConfigureState.actions$.pipe(Object(s.a)(e=>e.error),Object(c.a)(e=>this.IgniteMessages.showError(e.error.message)),Object(te.a)()),this.loadUserClustersEffect$=this.ConfigureState.actions$.pipe(Rt("LOAD_USER_CLUSTERS"),Object(se.a)(e=>Object(ae.a)(this.Clusters.getClustersOverview()).pipe(Object(le.a)(t=>{let{data:i}=t;return Object(ne.a)({type:Ke.SET,items:i},{type:"".concat(e.type,"_OK")})}),Object(ce.a)(t=>Object(ne.a)({type:"".concat(e.type,"_ERR"),error:{message:"Failed to load clusters:  ".concat(t.data.message)},action:e}))))),this.loadAndEditClusterEffect$=e.actions$.pipe(Rt("LOAD_AND_EDIT_CLUSTER"),Object(l.a)(this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortClustersValue())),Object(se.a)(e=>{let[t,i]=e;return"new"===t.clusterID?Object(ne.a)({type:"EDIT_CLUSTER",cluster:effects_objectSpread({},this.Clusters.getBlankCluster(),{name:me(he.cluster,i)})},{type:"LOAD_AND_EDIT_CLUSTER_OK"}):this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCluster(t.clusterID),Object(ee.a)(1),Object(le.a)(e=>e?Object(ne.a)({type:"EDIT_CLUSTER",cluster:e},{type:"LOAD_AND_EDIT_CLUSTER_OK"}):Object(ae.a)(this.Clusters.getCluster(t.clusterID)).pipe(Object(le.a)(e=>{let{data:t}=e;return Object(ne.a)({type:He.UPSERT,items:[t]},{type:"EDIT_CLUSTER",cluster:t},{type:"LOAD_AND_EDIT_CLUSTER_OK"})}),Object(ce.a)(e=>Object(ne.a)({type:"LOAD_AND_EDIT_CLUSTER_ERR",error:{message:"Failed to load cluster: ".concat(e.data.message,".")}})))))})),this.loadCacheEffect$=this.ConfigureState.actions$.pipe(Rt("LOAD_CACHE"),Object(se.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCache(e.cacheID),Object(ee.a)(1),Object(le.a)(t=>t?Object(ne.a)({type:"".concat(e.type,"_OK"),cache:t}):Object(ae.a)(this.Caches.getCache(e.cacheID)).pipe(Object(le.a)(t=>{let{data:i}=t;return Object(ne.a)({type:"CACHE",cache:i},{type:"".concat(e.type,"_OK"),cache:i})}))),Object(ce.a)(t=>Object(ne.a)({type:"".concat(e.type,"_ERR"),error:{message:"Failed to load cache: ".concat(t.data.message,".")}}))))),this.storeCacheEffect$=this.ConfigureState.actions$.pipe(Rt("CACHE"),Object(oe.a)(e=>({type:Je.UPSERT,items:[e.cache]}))),this.loadShortCachesEffect$=e.actions$.pipe(Rt("LOAD_SHORT_CACHES"),Object(se.a)(e=>(e.ids||[]).length?this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortCaches(),Object(ee.a)(1),Object(le.a)(t=>!t.pristine&&e.ids&&e.ids.every(e=>t.value.has(e))?Object(ne.a)({type:"".concat(e.type,"_OK")}):Object(ae.a)(this.Clusters.getClusterCaches(e.clusterID)).pipe(Object(le.a)(t=>{let{data:i}=t;return Object(ne.a)({type:Ge.UPSERT,items:i},{type:"".concat(e.type,"_OK")})}))),Object(ce.a)(t=>Object(ne.a)({type:"".concat(e.type,"_ERR"),error:{message:"Failed to load caches: ".concat(t.data.message,".")},action:e}))):Object(ne.a)({type:"".concat(e.type,"_OK")}))),this.loadModelEffect$=this.ConfigureState.actions$.pipe(Rt("LOAD_MODEL"),Object(se.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectModel(e.modelID),Object(ee.a)(1),Object(le.a)(t=>t?Object(ne.a)({type:"".concat(e.type,"_OK"),model:t}):Object(ae.a)(this.Models.getModel(e.modelID)).pipe(Object(le.a)(t=>{let{data:i}=t;return Object(ne.a)({type:"MODEL",model:i},{type:"".concat(e.type,"_OK"),model:i})}))),Object(ce.a)(t=>Object(ne.a)({type:"".concat(e.type,"_ERR"),error:{message:"Failed to load domain model: ".concat(t.data.message,".")}}))))),this.storeModelEffect$=this.ConfigureState.actions$.pipe(Rt("MODEL"),Object(oe.a)(e=>({type:We.UPSERT,items:[e.model]}))),this.loadShortModelsEffect$=this.ConfigureState.actions$.pipe(Rt("LOAD_SHORT_MODELS"),Object(se.a)(e=>(e.ids||[]).length?this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortModels(),Object(ee.a)(1),Object(le.a)(t=>!t.pristine&&e.ids&&e.ids.every(e=>t.value.has(e))?Object(ne.a)({type:"".concat(e.type,"_OK")}):Object(ae.a)(this.Clusters.getClusterModels(e.clusterID)).pipe(Object(le.a)(t=>{let{data:i}=t;return Object(ne.a)({type:Ye.UPSERT,items:i},{type:"".concat(e.type,"_OK")})}))),Object(ce.a)(t=>Object(ne.a)({type:"".concat(e.type,"_ERR"),error:{message:"Failed to load domain models: ".concat(t.data.message,".")},action:e}))):Object(ne.a)({type:Ye.UPSERT,items:[]},{type:"".concat(e.type,"_OK")}))),this.basicSaveRedirectEffect$=this.ConfigureState.actions$.pipe(Rt(De),Object(c.a)(e=>this.$state.go("base.configuration.edit.basic",{clusterID:e.changedItems.cluster.id},{location:"replace",custom:{justIDUpdate:!0}})),Object(te.a)()),this.basicDownloadAfterSaveEffect$=this.ConfigureState.actions$.pipe(Rt(ke),Object(de.a)(this.ConfigureState.actions$.pipe(Rt(De))),Object(ie.a)("1"),Object(c.a)(e=>this.configurationDownload.downloadClusterConfiguration(e.changedItems.cluster)),Object(te.a)()),this.advancedDownloadAfterSaveEffect$=Object(Z.a)(this.ConfigureState.actions$.pipe(Rt($e)),this.ConfigureState.actions$.pipe(Rt(Ie)),this.ConfigureState.actions$.pipe(Rt(Oe))).pipe(Object(s.a)(e=>e.download),Object(de.a)(this.ConfigureState.actions$.pipe(Rt("ADVANCED_SAVE_COMPLETE_CONFIGURATION_OK"))),Object(ie.a)("1"),Object(c.a)(e=>this.configurationDownload.downloadClusterConfiguration(e.changedItems.cluster)),Object(te.a)()),this.advancedSaveRedirectEffect$=this.ConfigureState.actions$.pipe(Rt("ADVANCED_SAVE_COMPLETE_CONFIGURATION_OK"),Object(l.a)(this.ConfigureState.actions$.pipe(Rt(_e))),Object(ie.a)("1","changedItems"),Object(oe.a)(e=>{const t=Object.keys(e).filter(e=>"cluster"!==e).map(t=>Array.isArray(e[t])?[t,e[t][0]]:[t,e[t]]).filter(e=>e[1]).pop();return t?[...t,e.cluster]:["cluster",e.cluster,e.cluster]}),Object(c.a)(e=>{let[t,i,o]=e;const a=function go(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return g.$state.go(e,effects_objectSpread({},t,{clusterID:o.id}),{location:"replace",custom:{justIDUpdate:!0}})};switch(t){case"models":{const e="base.configuration.edit.advanced.models.model";if(this.IgniteMessages.showInfo('Model "'.concat(i.valueType,'" saved')),this.$state.is(e)&&this.$state.params.modelID!==i.id)return a(e,{modelID:i.id});break}case"caches":{const e="base.configuration.edit.advanced.caches.cache";if(this.IgniteMessages.showInfo('Cache "'.concat(i.name,'" saved')),this.$state.is(e)&&this.$state.params.cacheID!==i.id)return a(e,{cacheID:i.id});break}case"cluster":{const e="base.configuration.edit.advanced.cluster";if(this.IgniteMessages.showInfo('Cluster "'.concat(i.name,'" saved')),this.$state.is(e)&&this.$state.params.clusterID!==i.id)return a(e);break}}}),Object(te.a)()),this.removeClusterItemsEffect$=this.ConfigureState.actions$.pipe(Rt(qe),Object(se.a)(e=>e.confirm?Object(ae.a)(this.Confirm.confirm("Are you sure you want to remove these items?")).pipe(Object(ue.a)(e),Object(ce.a)(()=>Object(re.b)())):Object(ne.a)(e)),Object(oe.a)(e=>tt(e.clusterID,e.itemType,e.itemIDs))),this.persistRemovedClusterItemsEffect$=this.ConfigureState.actions$.pipe(Rt(Pe),Object(l.a)(this.ConfigureState.actions$.pipe(Rt(qe))),Object(s.a)(e=>{let[t,i]=e;return t.itemType===i.itemType&&i.save&&JSON.stringify(t.itemIDs)===JSON.stringify(i.itemIDs)}),Object(ie.a)("0"),Object(l.a)(this.ConfigureState.state$.pipe(Object(ie.a)("edit"))),Object(oe.a)(e=>{let[t,i]=e;return at(i)})),this.confirmClustersRemovalEffect$=this.ConfigureState.actions$.pipe(Rt(Ce),Object(ie.a)("clusterIDs"),Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectClusterNames(e),Object(ee.a)(1))),Object(se.a)(e=>Object(ae.a)(this.Confirm.confirm("\n                    <p>Are you sure you want to remove these clusters?</p>\n                    <ul>".concat(e.map(e=>"<li>".concat(e,"</li>")).join(""),"</ul>\n                "))).pipe(Object(oe.a)(rt),Object(ce.a)(()=>Object(re.b)())))),this.persistRemovedClustersLocallyEffect$=this.ConfigureState.actions$.pipe(Rt(Se),Object(l.a)(this.ConfigureState.actions$.pipe(Rt(Ce))),Object(le.a)(e=>{let[,{clusterIDs:t}]=e;return Object(ne.a)({type:Ke.REMOVE,ids:t},{type:He.REMOVE,ids:t})})),this.persistRemovedClustersRemotelyEffect$=this.ConfigureState.actions$.pipe(Rt(Se),Object(l.a)(this.ConfigureState.actions$.pipe(Rt(Ce)),this.ConfigureState.actions$.pipe(Rt(Ke.REMOVE)),this.ConfigureState.actions$.pipe(Rt(He.REMOVE))),Object(le.a)(e=>{let[,{clusterIDs:t},...i]=e;return Object(ae.a)(this.Clusters.removeCluster(t)).pipe(Object(ue.a)({type:"REMOVE_CLUSTERS_OK"}),Object(ce.a)(e=>Object(ne.a)({type:"REMOVE_CLUSTERS_ERR",error:{message:"Failed to remove clusters: ".concat(e.data)}},{type:"UNDO_ACTIONS",actions:i})))})),this.notifyRemoteClustersRemoveSuccessEffect$=this.ConfigureState.actions$.pipe(Rt("REMOVE_CLUSTERS_OK"),Object(l.a)(this.ConfigureState.actions$.pipe(Rt(Ce))),Object(c.a)(e=>{let[,{clusterIDs:t}]=e;return this.IgniteMessages.showInfo("Cluster(s) removed: ".concat(t.length))}),Object(te.a)());const m=function _applyChangedIDs(e){let{cache:t,model:i,cluster:o}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{cluster:effects_objectSpread({},e.changes.cluster,{},o||{},{caches:t?ge()([...e.changes.caches.ids,t.id]):e.changes.caches.ids,models:i?ge()([...e.changes.models.ids,i.id]):e.changes.models.ids}),caches:t?ge()([...e.changes.caches.changedItems,t]):e.changes.caches.changedItems,models:i?ge()([...e.changes.models.changedItems,i]):e.changes.models.changedItems}};this.advancedSaveCacheEffect$=Object(Z.a)(this.ConfigureState.actions$.pipe(Rt($e)),this.ConfigureState.actions$.pipe(Rt(Ie)),this.ConfigureState.actions$.pipe(Rt(Oe))).pipe(Object(l.a)(this.ConfigureState.state$.pipe(Object(ie.a)("edit"))),Object(oe.a)(e=>{let[t,i]=e;return{type:_e,changedItems:m(i,t)}})),this.basicSaveEffect$=Object(Z.a)(this.ConfigureState.actions$.pipe(Rt(Ae)),this.ConfigureState.actions$.pipe(Rt(ke))).pipe(Object(l.a)(this.ConfigureState.state$.pipe(Object(ie.a)("edit"))),Object(le.a)(e=>{let[t,i]=e;const o=m(i,{cluster:t.cluster}),a=[{type:Je.UPSERT,items:o.caches},{type:Ge.UPSERT,items:o.caches},{type:He.UPSERT,items:[o.cluster]},{type:Ke.UPSERT,items:[this.Clusters.toShortCluster(o.cluster)]}].filter(e=>e.items.length);return Object(Z.a)(Object(ne.a)(...a),Object(ae.a)(this.Clusters.saveBasic(o)).pipe(Object(le.a)(e=>Object(ne.a)({type:"EDIT_CLUSTER",cluster:o.cluster},gt(o))),Object(ce.a)(e=>Object(ne.a)(mt(o,e),{type:"UNDO_ACTIONS",actions:a}))))})),this.basicSaveOKMessagesEffect$=this.ConfigureState.actions$.pipe(Rt(De),Object(c.a)(e=>this.IgniteMessages.showInfo('Cluster "'.concat(e.changedItems.cluster.name,'" saved.'))),Object(te.a)())}connect(){return Object(Z.a)(...Object.keys(this).filter(e=>e.endsWith("Effect$")).map(e=>this[e])).pipe(Object(c.a)(e=>this.ConfigureState.dispatchAction(e))).subscribe()}}function PageConfigure_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function PageConfigure_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}effects_ConfigEffects.$inject=["ConfigureState","Caches","Models","ConfigSelectors","Clusters","$state","IgniteMessages","IgniteConfirm","Confirm","ConfigurationDownload"];class PageConfigure_PageConfigure{constructor(e,t){this.ConfigureState=e,this.ConfigSelectors=t}getClusterConfiguration(e){let{clusterID:t,isDemo:i}=e;return Object(Z.a)(Object(X.a)(1).pipe(Object(ee.a)(1),Object(c.a)(()=>this.ConfigureState.dispatchAction({type:"LOAD_COMPLETE_CONFIGURATION",clusterID:t,isDemo:i})),Object(te.a)()),this.ConfigureState.actions$.pipe(Rt("LOAD_COMPLETE_CONFIGURATION_ERR"),Object(ee.a)(1),Object(ie.a)("error"),Object(oe.a)(e=>Promise.reject(e))),this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCompleteClusterConfiguration({clusterID:t,isDemo:i}),Object(s.a)(e=>e.__isComplete),Object(ee.a)(1),Object(oe.a)(e=>(function PageConfigure_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?PageConfigure_ownKeys(Object(i),!0).forEach(function(t){PageConfigure_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):PageConfigure_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e})({},e,{clusters:[Q()(e.cluster)]})))).pipe(Object(ee.a)(1)).toPromise()}}PageConfigure_PageConfigure.$inject=["ConfigureState","ConfigSelectors"];var Bt=i(1214),xt=i(1226);i(1227);class ConfigChangesGuard_IgniteObjectDiffer{constructor(){this.diffPatcher=void 0,this.diffPatcher=new Bt.DiffPatcher({cloneDiffValues:!0});const e=e=>null===e||void 0===e||""===e;function igniteConfigFalsyFilter(t){e(t.left)&&!1===t.right&&delete t.right,e(t.left)&&delete t.left,e(t.right)&&delete t.right}igniteConfigFalsyFilter.filterName="igniteConfigFalsy",this.diffPatcher.processor.pipes.diff.before("trivial",igniteConfigFalsyFilter)}diff(e,t){return this.diffPatcher.diff(e,t)}}class ConfigChangesGuard_ConfigChangesGuard{constructor(e,t){this.Confirm=e,this.$sce=t,this.differ=new ConfigChangesGuard_IgniteObjectDiffer}_hasChanges(e,t){return this.differ.diff(e,t)}_confirm(e){return this.Confirm.confirm(this.$sce.trustAsHtml("\n            <p>\n            You have unsaved changes.\n            Are you sure you want to discard them?\n            </p>\n            <details class='config-changes-guard__details'>\n                <summary>Click here to see changes</summary>\n                <div style='max-height: 400px; overflow: auto;'>".concat(xt.html.format(e),"</div>                \n            </details>\n        ")))}guard(e,t){return e||t?Object(ne.a)(this._hasChanges(e,t)).pipe(Object(le.a)(e=>e?this._confirm(e).then(()=>!0):Object(ne.a)(!0)),Object(ce.a)(()=>Object(ne.a)(!1))).toPromise():Promise.resolve(!0)}}ConfigChangesGuard_ConfigChangesGuard.$inject=["Confirm","$sce"];var Lt=i(22),Ft=i(1136),Ut=i(1154),Vt=i(296),zt=i(1173),Ht=i.n(zt);function ConfigSelectionManager_configSelectionManager(e){return t=>{let{itemID$:i,selectedItemRows$:o,visibleRows$:a,loadedItems$:n}=t;const r=Lt.a.create(t=>e.onError({},e=>t.next(e))).pipe(Object(s.a)(e=>e.error().type===Vt.RejectType.ABORTED)),c=a.pipe(Object(l.a)(i,n),Object(s.a)(e=>{let[t,i,o]=e;return!i&&t&&t.length===o.length}),Object(ie.a)("0","0","entity","id")),d=o.pipe(Object(oe.a)(e=>e.map(e=>e.id)),Object(Ft.a)()),u=o.pipe(Object(s.a)(e=>e&&1===e.length),Object(ie.a)("0","id")),p=o.pipe(Object(s.a)(e=>e.length>1||0===e.length)),g=n.pipe(Object(oe.a)(e=>new Set(e.map(e=>e.id))),Object(Ft.a)()),m=g.pipe(Object(l.a)(i.pipe(Object(s.a)(e=>e&&"new"!==e)),d.pipe(Object(Ut.a)([]))),Object(s.a)(e=>{let[t,i,o]=e;return!t.has(i)}),Object(oe.a)(e=>{let[t,i,o]=e;return o.filter(e=>e!==i)}),Object(Ft.a)()),h=Object(Z.a)(c,u).pipe(Object(l.a)(g),Object(s.a)(e=>{let[t,i]=e;return t&&i.has(t)}),Object(ie.a)("0")),v=Object(Z.a)(p.pipe(Object(ue.a)({})),m.pipe(Object(ue.a)({location:"replace",custom:{justIDUpdate:!0}}))).pipe(Object(Ft.a)());return{selectedItemIDs$:Object(Z.a)(i.pipe(Object(s.a)(e=>e),Object(oe.a)(e=>"new"===e?[]:[e])),r.pipe(Object(l.a)(i,(e,t)=>[t])),d).pipe(Object(Ut.a)([]),Object(Ct.a)(Ht.a),Object(Ft.a)()),editGoes$:h,editLeaves$:v}}}ConfigSelectionManager_configSelectionManager.$inject=["$transitions"];var Kt=i(1229),Jt=i.n(Kt);function SummaryZipperService(e){return function(t){const i=e.defer(),o=new Jt.a;return o.postMessage(t),o.onmessage=(e=>{i.resolve(e.data),o.terminate()}),o.onerror=(e=>{i.reject(new Error(e.message)),o.terminate()}),i.promise}}SummaryZipperService.$inject=["$q"];var Gt=i(1230),Wt=i.n(Gt);i(1231);class controller_PageConfigureController{constructor(e,t,i){this.$uiRouter=e,this.ConfigureState=t,this.ConfigSelectors=i,this.clusterID$=void 0,this.clusterName$=void 0,this.tooltipsVisible=!0}$onInit(){this.clusterID$=this.$uiRouter.globals.params$.pipe(Object(ie.a)("clusterID"));const e=this.clusterID$.pipe(Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCluster(e)))),t=this.clusterID$.pipe(Object(oe.a)(e=>"new"===e));this.clusterName$=Object(yt.b)(e,t,(e,t)=>"".concat(t?"Create":"Edit"," cluster configuration ").concat(t?"":"‘".concat(F()(e,"name"),"’")))}$onDestroy(){}}controller_PageConfigureController.$inject=["$uiRouter","ConfigureState","ConfigSelectors"];var Yt={template:Wt.a,controller:controller_PageConfigureController,bindings:{cluster$:"<"}},Qt=angular.module("ignite-console.configuration.page-configure",[]).component("pageConfigure",Yt),Zt=i(6),Xt=i.n(Zt),ei=i(1233),ti=i.n(ei),ii=(i(1234),i(1296)),oi=i(213),ai=i(1162),ni=i.n(ai);i(226);function controller_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function controller_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class controller_PageConfigureBasicController{constructor(e,t,i,o,a,n,r,s,l,c,d,u){this.Confirm=e,this.$uiRouter=t,this.ConfigureState=i,this.ConfigSelectors=o,this.Clusters=a,this.Caches=n,this.IgniteVersion=r,this.$element=s,this.ConfigChangesGuard=l,this.IgniteFormUtils=c,this.AgentManager=d,this.$scope=u,this.form=void 0}$onDestroy(){this.subscription.unsubscribe(),this.onBeforeTransition&&this.onBeforeTransition(),this.$element=null}$postLink(){this.$element.addClass("panel--ignite")}_uiCanExit(e){const t=e.options();return!(!t.custom.justIDUpdate&&!t.redirectedFrom)||(e.onSuccess({},()=>this.reset()),Object(bt.a)(this.ConfigureState.state$.pipe(Object(ie.a)("edit","changes"),Object(ee.a)(1)),this.clusterID$.pipe(Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectClusterShortCaches(e))),Object(ee.a)(1)),this.shortCaches$.pipe(Object(ee.a)(1))).toPromise().then(e=>{let[t,i,o]=e;return this.ConfigChangesGuard.guard({cluster:this.Clusters.normalize(this.originalCluster),caches:i.map(this.Caches.normalize)},{cluster:function controller_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?controller_ownKeys(Object(i),!0).forEach(function(t){controller_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):controller_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}({},this.Clusters.normalize(this.clonedCluster),{caches:t.caches.ids}),caches:o.map(this.Caches.normalize)})}))}$onInit(){this.onBeforeTransition=this.$uiRouter.transitionService.onBefore({},e=>this._uiCanExit(e)),this.memorySizeInputVisible$=this.IgniteVersion.currentSbj.pipe(Object(oe.a)(e=>this.IgniteVersion.since(e.ignite,"2.0.0")));const e=this.$uiRouter.globals.params$.pipe(Object(ee.a)(1),Object(ie.a)("clusterID"),Object(s.a)(e=>e),Object(ee.a)(1));this.clusterID$=e,this.isNew$=this.$uiRouter.globals.params$.pipe(Object(ie.a)("clusterID"),Object(oe.a)(e=>"new"===e)),this.shortCaches$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortCaches),this.shortClusters$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortClustersValue()),this.originalCluster$=e.pipe(Object(Ct.a)(),Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectClusterToEdit(e))),Object(Ct.a)(),Object(ii.a)(1),Object(oi.a)()),this.subscription=Object(Z.a)(this.shortCaches$.pipe(Object(oe.a)(e=>e.sort((e,t)=>ni()(e.name,t.name))),Object(c.a)(e=>this.shortCaches=e)),this.shortClusters$.pipe(Object(c.a)(e=>this.shortClusters=e)),this.originalCluster$.pipe(Object(c.a)(e=>{this.originalCluster=e,F()(e,"id")!==F()(this.clonedCluster,"id")&&(this.clonedCluster=Q()(e)),this.defaultMemoryPolicy=this.Clusters.getDefaultClusterMemoryPolicy(this.clonedCluster)}))).subscribe(),this.formActionsMenu=[{text:"Save",click:()=>this.save(),icon:"checkmark"},{text:"Save and Download",click:()=>this.save(!0),icon:"download"}],this.cachesColDefs=[{name:"Name:",cellClass:"pc-form-grid-col-10"},{name:"Mode:",cellClass:"pc-form-grid-col-10"},{name:"Atomicity:",cellClass:"pc-form-grid-col-20",tip:"\n                Atomicity:\n                <ul>\n                    <li>ATOMIC - in this mode distributed transactions and distributed locking are not supported</li>\n                    <li>TRANSACTIONAL - in this mode specified fully ACID-compliant transactional cache behavior</li>\n                    <li>TRANSACTIONAL_SNAPSHOT - in this mode specified fully ACID-compliant transactional cache behavior for both key-value API and SQL transactions</li>\n                </ul>\n            "},{name:"Backups:",cellClass:"pc-form-grid-col-10",tip:"\n                Number of nodes used to back up single partition for partitioned cache\n            "}]}addCache(){this.ConfigureState.dispatchAction({type:"ADD_CACHE_TO_EDIT"})}removeCache(e){this.ConfigureState.dispatchAction(et(this.$uiRouter.globals.params.clusterID,"caches",[e.id],!1,!1))}changeCache(e){return this.ConfigureState.dispatchAction(ot("caches",e))}save(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.form.$invalid)return this.IgniteFormUtils.triggerValidation(this.form,this.$scope);this.ConfigureState.dispatchAction((e?pt:ut)(Q()(this.clonedCluster)))}reset(){this.clonedCluster=Q()(this.originalCluster),this.ConfigureState.dispatchAction({type:"RESET_EDIT_CHANGES"})}restart(){this.AgentManager.startCluster(Clusters_Clusters),this.$scope.status="started",this.ConfigureState.dispatchAction({type:"RESTART_CLUSTER"}),this.Clusters.status="started"}stop(){this.AgentManager.stopCluster(Clusters_Clusters),this.$scope.status="stoped",this.ConfigureState.dispatchAction({type:"STOP_CLUSTER"}),this.Clusters.status="stoped"}isStoped(){return"started"!==this.$scope.status}confirmAndReset(){return this.Confirm.confirm("Are you sure you want to undo all changes for current cluster?").then(()=>this.reset()).catch(()=>{})}confirmAndRestart(){return this.Confirm.confirm("Are you sure you want to restart current cluster? Current status:"+this.Clusters.status).then(()=>this.restart()).catch(()=>{})}confirmAndStop(){return this.Confirm.confirm("Are you sure you want to stop current cluster?  Current status:"+this.Clusters.status).then(()=>this.stop()).catch(()=>{})}}controller_PageConfigureBasicController.$inject=["Confirm","$uiRouter","ConfigureState","ConfigSelectors","Clusters","Caches","IgniteVersion","$element","ConfigChangesGuard","IgniteFormUtils","$scope"];var ri={template:ti.a,controller:controller_PageConfigureBasicController};const si=Symbol("ADD_NEW_CACHE"),li=Symbol("REMOVE_CACHE"),ci=Symbol("SET_SELECTED_CACHES"),di=Symbol("SET_CLUSTER"),ui={clusterID:-1,cluster:null,newClusterCaches:[],oldClusterCaches:[]},pi=e=>[...e.list.spaces.keys()][0],gi=(e,t)=>t.caches.map(t=>Q()(e.get(t))).filter(e=>e),mi=e=>e&&e.id<0;var hi=Xt.a.module("ignite-console.page-configure-basic",[]).run(["ConfigureState",e=>e.addReducer((e,t)=>Object.assign(e,{configureBasic:function reducer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ui,t=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0;switch(t.type){case di:{const o=mi(t)?Object.assign({},t.cluster,{id:-1,space:pi(i),name:me("New cluster",[...i.list.clusters.values()],e=>{let{name:t,i:i}=e;return"".concat(t," (").concat(i,")")})}):Q()(i.list.clusters.get(t.id));return Object.assign({},e,{clusterID:o.id,cluster:o,newClusterCaches:[],oldClusterCaches:gi(i.list.caches,o)})}case si:{const o={id:t.id,space:pi(i),name:me("New cache",[...i.list.caches.values(),...e.newClusterCaches],e=>{let{name:t,i:i}=e;return"".concat(t," (").concat(i,")")}),cacheMode:"PARTITIONED",atomicityMode:"ATOMIC",readFromBackup:!0,copyOnRead:!0,clusters:[],domains:[],cacheStoreFactory:{CacheJdbcBlobStoreFactory:{connectVia:"DataSource"}},memoryPolicyName:"default"};return Object.assign({},e,{newClusterCaches:[...e.newClusterCaches,o]})}case li:{const i=t.cache;return Object.assign({},e,{newClusterCaches:mi(i)?e.newClusterCaches.filter(e=>e.id!==i.id):e.newClusterCaches,oldClusterCaches:mi(i)?e.oldClusterCaches:e.oldClusterCaches.filter(e=>e.id!==i.id)})}case ci:{const o=Object.assign({},e,{cluster:Object.assign({},e.cluster,{caches:[...t.cacheIDs.filter(e=>e)]})});return o.oldClusterCaches=gi(i.list.caches,o.cluster),o}default:return e}}(e.configureBasic,t,e)}))]).component("pageConfigureBasic",ri),vi=i(1236),fi=i.n(vi);i(1237);class PageConfigureAdvancedController{constructor(){this.menuItems=void 0}$onInit(){this.menuItems=this.constructor.menuItems}}PageConfigureAdvancedController.menuItems=[{text:"Cluster",sref:"base.configuration.edit.advanced.cluster"},{text:"SQL Scheme",sref:"base.configuration.edit.advanced.models"},{text:"Caches",sref:"base.configuration.edit.advanced.caches"}];var yi={template:fi.a,controller:PageConfigureAdvancedController},bi=i(1239),Ci=i.n(bi);class controller_PageConfigureAdvancedCluster{constructor(e,t,i){this.$uiRouter=e,this.ConfigSelectors=t,this.ConfigureState=i}$onInit(){const e=this.$uiRouter.globals.params$.pipe(Object(ee.a)(1),Object(ie.a)("clusterID"),Object(s.a)(e=>e),Object(ee.a)(1));this.shortCaches$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortCaches),this.originalCluster$=e.pipe(Object(Ct.a)(),Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectClusterToEdit(e))),Object(Ct.a)(),Object(ii.a)(1),Object(oi.a)()),this.isNew$=this.$uiRouter.globals.params$.pipe(Object(ie.a)("clusterID"),Object(oe.a)(e=>"new"===e)),this.isBlocked$=e}save(e){let{cluster:t,download:i}=e;this.ConfigureState.dispatchAction(lt(t,i))}}controller_PageConfigureAdvancedCluster.$inject=["$uiRouter","ConfigSelectors","ConfigureState"];var Si={name:"pageConfigureAdvancedCluster",template:Ci.a,controller:controller_PageConfigureAdvancedCluster},qi=Xt.a.module("ignite-console.page-configure-advanced.clusters",[]).component(Si.name,Si),Pi=i(1240),_i=i.n(Pi),Ei=i(1241),wi=i.n(Ei),Ti=i(1242),$i=i.n(Ti);class controller_PageConfigureAdvancedModels{constructor(e,t,i,o,a,n){this.ConfigSelectors=e,this.ConfigureState=t,this.$uiRouter=i,this.Models=o,this.$state=a,this.configSelectionManager=n,this.visibleRows$=void 0,this.selectedRows$=void 0,this.columnDefs=void 0,this.itemID$=void 0,this.shortItems$=void 0,this.shortCaches$=void 0,this.originalItem$=void 0}$onDestroy(){this.subscription.unsubscribe(),this.visibleRows$.complete(),this.selectedRows$.complete()}$onInit(){var e=this;this.visibleRows$=new G.a,this.selectedRows$=new G.a,this.columnDefs=[{name:"hasIndex",displayName:"Indexed",field:"hasIndex",type:"boolean",enableFiltering:!0,visible:!0,multiselectFilterOptions:[{value:!0,label:"Yes"},{value:!1,label:"No"}],width:100,cellTemplate:_i.a},{name:"keyType",displayName:"Key type",field:"keyType",enableHiding:!1,filter:{placeholder:"Filter by key type…"},cellTemplate:wi.a,minWidth:165},{name:"valueType",displayName:"Value type",field:"valueType",enableHiding:!1,filter:{placeholder:"Filter by value type…"},sort:{direction:"asc",priority:0},cellTemplate:$i.a,minWidth:165}],this.itemID$=this.$uiRouter.globals.params$.pipe(Object(ie.a)("modelID")),this.shortItems$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortModels,Object(c.a)(function(){const t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).every(e=>e.hasIndex);e.columnDefs[0].visible=!t}),Object(ii.a)(1),Object(oi.a)()),this.shortCaches$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortCaches),this.originalItem$=this.itemID$.pipe(Object(Ct.a)(),Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectModelToEdit(e))),Object(Ct.a)(),Object(ii.a)(1),Object(oi.a)()),this.isNew$=this.itemID$.pipe(Object(oe.a)(e=>"new"===e)),this.itemEditTitle$=Object(yt.b)(this.isNew$,this.originalItem$,(e,t)=>"".concat(e?"Create":"Edit"," model ").concat(!e&&F()(t,"valueType")?"‘".concat(F()(t,"valueType"),"’"):"")),this.selectionManager=this.configSelectionManager({itemID$:this.itemID$,selectedItemRows$:this.selectedRows$,visibleRows$:this.visibleRows$,loadedItems$:this.shortItems$}),this.tableActions$=this.selectionManager.selectedItemIDs$.pipe(Object(oe.a)(e=>[{action:"Clone",click:()=>this.clone(e),available:!1},{action:"Delete",click:()=>{this.remove(e)},available:!0}])),this.subscription=Object(Z.a)(this.originalItem$,this.selectionManager.editGoes$.pipe(Object(c.a)(e=>this.edit(e))),this.selectionManager.editLeaves$.pipe(Object(c.a)(e=>this.$state.go("base.configuration.edit.advanced.models",null,e)))).subscribe()}edit(e){this.$state.go("base.configuration.edit.advanced.models.model",{modelID:e})}save(e){let{model:t,download:i}=e;this.ConfigureState.dispatchAction(dt(t,i))}remove(e){this.ConfigureState.dispatchAction(et(this.$uiRouter.globals.params.clusterID,"models",e,!0,!0))}}controller_PageConfigureAdvancedModels.$inject=["ConfigSelectors","ConfigureState","$uiRouter","Models","$state","configSelectionManager"];var Ii=i(1243),Oi=i.n(Ii),Ai=(i(1244),{name:"pageConfigureAdvancedModels",template:Oi.a,controller:controller_PageConfigureAdvancedModels}),ki=Xt.a.module("ignite-console.page-configure-advanced.models",[]).component(Ai.name,Ai),Di=i(1246),ji=i.n(Di);class controller_Controller{constructor(e,t,i,o,a,n,r,s){this.ConfigSelectors=e,this.configSelectionManager=t,this.$uiRouter=i,this.$transitions=o,this.ConfigureState=a,this.$state=n,this.Version=r,this.Caches=s,this.visibleRows$=new G.a,this.selectedRows$=new G.a,this.cachesColumnDefs=[{name:"name",displayName:"Name",field:"name",enableHiding:!1,sort:{direction:"asc",priority:0},filter:{placeholder:"Filter by name…"},sortingAlgorithm:ni.a,minWidth:165},{name:"cacheMode",displayName:"Mode",field:"cacheMode",multiselectFilterOptions:this.Caches.cacheModes,width:160},{name:"atomicityMode",displayName:"Atomicity",field:"atomicityMode",multiselectFilterOptions:this.Caches.atomicityModes,width:160},{name:"backups",displayName:"Backups",field:"backups",width:130,enableFiltering:!1,cellTemplate:'\n                <div class="ui-grid-cell-contents">{{ grid.appScope.$ctrl.Caches.getCacheBackupsCount(row.entity) }}</div>\n            '}]}$onInit(){const e=this.$uiRouter.globals.params$.pipe(Object(ie.a)("cacheID"),Object(ii.a)(1),Object(oi.a)());this.shortCaches$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortCaches),this.shortModels$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCurrentShortModels),this.originalCache$=e.pipe(Object(Ct.a)(),Object(le.a)(e=>this.ConfigureState.state$.pipe(this.ConfigSelectors.selectCacheToEdit(e)))),this.isNew$=e.pipe(Object(oe.a)(e=>"new"===e)),this.itemEditTitle$=Object(yt.b)(this.isNew$,this.originalCache$,(e,t)=>"".concat(e?"Create":"Edit"," cache ").concat(!e&&t&&t.name?"‘".concat(t.name,"’"):"")),this.selectionManager=this.configSelectionManager({itemID$:e,selectedItemRows$:this.selectedRows$,visibleRows$:this.visibleRows$,loadedItems$:this.shortCaches$}),this.subscription=Object(Z.a)(this.originalCache$,this.selectionManager.editGoes$.pipe(Object(c.a)(e=>this.edit(e))),this.selectionManager.editLeaves$.pipe(Object(c.a)(e=>this.$state.go("base.configuration.edit.advanced.caches",null,e)))).subscribe(),this.isBlocked$=e,this.tableActions$=this.selectionManager.selectedItemIDs$.pipe(Object(oe.a)(e=>[{action:"Clone",click:()=>this.clone(e),available:!1},{action:"Delete",click:()=>{this.remove(e)},available:!0}]))}remove(e){this.ConfigureState.dispatchAction(et(this.$uiRouter.globals.params.clusterID,"caches",e,!0,!0))}$onDestroy(){this.subscription.unsubscribe(),this.visibleRows$.complete(),this.selectedRows$.complete()}edit(e){this.$state.go("base.configuration.edit.advanced.caches.cache",{cacheID:e})}save(e){let{cache:t,download:i}=e;this.ConfigureState.dispatchAction(ct(t,i))}}controller_Controller.$inject=["ConfigSelectors","configSelectionManager","$uiRouter","$transitions","ConfigureState","$state","IgniteVersion","Caches"];var Ni={name:"pageConfigureAdvancedCaches",template:ji.a,controller:controller_Controller},Mi=Xt.a.module("ignite-console.page-configure-advanced.caches",[]).component("pageConfigureAdvancedCaches",Ni),Ri=i(1247),Bi=i(1248),xi=i.n(Bi),Li=(i(1249),{controller:Ri.a,templateUrl:xi.a,bindings:{cache:"<",caches:"<",models:"<",onSave:"&"}}),Fi=Xt.a.module("configuration.cache-edit-form",[]).component("cacheEditForm",Li);class controller_ClusterEditFormController{constructor(e,t,i,o,a,n,r){this.IgniteLegacyUtils=e,this.IgniteEventGroups=t,this.IgniteConfirm=i,this.IgniteVersion=o,this.$scope=a,this.Clusters=n,this.IgniteFormUtils=r,this.caches=void 0,this.cachesMenu=void 0,this.servicesCachesMenu=void 0,this.onSave=void 0,this.reset=(()=>this.clonedCluster=Q()(this.cluster))}$onInit(){this.available=this.IgniteVersion.available.bind(this.IgniteVersion);const e=()=>{this.eventStorage=[{value:"Memory",label:"Memory"},{value:"Custom",label:"Custom"}],this.marshallerVariant=[{value:"JdkMarshaller",label:"JdkMarshaller"},{value:null,label:"Default"}],this.failureHandlerVariant=[{value:"RestartProcess",label:"Restart process"},{value:"StopNodeOnHalt",label:"Try stop with timeout"},{value:"StopNode",label:"Stop on critical error"},{value:"Noop",label:"Disabled"},{value:"Custom",label:"Custom"},{value:null,label:"Default"}],this.ignoredFailureTypes=[{value:"SEGMENTATION",label:"SEGMENTATION"},{value:"SYSTEM_WORKER_TERMINATION",label:"SYSTEM_WORKER_TERMINATION"},{value:"SYSTEM_WORKER_BLOCKED",label:"SYSTEM_WORKER_BLOCKED"},{value:"CRITICAL_ERROR",label:"CRITICAL_ERROR"},{value:"SYSTEM_CRITICAL_OPERATION_TIMEOUT",label:"SYSTEM_CRITICAL_OPERATION_TIMEOUT"}],this.available("2.0.0")?(this.eventStorage.push({value:null,label:"Disabled"}),this.eventGroups=h.a.filter(this.IgniteEventGroups,e=>{let{value:t}=e;return"EVTS_SWAPSPACE"!==t}),h.a.forEach(this.eventGroups,e=>e.events=h.a.filter(e.events,e=>e.indexOf("SWAP")<0))):(this.eventGroups=this.IgniteEventGroups,this.marshallerVariant.splice(0,0,{value:"OptimizedMarshaller",label:"OptimizedMarshaller"})),this.eventTypes=[],h.a.forEach(this.eventGroups,e=>{h.a.forEach(e.events,e=>{const t={value:e,label:e};h.a.find(this.eventTypes,t)||this.eventTypes.push(t)})})};e();const t=e=>{if(e)if(this.available("2.0.0")){const t=h.a.map(this.eventGroups,"value");h.a.remove(e.includeEventTypes,e=>!h.a.includes(t,e)),"OptimizedMarshaller"===h.a.get(e,"marshaller.kind")&&(e.marshaller.kind=null)}else e&&!h.a.get(e,"eventStorage.kind")&&h.a.set(e,"eventStorage.kind","Memory")};this.subscription=this.IgniteVersion.currentSbj.pipe(Object(c.a)(e),Object(c.a)(()=>t(this.clonedCluster))).subscribe(),this.supportedJdbcTypes=this.IgniteLegacyUtils.mkOptions(this.IgniteLegacyUtils.SUPPORTED_JDBC_TYPES),this.$scope.ui=this.IgniteFormUtils.formUI(),this.$scope.ui.loadedPanels=["checkpoint","serviceConfiguration","odbcConfiguration"],this.formActions=[{text:"Save",icon:"checkmark",click:()=>this.save()},{text:"Save and Download",icon:"download",click:()=>this.save(!0)}]}$onDestroy(){this.subscription.unsubscribe()}$onChanges(e){"cluster"in e&&this.shouldOverwriteValue(this.cluster,this.clonedCluster)&&(this.clonedCluster=Q()(e.cluster.currentValue),this.$scope.ui&&this.$scope.ui.inputForm&&(this.$scope.ui.inputForm.$setPristine(),this.$scope.ui.inputForm.$setUntouched())),"caches"in e&&(this.cachesMenu=(e.caches.currentValue||[]).map(e=>({label:e.name,value:e.id})),this.servicesCachesMenu=[{label:"Key-affinity not used",value:null}].concat(this.cachesMenu))}shouldOverwriteValue(e,t){return F()(e,"id")!==F()(t,"id")||!Ht()(F()(e,"caches"),F()(t,"caches"))||!Ht()(F()(e,"models"),F()(t,"models"))}getValuesToCompare(){return[this.cluster,this.clonedCluster].map(this.Clusters.normalize)}save(e){if(this.$scope.ui.inputForm.$invalid)return this.IgniteFormUtils.triggerValidation(this.$scope.ui.inputForm,this.$scope);this.onSave({$event:{cluster:Q()(this.clonedCluster),download:e}})}confirmAndReset(){return this.IgniteConfirm.confirm("Are you sure you want to undo all changes for current cluster?").then(this.reset)}}controller_ClusterEditFormController.$inject=["IgniteLegacyUtils","IgniteEventGroups","IgniteConfirm","IgniteVersion","$scope","Clusters","IgniteFormUtils"];var Ui=i(1251),Vi=i.n(Ui),zi=(i(1252),{controller:controller_ClusterEditFormController,templateUrl:Vi.a,bindings:{isNew:"<",cluster:"<",caches:"<",onSave:"&"}}),Hi=Xt.a.module("configuration.cluster-edit-form",[]).component("clusterEditForm",zi);class service_ModalImportModels{constructor(e,t,i,o){this.$modal=e,this.$q=t,this.$uiRouter=i,this.AgentManager=o,this.deferred=void 0,this._state=void 0,this._modal=void 0}_goToDynamicState(){return this.deferred?this.deferred.promise:(this.deferred=this.$q.defer(),this._state&&this.$uiRouter.stateRegistry.deregister(this._state),this._state=this.$uiRouter.stateRegistry.register({name:"importModels",parent:this.$uiRouter.stateService.current,onEnter:()=>{this._open()},onExit:()=>{this._modal&&this._modal.hide()}}),this.$uiRouter.stateService.go(this._state,this.$uiRouter.stateService.params).catch(()=>{this.deferred.reject(!1),this.deferred=null}))}_open(){const e=this;return this._modal=this.$modal({template:"\n                <modal-import-models\n                    on-hide='$ctrl.onHide()'\n                    cluster-id='$ctrl.$state.params.clusterID'\n                ></modal-import-models>\n            ",controller:["$state",function(t){this.$state=t,this.onHide=(()=>{e.deferred.resolve(!0),this.$state.go("^")})}],controllerAs:"$ctrl",backdrop:"static",show:!1}),this._modal.$promise.then(()=>this._modal.show()).then(()=>this.deferred.promise).finally(()=>this.deferred=null)}open(){this._goToDynamicState()}}service_ModalImportModels.$inject=["$modal","$q","$uiRouter","AgentManager"];i(378);class controller_ModelEditFormController{constructor(e,t,i,o,a,n,r,s,l){this.ModalImportModels=e,this.ErrorPopover=t,this.LegacyUtils=i,this.Confirm=o,this.ConfigChangesGuard=a,this.IgniteVersion=n,this.$scope=r,this.Models=s,this.IgniteFormUtils=l,this.model=void 0,this.onSave=void 0,this.javaBuiltInClassesBase=this.LegacyUtils.javaBuiltInClasses,this.reset=(e=>e?this.$scope.backupItem=Q()(this.model):void 0)}$onInit(){this.available=this.IgniteVersion.available.bind(this.IgniteVersion),this.queryFieldTypes=this.LegacyUtils.javaBuiltInClasses.concat("byte[]"),this.$scope.ui=this.IgniteFormUtils.formUI(),this.$scope.javaBuiltInClasses=this.LegacyUtils.javaBuiltInClasses,this.$scope.supportedJdbcTypes=this.LegacyUtils.mkOptions(this.LegacyUtils.SUPPORTED_JDBC_TYPES),this.$scope.supportedJavaTypes=this.LegacyUtils.mkOptions(this.LegacyUtils.javaBuiltInTypes),this.formActions=[{text:"Save",icon:"checkmark",click:()=>this.save()},{text:"Save and Download",icon:"download",click:()=>this.save(!0)}]}fields(e,t){const i=this.$scope.backupItem?h.a.map(this.$scope.backupItem.fields,e=>({value:e.name,label:e.name})):[];return"new"===e?i:(h.a.forEach(h.a.isArray(t)?t:[t],e=>{h.a.find(i,{value:e})||i.push({value:e,label:e+" (Unknown field)"})}),i)}importModels(){return this.ModalImportModels.open()}checkQueryConfiguration(e){if("Configuration"===e.queryMetadata&&this.LegacyUtils.domainForQueryConfigured(e)){if(h.a.isEmpty(e.fields))return this.ErrorPopover.show("queryFields","Query fields should not be empty",this.$scope.ui,"query");const t=e.indexes;if(t&&t.length>0&&h.a.find(t,(t,i)=>h.a.isEmpty(t.fields)?!this.ErrorPopover.show("indexes"+i,"Index fields are not specified",this.$scope.ui,"query"):h.a.find(t.fields,t=>!h.a.find(e.fields,e=>e.name===t.name))?!this.ErrorPopover.show("indexes"+i,"Index contains not configured fields",this.$scope.ui,"query"):void 0))return!1}return!0}checkStoreConfiguration(e){if(this.LegacyUtils.domainForStoreConfigured(e)){if(this.LegacyUtils.isEmptyString(e.databaseSchema))return this.ErrorPopover.show("databaseSchemaInput","Database schema should not be empty",this.$scope.ui,"store");if(this.LegacyUtils.isEmptyString(e.databaseTable))return this.ErrorPopover.show("databaseTableInput","Database table should not be empty",this.$scope.ui,"store");if(h.a.isEmpty(e.keyFields))return this.ErrorPopover.show("keyFields","Key fields are not specified",this.$scope.ui,"store");if(this.LegacyUtils.isJavaBuiltInClass(e.keyType)&&1!==e.keyFields.length)return this.ErrorPopover.show("keyFields","Only one field should be specified in case when key type is a Java built-in type",this.$scope.ui,"store");if(h.a.isEmpty(e.valueFields))return this.ErrorPopover.show("valueFields","Value fields are not specified",this.$scope.ui,"store")}return!0}validate(e){return!!this.checkQueryConfiguration(e)&&(!!this.checkStoreConfiguration(e)&&(this.LegacyUtils.domainForStoreConfigured(e)||this.LegacyUtils.domainForQueryConfigured(e)||"Configuration"!==e.queryMetadata?!(!this.LegacyUtils.domainForStoreConfigured(e)&&e.generatePojo)||this.ErrorPopover.show("store-title","Domain model for cache store should be configured when generation of POJO classes is enabled",this.$scope.ui,"store"):this.ErrorPopover.show("query-title","SQL query domain model should be configured",this.$scope.ui,"query")))}$onChanges(e){"model"in e&&F()(this.$scope.backupItem,"id")!==F()(this.model,"id")&&(this.$scope.backupItem=Q()(e.model.currentValue),this.$scope.ui&&this.$scope.ui.inputForm&&(this.$scope.ui.inputForm.$setPristine(),this.$scope.ui.inputForm.$setUntouched())),"caches"in e&&(this.cachesMenu=(e.caches.currentValue||[]).map(e=>({label:e.name,value:e.id})))}onQueryFieldsChange(e){this.$scope.backupItem=this.Models.removeInvalidFields(e)}getValuesToCompare(){return[this.model,this.$scope.backupItem].map(this.Models.normalize)}save(e){if(this.$scope.ui.inputForm.$invalid)return this.IgniteFormUtils.triggerValidation(this.$scope.ui.inputForm,this.$scope);this.validate(this.$scope.backupItem)&&this.onSave({$event:{model:Q()(this.$scope.backupItem),download:e}})}confirmAndReset(){return this.Confirm.confirm("Are you sure you want to undo all changes for current model?").then(()=>!0).then(this.reset).catch(()=>{})}}controller_ModelEditFormController.$inject=["ModalImportModels","IgniteErrorPopover","IgniteLegacyUtils","Confirm","ConfigChangesGuard","IgniteVersion","$scope","Models","IgniteFormUtils"];var Ki=i(1254),Ji=i.n(Ki),Gi=(i(1255),{controller:controller_ModelEditFormController,templateUrl:Ji.a,bindings:{model:"<",models:"<",caches:"<",onSave:"&"}}),Wi=Xt.a.module("configuration.model-edit-form",[]).component("modelEditForm",Gi),Yi=Xt.a.module("ignite-console.page-configure-advanced",[qi.name,ki.name,Mi.name,Wi.name,Fi.name,Hi.name]).component("pageConfigureAdvanced",yi),Qi=i(1257),Zi=i.n(Qi);i(1258);class ModalPreviewProject{constructor(e){this.$modal=e,this.modalInstance=void 0}open(e){return this.modalInstance=this.$modal({locals:{cluster:e},controller:["cluster","Demo",function(e,t){this.cluster=e,this.isDemo=!!t.enabled}],controllerAs:"$ctrl",template:"\n                <modal-preview-project\n                    on-hide='$hide()'\n                    cluster='::$ctrl.cluster'\n                    is-demo='::$ctrl.isDemo'\n                ></modal-preview-project>\n            ",show:!1}),this.modalInstance.$promise.then(e=>{this.modalInstance.show()})}}ModalPreviewProject.$inject=["$modal"];const Xi=e=>'\n    <div class="ui-grid-cell-contents">\n        <a\n            class="link-success"\n            ui-sref="'.concat(e,"({clusterID: row.entity.id})\"\n            title='Click to edit'\n        >{{ row.entity[col.field] }}</a>\n    </div>\n");class controller_PageConfigureOverviewController{constructor(e,t,i,o,a,n){this.$uiRouter=e,this.ModalPreviewProject=t,this.Clusters=i,this.ConfigureState=o,this.ConfigSelectors=a,this.ConfigurationDownload=n,this.shortClusters$=void 0,this.clustersColumnDefs=void 0,this.selectedRows$=void 0,this.selectedRowsIDs$=void 0}$onDestroy(){this.selectedRows$.complete()}removeClusters(e){this.ConfigureState.dispatchAction(nt(e.map(e=>e.id))),this.selectedRows$.next([])}editCluster(e){return this.$uiRouter.stateService.go("^.edit",{clusterID:e.id})}$onInit(){this.shortClusters$=this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortClustersValue()),this.clustersColumnDefs=[{name:"name",displayName:"Name",field:"name",enableHiding:!1,filter:{placeholder:"Filter by name…"},sort:{direction:"asc",priority:0},sortingAlgorithm:ni.a,cellTemplate:Xi("base.configuration.edit"),minWidth:165},{name:"discovery",displayName:"Discovery",field:"discovery",multiselectFilterOptions:this.Clusters.discoveries,width:150},{name:"caches",displayName:"Caches",field:"cachesCount",cellClass:"ui-grid-number-cell",cellTemplate:Xi("base.configuration.edit.advanced.caches"),enableFiltering:!1,type:"number",width:95},{name:"models",displayName:"Models",field:"modelsCount",cellClass:"ui-grid-number-cell",cellTemplate:Xi("base.configuration.edit.advanced.models"),enableFiltering:!1,type:"number",width:95}],this.selectedRows$=new G.a,this.selectedRowsIDs$=this.selectedRows$.pipe(Object(oe.a)(e=>e.map(e=>e.id))),this.actions$=this.selectedRows$.pipe(Object(oe.a)(e=>[{action:"Edit",click:()=>this.editCluster(e[0]),available:1===e.length},{action:"See project structure",click:()=>this.ModalPreviewProject.open(e[0]),available:1===e.length},{action:"Download project",click:()=>this.ConfigurationDownload.downloadClusterConfiguration(e[0]),available:1===e.length},{action:"Delete",click:()=>this.removeClusters(e),available:!0}]))}}controller_PageConfigureOverviewController.$inject=["$uiRouter","ModalPreviewProject","Clusters","ConfigureState","ConfigSelectors","ConfigurationDownload"];var eo={template:Zi.a,controller:controller_PageConfigureOverviewController},to=i(1174),io=i.n(to),oo=i(1260),ao=i.n(oo),no=i(176),ro=i.n(no);const so=(e,t)=>!Ht()(io()(e,"visible"),io()(t,"visible")),lo=e=>"selectionRowHeaderCol"!==e.colDef.name;function directive(e){return{require:"^uiGrid",link:{pre(t,i,o,a){a.grid.options.enableColumnCategories&&(a.grid.api.core.registerColumnsProcessor(t=>{const i=a.grid.options.categories,o=ao()(t.filter(lo).map(e=>{let{colDef:t}=e;return t.categoryDisplayName=t.categoryDisplayName||t.displayName,{name:t.categoryDisplayName||t.displayName,enableHiding:t.enableHiding,visible:!!t.visible}}),"name");return so(i,o)&&(a.grid.options.categories=o,a.grid.callDataChangeCallbacks(e.dataChange.COLUMN)),t}),a.grid.options.headerTemplate=ro.a)}}}}directive.$inject=["uiGridConstants"];var co=Xt.a.module("ignite-console.page-configure-overview",[]).component("pageConfigureOverview",eo).directive("pcoGridColumnCategories",directive),uo=(i(1261),i(1262),i(1263)),po=i.n(uo),mo=(i(1264),i(651)),ho=i.n(mo);class controller_ModalPreviewProjectController{constructor(e,t,i,o,a,n,r,s){this.PageConfigure=e,this.IgniteConfigurationResource=t,this.summaryZipper=i,this.IgniteVersion=o,this.$scope=a,this.ConfigurationDownload=n,this.IgniteLoading=r,this.IgniteMessages=s,this.onHide=void 0,this.cluster=void 0,this.isDemo=void 0,this.fileText=void 0}$onInit(){this.treeOptions={nodeChildren:"children",dirSelectable:!1,injectClasses:{iExpanded:"fa fa-folder-open-o",iCollapsed:"fa fa-folder-o"}},this.doStuff(this.cluster,this.isDemo)}showPreview(e){this.fileText="",e&&(this.fileExt=e.file.name.split(".").reverse()[0].toLowerCase(),e.file.dir||e.file.async("string").then(e=>{this.fileText=e,this.$scope.$applyAsync()}))}doStuff(e,t){return this.IgniteLoading.start("projectStructurePreview"),this.PageConfigure.getClusterConfiguration({clusterID:e.id,isDemo:t}).then(e=>this.IgniteConfigurationResource.populate(e)).then(t=>{let{clusters:i}=t;return i.find(t=>{let{id:i}=t;return i===e.id})}).then(e=>this.summaryZipper({cluster:e,data:{},demoMode:t,targetVer:this.IgniteVersion.currentSbj.getValue()})).then(ho.a.loadAsync).then(t=>{const i=(e=>Object.keys(e).map((t,i,o)=>({fullPath:t,path:t.replace(/\/$/,""),file:e[t],parent:e[o.filter(e=>t.startsWith(e)&&e!==t).sort((e,t)=>t.length-e.length)[0]]})).map((e,t,i)=>Object.assign(e,{path:e.parent?e.path.replace(e.parent.name,""):e.path,children:i.filter(t=>t.parent&&t.parent.name===e.file.name)})))(t.files);this.data=[{path:this.ConfigurationDownload.nameFile(e),file:{dir:!0},children:i.filter(e=>!e.parent)}],this.selectedNode=i.find(e=>e.path.includes("server.xml")),this.expandedNodes=[...this.data,...i.filter(e=>!e.fullPath.startsWith("src/main/java/")||/src\/main\/java(\/(config|load|startup))?\/$/.test(e.fullPath))],this.showPreview(this.selectedNode),this.IgniteLoading.finish("projectStructurePreview")}).catch(e=>{this.IgniteMessages.showError("Failed to generate project preview: ",e),this.onHide({})})}orderBy(){}}controller_ModalPreviewProjectController.$inject=["PageConfigure","IgniteConfigurationResource","IgniteSummaryZipper","IgniteVersion","$scope","ConfigurationDownload","IgniteLoading","IgniteMessages"];var vo={name:"modalPreviewProject",template:po.a,controller:controller_ModalPreviewProjectController,bindings:{onHide:"&",cluster:"<",isDemo:"<"}},fo=Xt.a.module("ignite-console.page-configure.modal-preview-project",[]).service("ModalPreviewProject",ModalPreviewProject).component(vo.name,vo),yo=i(1266),bo=i.n(yo),Co=(i(1267),i(278)),So=i.n(Co);class controller_ItemsTableController{constructor(e,t,i,o){var a=this;this.oneWaySelection=!1,this.onRowsSelectionChange=So()(function(e){if((arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).ignore)return;const t=a.gridAPI.selection.legacyGetSelectedRows();a.oneWaySelection&&e.forEach(e=>e.isSelected=!1),a.onSelectionChange&&a.onSelectionChange({$event:t})}),Object.assign(this,{$scope:e,gridUtil:t,$timeout:i,uiGridSelectionService:o}),this.rowIdentityKey="id"}$onInit(){this.grid={data:this.items,columnDefs:this.columnDefs,rowHeight:46,enableColumnMenus:!1,enableFullRowSelection:!0,enableSelectionBatchEvent:!0,selectionRowHeaderWidth:52,enableColumnCategories:!0,flatEntityAccess:!0,headerRowHeight:70,modifierKeysToMultiSelect:!0,enableFiltering:!0,rowIdentity:e=>e[this.rowIdentityKey],onRegisterApi:e=>{this.gridAPI=e,e.selection.on.rowSelectionChanged(this.$scope,(e,t)=>{this.onRowsSelectionChange([e],t)}),e.selection.on.rowSelectionChangedBatch(this.$scope,(e,t)=>{this.onRowsSelectionChange(e,t)}),e.core.on.rowsVisibleChanged(this.$scope,()=>{const t=e.core.getVisibleRows();this.onVisibleRowsChange&&this.onVisibleRowsChange({$event:t}),this.adjustHeight(e,t.length),this.showFilterNotification=this.grid.data.length&&0===t.length}),this.onFilterChanged&&e.core.on.filterChanged(this.$scope,()=>{this.onFilterChanged()}),this.$timeout(()=>{this.selectedRowId&&this.applyIncomingSelection(this.selectedRowId)})},appScopeProvider:this.$scope.$parent},this.actionsMenu=this.makeActionsMenu(this.incomingActionsMenu)}makeActionsMenu(){return arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]}$onChanges(e){const t=t=>t in e&&e[t].currentValue!==e[t].previousValue;t("items")&&this.grid&&(this.grid.data=e.items.currentValue,this.gridAPI.grid.modifyRows(this.grid.data),this.adjustHeight(this.gridAPI,this.grid.data.length),"selectedRowId"in this&&this.applyIncomingSelection(this.selectedRowId)),t("selectedRowId")&&this.grid&&this.grid.data&&this.applyIncomingSelection(e.selectedRowId.currentValue),"incomingActionsMenu"in e&&(this.actionsMenu=this.makeActionsMenu(e.incomingActionsMenu.currentValue))}applyIncomingSelection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.gridAPI.selection.clearSelectedRows({ignore:!0});const t=this.grid.data.filter(t=>e.includes(t[this.rowIdentityKey]));t.forEach(e=>{this.gridAPI.selection.selectRow(e,{ignore:!0})}),1===t.length&&this.$timeout(()=>{this.gridAPI.grid.scrollToIfNecessary(this.gridAPI.grid.getRow(t[0]),null)})}adjustHeight(e,t){const i=this.maxRowsToShow||5,o=this.grid.headerRowHeight+1,a=t?this.gridUtil.getScrollbarWidth():0,n=Math.min(t,i)*this.grid.rowHeight+o+a;e.grid.element.css("height",n+"px"),e.core.handleWindowResize()}}controller_ItemsTableController.$inject=["$scope","gridUtil","$timeout","uiGridSelectionService"];var qo={template:bo.a,controller:controller_ItemsTableController,transclude:{footerSlot:"?footerSlot"},bindings:{items:"<",onVisibleRowsChange:"&?",onSortChanged:"&?",onFilterChanged:"&?",hideHeader:"<?",rowIdentityKey:"@?",columnDefs:"<",tableTitle:"<",selectedRowId:"<?",maxRowsToShow:"@?",onSelectionChange:"&?",oneWaySelection:"<?",incomingActionsMenu:"<?actionsMenu"}},Po=Xt.a.module("ignite-console.page-configure.items-table",["ui.grid"]).decorator("uiGridSelectionRowHeaderButtonsDirective",["$delegate","uiGridSelectionService",(e,t)=>(e[0].require=["^uiGrid","?^pcItemsTable"],e[0].compile=(()=>(i,o,a,n)=>{let[r,s]=n;const l=r.grid;e[0].link(i,o,a,r),s&&(i.selectButtonClick=((e,i)=>{i.stopPropagation(),i.shiftKey?t.shiftSelect(l,e,i,l.options.multiSelect):t.toggleRowSelection(l,e,i,l.options.multiSelect,l.options.noUnselect)}))}),e)]).component("pcItemsTable",qo),_o=i(1269),Eo=i.n(_o);i(1270);function pcUiGridFilters(e){return{require:"uiGrid",link:{pre(t,i,o,a){a.grid.options.enableFiltering&&a.grid.options.columnDefs.filter(e=>e.multiselectFilterOptions).forEach(t=>{t.headerCellTemplate=Eo.a,t.filter={type:e.filter.SELECT,term:t.multiselectFilterOptions.map(e=>e.value),condition:(e,t,i,o)=>e.includes(t),selectOptions:t.multiselectFilterOptions,$$selectOptionsMapping:t.multiselectFilterOptions.reduce((e,t)=>Object.assign(e,{[t.value]:t.label}),{}),$$multiselectFilterTooltip(){const e="Active filter";switch(this.term.length){case 0:return"".concat(e,": show none");default:return"".concat(e,": ").concat(this.term.map(e=>this.$$selectOptionsMapping[e]).join(", "));case this.selectOptions.length:return"".concat(e,": show all")}}},t.cellTemplate||(t.cellTemplate='\n                            <div class="ui-grid-cell-contents">\n                                {{ col.colDef.filter.$$selectOptionsMapping[row.entity[col.field]] }}\n                            </div>\n                        ')})}}}}pcUiGridFilters.$inject=["uiGridConstants"];var wo=i(279),To=i.n(wo),$o=Xt.a.module("ignite-console.page-configure.pc-ui-grid-filters",["ui.grid"]).decorator("$tooltip",["$delegate",e=>(function(t,i){const o=e(t,i);return o.$referenceElement=t,o.destroy=To()(o.destroy,()=>o.$referenceElement=null),o.$applyPlacement=To()(o.$applyPlacement,()=>{if(!o.$element)return;const e=o.$referenceElement[0].getBoundingClientRect().width;e>o.$element[0].getBoundingClientRect().width&&o.$element.css({width:e,maxWidth:"initial"})}),o})]).directive("pcUiGridFilters",pcUiGridFilters);class pcIsInCollection_Controller{constructor(){this.ngModel=void 0,this.items=void 0}$onInit(){this.ngModel.$validators.isInCollection=(e=>!e||!this.items||this.items.includes(e))}$onChanges(){this.ngModel.$validate()}}var Io=angular.module("ignite-console.page-configure.validation",[]).directive("pcNotInCollection",function(){return{controller:class Controller{constructor(){this.ngModel=void 0,this.items=void 0}$onInit(){this.ngModel.$validators.notInCollection=(e=>!this.items||!this.items.includes(e))}$onChanges(){this.ngModel.$validate()}},require:{ngModel:"ngModel"},bindToController:{items:"<pcNotInCollection"}}}).directive("pcInCollection",function(){return{controller:class Controller{constructor(){this.ngModel=void 0,this.items=void 0,this.pluck=void 0}$onInit(){this.ngModel.$validators.inCollection=(e=>{if(!this.items)return!1;const t=this.pluck?this.items.map(e=>e[this.pluck]):this.items;return Array.isArray(e)?e.every(e=>t.includes(e)):t.includes(e)})}$onChanges(){this.ngModel.$validate()}},require:{ngModel:"ngModel"},bindToController:{items:"<pcInCollection",pluck:"@?pcInCollectionPluck"}}}).directive("pcPowerOfTwo",function(){return{controller:class Controller{constructor(){this.ngModel=void 0}$onInit(){this.ngModel.$validators.powerOfTwo=(e=>!e||(e&-e)===e)}},require:{ngModel:"ngModel"},bindToController:!0}}).directive("isValidJavaIdentifier",["IgniteLegacyUtils",function(e){return{link(t,i,o,a){a.$validators.isValidJavaIdentifier=(t=>e.VALID_JAVA_IDENTIFIER.test(t))},require:"ngModel"}}]).directive("notJavaReservedWord",["IgniteLegacyUtils",function(e){return{link(t,i,o,a){a.$validators.notJavaReservedWord=(t=>!e.JAVA_KEYWORDS.includes(t))},require:"ngModel"}}]);class FakeUiCanExitController{constructor(e,t){this.$element=e,this.$transitions=t,this.fromState=void 0}$onInit(){const e=this.$element.data(),{CALLBACK_NAME:t}=this.constructor,i=Object.keys(e).map(t=>e[t]).find(e=>e[t]);i&&(this.off=this.$transitions.onBefore({from:this.fromState},function(){return i[t](...arguments)}))}$onDestroy(){this.off&&this.off(),this.$element=null}}FakeUiCanExitController.$inject=["$element","$transitions"],FakeUiCanExitController.CALLBACK_NAME="uiCanExit";class FormUICanExitGuardController{constructor(e,t){this.$element=e,this.ConfigChangesGuard=t}$onDestroy(){this.$element=null}$onInit(){const e=this.$element.data(),t=Object.keys(e).map(t=>e[t]).find(this._itQuacks);t&&(t.uiCanExit=(e=>{const i=e.options();return!(!i.custom.justIDUpdate&&!i.redirectedFrom)||(e.onSuccess({},t.reset),this.ConfigChangesGuard.guard(...t.getValuesToCompare()))}))}_itQuacks(e){return e.reset instanceof Function&&e.getValuesToCompare instanceof Function&&!e.uiCanExit}}FormUICanExitGuardController.$inject=["$element","ConfigChangesGuard"];var Oo=i(1272),Ao=i.n(Oo),ko=(i(1273),i(1275)),Do=i.n(ko),jo=i(274),No=i.n(jo),Mo=i(1140);function component_ownKeys(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,o)}return i}function component_objectSpread(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?component_ownKeys(Object(i),!0).forEach(function(t){component_defineProperty(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):component_ownKeys(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function component_defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}const Ro="Configure connection to database",Bo="Select schemas to load tables from",xo="Select tables to import as domain model",Lo="Select import domain model options",Fo={text:"Loading JDBC drivers..."},Uo={text:"Loading schemas..."},Vo={text:"Loading tables..."},zo={text:"Saving domain model..."},Ho=1,Ko=2,Jo={label:"PARTITIONED",value:-1,cache:{name:"PARTITIONED",cacheMode:"PARTITIONED",atomicityMode:"ATOMIC",readThrough:!0,writeThrough:!0}},Go=[Jo,{label:"REPLICATED",value:-2,cache:{name:"REPLICATED",cacheMode:"REPLICATED",atomicityMode:"ATOMIC",readThrough:!0,writeThrough:!0}}];class component_ModalImportModels{constructor(e,t,i,o,a,n,r,s,l,c,d,u,p,g,m,h,v,f,y){this.Demo=u,this.User=y,this.clusterID=void 0,this.onHide=void 0,this.schemasColumnDefs=[{name:"name",displayName:"Name",field:"name",enableHiding:!1,sort:{direction:"asc",priority:0},filter:{placeholder:"Filter by Name…"},visible:!0,sortingAlgorithm:ni.a,minWidth:165}],this.tablesColumnDefs=[{name:"schema",displayName:"Schema",field:"schema",enableHiding:!1,enableFiltering:!1,sort:{direction:"asc",priority:0},visible:!0,sortingAlgorithm:ni.a,minWidth:100},{name:"table",displayName:"Table",field:"table",enableHiding:!1,enableFiltering:!0,filter:{placeholder:"Filter by Table…"},visible:!0,sortingAlgorithm:ni.a,minWidth:200},{name:"action",displayName:"Action",field:"action",enableHiding:!1,enableFiltering:!1,cellTemplate:"\n                <tables-action-cell\n                    table='row.entity'\n                    on-edit-start='grid.appScope.$ctrl.$scope.startEditDbTableCache($event)'\n                    on-cache-select='grid.appScope.$ctrl.onCacheSelect($event)'\n                    caches='grid.appScope.$ctrl._importCachesOrTemplates'\n                    import-actions='grid.appScope.$ctrl.$scope.importActions'\n                ></tables-action-cell>\n            ",visible:!0,minWidth:450}],this.$uiRouter=e,this.ConfirmBatch=n,this.ConfigSelectors=t,this.ConfigEffects=i,this.ConfigureState=o,this.$scope=d,this.agentMgr=p,this.JavaTypes=l,this.SqlTypes=s,this.ActivitiesData=g,Object.assign(this,{Confirm:a,Focus:r,Messages:c,Loading:m,FormUtils:h,LegacyUtils:v,IgniteVersion:f})}loadData(){var e=this;return Object(ne.a)(this.clusterID).pipe(Object(le.a)(function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"new";return e.ConfigureState.state$.pipe(e.ConfigSelectors.selectClusterToEdit(t,he.importedCluster))}),Object(le.a)(e=>(e.caches||[]).length||(e.models||[]).length?Object(ae.a)(Promise.all([this.ConfigEffects.etp("LOAD_SHORT_CACHES",{ids:e.caches||[],clusterID:e.id}),this.ConfigEffects.etp("LOAD_SHORT_MODELS",{ids:e.models||[],clusterID:e.id})])).pipe(Object(le.a)(()=>Object(yt.b)(this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortCachesValue()),this.ConfigureState.state$.pipe(this.ConfigSelectors.selectShortModelsValue()),(t,i)=>({cluster:e,caches:t,models:i})).pipe(Object(ee.a)(1)))):Object(ne.a)({cluster:e,caches:[],models:[]})),Object(ee.a)(1))}saveBatch(e){e.length&&(this.$scope.importDomain.loadingOptions=zo,this.Loading.start("importDomainFromDb"),this.ConfigureState.dispatchAction({type:"ADVANCED_SAVE_COMPLETE_CONFIGURATION",changedItems:this.batchActionsToRequestBody(e),prevActions:[]}),this.saveSubscription=Object(Mo.a)(this.ConfigureState.actions$.pipe(Object(s.a)(e=>"ADVANCED_SAVE_COMPLETE_CONFIGURATION_OK"===e.type),Object(c.a)(()=>this.onHide())),this.ConfigureState.actions$.pipe(Object(s.a)(e=>"ADVANCED_SAVE_COMPLETE_CONFIGURATION_ERR"===e.type))).pipe(Object(ee.a)(1),Object(c.a)(()=>{this.Loading.finish("importDomainFromDb")})).subscribe())}batchActionsToRequestBody(e){const t=e.reduce((e,t)=>component_objectSpread({},e,{cluster:component_objectSpread({},e.cluster,{models:[...e.cluster.models,t.newDomainModel.id],caches:[...e.cluster.caches,...t.newDomainModel.caches]}),models:[...e.models,t.newDomainModel],caches:t.newCache?[...e.caches,t.newCache]:t.cacheStoreChanges?[...e.caches,component_objectSpread({},this.loadedCaches[t.cacheStoreChanges[0].cacheId],{},t.cacheStoreChanges[0].change)]:e.caches}),{cluster:this.cluster,models:[],caches:[]});return t.cluster.models=[...new Set(t.cluster.models)],t.cluster.caches=[...new Set(t.cluster.caches)],t}onTableSelectionChange(e){this.$scope.$applyAsync(()=>{this.$scope.importDomain.tablesToUse=e,this.selectedTablesIDs=e.map(e=>e.id)})}onSchemaSelectionChange(e){this.$scope.$applyAsync(()=>{this.$scope.importDomain.schemasToUse=e,this.selectedSchemasIDs=e.map(e=>e.name)})}onVisibleRowsChange(e){return this.visibleTables=e.map(e=>e.entity)}onCacheSelect(e){if(!(e<0||this.loadedCaches[e]))return this.onCacheSelectSubcription=Object(Z.a)(Object(X.a)(0,1).pipe(Object(ee.a)(1),Object(c.a)(()=>this.ConfigureState.dispatchAction({type:"LOAD_CACHE",cacheID:e}))),Object(Mo.a)(this.ConfigureState.actions$.pipe(Object(s.a)(t=>"LOAD_CACHE_OK"===t.type&&t.cache.id===e),Object(ie.a)("cache"),Object(c.a)(t=>{this.loadedCaches[e]=t})),this.ConfigureState.actions$.pipe(Object(s.a)(t=>"LOAD_CACHE_ERR"===t.type&&t.action.cacheID===e))).pipe(Object(ee.a)(1))).subscribe()}$onDestroy(){this.subscribers$.unsubscribe(),this.onCacheSelectSubcription&&this.onCacheSelectSubcription.unsubscribe(),this.saveSubscription&&this.saveSubscription.unsubscribe()}async $onInit(){const{Confirm:e,ConfirmBatch:t,Focus:i,SqlTypes:o,JavaTypes:a,Messages:n,$scope:r,Demo:s,agentMgr:l,ActivitiesData:d,Loading:u,FormUtils:p,LegacyUtils:g}=this,m=e=>e?e.replace(/[^A-Za-z_0-9/.]+/g,"_"):"org";this.$scope.ui={generatePojo:!0,builtinKeys:!0,generateKeyFields:!0,usePrimitives:!0,generateTypeAliases:!0,generateFieldAliases:!0,packageNameUserInput:(e=>e?m("".concat(e.email.replace("@",".").split(".").reverse().join("."),".model")):void 0)(await this.User.current$.pipe(Object(ee.a)(1)).toPromise())},this.$scope.$hide=this.onHide,this.$scope.importCommon={},this.subscription=this.loadData().pipe(Object(c.a)(e=>{this.$scope.caches=function _mapCaches(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(e=>({label:e.name,value:e.id,cache:e}))}(e.caches),this.$scope.domains=e.models,this.caches=e.caches,this.cluster=e.cluster,h.a.isEmpty(this.$scope.caches)||this.$scope.importActions.push({label:"Associate with existing cache",shortLabel:"Associate",value:Ko}),this.$scope.$watch("importCommon.action",this._fillCommonCachesOrTemplates(this.$scope.importCommon),!0),this.$scope.importCommon.action=Ho})),this.loadedCaches=component_objectSpread({},Go.reduce((e,t)=>component_objectSpread({},e,{[t.value]:t.cache}),{})),this.actions=[{value:"connect",label:this.Demo.enabled?"Description":"Connection"},{value:"schemas",label:"Schemas"},{value:"tables",label:"Tables"},{value:"options",label:"Options"}],r.ui.invalidKeyFieldsTooltip="Found key types without configured key fields<br/>It may be a result of import tables from database without primary keys<br/>Key field for such key types should be configured manually",r.indexType=g.mkOptions(["SORTED","FULLTEXT","GEOSPATIAL"]),r.importActions=[{label:"Create new cache by template",shortLabel:"Create",value:Ho}];const v=[{db:"Oracle",jdbcDriverClass:"oracle.jdbc.OracleDriver",jdbcUrl:"jdbc:oracle:thin:@[host]:[port]:[database]",user:"system",samples:!0},{db:"DB2",jdbcDriverClass:"com.ibm.db2.jcc.DB2Driver",jdbcUrl:"jdbc:db2://[host]:[port]/[database]",user:"db2admin"},{db:"SQLServer",jdbcDriverClass:"com.microsoft.sqlserver.jdbc.SQLServerDriver",jdbcUrl:"jdbc:sqlserver://[host]:[port][;databaseName=database]"},{db:"PostgreSQL",jdbcDriverClass:"org.postgresql.Driver",jdbcUrl:"jdbc:postgresql://[host]:[port]/[database]",user:"sa"},{db:"MySQL",jdbcDriverClass:"com.mysql.jdbc.Driver",jdbcUrl:"jdbc:mysql://[host]:[port]/[database]",user:"root"},{db:"MySQL",jdbcDriverClass:"com.mysql.cj.jdbc.Driver",jdbcUrl:"jdbc:mysql://[host]:[port]/[database]",user:"root"},{db:"MySQL",jdbcDriverClass:"org.mariadb.jdbc.Driver",jdbcUrl:"jdbc:mariadb://[host]:[port]/[database]",user:"root"},{db:"H2",jdbcDriverClass:"org.h2.Driver",jdbcUrl:"jdbc:h2:tcp://[host]/[database]",user:"sa"},{db:"Hive",jdbcDriverClass:"org.apache.hive.jdbc.HiveDriver",jdbcUrl:"jdbc:hive2://[host]:[port]/[database]",user:"hiveuser"}];function isValidJavaIdentifier(e){return a.validIdentifier(e)&&!a.isKeyword(e)&&a.nonBuiltInClass(e)&&o.validIdentifier(e)&&!o.isKeyword(e)}function toJavaIdentifier(e){if(h.a.isEmpty(e))return"DB";const t=e.length;let i="",o=!0;for(let a=0;a<t;a++){const t=e.charAt(a);" "===t||"_"===t?o=!0:"-"===t?(i+="_",o=!0):o?(i+=t.toLocaleUpperCase(),o=!1):i+=t.toLocaleLowerCase()}return i}function toJavaClassName(e){const t=toJavaIdentifier(e);return isValidJavaIdentifier(t)?t:"Class"+t}function toJavaFieldName(e){const t=toJavaIdentifier(e),i=t.charAt(0).toLocaleLowerCase()+t.slice(1);return isValidJavaIdentifier(i)?i:"field"+t}r.selectedPreset={db:"Generic",jdbcDriverJar:"",jdbcDriverClass:"",jdbcUrl:"jdbc:[database]",user:"sa",password:"",tablesOnly:!0,importSamples:!1},r.demoConnection={db:"H2",jdbcDriverClass:"org.h2.Driver",jdbcUrl:"jdbc:h2:mem:demo-db",user:"sa",password:"",tablesOnly:!0,importSamples:!1},function _loadPresets(){try{const e=JSON.parse(localStorage.dbPresets);h.a.forEach(e,e=>{const t=h.a.find(v,{jdbcDriverClass:e.jdbcDriverClass});t&&(t.jdbcUrl=e.jdbcUrl,t.user=e.user)})}catch(e){}}();const f=()=>{l.awaitAgent().then(function(){if(r.importDomain.loadingOptions=Uo,u.start("importDomainFromDb"),s.enabled)return l.schemas(r.demoConnection);const e=r.selectedPreset;return function _savePreset(e){try{const t=h.a.find(v,{jdbcDriverClass:e.jdbcDriverClass});t?h.a.assign(t,e):v.push(e),localStorage.dbPresets=JSON.stringify(v)}catch(e){n.showError(e)}}(e),l.schemas(e)}).then(e=>{r.importDomain.action="schemas",r.importDomain.info=Bo,r.importDomain.catalog=toJavaIdentifier(e.catalog),r.importDomain.schemas=h.a.map(e.schemas,e=>({name:e})),r.importDomain.schemasToUse=r.importDomain.schemas,this.selectedSchemasIDs=r.importDomain.schemas.map(e=>e.name),0===r.importDomain.schemas.length&&r.importDomainNext()}).catch(n.showError).then(()=>u.finish("importDomainFromDb"))};this._importCachesOrTemplates=[],r.tableActionView=(e=>{const t=No()("label")(Do()({value:e.cacheOrTemplate}));return e.action===Ho?"Create "+e.generatedCacheName+" ("+t+")":"Associate with "+t});const y=()=>{l.awaitAgent().then(()=>{r.importDomain.loadingOptions=Vo,u.start("importDomainFromDb"),r.importDomain.allTablesSelected=!1,this.selectedTables=[];const e=r.importDomain.demo?r.demoConnection:r.selectedPreset;return e.schemas=r.importDomain.schemasToUse.map(e=>e.name),l.tables(e)}).then(e=>{this._importCachesOrTemplates=Go.concat(r.caches),this._fillCommonCachesOrTemplates(r.importCommon)(r.importCommon.action),h.a.forEach(e,(e,t)=>{e.id=t,e.action=Ho,e.generatedCacheName=me(toJavaClassName(e.table)+"Cache",this.caches),e.cacheOrTemplate=Jo.value,e.label=e.schema+"."+e.table,e.edit=!1}),r.importDomain.action="tables",r.importDomain.tables=e;const t=e.filter(e=>g.isDefined(h.a.find(e.columns,e=>e.key)));this.selectedTablesIDs=t.map(e=>e.id),this.$scope.importDomain.tablesToUse=t,r.importDomain.info=xo}).catch(n.showError).then(()=>u.finish("importDomainFromDb"))};r.applyDefaults=(()=>{h.a.forEach(this.visibleTables,e=>{e.edit=!1,e.action=r.importCommon.action,e.cacheOrTemplate=r.importCommon.cacheOrTemplate})}),r._curDbTable=null,r.startEditDbTableCache=(e=>{r._curDbTable&&(r._curDbTable.edit=!1,r._curDbTable.actionWatch&&(r._curDbTable.actionWatch(),r._curDbTable.actionWatch=null)),r._curDbTable=e;const t=this._fillCommonCachesOrTemplates(r._curDbTable);t(r._curDbTable.action),r._curDbTable.actionWatch=r.$watch("_curDbTable.action",t,!0),r._curDbTable.edit=!0});const b=i=>{if(i.$invalid)return this.FormUtils.triggerValidation(i,this.$scope);const a=r.ui.generatePojo,s=r.ui.packageName,l=[],c=[];let d=!0,u=!1;function overwriteMessage(e){return"\n                    Domain model with name &quot;".concat(e.newDomainModel.databaseTable,"&quot; already exists.\n                    Are you sure you want to overwrite it?\n                ")}h.a.forEach(r.importDomain.tablesToUse,(e,t,i)=>{const n=[],p=[],v=[],f=[],y=[],b=e.table;let C=toJavaClassName(b);h.a.find(r.importDomain.tablesToUse,(e,i)=>i!==t&&b===e.table)&&(C=C+"_"+toJavaClassName(e.schema),u=!0);let S,q=b;a&&(r.ui.generateTypeAliases&&b.toLowerCase()!==C.toLowerCase()&&(S=b),q=m(s)+"."+C);let P=!1;h.a.forEach(e.columns,function(e){const t=function dbField(e,t,i,o){const a=o&&t.unsigned?t.unsigned:t.signed,n=!i&&a.primitiveType&&r.ui.usePrimitives?a.primitiveType:a.javaType;return{databaseFieldName:e,databaseFieldType:t.dbName,javaType:a.javaType,javaFieldName:toJavaFieldName(e),javaFieldType:n}}(e.name,o.findJdbcType(e.type),e.nullable,e.unsigned);n.push({name:t.javaFieldName,className:t.javaType});const i=t.databaseFieldName;a&&r.ui.generateFieldAliases&&o.validIdentifier(i)&&!o.isKeyword(i)&&!h.a.find(y,{field:t.javaFieldName})&&t.javaFieldName.toUpperCase()!==i.toUpperCase()&&y.push({field:t.javaFieldName,alias:i}),e.key?(v.push(t),P=!0):f.push(t)}),d&=P,e.indexes&&h.a.forEach(e.indexes,e=>{const t=h.a.map(e.fields,e=>({name:toJavaFieldName(e.name),direction:e.sortOrder}));p.push({name:e.name,indexType:"SORTED",fields:t})});const _=h.a.find(r.domains,e=>e.valueType===q),E={confirm:!1,skip:!1,table:e,newDomainModel:{id:Tt()(),caches:[],generatePojo:a}};if(g.isDefined(_)&&(E.newDomainModel.id=_.id,delete E.newDomainModel.caches,E.confirm=!0),Object.assign(E.newDomainModel,{tableName:S,keyType:q+"Key",valueType:q,queryMetadata:"Configuration",databaseSchema:e.schema,databaseTable:b,fields:n,queryKeyFields:h.a.map(v,e=>e.javaFieldName),indexes:p,keyFields:v,aliases:y,valueFields:h.a.isEmpty(f)?v.slice():f}),r.ui.builtinKeys&&1===E.newDomainModel.keyFields.length){const e=E.newDomainModel,t=e.keyFields[0];e.keyType=t.javaType,e.keyFieldName=t.javaFieldName,r.ui.generateKeyFields||(e.fields=h.a.filter(e.fields,e=>e.name!==t.javaFieldName),e.queryKeyFields=[]),h.a.forEach(e.indexes,e=>{e.fields=h.a.filter(e.fields,e=>e.name!==t.javaFieldName)}),e.indexes=h.a.filter(e.indexes,e=>!h.a.isEmpty(e.fields))}if(e.action===Ho){const t=h.a.cloneDeep(this.loadedCaches[e.cacheOrTemplate]);E.newCache=t;const i=[];if(t.id=Tt()(),t.name=me(C+"Cache",this.caches.concat(i)),t.domains=[E.newDomainModel.id],E.newDomainModel.caches=[t.id],!t.cacheStoreFactory||"CacheJdbcPojoStoreFactory"!==t.cacheStoreFactory.kind){const e=r.importDomain.demo?"H2":r.selectedPreset.db,i={dataSourceBean:"ds"+e+"_"+r.importDomain.catalog,dialect:e,implementationVersion:r.selectedPreset.jdbcDriverImplementationVersion};t.cacheStoreFactory={kind:"Hive"===e&&this.IgniteVersion.currentSbj.getValue().hiveVersion?"HiveCacheJdbcPojoStoreFactory":"CacheJdbcPojoStoreFactory",HiveCacheJdbcPojoStoreFactory:i,CacheJdbcPojoStoreFactory:i,CacheJdbcBlobStoreFactory:{connectVia:"DataSource"}}}t.readThrough||t.writeThrough||(t.readThrough=!0,t.writeThrough=!0)}else{const t=E.newDomainModel,i=e.cacheOrTemplate;if(E.newDomainModel.caches=[i],!h.a.includes(c,i)){const e=h.a.find(r.caches,{value:i}).cache,o=g.autoCacheStoreConfiguration(e,[t]);o&&(E.cacheStoreChanges=[{cacheId:i,change:o}]),c.push(i)}}l.push(E)});const p=h.a.filter(l,e=>e.confirm),v=()=>p.length>0?t.confirm(overwriteMessage,p).then(()=>this.saveBatch(h.a.filter(l,e=>!e.skip))).catch(()=>n.showError("Importing of domain models interrupted by user.")):this.saveBatch(l),f=()=>{u?e.confirm("Some tables have the same name.<br/>Name of types for that tables will contain schema name too.").then(()=>v()):v()};d?f():e.confirm("Some tables have no primary key.<br/>You will need to configure key type and key fields for such tables after import complete.").then(()=>f())};r.importDomainNext=(e=>{if(!r.importDomainNextAvailable())return;const t=r.importDomain.action;"drivers"===t&&r.importDomain.jdbcDriversNotFound?this.onHide():"connect"===t?f():"schemas"===t?y():"tables"===t?function _selectOptions(){r.importDomain.action="options",r.importDomain.button="Save",r.importDomain.info=Lo,i.move("domainPackageName")}():"options"===t&&b(e)}),r.nextTooltipText=function(){const e=r.importDomainNextAvailable(),t=r.importDomain.action;return"drivers"===t&&r.importDomain.jdbcDriversNotFound?"Resolve issue with JDBC drivers<br>Close this dialog and try again":"connect"===t&&h.a.isNil(r.selectedPreset.jdbcDriverClass)?"Input valid JDBC driver class name":"connect"===t&&h.a.isNil(r.selectedPreset.jdbcUrl)?"Input valid JDBC URL":"connect"===t||"drivers"===t?"Click to load list of schemas from database":"schemas"===t?e?"Click to load list of tables from database":"Select schemas to continue":"tables"===t?e?"Click to show import options":"Select tables to continue":"options"===t?"Click to import domain model for selected tables":"Click to continue"},r.prevTooltipText=function(){const e=r.importDomain.action;return"schemas"===e?r.importDomain.demo?"Click to return on demo description step":"Click to return on connection configuration step":"tables"===e?"Click to return on schemas selection step":"options"===e?"Click to return on tables selection step":void 0},r.importDomainNextAvailable=function(){switch(r.importDomain.action){case"connect":return!h.a.isNil(r.selectedPreset.jdbcDriverClass)&&!h.a.isNil(r.selectedPreset.jdbcUrl);case"schemas":return h.a.isEmpty(r.importDomain.schemas)||!!No()("importDomain.schemasToUse.length")(r);case"tables":return!h.a.isNil(r.importDomain.tablesToUse)&&!!r.importDomain.tablesToUse.length;default:return!0}},r.importDomainPrev=function(){r.importDomain.button="Next","options"===r.importDomain.action?(r.importDomain.action="tables",r.importDomain.info=xo):"tables"===r.importDomain.action&&r.importDomain.schemas.length>0?(r.importDomain.action="schemas",r.importDomain.info=Bo):(r.importDomain.action="connect",r.importDomain.info=Ro)};const C=s.enabled;r.importDomain={demo:C,action:C?"connect":"drivers",jdbcDriversNotFound:C,schemas:[],allSchemasSelected:!1,tables:[],allTablesSelected:!1,button:"Next",info:""},r.importDomain.loadingOptions=Fo;const S=()=>l.awaitAgent().then(()=>(d.post({group:"configuration",action:"configuration/import/model"}),!0)).then(()=>C?(r.ui.packageNameUserInput=r.ui.packageName,void(r.ui.packageName="model")):(u.start("importDomainFromDb"),r.jdbcDriverJars=[],r.ui.selectedJdbcDriverJar=-1,l.drivers().then(e=>{r.ui.packageName=r.ui.packageNameUserInput,h.a.isEmpty(e)?(r.importDomain.jdbcDriversNotFound=!0,r.importDomain.button="Cancel"):(r.drivers=h.a.map(h.a.sortBy(e,"jdbcDriverJar"),e=>({jdbcDriverJar:e.jdbcDriverJar,jdbcDriverClass:e.jdbcDriverClass,jdbcDriverImplementationVersion:e.jdbcDriverImplVersion})),h.a.forEach(r.drivers,(e,t)=>{r.jdbcDriverJars.push({label:e.jdbcDriverJar,value:t})}),r.ui.selectedJdbcDriverJar=r.jdbcDriverJars[0].value,r.importDomain.action="connect",r.importDomain.tables=[],this.selectedTables=[])}).then(()=>{r.importDomain.info=Ro,u.finish("importDomainFromDb")})));this.agentIsAvailable$=this.agentMgr.connectionSbj.pipe(Object(ie.a)("state"),Object(Ct.a)(),Object(oe.a)(e=>"AGENT_DISCONNECTED"!==e)),this.domainData$=this.agentIsAvailable$.pipe(Object(se.a)(e=>e?Object(ae.a)(S()):Object(ne.a)(re.a)),Object(ee.a)(1)),this.subscribers$=Object(Z.a)(this.subscription,this.domainData$).subscribe(),r.$watch("ui.selectedJdbcDriverJar",e=>{const t=h.a.get(r.drivers,e);if(t&&!r.importDomain.demo){const e=function _findPreset(e){let t=h.a.find(v,function(t){return t.jdbcDriverClass===e.jdbcDriverClass});return t||(t={db:"Generic",jdbcUrl:"jdbc:[database]",user:"admin"}),t.jdbcDriverJar=e.jdbcDriverJar,t.jdbcDriverClass=e.jdbcDriverClass,t.jdbcDriverImplementationVersion=e.jdbcDriverImplementationVersion,t}(t),i=r.selectedPreset;i.db=e.db,i.jdbcDriverJar=e.jdbcDriverJar,i.jdbcDriverClass=e.jdbcDriverClass,i.jdbcDriverImplementationVersion=e.jdbcDriverImplementationVersion,i.jdbcUrl=e.jdbcUrl,i.user=e.user,i.samples=!!e.samples}},!0)}_fillCommonCachesOrTemplates(e){return t=>{e.cachesOrTemplates?e.cachesOrTemplates.length=0:e.cachesOrTemplates=[],t===Ho&&e.cachesOrTemplates.push(...Go),h.a.isEmpty(this.$scope.caches)||(e.cachesOrTemplates.push(...this.$scope.caches),this.onCacheSelect(e.cachesOrTemplates[0].value)),!h.a.find(e.cachesOrTemplates,{value:e.cacheOrTemplate})&&e.cachesOrTemplates.length&&(e.cacheOrTemplate=e.cachesOrTemplates[0].value)}}}component_ModalImportModels.$inject=["$uiRouter","ConfigSelectors","ConfigEffects","ConfigureState","IgniteConfirm","IgniteConfirmBatch","IgniteFocus","SqlTypes","JavaTypes","IgniteMessages","$scope","Demo","AgentManager","IgniteActivitiesData","IgniteLoading","IgniteFormUtils","IgniteLegacyUtils","IgniteVersion","User"];const Wo={name:"modalImportModels",controller:component_ModalImportModels,templateUrl:Ao.a,bindings:{onHide:"&",clusterID:"<clusterId"}};var Yo=i(1276),Qo=i.n(Yo);i(1277);const Zo={template:Qo.a,controller:class ModalImportModelsStepIndicator{constructor(){this.steps=void 0,this.currentStep=void 0}isVisited(e){return e<=this.steps.findIndex(e=>e.value===this.currentStep)}},bindings:{steps:"<",currentStep:"<"}};var Xo=i(1279),ea=i.n(Xo);i(1280);const ta=1;class TablesActionCell{constructor(e){this.$element=e,this.onEditStart=void 0,this.onCacheSelect=void 0,this.table=void 0,this.caches=void 0,this.importActions=void 0}onClick(e){e.stopPropagation()}$postLink(){this.$element.on("click",this.onClick)}$onDestroy(){this.$element.off("click",this.onClick),this.$element=null}tableActionView(e){if(!this.caches)return;const t=this.caches.find(t=>t.value===e.cacheOrTemplate);if(!t)return;const i=t.label;return e.action===ta?"Create "+e.generatedCacheName+" ("+i+")":"Associate with "+i}}TablesActionCell.$inject=["$element"];const ia={controller:TablesActionCell,bindings:{onEditStart:"&",onCacheSelect:"&?",table:"<",caches:"<",importActions:"<"},template:ea.a};var oa=i(1282),aa=i.n(oa);i(1283);const na={template:aa.a,bindings:{selectedAmount:"<",totalAmount:"<"}};var ra=Xt.a.module("configuration.modal-import-models",[]).service("ModalImportModels",service_ModalImportModels).component("tablesActionCell",ia).component("modalImportModelsStepIndicator",Zo).component("selectedItemsAmountIndicator",na).component("modalImportModels",Wo),sa=i(1285),la=i.n(sa);i(1286);class ButtonImportModels{constructor(e){this.ModalImportModels=e,this.clusterId=void 0}startImport(){return this.ModalImportModels.open()}}ButtonImportModels.$inject=["ModalImportModels"];const ca={name:"buttonImportModels",controller:ButtonImportModels,template:la.a,bindings:{clusterID:"<clusterId"}};var da=Xt.a.module("configuration.button-import-models",[]).component(ca.name,ca),ua=i(1288),pa=i.n(ua);class ButtonDownloadProject{constructor(e){this.ConfigurationDownload=e,this.cluster=void 0}download(){return this.ConfigurationDownload.downloadClusterConfiguration(this.cluster)}}ButtonDownloadProject.$inject=["ConfigurationDownload"];const ga={name:"buttonDownloadProject",controller:ButtonDownloadProject,template:pa.a,bindings:{cluster:"<"}};var ma=Xt.a.module("configuration.button-download-project",[]).component(ga.name,ga),ha=i(1289),va=i.n(ha);class ButtonPreviewProject{constructor(e){this.ModalPreviewProject=e,this.cluster=void 0}preview(){return this.ModalPreviewProject.open(this.cluster)}}ButtonPreviewProject.$inject=["ModalPreviewProject"];const fa={name:"buttonPreviewProject",controller:ButtonPreviewProject,template:va.a,bindings:{cluster:"<"}};var ya=Xt.a.module("configuration.button-preview-project",[]).component(fa.name,fa),ba=i(650),Ca=i.n(ba);function previewPanelDirective(e,t){let i={editor:null,stage:0,start:0,stop:0},o=[];const a=Ca.a.acequire("ace/range").Range,n=e=>{h.a.forEach(e.session.getMarkers(!1),t=>{e.session.removeMarker(t.id)})},r=()=>{i.stage+=i.step;const e=i.stage,t=i.editor;n(t),i.selections.forEach(i=>{t.session.addMarker(new a(i.start,0,i.stop,0),"preview-highlight-"+e,"line",!1)}),e===i.finalStage&&(t.animatePromise=null,i.clearOnFinal&&n(t))},s=(t,o,a,s,l,c)=>{const d=t.animatePromise;d&&(e.cancel(d),n(t)),i={editor:t,selections:o,step:a,stage:s,finalStage:l,clearOnFinal:c},t.animatePromise=e(r,100,10,!1)},l=e=>{let[i,a]=e;const{clearPromise:r}=a,{lines:l}=i;if("remove"===i.action)o=l;else if(o.length>0&&l.length>0&&a.attractAttention){r&&(t.cancel(r),n(a));const e=[];let i=0,c=0,d=o.length-(""===o[o.length-1]?1:0),u=l.length-(""===l[l.length-1]?1:0);const p=u<d;let g=0,m=!1,h=-1;for(;l[u-1]===o[d-1]&&u>0&&d>0;)d-=1,u-=1,g+=1;for(;i<u||c<d;){let t=-1,a=-1;for(;(i<u||c<d)&&t<0;i++,c++)if(i>=u||c>=d||l[i]!==o[c]){t=i;break}if(t>=0){for(let e=t;e<u&&a<0;e++)for(let t=c;t<d&&a<0;t++)if(l[e]===o[t]&&""!==l[e]){a=e,i=e,c=t;break}a<0&&(a=u,i=u,c=d),t===a&&(p&&(t=Math.max(0,t-1)),a=Math.min(u+g,a+1)),t<=a&&(e.push({start:t,stop:a}),m||(h=t),m=!0)}}m&&(((e,t)=>{s(e,t,1,0,10,!1)})(a,e),a.clearPromise=t(()=>{((e,t)=>{s(e,t,-1,10,0,!0)})(a,e),a.clearPromise=null},2e3),a.scrollToRow(h)),o=[]}else a.attractAttention=!0};return{restrict:"C",link:(e,t,i,o)=>{let[a,n]=o;const r=a||n;r&&(r.onLoad=(e=>{e.setReadOnly(!0),e.setOption("highlightActiveLine",!1),e.setAutoScrollEditorIntoView(!0),e.$blockScrolling=1/0,e.attractAttention=!1;const t=e.renderer;t.setHighlightGutterLine(!1),t.setShowPrintMargin(!1),t.setOption("fontSize","10px"),t.setOption("maxLines","50"),e.setTheme("ace/theme/chrome")}),r.onChange=l)},require:["?igniteUiAceTabs","?^igniteUiAceTabs"]}}previewPanelDirective.$inject=["$interval","$timeout"];var Sa=Xt.a.module("ignite-console.page-configure.preview-panel",[]).directive("previewPanel",previewPanelDirective),qa=i(1290),Pa=i.n(qa);class SplitButton{constructor(e){this.$element=e,this.actions=[]}$onInit(){this.$element[0].classList.add("btn-ignite-group")}}SplitButton.$inject=["$element"];var _a={controller:SplitButton,template:Pa.a,bindings:{actions:"<"}},Ea=Xt.a.module("ignite-console.page-configure.pc-split-button",[]).component("pcSplitButton",_a),wa=i(1291),Ta=i.n(wa),$a=i(1184);class ui_ace_java_controller_IgniteUiAceJava extends $a.a{}ui_ace_java_controller_IgniteUiAceJava.$inject=["$scope","$attrs","IgniteVersion","JavaTransformer"];var Ia=Xt.a.module("ignite-console.ui-ace-java",["ignite-console.services","ignite-console.configuration.generator"]).directive("igniteUiAceJava",function(){return{priority:1,restrict:"E",scope:{master:"=",detail:"="},bindToController:{data:"=?ngModel",generator:"@",client:"@"},template:Ta.a,controller:ui_ace_java_controller_IgniteUiAceJava,controllerAs:"ctrl",require:{ctrl:"igniteUiAceJava",igniteUiAceTabs:"?^igniteUiAceTabs",formCtrl:"?^form",ngModelCtrl:"?ngModel"}}}),Oa=i(1292),Aa=i.n(Oa);class ui_ace_spring_controller_IgniteUiAceSpring extends $a.a{}ui_ace_spring_controller_IgniteUiAceSpring.$inject=["$scope","$attrs","IgniteVersion","SpringTransformer"];var ka=Xt.a.module("ignite-console.ui-ace-spring",["ignite-console.services","ignite-console.configuration.generator"]).directive("igniteUiAceSpring",function(){return{priority:1,restrict:"E",scope:{master:"=",detail:"="},bindToController:{data:"=?ngModel",generator:"@",client:"@"},template:Aa.a,controller:ui_ace_spring_controller_IgniteUiAceSpring,controllerAs:"ctrl",require:{ctrl:"igniteUiAceSpring",igniteUiAceTabs:"?^igniteUiAceTabs",formCtrl:"?^form",ngModelCtrl:"?ngModel"}}});const Da=["ConfigSelectors","ConfigureState","ConfigEffects","$transition$",function(e,t,i,o){let{etp:a}=i;return"new"===o.params().clusterID?Promise.resolve():Object(ae.a)(o.injector().getAsync("_cluster")).pipe(Object(le.a)(()=>t.state$.pipe(e.selectCluster(o.params().clusterID),Object(ee.a)(1))),Object(le.a)(e=>a("LOAD_SHORT_CACHES",{ids:e.caches,clusterID:e.id}))).toPromise()}];function registerStates(e){e.state("base.configuration",{permission:"configuration",url:"/configuration",onEnter:["ConfigureState",e=>e.dispatchAction({type:"PRELOAD_STATE",state:{}})],resolve:{_shortClusters:["ConfigEffects",e=>{let{etp:t}=e;return t("LOAD_USER_CLUSTERS")}]},resolvePolicy:{async:"NOWAIT"},redirectTo:"base.configuration.overview"}).state("base.configuration.overview",{url:"/overview",component:"pageConfigureOverview",permission:"configuration",tfMetaTags:{title:"Configuration"}}).state("base.configuration.edit",{url:"/{clusterID}",permission:"configuration",component:"pageConfigure",resolve:{_cluster:["ConfigEffects","$transition$",(e,t)=>{let{etp:i}=e;return t.injector().getAsync("_shortClusters").then(()=>i("LOAD_AND_EDIT_CLUSTER",{clusterID:t.params().clusterID}))}]},data:{errorState:"base.configuration.overview"},redirectTo:e=>{const[t,i]=["ConfigureState","ConfigSelectors"].map(t=>e.injector().get(t)),o=["_cluster","_shortClusters"].map(t=>e.injector().getAsync(t));return Object(ae.a)(Promise.all(o)).pipe(Object(le.a)(()=>Object(yt.b)(t.state$.pipe(i.selectCluster(e.params().clusterID),Object(ee.a)(1)),t.state$.pipe(i.selectShortClusters(),Object(ee.a)(1)))),Object(oe.a)(e=>{let[t={caches:[]},i]=e;return i.value.size>10||t.caches.length>5?"base.configuration.edit.advanced":"base.configuration.edit.basic"})).toPromise()},failState:"signin",tfMetaTags:{title:"Configuration"}}).state("base.configuration.edit.basic",{url:"/basic",component:"pageConfigureBasic",permission:"configuration",resolve:{_shortCaches:Da},resolvePolicy:{async:"NOWAIT"},tfMetaTags:{title:"Basic Configuration"}}).state("base.configuration.edit.advanced",{url:"/advanced",component:"pageConfigureAdvanced",permission:"configuration",redirectTo:"base.configuration.edit.advanced.cluster"}).state("base.configuration.edit.advanced.cluster",{url:"/cluster",component:Si.name,permission:"configuration",resolve:{_shortCaches:Da},resolvePolicy:{async:"NOWAIT"},tfMetaTags:{title:"Configure Cluster"}}).state("base.configuration.edit.advanced.caches",{url:"/caches",permission:"configuration",component:Ni.name,resolve:{_shortCachesAndModels:["ConfigSelectors","ConfigureState","ConfigEffects","$transition$",(e,t,i,o)=>{let{etp:a}=i;return"new"===o.params().clusterID?Promise.resolve():Object(ae.a)(o.injector().getAsync("_cluster")).pipe(Object(le.a)(()=>t.state$.pipe(e.selectCluster(o.params().clusterID),Object(ee.a)(1))),Object(oe.a)(e=>Promise.all([a("LOAD_SHORT_CACHES",{ids:e.caches,clusterID:e.id}),a("LOAD_SHORT_MODELS",{ids:e.models,clusterID:e.id})]))).toPromise()}]},resolvePolicy:{async:"NOWAIT"},tfMetaTags:{title:"Configure Caches"}}).state("base.configuration.edit.advanced.caches.cache",{url:"/{cacheID}",permission:"configuration",resolve:{_cache:["ConfigEffects","$transition$",(e,t)=>{let{etp:i}=e;const{clusterID:o,cacheID:a}=t.params();return"new"===a?Promise.resolve():i("LOAD_CACHE",{cacheID:a})}]},data:{errorState:"base.configuration.edit.advanced.caches"},resolvePolicy:{async:"NOWAIT"},tfMetaTags:{title:"Configure Caches"}}).state("base.configuration.edit.advanced.models",{url:"/models",component:Ai.name,permission:"configuration",resolve:{_shortCachesAndModels:["ConfigSelectors","ConfigureState","ConfigEffects","$transition$",(e,t,i,o)=>{let{etp:a}=i;return"new"===o.params().clusterID?Promise.resolve():Object(ae.a)(o.injector().getAsync("_cluster")).pipe(Object(le.a)(()=>t.state$.pipe(e.selectCluster(o.params().clusterID),Object(ee.a)(1))),Object(oe.a)(e=>Promise.all([a("LOAD_SHORT_CACHES",{ids:e.caches,clusterID:e.id}),a("LOAD_SHORT_MODELS",{ids:e.models,clusterID:e.id})]))).toPromise()}]},resolvePolicy:{async:"NOWAIT"},tfMetaTags:{title:"Configure SQL Schemes"}}).state("base.configuration.edit.advanced.models.model",{url:"/{modelID}",resolve:{_cache:["ConfigEffects","$transition$",(e,t)=>{let{etp:i}=e;const{clusterID:o,modelID:a}=t.params();return"new"===a?Promise.resolve():i("LOAD_MODEL",{modelID:a})}]},data:{errorState:"base.configuration.edit.advanced.models"},permission:"configuration",resolvePolicy:{async:"NOWAIT"}})}registerStates.$inject=["$stateProvider"];const ja=e=>e&&"function"==typeof e.then,Na={to:e=>e.data&&e.data.errorState},Ma=e=>e.router.stateService.go(e.to().data.errorState,e.params(),{location:"replace"}),Ra=e=>{e.transitionService.onError(Na,e=>{e.error().type===Vt.RejectType.ERROR&&Ma(e)}),e.transitionService.onStart(Na,e=>{Promise.all((e=>e.getResolveTokens().filter(e=>"string"==typeof e).map(t=>e.injector().getAsync(t)).filter(ja))(e)).catch(t=>Ma(e))})};Ra.$inject=["$uiRouter"];function registerActivitiesHook(e,t){e.transitionService.onSuccess({to:"base.configuration.**"},e=>{t.post({group:"configuration",action:e.targetState().name()})})}registerActivitiesHook.$inject=["$uiRouter","IgniteActivitiesData"];t.default=angular.module("ignite-console.configuration",[a.a,"asyncFilter",J.name,Qt.name,hi.name,Yi.name,co.name,$o.name,fo.name,Po.name,Io.name,ra.name,da.name,ma.name,ya.name,Sa.name,Ea.name,Ia.name,ka.name]).config(registerStates).run(registerActivitiesHook).run(Ra).run(["ConfigEffects","ConfigureState","$uiRouter",(e,t,i)=>{i.plugin(n.a),t.addReducer((e=>(t,i)=>{switch(i.type){case"ADVANCED_SAVE_COMPLETE_CONFIGURATION":{const o=i.changedItems.cluster,a=t.clusters.get(o.id)||{};return Object.keys(e).reduce((t,n)=>{if(!t||!t[e[n].store].size)return t;const r=new Set(fe()(o[n],a[n]||[])),s=new Set(fe()(a[n]||[],o[n])),l=new Map(i.changedItems[n].map(e=>[e.id,e])),c=new Map,d=t=>(c.has(t)||c.set(t,{[e[n].at]:{add:new Set,remove:new Set}}),c.get(t));[...t[e[n].store].values()].forEach(t=>{t[e[n].at].filter(e=>s.has(e)).forEach(i=>d(t.id)[e[n].at].remove.add(i))}),[...r.values()].forEach(t=>{(l.get(t)[e[n].store]||[]).forEach(i=>{d(i)[e[n].at].add.add(t)})}),i.changedItems[n].filter(e=>!r.has(e.id)).forEach(i=>{const o=i,a=t[n].get(i.id),r=fe()(o[e[n].store],a[e[n].store]),s=fe()(a[e[n].store],o[e[n].store]);r.forEach(t=>{d(t)[e[n].at].add.add(i.id)}),s.forEach(t=>{d(t)[e[n].at].remove.add(i.id)})});const u=[...c.entries()].filter(i=>{let[o]=i;return t[e[n].store].has(o)}).map(i=>{let[o,a]=i;const r=t[e[n].store].get(o);return[o,_objectSpread({},r,{[e[n].at]:r[e[n].at].filter(t=>!a[e[n].at].remove.has(t)).concat([...a[e[n].at].add.values()])})]});return u.length?_objectSpread({},t,{[e[n].store]:new Map([...t[e[n].store].entries()].concat(u))}):t},t)}default:return t}})({models:{at:"domains",store:"caches"},caches:{at:"caches",store:"models"}})),t.addReducer((e,t)=>Object.assign({},e,{clusterConfiguration:function editReducer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{originalCluster:null},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case je:return _objectSpread({},e,{originalCluster:t.cluster});case Ne:return _objectSpread({},e,{originalCache:t.cache});case Me:return _objectSpread({},e,{originalModels:t.models});case Re:return _objectSpread({},e,{originalModel:t.model});default:return e}}(e.clusterConfiguration,t),configurationLoading:function loadingReducer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Le,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Be:return _objectSpread({},e,{isLoading:!0,loadingText:t.loadingText});case xe:return _objectSpread({},e,{isLoading:!1});default:return e}}(e.configurationLoading,t),basicCaches:Qe(Ve)(e.basicCaches,t),clusters:Fe(He)(e.clusters,t),shortClusters:Ue(Ke)(e.shortClusters,t),caches:Fe(Je)(e.caches,t),shortCaches:Ue(Ge)(e.shortCaches,t),models:Fe(We)(e.models,t),shortModels:Ue(Ye)(e.shortModels,t),edit:Ze(e.edit,t)})),t.addReducer(Xe),t.addReducer((e,t)=>{switch(t.type){case"APPLY_ACTIONS_UNDO":return t.state;default:return e}});const o=t.actions$.pipe(Object(r.a)((e,t)=>[...e,t],[]));t.actions$.pipe(Object(s.a)(e=>"UNDO_ACTIONS"===e.type),Object(l.a)(o,(e,i,o)=>{let{actions:a}=e;return{type:"APPLY_ACTIONS_UNDO",state:i.filter(e=>!a.includes(e)).reduce(t._combinedReducer,{})}}),Object(c.a)(e=>t.dispatchAction(e))).subscribe(),e.connect()}]).factory("configSelectionManager",ConfigSelectionManager_configSelectionManager).service("IgniteSummaryZipper",SummaryZipperService).service("IgniteConfigurationResource",function ConfigurationResourceService(){return{populate(e){const{spaces:t,clusters:i,caches:o,domains:a}=h.a.cloneDeep(e);return h.a.forEach(i,e=>{e.caches=h.a.filter(o,t=>{let{id:i}=t;return h.a.includes(e.caches,i)}),h.a.forEach(e.caches,e=>{e.domains=h.a.filter(a,t=>{let{id:i}=t;return h.a.includes(e.domains,i)})})}),Promise.resolve({spaces:t,clusters:i,caches:o,domains:a})}}}).service("ConfigSelectors",selectors_ConfigSelectors).service("ConfigEffects",effects_ConfigEffects).service("ConfigChangesGuard",ConfigChangesGuard_ConfigChangesGuard).service("PageConfigure",PageConfigure_PageConfigure).service("ConfigureState",class ConfigureState_ConfigureState{constructor(){var e=this;this.actions$=void 0,this.actions$=new G.a,this.state$=new W.a({}),this._combinedReducer=((e,t)=>e),this.actions$.pipe(Object(r.a)(function reducer(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1?arguments[1]:void 0;try{return e._combinedReducer(t,i)}catch(e){return console.error(e),t}},{}),Object(c.a)(e=>this.state$.next(e))).subscribe()}addReducer(e){const t=this._combinedReducer;return this._combinedReducer=((i,o)=>e(t(i,o),o)),this}dispatchAction(e){return"function"==typeof e?e(e=>this.actions$.next(e),()=>this.state$.getValue()):(this.actions$.next(e),e)}}).service("ConfigurationDownload",ConfigurationDownload_ConfigurationDownload).service("Clusters",Clusters_Clusters).service("Caches",St.a).service("Models",Models_Models).directive("pcIsInCollection",function pcIsInCollection(){return{controller:pcIsInCollection_Controller,require:{ngModel:"ngModel"},bindToController:{items:"<pcIsInCollection"}}}).directive("fakeUiCanExit",function fakeUiCanExit(){return{bindToController:{fromState:"@fakeUiCanExit"},controller:FakeUiCanExitController}}).directive("formUiCanExitGuard",function formUiCanExitGuard(){return{priority:10,controller:FormUICanExitGuardController}}).directive("igniteUiAceTabs",function(){return{scope:!0,restrict:"AE",controller:h.a.noop}}).constant("JDBC_LINKS",{Oracle:"https://www.oracle.com/technetwork/database/application-development/jdbc/downloads/index.html",DB2:"http://www-01.ibm.com/support/docview.wss?uid=swg21363866"})}}]);